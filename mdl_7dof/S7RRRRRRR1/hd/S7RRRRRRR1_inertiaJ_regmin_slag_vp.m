% Calculate minimal parameter regressor of joint inertia matrix for
% S7RRRRRRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [7x1]
%   Generalized joint coordinates (joint angles)
% pkin [4x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[d1,d3,d5,d7]';
% 
% Output:
% MM_reg [((7+1)*7/2)x45]
%   minimal parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 08:31
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S7RRRRRRR1_inertiaJ_regmin_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(7,1),zeros(4,1)}
assert(isreal(qJ) && all(size(qJ) == [7 1]), ...
  'S7RRRRRRR1_inertiaJ_regmin_slag_vp: qJ has to be [7x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [4 1]), ...
  'S7RRRRRRR1_inertiaJ_regmin_slag_vp: pkin has to be [4x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-08 23:18:08
% EndTime: 2019-05-08 23:18:34
% DurationCPUTime: 5.99s
% Computational Cost: add. (2215->341), mult. (6750->752), div. (0->0), fcn. (8265->12), ass. (0->216)
t224 = 2 * pkin(2);
t223 = 2 * pkin(3);
t70 = sin(qJ(4));
t71 = sin(qJ(3));
t157 = t70 * t71;
t76 = cos(qJ(4));
t137 = t76 * t71;
t69 = sin(qJ(5));
t77 = cos(qJ(3));
t159 = t69 * t77;
t75 = cos(qJ(5));
t48 = -t75 * t137 - t159;
t68 = sin(qJ(6));
t74 = cos(qJ(6));
t32 = -t68 * t157 + t74 * t48;
t138 = t75 * t77;
t42 = t69 * t137 - t138;
t67 = sin(qJ(7));
t73 = cos(qJ(7));
t14 = t73 * t32 + t67 * t42;
t222 = -0.2e1 * t14;
t72 = sin(qJ(2));
t153 = t71 * t72;
t135 = t77 * t72;
t110 = t76 * t135;
t78 = cos(qJ(2));
t45 = -t78 * t70 + t110;
t34 = -t69 * t153 + t45 * t75;
t111 = t70 * t135;
t44 = t78 * t76 + t111;
t15 = t34 * t68 - t44 * t74;
t221 = -0.2e1 * t15;
t162 = t69 * t73;
t140 = t75 * t70;
t103 = t74 * t140;
t47 = t68 * t76 - t103;
t28 = -t70 * t162 + t67 * t47;
t220 = -0.2e1 * t28;
t219 = -0.2e1 * t32;
t152 = t71 * t75;
t33 = t72 * t152 + t45 * t69;
t218 = -0.2e1 * t33;
t117 = t68 * t140;
t41 = t74 * t76 + t117;
t217 = 0.2e1 * t41;
t216 = 0.2e1 * t42;
t215 = 0.2e1 * t44;
t214 = -0.2e1 * t45;
t143 = t74 * t69;
t174 = t67 * t75;
t46 = t73 * t143 + t174;
t213 = -0.2e1 * t46;
t212 = 0.2e1 * t68;
t211 = 0.2e1 * t70;
t210 = t69 * pkin(3);
t209 = t71 * pkin(2);
t208 = t75 * pkin(3);
t207 = t77 * pkin(2);
t17 = t34 * t74 + t44 * t68;
t8 = t17 * t73 - t33 * t67;
t206 = t8 * t67;
t205 = t14 * t67;
t204 = t15 * t67;
t203 = t15 * t73;
t202 = t15 * t74;
t201 = t15 * t75;
t200 = t17 * t68;
t199 = t17 * t75;
t156 = t70 * t74;
t29 = t71 * t156 + t68 * t48;
t198 = t29 * t74;
t197 = t29 * t75;
t164 = t69 * t70;
t31 = t67 * t164 + t73 * t47;
t196 = t31 * t67;
t195 = t32 * t68;
t194 = t32 * t75;
t193 = t33 * t75;
t192 = t34 * t69;
t191 = t41 * t74;
t190 = t42 * t75;
t189 = t44 * t76;
t188 = t45 * t70;
t187 = t46 * t67;
t186 = t47 * t68;
t185 = t48 * t69;
t58 = t69 ^ 2;
t59 = t70 ^ 2;
t184 = t58 * t59;
t183 = t58 * t68;
t60 = t71 ^ 2;
t182 = t60 * t70;
t181 = t60 * t76;
t180 = t67 * t29;
t179 = t67 * t41;
t178 = t67 * t68;
t177 = t67 * t69;
t176 = t67 * t73;
t175 = t67 * t74;
t173 = t68 * t15;
t172 = t68 * t29;
t171 = t68 * t41;
t170 = t68 * t69;
t169 = t68 * t74;
t168 = t68 * t75;
t167 = t69 * t33;
t166 = t69 * t42;
t165 = t69 * t44;
t163 = t69 * t71;
t161 = t69 * t75;
t160 = t69 * t76;
t158 = t70 * t44;
t155 = t70 * t76;
t154 = t70 * t77;
t151 = t71 * t77;
t150 = t71 * t78;
t149 = t72 * t78;
t148 = t73 * t29;
t147 = t73 * t41;
t146 = t73 * t68;
t145 = t73 * t74;
t144 = t73 * t75;
t142 = t74 * t75;
t141 = t75 * t44;
t139 = t75 * t76;
t136 = t76 * t77;
t134 = t77 * t78;
t133 = -0.2e1 * t164;
t132 = -0.2e1 * t161;
t131 = 0.2e1 * t161;
t130 = -0.2e1 * t157;
t129 = -0.2e1 * t151;
t128 = 0.2e1 * t151;
t127 = pkin(3) * t164;
t126 = pkin(2) * t154;
t125 = pkin(2) * t153;
t124 = pkin(3) * t140;
t123 = pkin(2) * t135;
t122 = t67 * t171;
t121 = t67 * t169;
t120 = t68 * t167;
t119 = t68 * t166;
t118 = t68 * t164;
t116 = t69 * t158;
t115 = t69 * t155;
t114 = t71 * t149;
t113 = t70 * t153;
t112 = t72 * t137;
t109 = t41 * t146;
t108 = t68 * t145;
t107 = t33 * t143;
t106 = t42 * t143;
t105 = t68 * t143;
t104 = t70 * t143;
t102 = t44 * t140;
t101 = t69 * t140;
t100 = t70 * t139;
t99 = t70 * t137;
t98 = t71 * t135;
t97 = t72 * t134;
t96 = -pkin(2) * t76 - pkin(3);
t95 = pkin(3) * t74 + pkin(4);
t39 = t96 * t153;
t87 = -t45 * pkin(3) - t123;
t19 = t69 * t39 - t75 * t87;
t51 = t96 * t77;
t88 = (pkin(3) * t76 + pkin(2)) * t71;
t25 = t69 * t51 - t75 * t88;
t94 = t59 * t125;
t57 = t68 ^ 2;
t93 = t57 * t127;
t92 = pkin(3) * t118;
t91 = pkin(2) * t113;
t66 = t77 ^ 2;
t90 = (-t60 - t66) * t224;
t64 = t75 ^ 2;
t89 = (t58 + t64) * t223;
t21 = t75 * t39 + t69 * t87;
t9 = -t68 * t21 - t74 * t91;
t86 = pkin(4) * t203 + t67 * t9;
t85 = -pkin(4) * t204 + t9 * t73;
t27 = t75 * t51 + t69 * t88;
t22 = -t74 * t126 - t68 * t27;
t84 = pkin(4) * t148 + t67 * t22;
t83 = -pkin(4) * t180 + t22 * t73;
t82 = pkin(2) * t138 + pkin(3) * t163;
t81 = pkin(2) * t159 - pkin(3) * t152;
t80 = -pkin(3) * t144 - pkin(4) * t177;
t79 = pkin(3) * t174 - pkin(4) * t162;
t23 = -t68 * t126 + t74 * t27;
t10 = t74 * t21 - t68 * t91;
t65 = t76 ^ 2;
t63 = t74 ^ 2;
t62 = t73 ^ 2;
t61 = t72 ^ 2;
t56 = t67 ^ 2;
t52 = (pkin(4) * t74 + pkin(3)) * t69;
t50 = t95 * t75;
t40 = t67 * t143 - t144;
t38 = t95 * t164;
t36 = t47 * pkin(4) - t124;
t26 = t73 * t50 - t67 * t52;
t24 = -t67 * t50 - t73 * t52;
t20 = -t67 * t36 + t73 * t38;
t18 = -t73 * t36 - t67 * t38;
t13 = t67 * t32 - t73 * t42;
t12 = t32 * pkin(4) + t25;
t11 = t42 * pkin(4) + t23;
t7 = t17 * t67 + t33 * t73;
t6 = -t33 * pkin(4) + t10;
t5 = t17 * pkin(4) + t19;
t4 = t73 * t11 - t67 * t12;
t3 = -t67 * t11 - t73 * t12;
t2 = -t67 * t5 + t73 * t6;
t1 = -t73 * t5 - t67 * t6;
t16 = [1, 0, 0, t61, 0.2e1 * t149, 0, 0, 0, 0, 0, t66 * t61, t61 * t129, 0.2e1 * t97, -0.2e1 * t114, t78 ^ 2, -0.2e1 * pkin(2) * t97, t114 * t224, t45 ^ 2, t44 * t214, t153 * t214, t153 * t215, t60 * t61 (-t135 * t44 - t182 * t61) * t224 (-t135 * t45 - t181 * t61) * t224, t34 ^ 2, t34 * t218, t34 * t215, t44 * t218, t44 ^ 2, -0.2e1 * t19 * t44 - 0.2e1 * t33 * t91, -0.2e1 * t21 * t44 - 0.2e1 * t34 * t91, t17 ^ 2, t17 * t221, 0.2e1 * t17 * t33, t15 * t218, t33 ^ 2, 0.2e1 * t19 * t15 + 0.2e1 * t9 * t33, -0.2e1 * t10 * t33 + 0.2e1 * t19 * t17, t8 ^ 2, -0.2e1 * t8 * t7, t8 * t221, 0.2e1 * t7 * t15, t15 ^ 2, -0.2e1 * t1 * t15 + 0.2e1 * t9 * t7, 0.2e1 * t2 * t15 + 0.2e1 * t9 * t8; 0, 0, 0, 0, 0, t72, t78, 0, 0, 0, -t98 (t60 - t66) * t72, -t150, -t134, 0, pkin(2) * t150, pkin(2) * t134, -t45 * t137 (t188 + t189) * t71, t181 * t72 - t45 * t77, -t182 * t72 + t44 * t77, t98 (t44 - t111) * t209 (t45 - t110) * t209, t34 * t48, -t48 * t33 + t34 * t42, -t157 * t34 + t48 * t44, t157 * t33 + t42 * t44, -t44 * t157, -t25 * t44 + (t19 * t71 + (t153 * t42 - t33 * t77) * pkin(2)) * t70, -t27 * t44 + (t21 * t71 + (-t153 * t48 - t34 * t77) * pkin(2)) * t70, t17 * t32, -t32 * t15 - t17 * t29, -t17 * t42 + t32 * t33, t15 * t42 - t29 * t33, -t33 * t42, t25 * t15 + t19 * t29 + t22 * t33 - t9 * t42, t10 * t42 + t25 * t17 + t19 * t32 - t23 * t33, t8 * t14, -t8 * t13 - t14 * t7, -t14 * t15 - t8 * t29, t13 * t15 + t7 * t29, t15 * t29, -t1 * t29 + t9 * t13 - t3 * t15 + t22 * t7, t9 * t14 + t4 * t15 + t2 * t29 + t22 * t8; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, t60, t128, 0, 0, 0, 0, 0, t65 * t60, -0.2e1 * t60 * t155, t76 * t128, t70 * t129, t66, t70 * t90, t76 * t90, t48 ^ 2, t48 * t216, t48 * t130, t42 * t130, t59 * t60 (t207 * t42 + t25 * t71) * t211 (-t207 * t48 + t27 * t71) * t211, t32 ^ 2, t29 * t219, t42 * t219, t29 * t216, t42 ^ 2, -0.2e1 * t22 * t42 + 0.2e1 * t25 * t29, 0.2e1 * t23 * t42 + 0.2e1 * t25 * t32, t14 ^ 2, t13 * t222, t29 * t222, 0.2e1 * t13 * t29, t29 ^ 2, 0.2e1 * t22 * t13 - 0.2e1 * t3 * t29, 0.2e1 * t22 * t14 + 0.2e1 * t4 * t29; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t135, -t153, t78, -t123, t125, -t188, -t45 * t76 + t158, t113, t112, 0, -pkin(2) * t110, pkin(2) * t111, -t34 * t140 (t192 + t193) * t70, t34 * t76 - t102, -t33 * t76 + t116, t189, pkin(3) * t102 - t19 * t76 + t69 * t94, -pkin(3) * t116 - t21 * t76 + t75 * t94, t17 * t47, -t47 * t15 + t17 * t41, -t164 * t17 + t47 * t33, t15 * t164 + t41 * t33, -t33 * t164, -t19 * t41 + (-t69 * t9 + (-t120 - t201) * pkin(3)) * t70, t19 * t47 + (t10 * t69 + (-t107 - t199) * pkin(3)) * t70, t8 * t31, -t8 * t28 - t31 * t7, -t31 * t15 + t8 * t41, t28 * t15 - t7 * t41, -t15 * t41, t1 * t41 - t18 * t15 + t9 * t28 - t7 * t92, t20 * t15 - t2 * t41 + t9 * t31 - t8 * t92; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t71, -t77, 0, t209, t207, t99 (-t59 + t65) * t71, t154, t136, 0, pkin(2) * t137, -pkin(2) * t157, -t48 * t140 (t185 - t190) * t70, t152 * t59 + t48 * t76, -t163 * t59 + t42 * t76, -t99, -t25 * t76 + t59 * t81, -t27 * t76 + t59 * t82, t32 * t47, -t47 * t29 + t32 * t41, -t164 * t32 - t47 * t42, t164 * t29 - t41 * t42, t42 * t164, -t25 * t41 + (-t22 * t69 + (t119 - t197) * pkin(3)) * t70, t25 * t47 + (t23 * t69 + (t106 - t194) * pkin(3)) * t70, t14 * t31, -t31 * t13 - t14 * t28, t14 * t41 - t31 * t29, -t13 * t41 + t28 * t29, -t29 * t41, -t13 * t92 - t18 * t29 + t22 * t28 + t3 * t41, -t14 * t92 + t20 * t29 + t22 * t31 - t4 * t41; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, t59, 0.2e1 * t155, 0, 0, 0, 0, 0, t64 * t59, t59 * t132, -0.2e1 * t100, 0.2e1 * t115, t65, t100 * t223, -0.2e1 * pkin(3) * t115, t47 ^ 2, t47 * t217, t47 * t133, t41 * t133, t184 (t140 * t41 + t183 * t59) * t223 (-t140 * t47 + t184 * t74) * t223, t31 ^ 2, t31 * t220, t31 * t217, t41 * t220, t41 ^ 2, 0.2e1 * t18 * t41 - 0.2e1 * t28 * t92, -0.2e1 * t20 * t41 - 0.2e1 * t31 * t92; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t45, -t44, -t153, t91, pkin(2) * t112, t192, t34 * t75 - t167, t165, t141, 0, -pkin(3) * t165 + t75 * t91, -pkin(3) * t141 - t69 * t91, t17 * t143 (-t200 - t202) * t69, t107 - t199, -t120 + t201, -t193, t19 * t170 - t9 * t75 + (t15 * t69 - t168 * t33) * pkin(3), t19 * t143 + t10 * t75 + (-t142 * t33 + t17 * t69) * pkin(3), t8 * t46, -t8 * t40 - t46 * t7, -t46 * t15 - t170 * t8, t40 * t15 + t170 * t7, t15 * t170, -t24 * t15 + t9 * t40 + (-t1 * t69 - t208 * t7) * t68, t26 * t15 + t9 * t46 + (t2 * t69 - t208 * t8) * t68; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t137, t157, -t77, t126, pkin(2) * t136, t185, t48 * t75 + t166, -t69 * t157, -t71 * t140, 0, t82 * t70, -t81 * t70, t32 * t143 (-t195 - t198) * t69, -t106 - t194, t119 + t197, t190, t25 * t170 - t22 * t75 + (t168 * t42 + t29 * t69) * pkin(3), t25 * t143 + t23 * t75 + (t142 * t42 + t32 * t69) * pkin(3), t14 * t46, -t46 * t13 - t14 * t40, -t14 * t170 - t46 * t29, t13 * t170 + t40 * t29, t29 * t170, t22 * t40 - t24 * t29 + (-t13 * t208 - t3 * t69) * t68, t22 * t46 + t26 * t29 + (-t14 * t208 + t4 * t69) * t68; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t70, -t76, 0, 0, 0, -t101 (t58 - t64) * t70, t160, t139, 0, -pkin(3) * t160, -pkin(3) * t139, t47 * t143 (-t186 + t191) * t69, -t156 * t58 - t47 * t75, t183 * t70 - t41 * t75, t101 (-t41 + t117) * t210 (t47 + t103) * t210, t31 * t46, -t46 * t28 - t31 * t40, -t170 * t31 + t46 * t41, t170 * t28 - t40 * t41, -t41 * t170, t24 * t41 + (-t18 * t69 + (-t164 * t40 - t28 * t75) * pkin(3)) * t68, -t26 * t41 + (t20 * t69 + (-t164 * t46 - t31 * t75) * pkin(3)) * t68; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, t58, t131, 0, 0, 0, 0, 0, t63 * t58, -0.2e1 * t58 * t169, t74 * t132, t68 * t131, t64, t68 * t89, t74 * t89, t46 ^ 2, t40 * t213, t170 * t213, 0.2e1 * t40 * t170, t57 * t58 (-t208 * t40 - t24 * t69) * t212 (-t208 * t46 + t26 * t69) * t212; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t34, -t33, t44, -t19, -t21, t200, t17 * t74 - t173, t68 * t33, t74 * t33, 0, -t19 * t74, t19 * t68, t8 * t146 (-t7 * t73 - t206) * t68, -t146 * t15 + t8 * t74, t173 * t67 - t7 * t74, -t202, t1 * t74 + t68 * t86, -t2 * t74 + t68 * t85; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t48, t42, -t157, -t25, -t27, t195, t32 * t74 - t172, -t68 * t42, -t74 * t42, 0, -t25 * t74, t25 * t68, t14 * t146 (-t13 * t73 - t205) * t68, t14 * t74 - t146 * t29, -t13 * t74 + t172 * t67, -t198, t3 * t74 + t68 * t84, -t4 * t74 + t68 * t83; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t140, t164, t76, t124, -t127, t186, t47 * t74 + t171, -t118, -t104, 0, pkin(3) * t103, -pkin(3) * t117, t31 * t146 (-t28 * t73 - t196) * t68, t31 * t74 + t109, -t28 * t74 - t122, t191, -pkin(4) * t109 + t18 * t74 - t67 * t93, pkin(4) * t122 - t20 * t74 - t73 * t93; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t69, t75, 0, -t210, -t208, t105 (-t57 + t63) * t69, -t168, -t142, 0, -pkin(3) * t143, pkin(3) * t170, t46 * t146 (-t40 * t73 - t187) * t68, -t162 * t57 + t46 * t74, t177 * t57 - t40 * t74, -t105, t24 * t74 - t57 * t79, -t26 * t74 + t57 * t80; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, t57, 0.2e1 * t169, 0, 0, 0, 0, 0, t62 * t57, -0.2e1 * t57 * t176, 0.2e1 * t108, -0.2e1 * t121, t63, -0.2e1 * pkin(4) * t108, 0.2e1 * pkin(4) * t121; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t17, -t15, t33, t9, -t10, -t206, t67 * t7 - t8 * t73, t204, t203, 0, t85, -t86; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t32, -t29, -t42, t22, -t23, -t205, t67 * t13 - t14 * t73, t180, t148, 0, t83, -t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t47, t41, -t164, -t92, -pkin(3) * t104, -t196, t67 * t28 - t31 * t73, -t179, -t147, 0, pkin(4) * t179 - t73 * t92, pkin(4) * t147 + t67 * t92; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t143, -t170, -t75, -pkin(3) * t168, -pkin(3) * t142, -t187, t67 * t40 - t46 * t73, t67 * t170, t69 * t146, 0, t80 * t68, t79 * t68; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t68, t74, 0, 0, 0, -t67 * t146 (t56 - t62) * t68, -t175, -t145, 0, pkin(4) * t175, pkin(4) * t145; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, t56, 0.2e1 * t176, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t8, -t7, -t15, t1, -t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t14, -t13, -t29, t3, -t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t31, -t28, t41, t18, -t20; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t46, -t40, -t170, t24, -t26; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t146, -t178, t74, -pkin(4) * t146, pkin(4) * t178; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t67, -t73, 0, t67 * pkin(4), t73 * pkin(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0;];
MM_reg  = t16;
