% Calculate minimal parameter regressor of coriolis matrix for
% S5RRRPP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,theta4]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x25]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2021-01-15 22:38
% Revision: 24b2e7d74a0c1a3b64fa2f8f5ad758691ad61af3 (2021-01-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRPP6_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPP6_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPP6_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRPP6_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2021-01-15 22:37:12
% EndTime: 2021-01-15 22:37:35
% DurationCPUTime: 7.64s
% Computational Cost: add. (6908->535), mult. (14620->708), div. (0->0), fcn. (14431->6), ass. (0->378)
t326 = cos(qJ(2));
t511 = t326 * pkin(7);
t324 = sin(qJ(2));
t514 = t324 * pkin(2);
t281 = -t511 + t514;
t325 = cos(qJ(3));
t270 = t325 * t281;
t323 = sin(qJ(3));
t462 = t323 * t324;
t300 = pkin(6) * t462;
t457 = t325 * t326;
t513 = t324 * pkin(3);
t182 = -qJ(4) * t457 + t270 + t300 + t513;
t322 = cos(pkin(8));
t467 = t322 * t182;
t269 = t323 * t281;
t460 = t324 * t325;
t420 = pkin(6) * t460;
t461 = t323 * t326;
t195 = -qJ(4) * t461 + t269 - t420;
t321 = sin(pkin(8));
t469 = t321 * t195;
t357 = t469 / 0.2e1 - t467 / 0.2e1;
t512 = t324 * pkin(4);
t338 = -t512 / 0.2e1 + t357;
t237 = -t321 * t462 + t322 * t460;
t536 = t237 / 0.2e1;
t464 = t322 * t325;
t259 = t321 * t323 - t464;
t535 = -t259 / 0.2e1;
t534 = t259 / 0.2e1;
t465 = t322 * t323;
t468 = t321 * t325;
t261 = t465 + t468;
t533 = -t261 / 0.2e1;
t459 = t325 * qJ(4);
t280 = pkin(7) * t325 + t459;
t265 = t322 * t280;
t395 = (-qJ(4) - pkin(7)) * t323;
t391 = t321 * t395;
t560 = t265 + t391;
t570 = -t560 / 0.2e1;
t354 = t468 / 0.2e1 + t465 / 0.2e1;
t336 = (t533 + t354) * t326;
t549 = t336 * qJD(1);
t569 = t261 * qJD(3) + t549;
t255 = t261 ^ 2;
t561 = t259 ^ 2 + t255;
t568 = qJD(4) * t561;
t233 = t237 ^ 2;
t234 = t261 * t324;
t562 = t234 ^ 2 + t233;
t567 = qJD(4) * t562;
t375 = t234 * t259 + t237 * t261;
t566 = qJD(1) * t562 + qJD(2) * t375;
t565 = qJD(1) * t375 + qJD(2) * t561;
t390 = -pkin(2) * t326 - pkin(7) * t324;
t279 = -pkin(1) + t390;
t263 = t325 * t279;
t389 = -t324 * t459 + t263;
t519 = pkin(6) * t323;
t169 = (-pkin(3) - t519) * t326 + t389;
t158 = t321 * t169;
t421 = pkin(6) * t457;
t194 = t421 + (-qJ(4) * t324 + t279) * t323;
t466 = t322 * t194;
t94 = t466 + t158;
t564 = t94 / 0.2e1;
t475 = t259 * qJ(5);
t515 = t323 * pkin(3);
t516 = t261 * pkin(4);
t161 = t475 + t515 + t516;
t563 = t161 / 0.2e1;
t283 = t321 * t461;
t239 = t322 * t457 - t283;
t477 = t239 * qJ(5);
t236 = t261 * t326;
t518 = t236 * pkin(4);
t559 = -t477 / 0.2e1 + t518 / 0.2e1;
t247 = t259 * qJD(3);
t146 = t283 / 0.2e1 + (t535 - t464 / 0.2e1) * t326;
t431 = t146 * qJD(1);
t558 = t431 + t247;
t201 = t280 * t321 - t322 * t395;
t376 = t201 * t261 - t259 * t560;
t554 = qJD(2) * t376;
t552 = qJD(4) * t336;
t551 = qJD(4) * t376;
t532 = t261 / 0.2e1;
t331 = (t354 + t532) * t326;
t550 = t331 * qJD(4);
t548 = t375 * qJD(4);
t162 = t321 * t182;
t186 = t322 * t195;
t455 = -t162 / 0.2e1 - t186 / 0.2e1;
t547 = t201 * t536 + t234 * t570;
t470 = t321 * t194;
t93 = t169 * t322 - t470;
t546 = t533 * t93 + t535 * t94;
t456 = t326 * qJ(5);
t80 = t94 - t456;
t81 = pkin(4) * t326 - t93;
t545 = t533 * t81 + t534 * t80;
t317 = t323 ^ 2;
t319 = t325 ^ 2;
t292 = t319 - t317;
t426 = t324 * qJD(1);
t411 = t325 * t426;
t544 = qJD(2) * t292 - 0.2e1 * t323 * t411;
t424 = t326 * qJD(1);
t412 = t237 * t424;
t543 = qJD(2) * t331 + t412;
t542 = qJD(2) * t336 + qJD(3) * t237 - t412;
t422 = pkin(6) * t461;
t193 = t389 - t422;
t471 = t321 * t193;
t106 = t466 + t471;
t541 = -t106 / 0.2e1;
t107 = t193 * t322 - t470;
t540 = t107 / 0.2e1;
t539 = t560 / 0.2e1;
t538 = -t201 / 0.2e1;
t400 = t265 / 0.2e1;
t301 = t321 * pkin(3) + qJ(5);
t531 = -t301 / 0.2e1;
t530 = t301 / 0.2e1;
t303 = -t322 * pkin(3) - pkin(4);
t529 = t303 / 0.2e1;
t308 = -pkin(3) * t325 - pkin(2);
t528 = -t308 / 0.2e1;
t527 = -t321 / 0.2e1;
t526 = t321 / 0.2e1;
t525 = -t322 / 0.2e1;
t524 = t322 / 0.2e1;
t523 = -t323 / 0.2e1;
t522 = -t324 / 0.2e1;
t521 = -t325 / 0.2e1;
t520 = -t326 / 0.2e1;
t517 = t237 * pkin(4);
t510 = pkin(3) * qJD(3);
t271 = pkin(3) * t462 + pkin(6) * t324;
t120 = pkin(4) * t234 - qJ(5) * t237 + t271;
t298 = pkin(3) * t461;
t315 = t326 * pkin(6);
t272 = t315 + t298;
t121 = t272 - t477 + t518;
t102 = t186 + t162;
t89 = t324 * qJ(5) + t102;
t101 = t467 - t469;
t90 = -t101 - t512;
t9 = t120 * t121 + t80 * t89 + t81 * t90;
t507 = t9 * qJD(1);
t157 = pkin(4) * t259 - qJ(5) * t261 + t308;
t361 = t120 * t532 + t157 * t536;
t335 = t520 * t560 - t361;
t27 = -t335 + t338;
t504 = qJD(1) * t27;
t419 = pkin(3) * t460;
t478 = t234 * qJ(5);
t123 = t419 + t478 + t517;
t491 = t120 * t237;
t495 = t106 * t326;
t29 = t123 * t234 + t491 + t495;
t503 = qJD(1) * t29;
t37 = -t234 * t80 + t237 * t81;
t502 = qJD(1) * t37;
t39 = -t234 * t94 - t237 * t93;
t501 = qJD(1) * t39;
t44 = t326 * t80 + t491;
t500 = qJD(1) * t44;
t45 = -t234 * t419 - t237 * t271 - t495;
t499 = qJD(1) * t45;
t493 = t107 * t326;
t46 = -t234 * t271 + t237 * t419 + t493;
t498 = qJD(1) * t46;
t10 = t106 * t81 + t107 * t80 + t120 * t123;
t497 = t10 * qJD(1);
t496 = t106 * t201;
t494 = t107 * t560;
t11 = -t234 * t89 - t236 * t80 + t237 * t90 + t239 * t81;
t492 = t11 * qJD(1);
t16 = (t106 - t80) * t237 + (-t107 - t81) * t234;
t490 = t16 * qJD(1);
t17 = -t101 * t237 - t102 * t234 - t236 * t94 - t239 * t93;
t489 = t17 * qJD(1);
t18 = (t106 - t94) * t237 + (-t107 + t93) * t234;
t488 = t18 * qJD(1);
t487 = t560 * t326;
t485 = t201 * t324;
t484 = t201 * t326;
t482 = t560 * t324;
t21 = t101 * t93 + t102 * t94 + t271 * t272;
t481 = t21 * qJD(1);
t22 = t120 * t239 + t121 * t237 - t324 * t80 + t326 * t89;
t480 = t22 * qJD(1);
t23 = t120 * t236 + t121 * t234 - t324 * t81 + t326 * t90;
t479 = t23 * qJD(1);
t24 = -t106 * t93 + t107 * t94 + t271 * t419;
t476 = t24 * qJD(1);
t30 = -t120 * t234 + t123 * t237 + t493;
t474 = t30 * qJD(1);
t31 = t101 * t326 - t234 * t272 - t236 * t271 - t324 * t93;
t473 = t31 * qJD(1);
t32 = t102 * t326 + t237 * t272 + t239 * t271 - t324 * t94;
t472 = t32 * qJD(1);
t463 = t323 * t234;
t318 = t324 ^ 2;
t458 = t325 * t318;
t320 = t326 ^ 2;
t293 = t320 - t318;
t226 = -t263 + t422;
t173 = -t226 * t326 - t318 * t519;
t453 = qJD(1) * t173;
t227 = t279 * t323 + t421;
t174 = -pkin(6) * t458 - t227 * t326;
t452 = qJD(1) * t174;
t451 = qJD(1) * t237;
t450 = qJD(2) * t261;
t449 = qJD(2) * t323;
t448 = qJD(2) * t325;
t447 = qJD(3) * t201;
t446 = qJD(3) * t323;
t445 = qJD(3) * t325;
t444 = qJD(3) * t326;
t443 = qJD(4) * t146;
t442 = qJD(4) * t259;
t441 = qJD(5) * t234;
t440 = qJD(5) * t261;
t439 = qJD(5) * t326;
t438 = t107 * qJD(3);
t111 = t226 * t324 + (-t300 + t270) * t326;
t437 = t111 * qJD(1);
t112 = t269 * t326 + (-t227 + t421) * t324;
t436 = t112 * qJD(1);
t145 = -t283 / 0.2e1 + (t535 + t464 / 0.2e1) * t326;
t433 = t145 * qJD(1);
t432 = t145 * qJD(4);
t430 = t234 * qJD(4);
t229 = t237 * qJD(4);
t267 = t293 * t323;
t429 = t267 * qJD(1);
t268 = t320 * t325 - t458;
t428 = t268 * qJD(1);
t427 = t293 * qJD(1);
t425 = t324 * qJD(2);
t423 = t326 * qJD(2);
t418 = pkin(1) * t426;
t417 = pkin(1) * t424;
t309 = t515 / 0.2e1;
t415 = t513 / 0.2e1;
t414 = t529 - pkin(4) / 0.2e1;
t413 = t234 * t451;
t410 = t323 * t448;
t409 = t325 * t425;
t408 = t323 * t444;
t407 = t325 * t444;
t406 = t326 * t430;
t405 = t323 * t445;
t404 = t324 * t423;
t403 = t324 * t424;
t402 = -t494 / 0.2e1;
t399 = -t460 / 0.2e1;
t398 = qJ(5) / 0.2e1 + t530;
t397 = -t158 / 0.2e1 - t466 / 0.2e1;
t396 = t298 / 0.2e1 + t315 / 0.2e1;
t394 = t201 * t239 - t236 * t560;
t217 = t234 * t424;
t110 = qJD(2) * t145 - t217;
t288 = t325 * t415;
t296 = -qJD(3) + t424;
t393 = t323 * t409;
t388 = t466 / 0.2e1 + t471 / 0.2e1;
t328 = t496 / 0.2e1 + t120 * t563 + t123 * t157 / 0.2e1 + t80 * t538 + t81 * t539;
t365 = t529 * t90 + t530 * t89;
t1 = t402 - t328 + t365;
t38 = t157 * t161;
t386 = -qJD(1) * t1 + qJD(2) * t38;
t332 = (t538 + t201 / 0.2e1) * t234;
t358 = t236 * t531 + t239 * t529;
t3 = (t80 / 0.2e1 + t541) * t261 + (t540 + t81 / 0.2e1) * t259 + t332 + t358;
t385 = t3 * qJD(1);
t342 = (t236 * t527 + t239 * t525) * pkin(3);
t5 = (t564 + t541) * t261 + (t540 - t93 / 0.2e1) * t259 + t342 + t332;
t384 = t5 * qJD(1);
t47 = t308 * t515;
t339 = -t496 / 0.2e1 + t93 * t539 + t201 * t564;
t362 = t101 * t524 + t102 * t526;
t7 = t402 + (t271 * t523 + t308 * t399 + t362) * pkin(3) + t339;
t383 = -t7 * qJD(1) + t47 * qJD(2);
t177 = -t484 / 0.2e1;
t329 = t120 * t535 + t123 * t532 - t157 * t234 / 0.2e1 + t161 * t536;
t347 = t324 * t398 - t455;
t12 = t177 + t329 + t347;
t53 = t157 * t259 - t161 * t261;
t382 = -qJD(1) * t12 + qJD(2) * t53;
t327 = t123 * t534 + t234 * t563 + t487 / 0.2e1 + t361;
t14 = t324 * t414 + t327 + t357;
t52 = t157 * t261 + t161 * t259;
t381 = qJD(1) * t14 + qJD(2) * t52;
t333 = t396 - t547;
t19 = t333 + t545 + t559;
t380 = -qJD(1) * t19 + t554;
t25 = t333 - t546;
t379 = -qJD(1) * t25 + t554;
t48 = t234 * t398 - t237 * t414 + t288;
t76 = t259 * t398 - t261 * t414 + t309;
t378 = qJD(1) * t48 + qJD(2) * t76;
t141 = t259 * t515 + t261 * t308;
t334 = -t487 / 0.2e1 + t271 * t533 + t237 * t528;
t34 = (-t463 / 0.2e1 + (t259 * t521 + t524) * t324) * pkin(3) + t334 - t357;
t374 = -qJD(1) * t34 + qJD(2) * t141;
t142 = -t259 * t308 + t261 * t515;
t178 = t484 / 0.2e1;
t359 = -t234 * t528 + t271 * t534;
t33 = t178 + (t237 * t523 + (t261 * t521 + t527) * t324) * pkin(3) + t359 + t455;
t373 = -qJD(1) * t33 + qJD(2) * t142;
t372 = t296 * t324;
t356 = -t234 * t526 + t237 * t525;
t117 = (t399 + t356) * pkin(3);
t355 = t259 * t527 + t261 * t525;
t135 = (t523 + t355) * pkin(3);
t367 = qJD(1) * t117 + qJD(2) * t135;
t151 = -qJD(1) * t234 - qJD(2) * t259;
t152 = t450 + t451;
t366 = t511 / 0.2e1 - t514 / 0.2e1;
t349 = t366 * t323;
t188 = t269 / 0.2e1 - t349;
t364 = pkin(2) * t448 - qJD(1) * t188;
t348 = t366 * t325;
t189 = -t270 / 0.2e1 + t348;
t363 = pkin(2) * t449 - qJD(1) * t189;
t360 = -t234 * t533 + t237 * t534;
t91 = t522 + t360;
t353 = qJD(1) * t91 + t259 * t450;
t352 = t325 * t372;
t252 = (t317 / 0.2e1 - t319 / 0.2e1) * t324;
t351 = -qJD(1) * t252 + t410;
t350 = qJD(2) * t146 + qJD(3) * t234 - t217;
t346 = t396 + t547;
t345 = qJD(1) * t323 * t458 + qJD(2) * t252;
t266 = t292 * t318;
t344 = qJD(1) * t266 + 0.2e1 * t393;
t192 = t400 - t265 / 0.2e1;
t42 = t326 * t398 + t388 + t397;
t341 = qJD(1) * t42 - qJD(2) * t192 - qJD(3) * t301;
t216 = t320 + t233;
t337 = qJD(1) * t216 + t237 * t450 - t444;
t330 = t106 * t532 + t107 * t535 + t237 * t570 + t560 * t536;
t304 = t425 / 0.2e1;
t258 = (t424 - qJD(3) / 0.2e1) * t324;
t249 = t261 * qJD(4);
t246 = t252 * qJD(3);
t187 = t560 * qJD(3);
t165 = t237 * t440;
t160 = t300 + t270 / 0.2e1 + t348;
t159 = t420 - t269 / 0.2e1 - t349;
t136 = 0.2e1 * t400 + t391;
t134 = pkin(3) * t355 + t309;
t122 = qJD(2) * t255 + t261 * t451;
t116 = pkin(3) * t356 + t288;
t103 = t106 * qJD(3);
t92 = t522 - t360;
t77 = t259 * t531 + t261 * t529 + t309 + t475 / 0.2e1 + t516 / 0.2e1;
t58 = t494 / 0.2e1;
t49 = -t234 * t530 + t237 * t529 + t288 + t478 / 0.2e1 + t517 / 0.2e1;
t43 = t301 * t520 - t456 / 0.2e1 + t388 - t397;
t36 = t237 * t309 + t261 * t288 + t513 * t527 + t177 - t359 + t455;
t35 = pkin(3) * t463 / 0.2e1 + t259 * t288 + t322 * t415 - t334 - t357;
t28 = t335 + t338;
t26 = t346 + t546;
t20 = t346 - t545 + t559;
t15 = t303 * t522 + t327 - t338;
t13 = t178 - t329 + t347;
t8 = pkin(3) * t362 + t271 * t309 + t288 * t308 - t339 + t58;
t6 = t533 * t94 + t534 * t93 + t330 + t342;
t4 = t533 * t80 + t535 * t81 + t330 + t358;
t2 = t58 + t328 + t365;
t40 = [0, 0, 0, t404, t293 * qJD(2), 0, 0, 0, -pkin(1) * t425, -pkin(1) * t423, -t318 * t405 + t319 * t404, -qJD(3) * t266 - 0.2e1 * t326 * t393, -qJD(2) * t268 + t324 * t408, qJD(2) * t267 + t324 * t407, -t404, -qJD(2) * t111 - qJD(3) * t174, qJD(2) * t112 + qJD(3) * t173, -qJD(2) * t31 - qJD(3) * t45 + t229 * t326, qJD(2) * t32 + qJD(3) * t46 - t406, qJD(2) * t17 + qJD(3) * t18 + t567, qJD(2) * t21 + qJD(3) * t24 + qJD(4) * t39, t23 * qJD(2) + t29 * qJD(3) + (qJD(4) * t326 - t441) * t237, qJD(2) * t11 + qJD(3) * t16 + t234 * t439 + t567, -qJD(2) * t22 - qJD(3) * t30 + qJD(5) * t216 + t406, qJD(2) * t9 + qJD(3) * t10 + qJD(4) * t37 - qJD(5) * t44; 0, 0, 0, t403, t427, t423, -t425, 0, -pkin(6) * t423 - t418, pkin(6) * t425 - t417, -t246 + (t319 * t426 + t410) * t326, -0.2e1 * t324 * t405 + t326 * t544, t323 * t425 - t428, t409 + t429, -t258, -t437 + (t323 * t390 - t421) * qJD(2) + t160 * qJD(3), t436 + (t325 * t390 + t422) * qJD(2) + t159 * qJD(3), -t473 + (t236 * t308 + t259 * t272 - t485) * qJD(2) + t35 * qJD(3) + t550, t472 + (t239 * t308 + t261 * t272 - t482) * qJD(2) + t36 * qJD(3) + t432, t489 + (-t101 * t261 - t102 * t259 + t394) * qJD(2) + t6 * qJD(3) + t548, t481 + (-t101 * t201 + t102 * t560 + t272 * t308) * qJD(2) + t8 * qJD(3) + t26 * qJD(4), t479 + (t121 * t259 + t157 * t236 - t485) * qJD(2) + t15 * qJD(3) + t550 + t92 * qJD(5), t492 + (-t259 * t89 + t261 * t90 + t394) * qJD(2) + t4 * qJD(3) + t548 - t146 * qJD(5), -t480 + (-t121 * t261 - t157 * t239 + t482) * qJD(2) + t13 * qJD(3) - t432 + t165, t507 + (t121 * t157 + t201 * t90 + t560 * t89) * qJD(2) + t2 * qJD(3) + t20 * qJD(4) + t28 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t345, -t344, t323 * t372, t352, t304, qJD(2) * t160 - qJD(3) * t227 - t452, qJD(2) * t159 + qJD(3) * t226 + t453, qJD(2) * t35 - t103 - t499, qJD(2) * t36 - t438 + t498, t488 + t6 * qJD(2) + (t234 * t322 - t237 * t321) * t510, t476 + t8 * qJD(2) + t116 * qJD(4) + (-t106 * t322 + t107 * t321) * t510, qJD(2) * t15 - t103 + t503, t490 + t4 * qJD(2) + (-t234 * t303 - t237 * t301) * qJD(3) - t441, qJD(2) * t13 + t438 - t439 - t474, t497 + t2 * qJD(2) + (t106 * t303 + t107 * t301) * qJD(3) + t49 * qJD(4) + t43 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t543, t110, t566, qJD(2) * t26 + qJD(3) * t116 + t501, t543, t566, -t110, qJD(2) * t20 + qJD(3) * t49 + t502; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t92 - t413, -t350, t337, qJD(2) * t28 + qJD(3) * t43 - t500; 0, 0, 0, -t403, -t427, 0, 0, 0, t418, t417, -t319 * t403 - t246, 0.2e1 * t323 * t352, -t407 + t428, t408 - t429, t258, qJD(3) * t189 + t437, qJD(3) * t188 - t436, -qJD(3) * t34 + t473 - t552, -qJD(3) * t33 + t443 - t472, -qJD(3) * t5 - t489 + t548, -qJD(3) * t7 - qJD(4) * t25 - t481, qJD(3) * t14 - qJD(5) * t91 - t479 - t552, -qJD(3) * t3 - qJD(5) * t145 - t492 + t548, -qJD(3) * t12 + t165 - t443 + t480, -qJD(3) * t1 - qJD(4) * t19 - qJD(5) * t27 - t507; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t405, t292 * qJD(3), 0, 0, 0, -pkin(2) * t446, -pkin(2) * t445, t141 * qJD(3), t142 * qJD(3), t568, qJD(3) * t47 + t551, qJD(3) * t52 - t259 * t440, t568, qJD(3) * t53 + qJD(5) * t255, qJD(3) * t38 - t157 * t440 + t551; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t351, t544, -t296 * t325, t296 * t323, -t426 / 0.2e1, -pkin(7) * t445 - t363, pkin(7) * t446 - t364, -t187 + t374, t373 + t447, (t259 * t322 - t261 * t321) * t510 - t384, t134 * qJD(4) + (-t201 * t321 - t322 * t560) * t510 + t383, -t187 + t381, (-t259 * t303 - t261 * t301) * qJD(3) - qJD(5) * t259 - t385, t382 - t447, (-t201 * t301 + t303 * t560) * qJD(3) + t77 * qJD(4) + t136 * qJD(5) + t386; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t549, t431, t565, qJD(3) * t134 + t379, -t549, t565, -t431, qJD(3) * t77 + t380; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t353, -t247 - t433, t122, qJD(3) * t136 - t157 * t450 - t504; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t345, t344, (-t323 * t426 + t448) * t326, (-t411 - t449) * t326, t304, -qJD(2) * t189 + t452, -qJD(2) * t188 - t453, qJD(2) * t34 - t229 + t499, qJD(2) * t33 + t430 - t498, qJD(2) * t5 - t488, qJD(2) * t7 + qJD(4) * t117 - t476, -qJD(2) * t14 - t229 - t503, qJD(2) * t3 - t490, qJD(2) * t12 - t430 - t439 + t474, qJD(2) * t1 - qJD(4) * t48 - qJD(5) * t42 - t497; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t351, -t544, t325 * t424, -t323 * t424, t426 / 0.2e1, t363, t364, -t249 - t374, -t373 + t442, t384, qJD(4) * t135 - t383, -t249 - t381, t385, -t382 - t442, -qJD(4) * t76 + qJD(5) * t192 - t386; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), t301 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t152, -t151, 0, t367, -t152, 0, t151, -t378; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t296, -t341; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t542, -t350, -t566, qJD(2) * t25 - qJD(3) * t117 - t501, t542, -t566, t350, qJD(2) * t19 + qJD(3) * t48 - qJD(5) * t237 - t502; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t569, -t558, -t565, -qJD(3) * t135 - t379, t569, -t565, t558, qJD(3) * t76 - t380 - t440; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t152, t151, 0, -t367, t152, 0, -t151, t378; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t152; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t91 + t413, t110, -t337, qJD(2) * t27 + qJD(3) * t42 + t229 + t500; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t353, t433, -t122, t504 - qJD(3) * t192 + (qJD(2) * t157 + qJD(4)) * t261; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t296, t341; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t152; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t40;
