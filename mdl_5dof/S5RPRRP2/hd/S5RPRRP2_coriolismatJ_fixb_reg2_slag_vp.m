% Calculate inertial parameters regressor of coriolis matrix for
% S5RPRRP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4,theta2]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2022-01-23 09:28
% Revision: fd3771346c4aea32fdeb66112c511235427c26a7 (2022-01-20)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPRRP2_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRP2_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRP2_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPRRP2_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2022-01-23 09:28:16
% EndTime: 2022-01-23 09:28:18
% DurationCPUTime: 1.34s
% Computational Cost: add. (1312->162), mult. (2511->180), div. (0->0), fcn. (1989->6), ass. (0->126)
t129 = qJD(1) + qJD(3);
t104 = cos(qJ(4));
t100 = t104 ^ 2;
t102 = sin(qJ(4));
t99 = t102 ^ 2;
t90 = t99 + t100;
t165 = t129 * t90;
t91 = t100 - t99;
t164 = t129 * t91;
t163 = -pkin(3) / 0.2e1;
t103 = sin(qJ(3));
t116 = cos(pkin(8)) * pkin(1) + pkin(2);
t156 = sin(pkin(8)) * pkin(1);
t157 = cos(qJ(3));
t66 = t103 * t156 - t157 * t116;
t162 = -t66 / 0.2e1;
t161 = t99 * pkin(4);
t160 = t102 / 0.2e1;
t159 = t104 / 0.2e1;
t155 = pkin(4) * t102;
t154 = t104 * pkin(4);
t153 = pkin(7) + qJ(5);
t27 = t90 * t66;
t142 = t27 * qJD(1);
t24 = t27 * qJD(3);
t152 = -t142 - t24;
t134 = t102 * qJD(3);
t109 = t103 * t116;
t118 = t157 * t156;
t67 = t118 + t109;
t55 = t67 * t134;
t135 = t102 * qJD(1);
t56 = t67 * t135;
t151 = t55 + t56;
t65 = pkin(7) + t67;
t144 = qJ(5) + t65;
t45 = t144 * t104;
t148 = t45 * t104;
t44 = t144 * t102;
t149 = t44 * t102;
t18 = t148 + t149;
t64 = -pkin(3) + t66;
t52 = t64 - t154;
t3 = -t18 * t66 + t52 * t67;
t150 = t3 * qJD(1);
t5 = -t65 * t27 + t64 * t67;
t147 = t5 * qJD(1);
t48 = t52 * t102;
t83 = t153 * t102;
t146 = t83 * t102;
t84 = t153 * t104;
t145 = t84 * t104;
t93 = -pkin(3) - t154;
t88 = t93 * t102;
t143 = t18 * qJD(1);
t128 = t102 * t154;
t32 = -t48 + t128;
t141 = t32 * qJD(1);
t38 = t52 * t104 + t161;
t140 = t38 * qJD(1);
t139 = t45 * qJD(4);
t138 = t66 * qJD(1);
t137 = t67 * qJD(1);
t136 = t84 * qJD(4);
t97 = t102 * qJD(4);
t133 = t102 * qJD(5);
t132 = t104 * qJD(1);
t131 = t104 * qJD(3);
t98 = t104 * qJD(4);
t130 = t104 * qJD(5);
t127 = pkin(3) / 0.2e1 - t64 / 0.2e1;
t126 = pkin(4) * t98;
t125 = pkin(4) * t133;
t123 = t88 / 0.2e1 + t48 / 0.2e1;
t122 = t93 / 0.2e1 + t52 / 0.2e1;
t121 = t64 * t135;
t120 = t64 * t132;
t119 = t67 * t131;
t53 = t66 * t160;
t81 = t129 * t102;
t82 = t129 * t104;
t117 = t162 + t122;
t57 = t67 * t132;
t115 = -t57 - t119;
t47 = t145 + t146;
t35 = t148 / 0.2e1;
t16 = t35 - t148 / 0.2e1;
t4 = pkin(4) * t48;
t114 = t4 * qJD(1) + t16 * qJD(2);
t105 = t118 / 0.2e1 + t109 / 0.2e1;
t6 = (-t84 / 0.2e1 - t45 / 0.2e1) * t104 + (-t83 / 0.2e1 - t44 / 0.2e1) * t102 + t105;
t113 = -t6 * qJD(1) + t47 * qJD(3);
t11 = (-t154 + t162) * t102 + t123;
t68 = -t88 + t128;
t112 = t11 * qJD(1) - t68 * qJD(3);
t14 = t117 * t104 + t161;
t75 = t93 * t104 + t161;
t111 = t14 * qJD(1) + t75 * qJD(3);
t73 = t145 / 0.2e1;
t41 = t73 - t145 / 0.2e1;
t110 = -t16 * qJD(1) - t41 * qJD(3);
t20 = t127 * t102 + t53;
t108 = pkin(3) * t134 + t20 * qJD(1);
t54 = t66 * t159;
t21 = t127 * t104 + t54;
t107 = pkin(3) * t131 + t21 * qJD(1);
t1 = t117 * t155;
t19 = pkin(4) * t88;
t106 = t1 * qJD(1) + t41 * qJD(2) + t19 * qJD(3);
t96 = pkin(4) * t97;
t92 = t102 * t98;
t87 = t91 * qJD(4);
t86 = t90 * qJD(5);
t76 = pkin(4) * t81;
t69 = t102 * t82;
t63 = t67 * qJD(3);
t62 = t66 * qJD(3);
t39 = t41 * qJD(4);
t23 = t104 * t163 + t64 * t159 + t54;
t22 = t102 * t163 + t64 * t160 + t53;
t15 = t122 * t104 + t161 + t54;
t13 = t16 * qJD(4);
t12 = t123 + t53 - t128;
t7 = t73 + t35 + t146 / 0.2e1 + t149 / 0.2e1 + t105;
t2 = pkin(4) * t53 + (t52 + t93) * t155 / 0.2e1;
t8 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t63, t62, 0, 0, t92, t87, 0, -t92, 0, 0, t64 * t97 - t119, t64 * t98 + t55, -t24, t5 * qJD(3), t92, t87, 0, -t92, 0, 0, -t32 * qJD(4) - t119, t38 * qJD(4) + t55, -t24 + t86, t3 * qJD(3) + t4 * qJD(4) + t18 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t13; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t63 - t137, t62 + t138, 0, 0, t92, t87, 0, -t92, 0, 0, t22 * qJD(4) + t115, t23 * qJD(4) + t151, t152, t147 + (-t67 * pkin(3) - pkin(7) * t27) * qJD(3), t92, t87, 0, -t92, 0, 0, t12 * qJD(4) + t115, t15 * qJD(4) + t151, t152 + t86, t150 + (-t47 * t66 + t67 * t93) * qJD(3) + t2 * qJD(4) + t7 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t69, t164, t98, -t69, -t97, 0, t22 * qJD(3) - t65 * t98 + t121, t23 * qJD(3) + t65 * t97 + t120, 0, 0, t69, t164, t98, -t69, -t97, 0, t12 * qJD(3) - t139 - t141, t15 * qJD(3) + t44 * qJD(4) + t140, -t126, -pkin(4) * t139 + t2 * qJD(3) + t114; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t165, t7 * qJD(3) + t143; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t13; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t39; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t97, -t98, 0, 0, 0, 0, 0, 0, 0, 0, -t97, -t98, 0, -t110 - t96; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t137, -t138, 0, 0, t92, t87, 0, -t92, 0, 0, -t20 * qJD(4) + t57, -t21 * qJD(4) - t56, t142, -t147, t92, t87, 0, -t92, 0, 0, t11 * qJD(4) + t57, t14 * qJD(4) - t56, t142 + t86, t1 * qJD(4) - t6 * qJD(5) - t150; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t39; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t92, t87, 0, -t92, 0, 0, -pkin(3) * t97, -pkin(3) * t98, 0, 0, t92, t87, 0, -t92, 0, 0, -t68 * qJD(4), t75 * qJD(4), t86, t19 * qJD(4) + t47 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t69, t164, t98, -t69, -t97, 0, -pkin(7) * t98 - t108, pkin(7) * t97 - t107, 0, 0, t69, t164, t98, -t69, -t97, 0, t112 - t136, t83 * qJD(4) + t111, -t126, -pkin(4) * t136 + t106; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t165, t113; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t69, -t164, 0, t69, 0, 0, t20 * qJD(3) - t121, t21 * qJD(3) - t120, 0, 0, -t69, -t164, 0, t69, 0, 0, -t11 * qJD(3) - t133 + t141, -t14 * qJD(3) - t130 - t140, 0, -t1 * qJD(3) - t114 - t125; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t110; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t69, -t164, 0, t69, 0, 0, t108, t107, 0, 0, -t69, -t164, 0, t69, 0, 0, -t112 - t133, -t111 - t130, 0, -t106 - t125; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t81, -t82, 0, -t76; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t97, t98, -t165, t6 * qJD(3) - t143 + t96; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t97, t98, -t165, -t113 + t96; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t81, t82, 0, t76; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t8;
