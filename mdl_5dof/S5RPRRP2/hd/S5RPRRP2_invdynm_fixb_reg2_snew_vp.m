% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RPRRP2
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4,theta2]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2022-01-23 09:28
% Revision: fd3771346c4aea32fdeb66112c511235427c26a7 (2022-01-20)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RPRRP2_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRP2_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRP2_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPRRP2_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPRRP2_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPRRP2_invdynm_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2022-01-23 09:28:20
% EndTime: 2022-01-23 09:28:28
% DurationCPUTime: 7.87s
% Computational Cost: add. (27120->422), mult. (41233->528), div. (0->0), fcn. (22674->8), ass. (0->317)
t816 = qJD(1) + qJD(3);
t814 = t816 ^ 2;
t827 = cos(qJ(3));
t815 = qJDD(1) + qJDD(3);
t824 = sin(qJ(3));
t889 = t824 * t815;
t771 = t827 * t814 + t889;
t882 = t827 * t815;
t774 = t824 * t814 - t882;
t821 = sin(pkin(8));
t822 = cos(pkin(8));
t714 = t822 * t771 - t821 * t774;
t819 = g(3) - qJDD(2);
t749 = pkin(6) * t771 - t827 * t819;
t928 = pkin(6) * t774 - t824 * t819;
t661 = qJ(2) * t714 + t822 * t749 - t821 * t928;
t825 = sin(qJ(1));
t828 = cos(qJ(1));
t718 = t821 * t771 + t822 * t774;
t927 = t828 * t714 - t825 * t718;
t934 = qJ(2) * t718 + t821 * t749 + t822 * t928;
t944 = pkin(5) * t927 + t828 * t661 - t825 * t934;
t935 = t825 * t714 + t828 * t718;
t943 = pkin(5) * t935 + t825 * t661 + t828 * t934;
t796 = t828 * g(1) + t825 * g(2);
t830 = qJD(1) ^ 2;
t837 = t830 * pkin(1) + t796;
t795 = t825 * g(1) - t828 * g(2);
t841 = qJDD(1) * pkin(1) + t795;
t726 = t821 * t841 - t822 * t837;
t723 = -t830 * pkin(2) + t726;
t833 = t821 * t837 + t822 * t841;
t832 = qJDD(1) * pkin(2) + t833;
t680 = t824 * t723 - t827 * t832;
t681 = t827 * t723 + t824 * t832;
t861 = t824 * t680 + t827 * t681;
t622 = t827 * t680 - t824 * t681;
t894 = t822 * t622;
t573 = -t821 * t861 + t894;
t895 = t821 * t622;
t929 = t822 * t861 + t895;
t941 = t825 * t573 + t828 * t929;
t940 = t828 * t573 - t825 * t929;
t860 = t822 * t726 - t821 * t833;
t685 = -t821 * t726 - t822 * t833;
t880 = t828 * t685;
t931 = -t825 * t860 + t880;
t887 = t825 * t685;
t930 = t828 * t860 + t887;
t823 = sin(qJ(4));
t826 = cos(qJ(4));
t794 = t826 * t814 * t823;
t782 = qJDD(4) + t794;
t910 = pkin(4) * t782;
t784 = t821 * qJDD(1) + t822 * t830;
t753 = qJ(2) * t784 - t822 * t819;
t785 = t822 * qJDD(1) - t821 * t830;
t843 = -qJ(2) * t785 - t821 * t819;
t916 = t828 * t784 + t825 * t785;
t926 = pkin(5) * t916 + t828 * t753 - t825 * t843;
t732 = -t825 * t784 + t828 * t785;
t925 = -pkin(5) * t732 + t825 * t753 + t828 * t843;
t809 = t826 * t819;
t671 = -t814 * pkin(3) + t815 * pkin(7) + t681;
t892 = t823 * t671;
t652 = t809 + t892;
t653 = t826 * t671 - t823 * t819;
t601 = t823 * t652 + t826 * t653;
t914 = pkin(1) * t819;
t770 = t826 * t782;
t818 = t826 ^ 2;
t807 = t818 * t814;
t829 = qJD(4) ^ 2;
t792 = -t807 - t829;
t735 = t823 * t792 + t770;
t913 = pkin(3) * t735;
t817 = t823 ^ 2;
t896 = t817 * t814;
t790 = -t829 - t896;
t783 = qJDD(4) - t794;
t890 = t823 * t783;
t737 = t826 * t790 - t890;
t912 = pkin(3) * t737;
t874 = qJD(4) * t816;
t802 = t826 * t874;
t805 = t823 * t815;
t765 = t805 + t802;
t838 = t809 + (t765 - t802) * qJ(5) - t910;
t873 = (qJD(5) * t816);
t857 = t671 + (2 * t873);
t627 = t857 * t823 + t838;
t911 = pkin(4) * t627;
t891 = t823 * t782;
t739 = t826 * t792 - t891;
t801 = t823 * t874;
t806 = t826 * t815;
t767 = t806 - 0.2e1 * t801;
t695 = t824 * t739 + t827 * t767;
t697 = t827 * t739 - t824 * t767;
t646 = t822 * t695 + t821 * t697;
t648 = -t821 * t695 + t822 * t697;
t909 = pkin(5) * (t828 * t646 + t825 * t648);
t883 = t826 * t783;
t741 = -t823 * t790 - t883;
t764 = t805 + 0.2e1 * t802;
t696 = t824 * t741 - t827 * t764;
t698 = t827 * t741 + t824 * t764;
t647 = t822 * t696 + t821 * t698;
t649 = -t821 * t696 + t822 * t698;
t908 = pkin(5) * (t828 * t647 + t825 * t649);
t875 = t817 + t818;
t769 = t875 * t815;
t775 = t807 + t896;
t720 = t824 * t769 + t827 * t775;
t721 = t827 * t769 - t824 * t775;
t676 = t822 * t720 + t821 * t721;
t677 = -t821 * t720 + t822 * t721;
t907 = pkin(5) * (t828 * t676 + t825 * t677);
t905 = pkin(6) * t695;
t904 = pkin(6) * t696;
t903 = pkin(6) * t720;
t902 = pkin(7) * t735;
t901 = pkin(7) * t737;
t900 = qJ(2) * t646;
t899 = qJ(2) * t647;
t898 = qJ(2) * t676;
t897 = t816 * t823;
t893 = t823 * t627;
t670 = -t815 * pkin(3) - t814 * pkin(7) + t680;
t666 = t823 * t670;
t884 = t826 * t627;
t667 = t826 * t670;
t879 = -pkin(3) * t670 + pkin(7) * t601;
t878 = pkin(3) * t767 + pkin(7) * t739;
t877 = -pkin(3) * t764 + pkin(7) * t741;
t876 = pkin(3) * t775 + pkin(7) * t769;
t872 = pkin(4) * t805;
t871 = t823 * t889;
t870 = t823 * t882;
t869 = t666 + t877;
t868 = -t667 + t878;
t584 = t824 * t601 - t827 * t670;
t867 = pkin(2) * t584 + t879;
t866 = t826 * t873;
t865 = -pkin(1) * t735 + qJ(2) * t648;
t864 = -pkin(1) * t737 + qJ(2) * t649;
t863 = -pkin(2) * t735 + pkin(6) * t697;
t862 = -pkin(2) * t737 + pkin(6) * t698;
t858 = -t825 * t795 - t828 * t796;
t856 = t824 * t794;
t855 = t827 * t794;
t799 = 0.2e1 * t866;
t766 = t806 - t801;
t781 = qJD(4) * pkin(4) - qJ(5) * t897;
t844 = pkin(4) * t807 - t766 * qJ(5) + qJD(4) * t781 - t653;
t628 = t799 - t844;
t614 = pkin(4) * t775 + qJ(5) * t806 + t628;
t625 = (qJ(5) * t815 + t857) * t823 + t838;
t854 = t826 * t614 + t823 * t625 + t876;
t631 = -t766 * pkin(4) - qJ(5) * t807 + t781 * t897 + qJDD(5) + t670;
t629 = -qJ(5) * t790 + t631;
t727 = -pkin(4) * t764 - qJ(5) * t783;
t853 = t823 * t629 + t826 * t727 + t877;
t852 = t876 + t601;
t694 = pkin(2) * t696;
t851 = t694 + t869;
t693 = pkin(2) * t695;
t850 = t693 + t868;
t787 = t828 * qJDD(1) - t825 * t830;
t849 = -pkin(5) * t787 - t825 * g(3);
t848 = -pkin(2) * t774 - t680;
t713 = pkin(2) * t720;
t847 = t713 + t854;
t846 = t694 + t853;
t845 = t713 + t852;
t600 = t826 * t652 - t823 * t653;
t842 = t828 * t795 - t825 * t796;
t583 = t826 * t628 + t893;
t587 = -pkin(4) * t631 + qJ(5) * t628;
t840 = -pkin(3) * t631 + pkin(7) * t583 + qJ(5) * t893 + t826 * t587;
t619 = pkin(4) * t767 + qJ(5) * t792 - t631;
t839 = -qJ(5) * t891 + t826 * t619 + t878;
t836 = pkin(4) * t790 + t844;
t562 = t824 * t583 - t827 * t631;
t835 = pkin(2) * t562 + t840;
t834 = t693 + t839;
t831 = -pkin(2) * t771 - t681;
t791 = t807 - t829;
t789 = t829 - t896;
t786 = t825 * qJDD(1) + t828 * t830;
t776 = -t807 + t896;
t760 = -pkin(5) * t786 + t828 * g(3);
t759 = t875 * t874;
t745 = t824 * qJDD(4) + t827 * t759;
t744 = -t827 * qJDD(4) + t824 * t759;
t743 = t826 * t765 - t817 * t874;
t742 = -t823 * t766 - t818 * t874;
t740 = -t823 * t789 + t770;
t738 = t826 * t791 - t890;
t736 = t826 * t789 + t891;
t734 = t823 * t791 + t883;
t729 = (t765 + t802) * t823;
t728 = (t766 - t801) * t826;
t712 = pkin(6) * t721;
t710 = -t823 * t764 + t826 * t767;
t709 = t826 * t764 + t823 * t767;
t708 = t827 * t740 + t871;
t707 = t827 * t738 + t824 * t806;
t706 = t824 * t740 - t870;
t705 = t824 * t738 - t826 * t882;
t704 = t827 * t743 - t856;
t703 = t827 * t742 + t856;
t702 = t824 * t743 + t855;
t701 = t824 * t742 - t855;
t700 = pkin(1) * t785 + t833;
t699 = -pkin(1) * t784 - t726;
t690 = -t821 * t744 + t822 * t745;
t689 = t822 * t744 + t821 * t745;
t688 = t827 * t710 + t824 * t776;
t687 = t824 * t710 - t827 * t776;
t682 = pkin(1) * t685;
t679 = qJ(2) * t860 + t914;
t673 = pkin(1) * t676;
t672 = qJ(2) * t677;
t665 = -t821 * t706 + t822 * t708;
t664 = -t821 * t705 + t822 * t707;
t663 = t822 * t706 + t821 * t708;
t662 = t822 * t705 + t821 * t707;
t657 = -t821 * t702 + t822 * t704;
t656 = -t821 * t701 + t822 * t703;
t655 = t822 * t702 + t821 * t704;
t654 = t822 * t701 + t821 * t703;
t645 = pkin(1) * t647;
t644 = pkin(1) * t646;
t641 = t667 - t901;
t640 = t666 - t902;
t639 = -t825 * t689 + t828 * t690;
t638 = t828 * t689 + t825 * t690;
t637 = t653 - t912;
t636 = t652 - t913;
t635 = -t821 * t687 + t822 * t688;
t634 = t822 * t687 + t821 * t688;
t633 = -pkin(1) * t718 + t848;
t632 = -pkin(1) * t714 + t831;
t618 = pkin(2) * t622;
t615 = pkin(2) * t819 + pkin(6) * t861;
t613 = pkin(5) * (-t825 * t676 + t828 * t677);
t611 = t799 - t836 - t912;
t610 = t627 - t910 - t913;
t609 = -t825 * t663 + t828 * t665;
t608 = -t825 * t662 + t828 * t664;
t607 = t828 * t663 + t825 * t665;
t606 = t828 * t662 + t825 * t664;
t605 = -t825 * t655 + t828 * t657;
t604 = -t825 * t654 + t828 * t656;
t603 = t828 * t655 + t825 * t657;
t602 = t828 * t654 + t825 * t656;
t597 = -qJ(5) * t770 - t823 * t619 - t902;
t596 = t826 * t629 - t823 * t727 - t901;
t593 = pkin(5) * (-t825 * t647 + t828 * t649);
t592 = pkin(5) * (-t825 * t646 + t828 * t648);
t591 = t827 * t600 - t903;
t590 = t824 * t600 + t712;
t589 = -t825 * t634 + t828 * t635;
t588 = t828 * t634 + t825 * t635;
t585 = t827 * t601 + t824 * t670;
t582 = t823 * t628 - t884;
t579 = t645 + t851;
t578 = t644 + t850;
t577 = -t824 * t637 + t827 * t641 - t904;
t576 = -t824 * t636 + t827 * t640 - t905;
t575 = -t823 * t614 + t826 * t625;
t570 = t827 * t637 + t824 * t641 + t862;
t569 = t827 * t636 + t824 * t640 + t863;
t568 = t673 + t845;
t567 = -pkin(4) * t871 + t827 * t575 - t903;
t566 = pkin(4) * t870 + t824 * t575 + t712;
t565 = t644 + t834;
t564 = t645 + t846;
t563 = t827 * t583 + t824 * t631;
t560 = -pkin(3) * t582 + t911;
t559 = t827 * t596 - t824 * t611 - t904;
t558 = t827 * t597 - t824 * t610 - t905;
t557 = t673 + t847;
t556 = t824 * t596 + t827 * t611 + t862;
t555 = t824 * t597 + t827 * t610 + t863;
t554 = -pkin(1) * t573 - t618;
t553 = -t821 * t590 + t822 * t591 - t898;
t552 = t822 * t590 + t821 * t591 + t672;
t551 = -t821 * t584 + t822 * t585;
t550 = t822 * t584 + t821 * t585;
t549 = pkin(6) * t894 + qJ(2) * t573 - t821 * t615;
t548 = pkin(6) * t895 + qJ(2) * t929 + t822 * t615 + t914;
t547 = -pkin(6) * t584 - (pkin(3) * t824 - pkin(7) * t827) * t600;
t546 = -pkin(7) * t582 + qJ(5) * t884 - t823 * t587;
t545 = -t821 * t570 + t822 * t577 - t899;
t544 = -t821 * t569 + t822 * t576 - t900;
t543 = t822 * t570 + t821 * t577 + t864;
t542 = t822 * t569 + t821 * t576 + t865;
t541 = -t821 * t566 + t822 * t567 - t898;
t540 = t822 * t566 + t821 * t567 + t672;
t539 = -t821 * t562 + t822 * t563;
t538 = t822 * t562 + t821 * t563;
t537 = pkin(6) * t585 - (-pkin(3) * t827 - pkin(7) * t824 - pkin(2)) * t600;
t536 = -t821 * t556 + t822 * t559 - t899;
t535 = -t821 * t555 + t822 * t558 - t900;
t534 = t822 * t556 + t821 * t559 + t864;
t533 = t822 * t555 + t821 * t558 + t865;
t532 = pkin(1) * t550 + t867;
t531 = -pkin(6) * t562 + t827 * t546 - t824 * t560;
t530 = -pkin(2) * t582 + pkin(6) * t563 + t824 * t546 + t827 * t560;
t529 = pkin(1) * t538 + t835;
t528 = -qJ(2) * t550 - t821 * t537 + t822 * t547;
t527 = pkin(1) * t600 + qJ(2) * t551 + t822 * t537 + t821 * t547;
t526 = -qJ(2) * t538 - t821 * t530 + t822 * t531;
t525 = -pkin(1) * t582 + qJ(2) * t539 + t822 * t530 + t821 * t531;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t787, 0, -t786, 0, t849, -t760, -t842, -pkin(5) * t842, 0, 0, t732, 0, -t916, 0, t925, t926, t931, pkin(5) * t931 + qJ(2) * t880 - t825 * t679, 0, 0, -t935, 0, -t927, 0, t943, t944, t940, pkin(5) * t940 - t825 * t548 + t828 * t549, t605, t589, t609, t604, t608, t639, -t825 * t542 + t828 * t544 - t909, -t825 * t543 + t828 * t545 - t908, -t825 * t552 + t828 * t553 - t907, t828 * t528 - t825 * t527 - pkin(5) * (t828 * t550 + t825 * t551), t605, t589, t609, t604, t608, t639, -t825 * t533 + t828 * t535 - t909, -t825 * t534 + t828 * t536 - t908, -t825 * t540 + t828 * t541 - t907, t828 * t526 - t825 * t525 - pkin(5) * (t828 * t538 + t825 * t539); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t786, 0, t787, 0, t760, t849, t858, pkin(5) * t858, 0, 0, t916, 0, t732, 0, -t926, t925, t930, pkin(5) * t930 + qJ(2) * t887 + t828 * t679, 0, 0, t927, 0, -t935, 0, -t944, t943, t941, pkin(5) * t941 + t828 * t548 + t825 * t549, t603, t588, t607, t602, t606, t638, t828 * t542 + t825 * t544 + t592, t828 * t543 + t825 * t545 + t593, t828 * t552 + t825 * t553 + t613, t825 * t528 + t828 * t527 + pkin(5) * (-t825 * t550 + t828 * t551), t603, t588, t607, t602, t606, t638, t828 * t533 + t825 * t535 + t592, t828 * t534 + t825 * t536 + t593, t828 * t540 + t825 * t541 + t613, t825 * t526 + t828 * t525 + pkin(5) * (-t825 * t538 + t828 * t539); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t795, t796, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t700, t699, 0, -t682, 0, 0, 0, 0, 0, t815, t633, t632, 0, t554, t729, t709, t736, t728, t734, 0, t578, t579, t568, t532, t729, t709, t736, t728, t734, 0, t565, t564, t557, t529; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t830, 0, 0, -g(3), -t795, 0, 0, 0, t785, 0, -t784, 0, t843, t753, t685, qJ(2) * t685, 0, 0, -t718, 0, -t714, 0, t934, t661, t573, t549, t657, t635, t665, t656, t664, t690, t544, t545, t553, t528, t657, t635, t665, t656, t664, t690, t535, t536, t541, t526; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t830, 0, qJDD(1), 0, g(3), 0, -t796, 0, 0, 0, t784, 0, t785, 0, -t753, t843, t860, t679, 0, 0, t714, 0, -t718, 0, -t661, t934, t929, t548, t655, t634, t663, t654, t662, t689, t542, t543, t552, t527, t655, t634, t663, t654, t662, t689, t533, t534, t540, t525; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t795, t796, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t700, t699, 0, -t682, 0, 0, 0, 0, 0, t815, t633, t632, 0, t554, t729, t709, t736, t728, t734, 0, t578, t579, t568, t532, t729, t709, t736, t728, t734, 0, t565, t564, t557, t529; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t830, 0, 0, -t819, -t833, 0, 0, 0, -t774, 0, -t771, 0, t928, t749, t622, pkin(6) * t622, t704, t688, t708, t703, t707, t745, t576, t577, t591, t547, t704, t688, t708, t703, t707, t745, t558, t559, t567, t531; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t830, 0, qJDD(1), 0, t819, 0, t726, 0, 0, 0, t771, 0, -t774, 0, -t749, t928, t861, t615, t702, t687, t706, t701, t705, t744, t569, t570, t590, t537, t702, t687, t706, t701, t705, t744, t555, t556, t566, t530; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t833, -t726, 0, 0, 0, 0, 0, 0, 0, t815, t848, t831, 0, -t618, t729, t709, t736, t728, t734, 0, t850, t851, t845, t867, t729, t709, t736, t728, t734, 0, t834, t846, t847, t835; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t815, 0, -t814, 0, 0, -t819, t680, 0, t743, t710, t740, t742, t738, t759, t640, t641, t600, pkin(7) * t600, t743, t710, t740, t742, t738, t759, t597, t596, t575, t546; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t814, 0, t815, 0, t819, 0, t681, 0, t794, -t776, -t805, -t794, -t806, -qJDD(4), t636, t637, 0, pkin(3) * t600, t794, -t776, -t805, -t794, -t806, -qJDD(4), t610, t611, t872, t560; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t815, -t680, -t681, 0, 0, t729, t709, t736, t728, t734, 0, t868, t869, t852, t879, t729, t709, t736, t728, t734, 0, t839, t853, t854, t840; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t765, t767, t782, -t802, t791, t802, 0, t670, t652, 0, t765, t767, t782, -t802, t791, t802, -qJ(5) * t782, t629, t625, qJ(5) * t627; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t801, t764, t789, t766, t783, -t801, -t670, 0, t653, 0, t801, t764, t789, t766, t783, -t801, t619, t727, t614, t587; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t794, t776, t805, t794, t806, qJDD(4), -t652, -t653, 0, 0, -t794, t776, t805, t794, t806, qJDD(4), -0.2e1 * t823 * t873 - t838 - t892 + t910, t836 - 0.2e1 * t866, -t872, -t911; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t765, t767, t782, -t802, t791, t802, 0, t631, t627, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t801, t764, t789, t766, t783, -t801, -t631, 0, t628, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t794, t776, t805, t794, t806, qJDD(4), -t627, -t628, 0, 0;];
m_new_reg = t1;
