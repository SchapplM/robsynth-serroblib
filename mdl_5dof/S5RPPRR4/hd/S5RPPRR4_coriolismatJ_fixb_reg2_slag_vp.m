% Calculate inertial parameters regressor of coriolis matrix for
% S5RPPRR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d4,d5,theta2,theta3]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2022-01-23 09:17
% Revision: fd3771346c4aea32fdeb66112c511235427c26a7 (2022-01-20)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPPRR4_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPPRR4_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPPRR4_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RPPRR4_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2022-01-23 09:17:03
% EndTime: 2022-01-23 09:17:09
% DurationCPUTime: 4.25s
% Computational Cost: add. (7333->262), mult. (15785->371), div. (0->0), fcn. (17370->8), ass. (0->235)
t215 = sin(pkin(9));
t343 = sin(qJ(4));
t259 = t343 * t215;
t217 = cos(pkin(9));
t345 = cos(qJ(4));
t262 = t345 * t217;
t195 = t259 - t262;
t258 = t343 * t217;
t263 = t345 * t215;
t196 = t263 + t258;
t219 = sin(qJ(5));
t344 = cos(qJ(5));
t248 = t344 * t195 + t219 * t196;
t380 = qJD(4) + qJD(5);
t218 = cos(pkin(8));
t182 = t195 * t218;
t260 = t344 * t182;
t179 = t196 * t218;
t320 = t219 * t179;
t230 = t320 / 0.2e1 + t260 / 0.2e1;
t366 = t248 * t218;
t374 = t366 / 0.2e1 + t230;
t382 = t374 * qJD(1);
t389 = t380 * t248 - t382;
t159 = -t219 * t195 + t344 * t196;
t261 = t344 * t179;
t319 = t219 * t182;
t229 = t319 / 0.2e1 - t261 / 0.2e1;
t367 = t159 * t218;
t373 = -t367 / 0.2e1 + t229;
t383 = t373 * qJD(1);
t388 = -t159 * t380 - t383;
t341 = t218 * pkin(4);
t216 = sin(pkin(8));
t264 = -pkin(2) * t218 - pkin(1);
t232 = (-pkin(6) - qJ(3)) * t216 + t264;
t322 = t215 * qJ(2);
t223 = (-pkin(3) - t322) * t218 + t232 * t217;
t265 = t217 * t218 * qJ(2);
t224 = t232 * t215 + t265;
t103 = -t345 * t223 + t343 * t224;
t180 = t195 * t216;
t74 = t180 * pkin(7) - t103;
t222 = t74 - t341;
t221 = t219 * t222;
t104 = t343 * t223 + t345 * t224;
t177 = t196 * t216;
t75 = -t177 * pkin(7) + t104;
t266 = t344 * t75;
t41 = t266 + t221;
t337 = t219 * t74;
t42 = -t266 - t337;
t387 = t41 + t42;
t372 = t367 / 0.2e1 + t229;
t386 = qJD(2) * t372;
t385 = qJD(2) * t373;
t375 = -t366 / 0.2e1 + t230;
t384 = qJD(2) * t375;
t174 = t344 * t180;
t321 = t219 * t177;
t360 = -t174 - t321;
t330 = t360 ^ 2;
t129 = t344 * t177 - t219 * t180;
t331 = t129 ^ 2;
t377 = -t330 + t331;
t381 = t377 * qJD(1);
t284 = t129 * qJD(3);
t379 = qJD(2) * t374 + t284;
t336 = t219 * t75;
t64 = t344 * t222;
t40 = -t64 + t336;
t267 = t344 * t74;
t43 = t267 - t336;
t378 = t40 + t43;
t351 = -t159 / 0.2e1;
t288 = t360 * qJD(1);
t370 = t129 * t288;
t197 = (pkin(3) * t215 + qJ(2)) * t216;
t155 = t177 * pkin(4) + t197;
t369 = t155 * t129;
t368 = t155 * t360;
t365 = qJD(1) * t129;
t364 = qJD(4) * t129;
t363 = t129 * qJD(5);
t355 = t217 ^ 2;
t356 = t215 ^ 2;
t359 = t355 + t356;
t357 = t180 ^ 2;
t354 = -t360 / 0.2e1;
t242 = -t174 / 0.2e1;
t350 = -t195 / 0.2e1;
t349 = -t196 / 0.2e1;
t347 = t216 / 0.2e1;
t346 = t219 / 0.2e1;
t342 = t180 * pkin(4);
t340 = t219 * pkin(4);
t25 = (t351 + t159 / 0.2e1) * t360;
t339 = t25 * qJD(4);
t338 = pkin(4) * qJD(4);
t7 = -t155 * t342 - t40 * t42 + t41 * t43;
t335 = t7 * qJD(1);
t131 = -t261 + t319;
t134 = -t260 - t320;
t9 = -t40 * t131 + t41 * t134 + t155 * t216;
t334 = t9 * qJD(1);
t10 = -t129 * t41 + t360 * t40;
t333 = t10 * qJD(1);
t268 = t341 / 0.2e1;
t220 = -t221 / 0.2e1 + t219 * t268;
t13 = t337 / 0.2e1 + t220;
t332 = t13 * qJD(1);
t234 = -t64 / 0.2e1 + t344 * t268;
t15 = t267 / 0.2e1 + t234;
t329 = t15 * qJD(1);
t20 = t129 * t342 + t42 * t218 - t368;
t324 = t20 * qJD(1);
t21 = t43 * t218 - t342 * t360 - t369;
t323 = t21 * qJD(1);
t318 = t25 * qJD(1);
t27 = -t40 * t218 - t369;
t317 = t27 * qJD(1);
t28 = -t41 * t218 - t368;
t316 = t28 * qJD(1);
t39 = t103 * t179 - t104 * t182 + t197 * t216;
t315 = t39 * qJD(1);
t44 = -t103 * t180 - t104 * t177;
t314 = t44 * qJD(1);
t45 = t330 + t331;
t313 = t45 * qJD(1);
t47 = -t134 * t129 - t131 * t360;
t311 = t47 * qJD(1);
t236 = -t129 * t351 + t248 * t354;
t49 = t347 + t236;
t310 = t49 * qJD(1);
t231 = -t129 * t346 + t344 * t354;
t56 = (t180 / 0.2e1 + t231) * pkin(4);
t308 = t56 * qJD(1);
t58 = -t103 * t218 - t197 * t177;
t307 = t58 * qJD(1);
t59 = -t104 * t218 + t197 * t180;
t306 = t59 * qJD(1);
t66 = -t216 * t129 + t131 * t218;
t305 = t66 * qJD(1);
t67 = t134 * t218 + t216 * t360;
t304 = t67 * qJD(1);
t213 = t216 ^ 2;
t206 = t218 ^ 2 + t213;
t299 = qJD(1) * t218;
t101 = t182 * t177 - t179 * t180;
t298 = t101 * qJD(1);
t235 = -t177 * t349 - t180 * t350;
t105 = t347 + t235;
t297 = t105 * qJD(1);
t108 = 0.2e1 * t242 - t321;
t295 = t108 * qJD(1);
t237 = -t216 * qJ(3) + t264;
t170 = t217 * t237 - t218 * t322;
t171 = t215 * t237 + t265;
t109 = t213 * qJ(2) + (-t170 * t215 + t171 * t217) * t218;
t294 = t109 * qJD(1);
t110 = (t170 * t217 + t171 * t215) * t216;
t293 = t110 * qJD(1);
t176 = t177 ^ 2;
t111 = t176 - t357;
t292 = t111 * qJD(1);
t124 = t242 + t174 / 0.2e1;
t291 = t124 * qJD(1);
t125 = -t216 * t177 - t179 * t218;
t290 = t125 * qJD(1);
t126 = -t216 * t180 - t182 * t218;
t289 = t126 * qJD(1);
t287 = t360 * qJD(3);
t286 = t360 * qJD(4);
t135 = t176 + t357;
t283 = t135 * qJD(1);
t227 = -t258 / 0.2e1 - t263 / 0.2e1;
t143 = (t349 + t227) * t218;
t282 = t143 * qJD(1);
t228 = -t262 / 0.2e1 + t259 / 0.2e1;
t144 = (t195 / 0.2e1 + t228) * t218;
t281 = t144 * qJD(1);
t280 = t177 * qJD(1);
t279 = t177 * qJD(3);
t278 = t177 * qJD(4);
t277 = t180 * qJD(1);
t276 = t180 * qJD(3);
t275 = t180 * qJD(4);
t183 = (0.1e1 / 0.2e1 + t356 / 0.2e1 + t355 / 0.2e1) * t216;
t274 = t183 * qJD(1);
t192 = t359 * t213;
t273 = t192 * qJD(1);
t193 = t206 * t215;
t272 = t193 * qJD(1);
t194 = t206 * t217;
t271 = t194 * qJD(1);
t202 = t206 * qJ(2);
t270 = t202 * qJD(1);
t269 = t206 * qJD(1);
t257 = t216 * t299;
t256 = qJD(3) * t216 * t218;
t253 = t360 * t365;
t252 = t177 * t277;
t251 = t177 * t275;
t250 = t344 * qJD(4);
t249 = t344 * qJD(5);
t162 = t218 * t277;
t247 = t162 - t275;
t121 = t218 * t288;
t246 = t124 * qJD(5) + t121;
t245 = -qJD(5) + t299;
t244 = t215 * t257;
t243 = t217 * t257;
t225 = t378 * t351 + t387 * t248 / 0.2e1;
t226 = (t134 * t346 + t131 * t344 / 0.2e1) * pkin(4);
t1 = t226 + t225;
t241 = t1 * qJD(1);
t4 = -t378 * t129 - t387 * t360;
t240 = t4 * qJD(1) + t25 * qJD(2);
t239 = qJD(5) * t360 + t286;
t238 = -t363 - t364;
t233 = t108 * qJD(5) - t121 + t286;
t184 = t347 - t359 * t216 / 0.2e1;
t161 = t218 * t280;
t146 = (t196 / 0.2e1 + t227) * t218;
t145 = (t228 + t350) * t218;
t127 = t161 - t278;
t106 = t347 - t235;
t65 = t218 * t365;
t57 = -t342 / 0.2e1 + t231 * pkin(4);
t50 = t347 - t236;
t48 = -t363 - (qJD(4) - t299) * t129;
t16 = t336 - t267 / 0.2e1 + t234;
t14 = -t266 - t337 / 0.2e1 + t220;
t2 = t226 - t225;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t206 * qJD(2), t202 * qJD(2), 0, 0, 0, 0, 0, 0, t193 * qJD(2) + t217 * t256, t194 * qJD(2) - t215 * t256, t192 * qJD(3), t109 * qJD(2) - t110 * qJD(3), t251, t111 * qJD(4), t218 * t278, -t251, -t218 * t275, 0, -t125 * qJD(2) - t59 * qJD(4) - t218 * t276, t126 * qJD(2) + t58 * qJD(4) - t218 * t279, t101 * qJD(2) + t135 * qJD(3), t39 * qJD(2) + t44 * qJD(3), t238 * t360, t380 * t377, -t238 * t218, t239 * t129, t239 * t218, 0, -t66 * qJD(2) - t20 * qJD(4) - t28 * qJD(5) + t218 * t287, t67 * qJD(2) + t21 * qJD(4) + t27 * qJD(5) - t218 * t284, t47 * qJD(2) + t45 * qJD(3) + t4 * qJD(4), t9 * qJD(2) + t10 * qJD(3) + t7 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t269, t270, 0, 0, 0, 0, 0, 0, t272, t271, 0, t184 * qJD(3) + t294, 0, 0, 0, 0, 0, 0, t146 * qJD(4) - t290, t145 * qJD(4) + t289, t298, t315 + (t179 * t195 - t182 * t196) * qJD(2) + t106 * qJD(3), 0, 0, 0, 0, 0, 0, t380 * t372 - t305, t380 * t375 + t304, t311 + t339, t334 + (-t131 * t248 + t134 * t159) * qJD(2) + t50 * qJD(3) + t2 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t243, -t244, t273, t184 * qJD(2) - t293, 0, 0, 0, 0, 0, 0, -t162, -t161, t283, t106 * qJD(2) + t314, 0, 0, 0, 0, 0, 0, t246, -t65, t313, t50 * qJD(2) + t57 * qJD(4) + t333; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t252, t292, t127, -t252, -t247, 0, t146 * qJD(2) - t104 * qJD(4) - t306, t145 * qJD(2) + t103 * qJD(4) + t307, 0, 0, -t253, t381, t48, t370, -t233, 0, t42 * qJD(4) + t14 * qJD(5) - t324 + t386, -t43 * qJD(4) + t16 * qJD(5) + t323 + t384, (t129 * t344 - t219 * t360) * t338 + t240, t335 + t2 * qJD(2) + t57 * qJD(3) + (t219 * t43 + t344 * t42) * t338; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t370, t381, t129 * t245 - t364, t370, -t108 * qJD(4) + t245 * t360, 0, t124 * qJD(3) + t14 * qJD(4) - t41 * qJD(5) - t316 + t386, t16 * qJD(4) + t40 * qJD(5) + t317 + t384, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t269, -t270, 0, 0, 0, 0, 0, 0, -t272, -t271, 0, -t183 * qJD(3) - t294, 0, 0, 0, 0, 0, 0, -t143 * qJD(4) + t290, -t144 * qJD(4) - t289, -t298, -t105 * qJD(3) - t315, 0, 0, 0, 0, 0, 0, -t380 * t373 + t305, -t380 * t374 - t304, -t311 + t339, -t49 * qJD(3) - t1 * qJD(4) - t334; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t274, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t297, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t310; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t196 * qJD(4) - t282, t195 * qJD(4) - t281, 0, 0, 0, 0, 0, 0, 0, 0, t388, t389, t318, (-t159 * t344 - t219 * t248) * t338 - t241; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t388, t389, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t243, t244, -t273, t183 * qJD(2) + t293, 0, 0, 0, 0, 0, 0, t247, t127, -t283, t105 * qJD(2) - t314, 0, 0, 0, 0, 0, 0, t233, t48, -t313, t49 * qJD(2) - t56 * qJD(4) - t333; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t274, 0, 0, 0, 0, 0, 0, 0, 0, 0, t297, 0, 0, 0, 0, 0, 0, 0, 0, 0, t310; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t277, -t280, 0, 0, 0, 0, 0, 0, 0, 0, t288, -t365, 0, -t308; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t295, -t365, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t252, -t292, -t161, t252, t162, 0, t143 * qJD(2) + t276 + t306, t144 * qJD(2) + t279 - t307, 0, 0, t253, -t381, -t65, -t370, -t246, 0, t13 * qJD(5) - t287 + t324 + t385, t15 * qJD(5) - t323 + t379, -t240, t1 * qJD(2) + t56 * qJD(3) - t335; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t282, t281, 0, 0, 0, 0, 0, 0, 0, 0, t383, t382, -t318, t241; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t277, t280, 0, 0, 0, 0, 0, 0, 0, 0, -t288, t365, 0, t308; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(5) * t340, -pkin(4) * t249, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t291, 0, -t340 * t380 + t332, t329 + (-t250 - t249) * pkin(4), 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t370, -t381, -t129 * t299, -t370, t124 * qJD(4) - t299 * t360, 0, -t108 * qJD(3) - t13 * qJD(4) + t316 + t385, -t15 * qJD(4) - t317 + t379, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t383, t382, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t295, t365, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t291, 0, t219 * t338 - t332, pkin(4) * t250 - t329, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t3;
