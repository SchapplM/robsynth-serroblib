% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RPPRR4
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d4,d5,theta2,theta3]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2022-01-23 09:17
% Revision: fd3771346c4aea32fdeb66112c511235427c26a7 (2022-01-20)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RPPRR4_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPPRR4_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPPRR4_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPPRR4_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPPRR4_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RPPRR4_invdynm_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2022-01-23 09:17:21
% EndTime: 2022-01-23 09:17:37
% DurationCPUTime: 16.99s
% Computational Cost: add. (106460->710), mult. (296661->996), div. (0->0), fcn. (211029->10), ass. (0->494)
t1193 = sin(qJ(5));
t1190 = sin(pkin(8));
t1189 = sin(pkin(9));
t1191 = cos(pkin(9));
t1194 = sin(qJ(4));
t1197 = cos(qJ(4));
t1228 = t1189 * t1197 + t1191 * t1194;
t1218 = t1228 * t1190;
t1131 = qJD(1) * t1218;
t1280 = t1190 * t1191;
t1283 = t1189 * t1190;
t1132 = (-t1194 * t1283 + t1197 * t1280) * qJD(1);
t1196 = cos(qJ(5));
t1079 = t1196 * t1131 + t1193 * t1132;
t1081 = -t1193 * t1131 + t1196 * t1132;
t1024 = t1081 * t1079;
t1192 = cos(pkin(8));
t1262 = t1192 * qJDD(1);
t1176 = -qJDD(4) + t1262;
t1166 = -qJDD(5) + t1176;
t1315 = -t1024 - t1166;
t1321 = t1193 * t1315;
t1092 = t1132 * t1131;
t1312 = -t1092 - t1176;
t1320 = t1194 * t1312;
t1319 = t1196 * t1315;
t1318 = t1197 * t1312;
t1195 = sin(qJ(1));
t1198 = cos(qJ(1));
t1167 = t1195 * g(1) - t1198 * g(2);
t1199 = qJD(1) ^ 2;
t1217 = -t1199 * qJ(2) + qJDD(2) - t1167;
t1305 = pkin(2) * t1192;
t1232 = -qJ(3) * t1190 - t1305;
t1227 = -pkin(1) + t1232;
t1317 = -0.2e1 * qJD(1) * qJD(3) * t1190 + qJDD(1) * t1227 + t1217;
t1273 = t1192 * t1199;
t1275 = t1192 * qJD(1);
t1177 = -qJD(4) + t1275;
t1316 = (qJD(4) + t1177) * t1132;
t1181 = t1190 * qJDD(1);
t1248 = t1191 * t1181;
t1250 = t1189 * t1181;
t1090 = -t1131 * qJD(4) - t1194 * t1250 + t1197 * t1248;
t1214 = t1228 * t1181;
t1202 = t1132 * qJD(4) + t1214;
t1005 = -t1079 * qJD(5) + t1196 * t1090 - t1193 * t1202;
t1171 = -qJD(5) + t1177;
t1070 = t1079 * t1171;
t1314 = t1070 + t1005;
t1117 = t1131 * t1177;
t1048 = t1090 - t1117;
t1313 = t1090 + t1117;
t1241 = t1193 * t1090 + t1196 * t1202;
t969 = (qJD(5) + t1171) * t1081 + t1241;
t1077 = t1079 ^ 2;
t1078 = t1081 ^ 2;
t1311 = t1131 ^ 2;
t1128 = t1132 ^ 2;
t1165 = t1171 ^ 2;
t1175 = t1177 ^ 2;
t1310 = t1189 ^ 2;
t1309 = 2 * qJD(2);
t1168 = t1198 * g(1) + t1195 * g(2);
t1143 = -t1199 * pkin(1) + qJDD(1) * qJ(2) - t1168;
t1267 = t1232 * qJD(1) + t1309;
t1230 = t1267 * qJD(1) + t1143;
t1303 = t1190 * g(3);
t1084 = t1192 * t1230 - t1303;
t1225 = t1317 * t1191;
t1226 = -pkin(3) * t1192 - pkin(6) * t1280;
t1279 = t1190 * t1192;
t1186 = t1190 ^ 2;
t1304 = pkin(3) * t1186;
t1013 = t1226 * qJDD(1) + (-t1084 + (pkin(6) * t1279 - t1191 * t1304) * t1199) * t1189 + t1225;
t1029 = t1191 * t1084 + t1317 * t1189;
t1144 = t1226 * qJD(1);
t1282 = t1189 * t1199;
t1014 = t1144 * t1275 + (-pkin(6) * t1181 - t1282 * t1304) * t1189 + t1029;
t942 = -t1197 * t1013 + t1194 * t1014;
t943 = t1194 * t1013 + t1197 * t1014;
t891 = t1194 * t943 - t1197 * t942;
t1308 = pkin(3) * t891;
t1045 = -t1214 - t1316;
t998 = t1194 * t1045 - t1197 * t1048;
t1307 = pkin(3) * t998;
t1306 = pkin(2) * t1190;
t1302 = t1192 * g(3);
t1301 = qJDD(1) * pkin(1);
t1300 = t1189 * t891;
t1299 = t1191 * t891;
t1287 = t1186 * t1199;
t1173 = t1310 * t1287;
t1244 = qJDD(3) + t1302;
t1264 = qJDD(1) * t1189;
t1033 = -pkin(6) * t1173 + (pkin(3) * t1264 + t1143 + (t1144 * t1191 + t1267) * qJD(1)) * t1190 + t1244;
t1111 = -t1177 * pkin(4) - t1132 * pkin(7);
t967 = pkin(4) * t1202 - t1311 * pkin(7) + t1132 * t1111 + t1033;
t1298 = t1193 * t967;
t914 = pkin(4) * t1312 - t1048 * pkin(7) - t942;
t917 = -t1311 * pkin(4) - pkin(7) * t1202 + t1177 * t1111 + t943;
t873 = t1193 * t917 - t1196 * t914;
t874 = t1193 * t914 + t1196 * t917;
t838 = t1193 * t874 - t1196 * t873;
t1297 = t1194 * t838;
t1296 = t1196 * t967;
t1295 = t1197 * t838;
t1294 = t1033 * t1194;
t1293 = t1171 * t1081;
t1292 = t1171 * t1193;
t1291 = t1171 * t1196;
t1290 = t1177 * t1132;
t1289 = t1177 * t1194;
t1288 = t1177 * t1197;
t1082 = t1190 * t1230 + t1244;
t1286 = t1189 * t1082;
t1252 = t1191 * t1282;
t1155 = t1186 * t1252;
t1138 = -t1155 + t1262;
t1285 = t1189 * t1138;
t1139 = -t1155 - t1262;
t1284 = t1189 * t1139;
t1137 = -t1217 + t1301;
t1281 = t1190 * t1137;
t1278 = t1191 * t1082;
t1277 = t1191 * t1138;
t1276 = t1191 * t1139;
t1274 = t1192 * t1137;
t1020 = -t1024 + t1166;
t1272 = t1193 * t1020;
t1074 = -t1092 + t1176;
t1271 = t1194 * t1074;
t1270 = t1196 * t1020;
t1269 = t1197 * t1033;
t1268 = t1197 * t1074;
t1263 = qJDD(1) * t1191;
t1261 = t1195 * qJDD(1);
t1260 = t1198 * qJDD(1);
t839 = t1193 * t873 + t1196 * t874;
t810 = t1194 * t839 + t1295;
t837 = pkin(4) * t838;
t1259 = pkin(3) * t810 + t837;
t972 = -t1070 + t1005;
t908 = -t1193 * t969 - t1196 * t972;
t910 = t1193 * t972 - t1196 * t969;
t868 = t1194 * t910 + t1197 * t908;
t906 = pkin(4) * t908;
t1258 = pkin(3) * t868 + t906;
t1257 = t1190 * t1024;
t1256 = t1192 * t1024;
t1255 = t1190 * t1092;
t1254 = t1192 * t1092;
t1187 = t1191 ^ 2;
t1253 = t1187 * t1287;
t1251 = t1191 * t1273;
t1174 = t1190 * t1273;
t1249 = t1190 * t1262;
t1247 = t1190 * t1261;
t1246 = t1190 * t1260;
t1245 = t1137 + t1301;
t892 = t1194 * t942 + t1197 * t943;
t1242 = qJD(1) * t1309 + t1143;
t1028 = t1189 * t1084 - t1225;
t978 = t1189 * t1028 + t1191 * t1029;
t1114 = t1190 * t1242 + t1302;
t1115 = t1192 * t1242 - t1303;
t1056 = t1190 * t1114 + t1192 * t1115;
t1240 = -t1167 * t1195 - t1198 * t1168;
t1185 = t1190 * t1186;
t1239 = t1185 * t1252;
t1238 = t1189 * t1251;
t1237 = t1191 * t1174;
t1105 = -t1128 - t1175;
t1026 = t1197 * t1105 + t1271;
t1236 = pkin(3) * t1026 - t943;
t1017 = -t1165 - t1077;
t957 = t1017 * t1193 + t1319;
t1235 = pkin(4) * t957 - t873;
t1162 = -t1195 * t1199 + t1260;
t1234 = -pkin(5) * t1162 - g(3) * t1195;
t1233 = -pkin(2) * t1082 + qJ(3) * t978;
t1231 = t1186 * t1238;
t977 = -t1191 * t1028 + t1189 * t1029;
t1055 = t1192 * t1114 - t1190 * t1115;
t1229 = t1167 * t1198 - t1168 * t1195;
t1161 = t1198 * t1199 + t1261;
t1072 = -t1175 - t1311;
t1018 = t1194 * t1072 + t1318;
t1224 = pkin(3) * t1018 - t942;
t1053 = -t1078 - t1165;
t981 = t1196 * t1053 + t1272;
t1223 = pkin(4) * t981 - t874;
t1188 = t1192 ^ 2;
t1150 = (t1186 + t1188) * t1273;
t1222 = -t1150 * t1195 + t1192 * t1260;
t1221 = t1150 * t1198 + t1192 * t1261;
t1220 = t1251 - t1264;
t958 = t1017 * t1196 - t1321;
t899 = t1194 * t958 + t1197 * t957;
t1219 = pkin(3) * t899 + t1235;
t1183 = t1188 * t1199;
t1146 = -t1173 - t1183;
t1102 = t1191 * t1146 - t1284;
t1134 = t1220 * t1190;
t1216 = pkin(2) * t1134 + qJ(3) * t1102 - t1278;
t1149 = -t1183 - t1253;
t1103 = -t1189 * t1149 + t1277;
t1156 = t1189 * t1174;
t1135 = t1156 + t1248;
t1215 = -pkin(2) * t1135 + qJ(3) * t1103 + t1286;
t1213 = qJDD(1) * t1218;
t982 = -t1193 * t1053 + t1270;
t918 = t1194 * t982 + t1197 * t981;
t1212 = pkin(3) * t918 + t1223;
t1133 = (t1251 + t1264) * t1190;
t1136 = -t1156 + t1248;
t1089 = -t1191 * t1133 + t1189 * t1136;
t1140 = t1173 + t1253;
t1211 = pkin(2) * t1140 + qJ(3) * t1089 + t978;
t811 = t1197 * t839 - t1297;
t827 = -pkin(4) * t967 + pkin(7) * t839;
t795 = -pkin(3) * t967 + pkin(6) * t811 - pkin(7) * t1297 + t1197 * t827;
t798 = -pkin(6) * t810 - pkin(7) * t1295 - t1194 * t827;
t800 = -t1189 * t810 + t1191 * t811;
t1210 = -pkin(2) * t967 + qJ(3) * t800 + t1189 * t798 + t1191 * t795;
t968 = (qJD(5) - t1171) * t1081 + t1241;
t885 = -pkin(4) * t968 + pkin(7) * t958 - t1296;
t900 = -t1194 * t957 + t1197 * t958;
t901 = -pkin(7) * t957 + t1298;
t828 = -pkin(3) * t968 + pkin(6) * t900 + t1194 * t901 + t1197 * t885;
t840 = -pkin(6) * t899 - t1194 * t885 + t1197 * t901;
t862 = -t1189 * t899 + t1191 * t900;
t1209 = -pkin(2) * t968 + qJ(3) * t862 + t1189 * t840 + t1191 * t828;
t888 = -pkin(4) * t1314 + pkin(7) * t982 + t1298;
t912 = -pkin(7) * t981 + t1296;
t919 = -t1194 * t981 + t1197 * t982;
t836 = -pkin(3) * t1314 + pkin(6) * t919 + t1194 * t912 + t1197 * t888;
t842 = -pkin(6) * t918 - t1194 * t888 + t1197 * t912;
t877 = -t1189 * t918 + t1191 * t919;
t1208 = -pkin(2) * t1314 + qJ(3) * t877 + t1189 * t842 + t1191 * t836;
t1001 = -t1077 - t1078;
t818 = -pkin(4) * t1001 + pkin(7) * t910 + t839;
t820 = -pkin(7) * t908 - t838;
t870 = -t1194 * t908 + t1197 * t910;
t803 = -pkin(3) * t1001 + pkin(6) * t870 + t1194 * t820 + t1197 * t818;
t805 = -pkin(6) * t868 - t1194 * t818 + t1197 * t820;
t833 = -t1189 * t868 + t1191 * t870;
t1207 = -pkin(2) * t1001 + qJ(3) * t833 + t1189 * t805 + t1191 * t803;
t1043 = (qJD(4) - t1177) * t1132 + t1213;
t1019 = t1197 * t1072 - t1320;
t938 = -pkin(3) * t1043 + pkin(6) * t1019 - t1269;
t956 = -t1018 * t1189 + t1019 * t1191;
t974 = -pkin(6) * t1018 + t1294;
t1206 = -pkin(2) * t1043 + qJ(3) * t956 + t1189 * t974 + t1191 * t938;
t1027 = -t1194 * t1105 + t1268;
t948 = -pkin(3) * t1313 + pkin(6) * t1027 + t1294;
t976 = -t1189 * t1026 + t1191 * t1027;
t979 = -pkin(6) * t1026 + t1269;
t1205 = -pkin(2) * t1313 + qJ(3) * t976 + t1189 * t979 + t1191 * t948;
t1057 = -t1128 - t1311;
t1000 = t1197 * t1045 + t1194 * t1048;
t875 = -pkin(3) * t1057 + pkin(6) * t1000 + t892;
t883 = -pkin(6) * t998 - t891;
t933 = t1000 * t1191 - t1189 * t998;
t1204 = -pkin(2) * t1057 + qJ(3) * t933 + t1189 * t883 + t1191 * t875;
t849 = t1191 * t892 - t1300;
t887 = -pkin(3) * t1033 + pkin(6) * t892;
t1203 = -pkin(2) * t1033 - pkin(6) * t1300 + qJ(3) * t849 + t1191 * t887;
t1182 = t1188 * qJDD(1);
t1180 = t1186 * qJDD(1);
t1169 = 0.2e1 * t1249;
t1158 = -t1183 + t1287;
t1157 = t1183 + t1287;
t1154 = t1182 - t1180;
t1153 = t1182 + t1180;
t1148 = t1183 - t1253;
t1147 = (t1188 * t1190 + t1185) * t1199;
t1145 = t1173 - t1183;
t1142 = -pkin(5) * t1161 + t1198 * g(3);
t1141 = -t1173 + t1253;
t1130 = t1162 * t1279;
t1129 = t1161 * t1279;
t1127 = (t1187 + t1310) * t1174;
t1126 = (qJDD(1) * t1187 + t1238) * t1190;
t1125 = (-t1187 * t1273 + t1189 * t1263) * t1190;
t1124 = (t1189 * t1273 + t1263) * t1283;
t1123 = t1220 * t1283;
t1120 = t1198 * t1147 + t1247;
t1119 = t1195 * t1147 - t1246;
t1113 = -t1128 + t1175;
t1112 = -t1175 + t1311;
t1107 = t1192 * t1126 + t1239;
t1106 = -t1192 * t1123 - t1239;
t1104 = -t1189 * t1148 + t1276;
t1101 = t1191 * t1145 + t1285;
t1100 = t1191 * t1148 + t1284;
t1099 = t1191 * t1149 + t1285;
t1098 = t1189 * t1146 + t1276;
t1097 = t1189 * t1145 - t1277;
t1096 = t1190 * t1126 - t1231;
t1095 = -t1190 * t1123 + t1231;
t1094 = -qJ(2) * t1150 + t1192 * t1245;
t1093 = qJ(2) * t1147 - t1190 * t1245;
t1091 = t1128 - t1311;
t1088 = t1191 * t1134 - t1189 * t1135;
t1087 = -t1189 * t1133 - t1191 * t1136;
t1086 = t1189 * t1134 + t1191 * t1135;
t1069 = -t1078 + t1165;
t1068 = t1077 - t1165;
t1067 = (t1131 * t1197 - t1132 * t1194) * t1177;
t1066 = (t1131 * t1194 + t1132 * t1197) * t1177;
t1065 = t1192 * t1104 + t1190 * t1136;
t1064 = t1192 * t1103 + t1190 * t1135;
t1063 = t1192 * t1102 - t1190 * t1134;
t1062 = t1192 * t1101 - t1190 * t1133;
t1061 = t1190 * t1104 - t1192 * t1136;
t1060 = t1190 * t1103 - t1192 * t1135;
t1059 = t1190 * t1102 + t1192 * t1134;
t1058 = t1190 * t1101 + t1192 * t1133;
t1052 = t1192 * t1089 - t1190 * t1140;
t1051 = t1192 * t1088 + t1190 * t1141;
t1050 = t1190 * t1089 + t1192 * t1140;
t1049 = t1190 * t1088 - t1192 * t1141;
t1044 = t1213 + t1316;
t1042 = t1197 * t1090 + t1132 * t1289;
t1041 = t1194 * t1090 - t1132 * t1288;
t1040 = -t1131 * t1288 + t1194 * t1202;
t1039 = -t1131 * t1289 - t1197 * t1202;
t1038 = t1197 * t1112 + t1271;
t1037 = -t1194 * t1113 + t1318;
t1036 = t1194 * t1112 - t1268;
t1035 = t1197 * t1113 + t1320;
t1034 = pkin(1) * t1137 + qJ(2) * t1056;
t1032 = pkin(1) * t1157 + qJ(2) * t1153 + t1056;
t1031 = -qJ(3) * t1099 + t1278;
t1030 = -qJ(3) * t1098 + t1286;
t1023 = t1078 - t1077;
t1016 = (t1079 * t1196 - t1081 * t1193) * t1171;
t1015 = (t1079 * t1193 + t1081 * t1196) * t1171;
t1012 = -pkin(2) * t1099 + t1029;
t1011 = -pkin(2) * t1098 + t1028;
t1007 = -t1189 * t1066 + t1191 * t1067;
t1006 = t1191 * t1066 + t1189 * t1067;
t1004 = -t1081 * qJD(5) - t1241;
t1003 = t1192 * t1007 - t1190 * t1176;
t1002 = t1190 * t1007 + t1192 * t1176;
t999 = -t1197 * t1043 - t1194 * t1313;
t997 = -t1194 * t1043 + t1197 * t1313;
t996 = -t1189 * t1041 + t1191 * t1042;
t995 = -t1189 * t1039 + t1191 * t1040;
t994 = t1191 * t1041 + t1189 * t1042;
t993 = t1191 * t1039 + t1189 * t1040;
t992 = t1196 * t1068 + t1272;
t991 = -t1193 * t1069 + t1319;
t990 = t1193 * t1068 - t1270;
t989 = t1196 * t1069 + t1321;
t988 = -pkin(1) * t1059 - t1216;
t987 = -pkin(1) * t1060 - t1215;
t986 = -t1189 * t1036 + t1191 * t1038;
t985 = -t1189 * t1035 + t1191 * t1037;
t984 = t1191 * t1036 + t1189 * t1038;
t983 = t1191 * t1035 + t1189 * t1037;
t975 = t1026 * t1191 + t1027 * t1189;
t966 = t1005 * t1196 + t1081 * t1292;
t965 = t1005 * t1193 - t1081 * t1291;
t964 = -t1004 * t1193 - t1079 * t1291;
t963 = t1004 * t1196 - t1079 * t1292;
t962 = t1192 * t996 + t1255;
t961 = t1192 * t995 - t1255;
t960 = t1190 * t996 - t1254;
t959 = t1190 * t995 + t1254;
t955 = t1018 * t1191 + t1019 * t1189;
t953 = -qJ(3) * t1087 - t977;
t952 = t1082 * t1190 + t1192 * t978;
t951 = -t1082 * t1192 + t1190 * t978;
t950 = -t1015 * t1194 + t1016 * t1197;
t949 = t1015 * t1197 + t1016 * t1194;
t947 = -t1044 * t1190 + t1192 * t986;
t946 = t1048 * t1190 + t1192 * t985;
t945 = t1044 * t1192 + t1190 * t986;
t944 = -t1048 * t1192 + t1190 * t985;
t940 = t1190 * t1313 + t1192 * t976;
t939 = t1190 * t976 - t1192 * t1313;
t937 = -qJ(2) * t1060 - t1012 * t1190 + t1031 * t1192;
t936 = -qJ(2) * t1059 - t1011 * t1190 + t1030 * t1192;
t935 = t1043 * t1190 + t1192 * t956;
t934 = -t1043 * t1192 + t1190 * t956;
t932 = -t1189 * t997 + t1191 * t999;
t931 = t1000 * t1189 + t1191 * t998;
t930 = t1189 * t999 + t1191 * t997;
t929 = -pkin(1) * t1050 - t1211;
t928 = -pkin(1) * t1099 + qJ(2) * t1064 + t1012 * t1192 + t1031 * t1190;
t927 = -pkin(1) * t1098 + qJ(2) * t1063 + t1011 * t1192 + t1030 * t1190;
t926 = -t1194 * t990 + t1197 * t992;
t925 = -t1194 * t989 + t1197 * t991;
t924 = t1194 * t992 + t1197 * t990;
t923 = t1194 * t991 + t1197 * t989;
t922 = -qJ(2) * t1050 + t1087 * t1306 + t1192 * t953;
t921 = t1091 * t1190 + t1192 * t932;
t920 = -t1091 * t1192 + t1190 * t932;
t916 = t1057 * t1190 + t1192 * t933;
t915 = -t1057 * t1192 + t1190 * t933;
t911 = qJ(2) * t1052 + t1190 * t953 + (-pkin(1) - t1305) * t1087;
t909 = -t1193 * t1314 - t1196 * t968;
t907 = -t1193 * t968 + t1196 * t1314;
t905 = -t1194 * t965 + t1197 * t966;
t904 = -t1194 * t963 + t1197 * t964;
t903 = t1194 * t966 + t1197 * t965;
t902 = t1194 * t964 + t1197 * t963;
t898 = -pkin(2) * t931 - t1307;
t897 = -pkin(1) * t951 - t1233;
t896 = -t1189 * t949 + t1191 * t950;
t895 = t1189 * t950 + t1191 * t949;
t894 = -t1166 * t1190 + t1192 * t896;
t893 = t1166 * t1192 + t1190 * t896;
t890 = -pkin(2) * t975 - t1236;
t889 = -pkin(2) * t955 - t1224;
t886 = -qJ(2) * t951 + (-qJ(3) * t1192 + t1306) * t977;
t884 = -qJ(3) * t975 - t1189 * t948 + t1191 * t979;
t882 = -qJ(3) * t955 - t1189 * t938 + t1191 * t974;
t881 = -t1189 * t924 + t1191 * t926;
t880 = -t1189 * t923 + t1191 * t925;
t879 = t1189 * t926 + t1191 * t924;
t878 = t1189 * t925 + t1191 * t923;
t876 = t1189 * t919 + t1191 * t918;
t871 = qJ(2) * t952 + t1227 * t977;
t869 = -t1194 * t907 + t1197 * t909;
t867 = t1194 * t909 + t1197 * t907;
t866 = -t1189 * t903 + t1191 * t905;
t865 = -t1189 * t902 + t1191 * t904;
t864 = t1189 * t905 + t1191 * t903;
t863 = t1189 * t904 + t1191 * t902;
t861 = t1189 * t900 + t1191 * t899;
t860 = -t1190 * t969 + t1192 * t881;
t859 = t1190 * t972 + t1192 * t880;
t858 = t1190 * t881 + t1192 * t969;
t857 = t1190 * t880 - t1192 * t972;
t856 = t1190 * t1314 + t1192 * t877;
t855 = t1190 * t877 - t1192 * t1314;
t854 = t1192 * t866 + t1257;
t853 = t1192 * t865 - t1257;
t852 = t1190 * t866 - t1256;
t851 = t1190 * t865 + t1256;
t850 = -pkin(1) * t939 - t1205;
t848 = t1189 * t892 + t1299;
t847 = -pkin(1) * t934 - t1206;
t846 = t1190 * t968 + t1192 * t862;
t845 = t1190 * t862 - t1192 * t968;
t844 = t1033 * t1190 + t1192 * t849;
t843 = -t1033 * t1192 + t1190 * t849;
t841 = -qJ(2) * t939 - t1190 * t890 + t1192 * t884;
t835 = -pkin(2) * t848 - t1308;
t834 = -qJ(2) * t934 - t1190 * t889 + t1192 * t882;
t832 = -t1189 * t867 + t1191 * t869;
t831 = t1189 * t870 + t1191 * t868;
t830 = t1189 * t869 + t1191 * t867;
t829 = -pkin(1) * t975 + qJ(2) * t940 + t1190 * t884 + t1192 * t890;
t826 = -qJ(3) * t931 - t1189 * t875 + t1191 * t883;
t825 = t1023 * t1190 + t1192 * t832;
t824 = -t1023 * t1192 + t1190 * t832;
t823 = t1001 * t1190 + t1192 * t833;
t822 = -t1001 * t1192 + t1190 * t833;
t821 = -pkin(1) * t955 + qJ(2) * t935 + t1190 * t882 + t1192 * t889;
t819 = -pkin(2) * t876 - t1212;
t817 = -pkin(1) * t915 - t1204;
t816 = -pkin(6) * t1299 - qJ(3) * t848 - t1189 * t887;
t815 = -pkin(2) * t861 - t1219;
t814 = -qJ(2) * t915 - t1190 * t898 + t1192 * t826;
t813 = -pkin(2) * t831 - t1258;
t812 = -pkin(1) * t931 + qJ(2) * t916 + t1190 * t826 + t1192 * t898;
t809 = -pkin(1) * t843 - t1203;
t808 = -qJ(3) * t876 - t1189 * t836 + t1191 * t842;
t807 = -qJ(3) * t861 - t1189 * t828 + t1191 * t840;
t806 = -pkin(1) * t855 - t1208;
t804 = -qJ(2) * t843 - t1190 * t835 + t1192 * t816;
t802 = -pkin(1) * t845 - t1209;
t801 = -pkin(1) * t848 + qJ(2) * t844 + t1190 * t816 + t1192 * t835;
t799 = t1189 * t811 + t1191 * t810;
t797 = t1190 * t967 + t1192 * t800;
t796 = t1190 * t800 - t1192 * t967;
t794 = -qJ(2) * t855 - t1190 * t819 + t1192 * t808;
t793 = -pkin(1) * t876 + qJ(2) * t856 + t1190 * t808 + t1192 * t819;
t792 = -qJ(2) * t845 - t1190 * t815 + t1192 * t807;
t791 = -pkin(1) * t861 + qJ(2) * t846 + t1190 * t807 + t1192 * t815;
t790 = -pkin(2) * t799 - t1259;
t789 = -qJ(3) * t831 - t1189 * t803 + t1191 * t805;
t788 = -pkin(1) * t822 - t1207;
t787 = -qJ(2) * t822 - t1190 * t813 + t1192 * t789;
t786 = -pkin(1) * t831 + qJ(2) * t823 + t1190 * t789 + t1192 * t813;
t785 = -qJ(3) * t799 - t1189 * t795 + t1191 * t798;
t784 = -pkin(1) * t796 - t1210;
t783 = -qJ(2) * t796 - t1190 * t790 + t1192 * t785;
t782 = -pkin(1) * t799 + qJ(2) * t797 + t1190 * t785 + t1192 * t790;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1162, 0, -t1161, 0, t1234, -t1142, -t1229, -pkin(5) * t1229, t1130, t1154 * t1198 + t1158 * t1195, t1120, -t1130, t1221, 0, -pkin(5) * t1222 - t1195 * t1114 - t1198 * t1281, -pkin(5) * t1119 - t1115 * t1195 - t1198 * t1274, t1198 * t1055 - pkin(5) * (t1153 * t1195 + t1157 * t1198), -pkin(5) * (t1056 * t1195 + t1137 * t1198) - (pkin(1) * t1195 - qJ(2) * t1198) * t1055, t1107 * t1198 + t1125 * t1195, t1051 * t1198 + t1086 * t1195, t1065 * t1198 + t1100 * t1195, t1106 * t1198 - t1124 * t1195, t1062 * t1198 + t1097 * t1195, t1127 * t1195 - t1192 * t1246, t1198 * t936 - t1195 * t988 - pkin(5) * (t1063 * t1195 - t1098 * t1198), t1198 * t937 - t1195 * t987 - pkin(5) * (t1064 * t1195 - t1099 * t1198), t1198 * t922 - t1195 * t929 - pkin(5) * (t1052 * t1195 - t1087 * t1198), t1198 * t886 - t1195 * t897 - pkin(5) * (t1195 * t952 - t1198 * t977), t1195 * t994 + t1198 * t962, t1195 * t930 + t1198 * t921, t1195 * t983 + t1198 * t946, t1195 * t993 + t1198 * t961, t1195 * t984 + t1198 * t947, t1003 * t1198 + t1006 * t1195, t1198 * t834 - t1195 * t847 - pkin(5) * (t1195 * t935 - t1198 * t955), t1198 * t841 - t1195 * t850 - pkin(5) * (t1195 * t940 - t1198 * t975), t1198 * t814 - t1195 * t817 - pkin(5) * (t1195 * t916 - t1198 * t931), t1198 * t804 - t1195 * t809 - pkin(5) * (t1195 * t844 - t1198 * t848), t1195 * t864 + t1198 * t854, t1195 * t830 + t1198 * t825, t1195 * t878 + t1198 * t859, t1195 * t863 + t1198 * t853, t1195 * t879 + t1198 * t860, t1195 * t895 + t1198 * t894, t1198 * t792 - t1195 * t802 - pkin(5) * (t1195 * t846 - t1198 * t861), t1198 * t794 - t1195 * t806 - pkin(5) * (t1195 * t856 - t1198 * t876), t1198 * t787 - t1195 * t788 - pkin(5) * (t1195 * t823 - t1198 * t831), t1198 * t783 - t1195 * t784 - pkin(5) * (t1195 * t797 - t1198 * t799); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1161, 0, t1162, 0, t1142, t1234, t1240, pkin(5) * t1240, t1129, t1154 * t1195 - t1158 * t1198, t1119, -t1129, -t1222, 0, -pkin(5) * t1221 + t1198 * t1114 - t1195 * t1281, pkin(5) * t1120 + t1115 * t1198 - t1195 * t1274, t1195 * t1055 + pkin(5) * (t1153 * t1198 - t1157 * t1195), pkin(5) * (t1056 * t1198 - t1137 * t1195) - (-pkin(1) * t1198 - qJ(2) * t1195) * t1055, t1107 * t1195 - t1125 * t1198, t1051 * t1195 - t1086 * t1198, t1065 * t1195 - t1100 * t1198, t1106 * t1195 + t1124 * t1198, t1062 * t1195 - t1097 * t1198, -t1127 * t1198 - t1192 * t1247, t1195 * t936 + t1198 * t988 + pkin(5) * (t1063 * t1198 + t1098 * t1195), t1195 * t937 + t1198 * t987 + pkin(5) * (t1064 * t1198 + t1099 * t1195), t1195 * t922 + t1198 * t929 + pkin(5) * (t1052 * t1198 + t1087 * t1195), t1195 * t886 + t1198 * t897 + pkin(5) * (t1195 * t977 + t1198 * t952), t1195 * t962 - t1198 * t994, t1195 * t921 - t1198 * t930, t1195 * t946 - t1198 * t983, t1195 * t961 - t1198 * t993, t1195 * t947 - t1198 * t984, t1003 * t1195 - t1006 * t1198, t1195 * t834 + t1198 * t847 + pkin(5) * (t1195 * t955 + t1198 * t935), t1195 * t841 + t1198 * t850 + pkin(5) * (t1195 * t975 + t1198 * t940), t1195 * t814 + t1198 * t817 + pkin(5) * (t1195 * t931 + t1198 * t916), t1195 * t804 + t1198 * t809 + pkin(5) * (t1195 * t848 + t1198 * t844), t1195 * t854 - t1198 * t864, t1195 * t825 - t1198 * t830, t1195 * t859 - t1198 * t878, t1195 * t853 - t1198 * t863, t1195 * t860 - t1198 * t879, t1195 * t894 - t1198 * t895, t1195 * t792 + t1198 * t802 + pkin(5) * (t1195 * t861 + t1198 * t846), t1195 * t794 + t1198 * t806 + pkin(5) * (t1195 * t876 + t1198 * t856), t1195 * t787 + t1198 * t788 + pkin(5) * (t1195 * t831 + t1198 * t823), t1195 * t783 + t1198 * t784 + pkin(5) * (t1195 * t799 + t1198 * t797); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1167, t1168, 0, 0, t1180, t1169, 0, t1182, 0, 0, t1094, t1093, t1032, t1034, t1096, t1049, t1061, t1095, t1058, t1182, t927, t928, t911, t871, t960, t920, t944, t959, t945, t1002, t821, t829, t812, t801, t852, t824, t857, t851, t858, t893, t791, t793, t786, t782; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1199, 0, 0, -g(3), -t1167, 0, t1249, t1154, t1147, -t1249, t1150, 0, -t1281, -t1274, t1055, qJ(2) * t1055, t1107, t1051, t1065, t1106, t1062, -t1249, t936, t937, t922, t886, t962, t921, t946, t961, t947, t1003, t834, t841, t814, t804, t854, t825, t859, t853, t860, t894, t792, t794, t787, t783; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1199, 0, qJDD(1), 0, g(3), 0, -t1168, 0, t1174, -t1158, -t1181, -t1174, -t1262, 0, t1114, t1115, 0, pkin(1) * t1055, -t1125, -t1086, -t1100, t1124, -t1097, -t1127, t988, t987, t929, t897, -t994, -t930, -t983, -t993, -t984, -t1006, t847, t850, t817, t809, -t864, -t830, -t878, -t863, -t879, -t895, t802, t806, t788, t784; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1167, t1168, 0, 0, t1180, t1169, 0, t1182, 0, 0, t1094, t1093, t1032, t1034, t1096, t1049, t1061, t1095, t1058, t1182, t927, t928, t911, t871, t960, t920, t944, t959, t945, t1002, t821, t829, t812, t801, t852, t824, t857, t851, t858, t893, t791, t793, t786, t782; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1181, t1262, t1174, 0, t1183, 0, 0, -t1137, t1114, 0, t1126, t1088, t1104, -t1123, t1101, 0, t1030, t1031, t953, -qJ(3) * t977, t996, t932, t985, t995, t986, t1007, t882, t884, t826, t816, t866, t832, t880, t865, t881, t896, t807, t808, t789, t785; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1181, -t1287, t1262, -t1174, 0, t1137, 0, t1115, 0, -t1155, -t1141, -t1136, t1155, t1133, t1262, t1011, t1012, -pkin(2) * t1087, -pkin(2) * t977, -t1092, -t1091, -t1048, t1092, t1044, t1176, t889, t890, t898, t835, -t1024, -t1023, -t972, t1024, t969, t1166, t815, t819, t813, t790; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1174, t1158, t1181, t1174, t1262, 0, -t1114, -t1115, 0, 0, t1125, t1086, t1100, -t1124, t1097, t1127, t1216, t1215, t1211, t1233, t994, t930, t983, t993, t984, t1006, t1206, t1205, t1204, t1203, t864, t830, t878, t863, t879, t895, t1209, t1208, t1207, t1210; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1248, t1134, t1139, -t1156, t1145, t1156, 0, t1082, t1028, 0, t1042, t999, t1037, t1040, t1038, t1067, t974, t979, t883, -pkin(6) * t891, t905, t869, t925, t904, t926, t950, t840, t842, t805, t798; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1237, t1135, t1148, -t1250, -t1138, t1237, -t1082, 0, t1029, 0, t1041, t997, t1035, t1039, t1036, t1066, t938, t948, t875, t887, t903, t867, t923, t902, t924, t949, t828, t836, t803, t795; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1155, t1141, t1136, -t1155, -t1133, -t1262, -t1028, -t1029, 0, 0, t1092, t1091, t1048, -t1092, -t1044, -t1176, t1224, t1236, t1307, t1308, t1024, t1023, t972, -t1024, -t969, -t1166, t1219, t1212, t1258, t1259; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1090, -t1043, t1312, -t1117, t1112, t1117, 0, t1033, t942, 0, t966, t909, t991, t964, t992, t1016, t901, t912, t820, -pkin(7) * t838; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1290, t1313, t1113, -t1202, -t1074, t1290, -t1033, 0, t943, 0, t965, t907, t989, t963, t990, t1015, t885, t888, t818, t827; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1092, t1091, t1048, -t1092, -t1044, -t1176, -t942, -t943, 0, 0, t1024, t1023, t972, -t1024, -t969, -t1166, t1235, t1223, t906, t837; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1005, -t968, t1315, -t1070, t1068, t1070, 0, t967, t873, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1293, t1314, t1069, t1004, -t1020, t1293, -t967, 0, t874, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1024, t1023, t972, -t1024, -t969, -t1166, -t873, -t874, 0, 0;];
m_new_reg = t1;
