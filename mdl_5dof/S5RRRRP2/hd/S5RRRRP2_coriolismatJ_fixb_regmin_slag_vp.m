% Calculate minimal parameter regressor of coriolis matrix for
% S5RRRRP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d4]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x24]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2022-01-20 11:49
% Revision: fd3771346c4aea32fdeb66112c511235427c26a7 (2022-01-20)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRRP2_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRP2_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRP2_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRRP2_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2022-01-20 11:49:30
% EndTime: 2022-01-20 11:49:38
% DurationCPUTime: 4.61s
% Computational Cost: add. (5134->352), mult. (9675->399), div. (0->0), fcn. (9704->6), ass. (0->277)
t321 = qJD(3) + qJD(4);
t253 = cos(qJ(4));
t254 = cos(qJ(3));
t342 = t253 * t254;
t250 = sin(qJ(4));
t251 = sin(qJ(3));
t345 = t250 * t251;
t219 = -t342 + t345;
t343 = t253 * t251;
t344 = t250 * t254;
t221 = t343 + t344;
t211 = t221 * qJ(5);
t252 = sin(qJ(2));
t375 = t252 * pkin(1);
t241 = pkin(7) + t375;
t372 = pkin(8) + t241;
t212 = t372 * t251;
t213 = t372 * t254;
t403 = t212 * t253 + t213 * t250;
t112 = -t403 - t211;
t394 = pkin(7) + pkin(8);
t233 = t394 * t251;
t234 = t394 * t254;
t401 = t233 * t253 + t234 * t250;
t126 = -t401 - t211;
t414 = t126 / 0.2e1;
t303 = t414 + t112 / 0.2e1;
t393 = -t112 / 0.2e1;
t415 = -t126 / 0.2e1;
t5 = (t415 + t393 + t303) * t219;
t420 = t5 * qJD(1);
t419 = t5 * qJD(2);
t356 = t219 * qJ(5);
t224 = t253 * t234;
t347 = t250 * t233;
t400 = -t224 + t347;
t124 = t400 + t356;
t392 = -t124 / 0.2e1;
t417 = t321 * t112;
t416 = t321 * t126;
t201 = t253 * t213;
t349 = t250 * t212;
t402 = -t201 + t349;
t110 = t402 + t356;
t413 = t321 * t401;
t412 = t321 * t403;
t322 = qJD(1) + qJD(2);
t308 = -t250 * t219 / 0.2e1;
t384 = -t251 / 0.2e1;
t374 = t253 * pkin(3);
t242 = pkin(4) + t374;
t387 = -t242 / 0.2e1;
t395 = -pkin(4) / 0.2e1;
t84 = (t387 + t395) * t221 + (t308 + t384) * pkin(3);
t411 = t322 * t84;
t410 = t321 * t221;
t386 = t242 / 0.2e1;
t291 = -t374 / 0.2e1 + t386;
t108 = (t395 + t291) * t219;
t409 = t322 * t108;
t218 = t219 ^ 2;
t396 = t221 ^ 2;
t129 = t218 - t396;
t408 = t322 * t129;
t167 = t218 + t396;
t407 = t322 * t167;
t406 = t322 * t219;
t405 = t322 * t221;
t238 = -t251 ^ 2 + t254 ^ 2;
t404 = t322 * t238;
t255 = cos(qJ(2));
t373 = t255 * pkin(1);
t243 = -pkin(2) - t373;
t313 = -t373 / 0.2e1;
t399 = t313 + t243 / 0.2e1;
t244 = -pkin(3) * t254 - pkin(2);
t379 = t219 * pkin(4);
t183 = t244 + t379;
t173 = t183 - t373;
t140 = t173 * t219;
t149 = t183 * t219;
t398 = -t140 / 0.2e1 - t149 / 0.2e1;
t141 = t173 * t221;
t150 = t183 * t221;
t397 = t141 / 0.2e1 + t150 / 0.2e1;
t389 = -t201 / 0.2e1;
t388 = -t224 / 0.2e1;
t383 = t253 / 0.2e1;
t382 = pkin(3) * t250;
t381 = t110 * pkin(4);
t380 = t124 * pkin(4);
t378 = t221 * pkin(4);
t377 = t396 * pkin(4);
t376 = t251 * pkin(3);
t371 = pkin(1) * qJD(1);
t370 = pkin(1) * qJD(2);
t369 = pkin(2) * qJD(2);
t368 = pkin(3) * qJD(4);
t367 = qJD(3) * pkin(3);
t107 = t379 / 0.2e1 + t291 * t219;
t366 = t107 * qJD(4) + (t242 * t219 - t221 * t382) * qJD(3);
t325 = t219 * qJD(4);
t365 = pkin(4) * t325 + qJD(3) * t107;
t364 = t112 * t221;
t363 = t110 * t219;
t362 = t126 * t221;
t361 = t124 * t219;
t188 = t376 + t378;
t358 = t173 * t188;
t360 = t358 * qJD(1);
t16 = pkin(4) * t141;
t359 = t16 * qJD(1);
t357 = t188 * t183;
t184 = t221 * t373;
t185 = t219 * t373;
t23 = t110 * t185 - t112 * t184 + t173 * t375;
t355 = t23 * qJD(1);
t231 = t244 - t373;
t354 = t231 * t219;
t353 = t231 * t221;
t24 = t363 - t364;
t352 = t24 * qJD(1);
t351 = t244 * t219;
t350 = t244 * t221;
t151 = t188 * t219;
t53 = t151 + t141;
t341 = t53 * qJD(1);
t152 = t188 * t221;
t54 = t152 - t140;
t340 = t54 * qJD(1);
t58 = t184 * t221 + t185 * t219;
t339 = t58 * qJD(1);
t319 = t219 * t378;
t61 = -t141 - t319;
t338 = t61 * qJD(1);
t62 = t140 - t377;
t337 = t62 * qJD(1);
t318 = t252 * t370;
t195 = t219 * t318;
t315 = t252 * t371;
t196 = t219 * t315;
t334 = t195 + t196;
t197 = t221 * t318;
t198 = t221 * t315;
t333 = t197 + t198;
t332 = qJD(1) * t231;
t331 = qJD(1) * t243;
t330 = qJD(2) * t244;
t329 = t110 * qJD(4);
t202 = t219 * t376;
t122 = t202 + t353;
t328 = t122 * qJD(1);
t203 = t221 * t376;
t123 = t203 - t354;
t327 = t123 * qJD(1);
t326 = t124 * qJD(4);
t324 = t221 * qJD(4);
t210 = t221 * qJD(5);
t323 = t251 * qJD(3);
t249 = t254 * qJD(3);
t161 = t167 * qJD(5);
t320 = t321 * t5 + t161;
t317 = t250 * t368;
t316 = t253 * t368;
t314 = t375 / 0.2e1;
t312 = t219 * t332;
t311 = t221 * t332;
t310 = t251 * t331;
t309 = t254 * t331;
t304 = t414 + t415;
t301 = t183 / 0.2e1 + t173 / 0.2e1;
t300 = t244 / 0.2e1 + t231 / 0.2e1;
t299 = pkin(1) * t322;
t298 = pkin(3) * t321;
t293 = t251 * t315;
t292 = pkin(4) * t324 - qJD(3) * t84;
t290 = t252 * t299;
t289 = t301 * t221;
t258 = t112 * t392 - t124 * t393;
t267 = -t184 * t386 - t185 * t382 / 0.2e1;
t1 = -t188 * t301 + t258 + t267;
t288 = -qJD(1) * t1 + qJD(2) * t357;
t22 = pkin(4) * t150;
t263 = t304 * t110;
t8 = -t263 + (t184 / 0.2e1 + t289) * pkin(4);
t283 = -qJD(1) * t8 - qJD(2) * t22;
t14 = (t392 - t110 / 0.2e1) * t219 + t303 * t221 + t314;
t33 = t361 - t362;
t282 = -qJD(1) * t14 + qJD(2) * t33;
t265 = (-t344 / 0.2e1 - t343 / 0.2e1) * t373;
t260 = t265 - t397;
t25 = -t151 + t260;
t59 = t151 + t150;
t281 = qJD(1) * t25 - qJD(2) * t59;
t264 = (-t342 / 0.2e1 + t345 / 0.2e1) * t373;
t259 = t264 - t398;
t26 = -t152 + t259;
t60 = t152 - t149;
t280 = qJD(1) * t26 - qJD(2) * t60;
t29 = t260 - t319;
t75 = -t150 - t319;
t279 = qJD(1) * t29 + qJD(2) * t75;
t30 = t259 - t377;
t76 = t149 - t377;
t278 = qJD(1) * t30 + qJD(2) * t76;
t144 = t202 + t350;
t63 = -t221 * t300 + t265;
t45 = -t202 + t63;
t275 = -qJD(1) * t45 + qJD(2) * t144;
t145 = t203 - t351;
t64 = t219 * t300 + t264;
t46 = -t203 + t64;
t274 = -qJD(1) * t46 + qJD(2) * t145;
t143 = t389 + t201 / 0.2e1;
t169 = t388 + t224 / 0.2e1;
t273 = t143 * qJD(1) + t169 * qJD(2);
t272 = t313 + pkin(2) / 0.2e1 - t243 / 0.2e1;
t174 = t272 * t251;
t271 = qJD(1) * t174 + t251 * t369;
t175 = t272 * t254;
t270 = qJD(1) * t175 + t254 * t369;
t269 = -qJD(1) * t64 - t219 * t330;
t268 = -qJD(1) * t63 + t221 * t330;
t104 = 0.2e1 * t389 + t349;
t132 = 0.2e1 * t388 + t347;
t257 = (-pkin(3) * t383 - t387) * t110;
t10 = -t381 / 0.2e1 + t257;
t256 = (-t124 * t383 + t250 * t304) * pkin(3) - t124 * t387;
t18 = -t380 / 0.2e1 + t256;
t199 = (-t242 + t374) * t382;
t266 = -qJD(1) * t10 - qJD(2) * t18 - qJD(3) * t199;
t262 = t264 + t398;
t261 = t265 + t397;
t65 = -t351 / 0.2e1 - t354 / 0.2e1 + t264;
t66 = t350 / 0.2e1 + t353 / 0.2e1 + t265;
t239 = t251 * t249;
t237 = t251 * t318;
t232 = t238 * qJD(3);
t209 = t219 * qJD(5);
t208 = t322 * t254 * t251;
t207 = pkin(4) * t210;
t177 = (-pkin(2) / 0.2e1 + t399) * t254;
t176 = pkin(2) * t384 + t251 * t399;
t165 = t169 * qJD(3);
t164 = t169 * qJD(4);
t155 = t321 * t219;
t153 = pkin(4) * t405;
t138 = t143 * qJD(3);
t137 = t143 * qJD(4);
t106 = t132 + t356;
t94 = t108 * qJD(3);
t93 = t108 * qJD(4);
t90 = t219 * t405;
t89 = t219 * t410;
t83 = pkin(3) * t308 + t221 * t387 + t376 / 0.2e1 + t378 / 0.2e1;
t79 = t84 * qJD(5);
t78 = t83 * qJD(3);
t77 = t83 * qJD(5);
t57 = t58 * qJD(2);
t56 = t104 + t356;
t52 = t250 * t367 - t273;
t51 = t253 * t367;
t50 = -t250 * t298 + t273;
t49 = t253 * t298;
t48 = t203 + t65;
t47 = t202 + t66;
t42 = t321 * t129;
t32 = t262 + t377;
t31 = t261 + t319;
t28 = t152 + t262;
t27 = t151 + t261;
t17 = t380 / 0.2e1 + t256;
t15 = t361 / 0.2e1 + t363 / 0.2e1 - t362 / 0.2e1 - t364 / 0.2e1 + t314;
t9 = t381 / 0.2e1 + t257;
t7 = (-t184 / 0.2e1 + t289) * pkin(4) - t263;
t2 = t357 / 0.2e1 + t358 / 0.2e1 - t258 + t267;
t3 = [0, 0, 0, 0, -t318, -t255 * t370, t239, t232, 0, 0, 0, t243 * t323 - t254 * t318, t243 * t249 + t237, -t89, t42, 0, 0, 0, qJD(3) * t122 + t231 * t324 + t195, qJD(3) * t123 - t231 * t325 + t197, qJD(3) * t53 - qJD(4) * t61 + t195, qJD(3) * t54 - qJD(4) * t62 + t197, t161 + t57, qJD(2) * t23 + qJD(3) * t358 + qJD(4) * t16 + qJD(5) * t24; 0, 0, 0, 0, -t290, -t255 * t299, t239, t232, 0, 0, 0, t176 * qJD(3) - t254 * t290, qJD(3) * t177 + t237 + t293, -t89, t42, 0, 0, 0, qJD(3) * t47 + qJD(4) * t66 + t334, qJD(3) * t48 + qJD(4) * t65 + t333, qJD(3) * t27 + qJD(4) * t31 + t334, qJD(3) * t28 + qJD(4) * t32 + t333, t320 + t57 + t339, t355 + (t124 * t185 - t126 * t184 + t183 * t375) * qJD(2) + t2 * qJD(3) + t7 * qJD(4) + t15 * qJD(5); 0, 0, 0, 0, 0, 0, t208, t404, t249, -t323, 0, qJD(2) * t176 - t241 * t249 + t310, qJD(2) * t177 + t241 * t323 + t309, -t90, t408, -t155, -t410, 0, qJD(2) * t47 + qJD(3) * t402 + qJD(4) * t104 + t328, qJD(2) * t48 + t327 + t412, qJD(2) * t27 + qJD(3) * t110 + qJD(4) * t56 + t341, qJD(2) * t28 + t340 - t417, t419 + t366, t360 + t2 * qJD(2) + (t110 * t242 + t112 * t382) * qJD(3) + t9 * qJD(4) + t77; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t90, t408, -t155, -t410, 0, qJD(2) * t66 + qJD(3) * t104 + qJD(4) * t402 + t311, qJD(2) * t65 - t312 + t412, qJD(2) * t31 + qJD(3) * t56 + t329 - t338, qJD(2) * t32 - t337 - t417, t419 + t365, pkin(4) * t329 + qJD(2) * t7 + qJD(3) * t9 + t359; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t407, qJD(2) * t15 + t352 + t78; 0, 0, 0, 0, t315, t255 * t371, t239, t232, 0, 0, 0, -qJD(3) * t174 + t254 * t315, -qJD(3) * t175 - t293, -t89, t42, 0, 0, 0, -qJD(3) * t45 - qJD(4) * t63 - t196, -qJD(3) * t46 - qJD(4) * t64 - t198, -qJD(3) * t25 - qJD(4) * t29 - t196, -qJD(3) * t26 - qJD(4) * t30 - t198, t320 - t339, -qJD(3) * t1 + qJD(4) * t8 - qJD(5) * t14 - t355; 0, 0, 0, 0, 0, 0, t239, t232, 0, 0, 0, -pkin(2) * t323, -pkin(2) * t249, -t89, t42, 0, 0, 0, qJD(3) * t144 + t244 * t324, qJD(3) * t145 - t244 * t325, qJD(3) * t59 - qJD(4) * t75, qJD(3) * t60 - qJD(4) * t76, t161, qJD(3) * t357 + qJD(4) * t22 + qJD(5) * t33; 0, 0, 0, 0, 0, 0, t208, t404, t249, -t323, 0, -pkin(7) * t249 - t271, pkin(7) * t323 - t270, -t90, t408, -t155, -t410, 0, qJD(3) * t400 + qJD(4) * t132 + t275, t274 + t413, qJD(3) * t124 + qJD(4) * t106 - t281, -t280 - t416, t420 + t366, (t124 * t242 + t126 * t382) * qJD(3) + t17 * qJD(4) + t77 + t288; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t90, t408, -t155, -t410, 0, qJD(3) * t132 + qJD(4) * t400 + t268, t269 + t413, qJD(3) * t106 - t279 + t326, -t278 - t416, t420 + t365, pkin(4) * t326 + qJD(3) * t17 - t283; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t407, t282 + t78; 0, 0, 0, 0, 0, 0, -t208, -t404, 0, 0, 0, qJD(2) * t174 - t310, qJD(2) * t175 - t309, t90, -t408, 0, 0, 0, qJD(2) * t45 + t137 - t328, qJD(2) * t46 - t327, qJD(2) * t25 + t137 - t210 - t341, qJD(2) * t26 + t209 - t340, -t419 + t93, qJD(2) * t1 + qJD(4) * t10 - t360 + t79; 0, 0, 0, 0, 0, 0, -t208, -t404, 0, 0, 0, t271, t270, t90, -t408, 0, 0, 0, t164 - t275, -t274, t164 - t210 + t281, t209 + t280, -t420 + t93, qJD(4) * t18 - t288 + t79; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t317, -t316, -t317, -t316, 0, t199 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t50, -t49, t50, -t49, t409, -pkin(4) * t317 - t266; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t405, t406, 0, t411; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t90, -t408, 0, 0, 0, qJD(2) * t63 - t138 - t311, qJD(2) * t64 + t312, qJD(2) * t29 - t138 - t210 + t338, qJD(2) * t30 + t209 + t337, -t419 - t94, -qJD(2) * t8 - qJD(3) * t10 - t207 - t359; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t90, -t408, 0, 0, 0, -t165 - t268, -t269, -t165 - t210 + t279, t209 + t278, -t420 - t94, -qJD(3) * t18 - t207 + t283; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t52, t51, t52, t51, -t409, t266; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t405, t406, 0, -t153; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t410, -t155, -t407, qJD(2) * t14 + t292 - t352; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t410, -t155, -t407, -t282 + t292; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t405, -t406, 0, -t411; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t405, -t406, 0, t153; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t3;
