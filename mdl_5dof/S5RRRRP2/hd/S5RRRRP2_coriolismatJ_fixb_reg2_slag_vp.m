% Calculate inertial parameters regressor of coriolis matrix for
% S5RRRRP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d4]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2022-01-20 11:49
% Revision: fd3771346c4aea32fdeb66112c511235427c26a7 (2022-01-20)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRRP2_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRP2_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRP2_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRRP2_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2022-01-20 11:49:32
% EndTime: 2022-01-20 11:49:43
% DurationCPUTime: 7.68s
% Computational Cost: add. (7313->402), mult. (14022->446), div. (0->0), fcn. (13985->6), ass. (0->301)
t400 = qJD(3) + qJD(4);
t325 = cos(qJ(3));
t465 = cos(qJ(4));
t388 = t465 * t325;
t322 = sin(qJ(4));
t323 = sin(qJ(3));
t426 = t322 * t323;
t343 = t388 - t426;
t389 = t465 * t323;
t425 = t322 * t325;
t290 = t389 + t425;
t279 = t290 * qJ(5);
t324 = sin(qJ(2));
t457 = t324 * pkin(1);
t311 = pkin(7) + t457;
t455 = pkin(8) + t311;
t281 = t455 * t323;
t282 = t455 * t325;
t486 = t465 * t281 + t322 * t282;
t498 = t279 + t486;
t479 = -pkin(8) - pkin(7);
t303 = t479 * t323;
t304 = t479 * t325;
t485 = -t465 * t303 - t322 * t304;
t499 = t279 + t485;
t507 = -t499 / 0.2e1;
t379 = t507 - t498 / 0.2e1;
t478 = t498 / 0.2e1;
t506 = t499 / 0.2e1;
t5 = (t506 + t478 + t379) * t343;
t513 = qJD(1) * t5;
t512 = qJD(2) * t5;
t293 = t465 * t304;
t428 = t322 * t303;
t232 = -t293 + t428;
t435 = t343 * qJ(5);
t175 = t232 + t435;
t477 = t175 / 0.2e1;
t266 = t465 * t282;
t430 = t322 * t281;
t203 = t266 - t430;
t153 = t203 + t435;
t504 = t400 * t498;
t503 = t400 * t499;
t401 = qJD(1) + qJD(2);
t488 = t401 * t290;
t501 = t343 * t488;
t494 = t400 * t290;
t500 = t343 * t494;
t497 = t400 * t485;
t496 = t400 * t486;
t495 = t322 / 0.2e1;
t382 = t343 * t495;
t467 = -t323 / 0.2e1;
t396 = t465 * pkin(3);
t312 = t396 + pkin(4);
t470 = -t312 / 0.2e1;
t480 = -pkin(4) / 0.2e1;
t115 = (t470 + t480) * t290 + (t382 + t467) * pkin(3);
t493 = t401 * t115;
t469 = t312 / 0.2e1;
t347 = -t396 / 0.2e1 + t469;
t141 = (t480 + t347) * t343;
t492 = t401 * t141;
t287 = t343 ^ 2;
t481 = t290 ^ 2;
t176 = t287 - t481;
t491 = t401 * t176;
t226 = t287 + t481;
t490 = t401 * t226;
t489 = t401 * t343;
t320 = t323 ^ 2;
t321 = t325 ^ 2;
t308 = t321 - t320;
t487 = t401 * t308;
t326 = cos(qJ(2));
t456 = t326 * pkin(1);
t313 = -pkin(2) - t456;
t390 = -t456 / 0.2e1;
t484 = t390 + t313 / 0.2e1;
t314 = -t325 * pkin(3) - pkin(2);
t461 = t343 * pkin(4);
t247 = t314 - t461;
t237 = t247 - t456;
t190 = t237 * t343;
t206 = t247 * t343;
t483 = t190 / 0.2e1 + t206 / 0.2e1;
t191 = t237 * t290;
t207 = t247 * t290;
t482 = t191 / 0.2e1 + t207 / 0.2e1;
t472 = -t266 / 0.2e1;
t471 = t293 / 0.2e1;
t464 = pkin(3) * t322;
t463 = t153 * pkin(4);
t462 = t175 * pkin(4);
t460 = t290 * pkin(4);
t459 = t481 * pkin(4);
t458 = t323 * pkin(3);
t248 = t290 * t456;
t249 = t343 * t456;
t79 = t248 * t290 + t249 * t343;
t421 = t79 * qJD(1);
t76 = t79 * qJD(2);
t454 = t76 + t421;
t453 = pkin(1) * qJD(1);
t452 = pkin(1) * qJD(2);
t451 = pkin(2) * qJD(2);
t450 = pkin(4) * qJD(4);
t449 = qJD(3) * pkin(3);
t24 = pkin(4) * t191;
t448 = qJD(1) * t24;
t441 = t153 * t343;
t442 = t498 * t290;
t38 = t441 + t442;
t447 = qJD(1) * t38;
t252 = t458 + t460;
t208 = t252 * t343;
t72 = -t208 + t191;
t446 = qJD(1) * t72;
t209 = t252 * t290;
t73 = t209 + t190;
t445 = qJD(1) * t73;
t398 = t343 * t460;
t82 = -t191 + t398;
t444 = qJD(1) * t82;
t83 = -t190 - t459;
t443 = qJD(1) * t83;
t440 = t499 * t290;
t439 = t175 * t343;
t437 = t237 * t252;
t438 = t437 * qJD(1);
t436 = t252 * t247;
t301 = t314 - t456;
t434 = t301 * t343;
t433 = t301 * t290;
t432 = t314 * t343;
t431 = t314 * t290;
t33 = t153 * t249 + t237 * t457 + t248 * t498;
t424 = t33 * qJD(1);
t34 = t301 * t458;
t423 = t34 * qJD(1);
t39 = t203 * t249 + t248 * t486 + t301 * t457;
t422 = t39 * qJD(1);
t140 = -t461 / 0.2e1 - t347 * t343;
t267 = t290 * t464;
t420 = t140 * qJD(4) + (-t312 * t343 - t267) * qJD(3);
t419 = t140 * qJD(3) - t343 * t450;
t416 = (-t343 * t396 - t267) * qJD(3);
t395 = t324 * t452;
t260 = t343 * t395;
t393 = t324 * t453;
t261 = t343 * t393;
t415 = -t260 - t261;
t262 = t290 * t395;
t263 = t290 * t393;
t414 = t262 + t263;
t268 = t343 * t458;
t163 = -t268 + t433;
t413 = qJD(1) * t163;
t269 = t290 * t458;
t164 = t269 + t434;
t412 = qJD(1) * t164;
t411 = qJD(1) * t301;
t410 = qJD(1) * t313;
t409 = qJD(2) * t314;
t408 = qJD(4) * t153;
t407 = qJD(4) * t175;
t406 = qJD(4) * t301;
t405 = qJD(4) * t314;
t372 = (t320 + t321) * t326;
t197 = (t311 * t372 + t313 * t324) * pkin(1);
t404 = t197 * qJD(1);
t280 = pkin(1) * t372;
t403 = t280 * qJD(1);
t278 = t290 * qJD(5);
t402 = t323 * qJD(3);
t319 = t325 * qJD(3);
t220 = t226 * qJD(5);
t399 = -t400 * t5 + t220;
t397 = t465 / 0.2e1;
t394 = qJD(4) * t464;
t392 = t458 / 0.2e1;
t391 = t457 / 0.2e1;
t387 = t343 * t411;
t386 = t290 * t411;
t385 = t323 * t410;
t384 = t325 * t410;
t383 = t249 * t495;
t380 = t507 + t506;
t377 = t247 / 0.2e1 + t237 / 0.2e1;
t376 = t314 / 0.2e1 + t301 / 0.2e1;
t375 = t465 * qJD(3);
t374 = t465 * qJD(4);
t373 = pkin(1) * t401;
t371 = t323 * t393;
t370 = pkin(3) * t374;
t367 = -t115 * qJD(3) + t290 * t450;
t366 = t324 * t373;
t365 = t377 * t290;
t332 = t175 * t478 - t477 * t498;
t340 = pkin(3) * t383 - t248 * t469;
t1 = -t252 * t377 + t332 + t340;
t364 = -t1 * qJD(1) + qJD(2) * t436;
t30 = pkin(4) * t207;
t335 = t153 * t380;
t8 = t335 + (t248 / 0.2e1 + t365) * pkin(4);
t359 = -qJD(1) * t8 - qJD(2) * t30;
t339 = -t248 * t397 + t383;
t13 = (-t323 * t376 + t339) * pkin(3);
t48 = t314 * t458;
t356 = -t13 * qJD(1) + t48 * qJD(2);
t22 = t290 * t379 - t343 * (t477 + t153 / 0.2e1) + t391;
t49 = t439 + t440;
t355 = -qJD(1) * t22 + qJD(2) * t49;
t337 = (-t425 / 0.2e1 - t389 / 0.2e1) * t456;
t330 = t337 - t482;
t40 = t208 + t330;
t80 = -t208 + t207;
t354 = qJD(1) * t40 - qJD(2) * t80;
t336 = (-t388 / 0.2e1 + t426 / 0.2e1) * t456;
t329 = t336 - t483;
t41 = -t209 + t329;
t81 = t209 + t206;
t353 = qJD(1) * t41 - qJD(2) * t81;
t106 = -t207 + t398;
t44 = t330 + t398;
t352 = qJD(1) * t44 + qJD(2) * t106;
t107 = -t206 - t459;
t45 = t329 - t459;
t351 = qJD(1) * t45 + qJD(2) * t107;
t194 = -t268 + t431;
t84 = -t290 * t376 + t337;
t63 = t268 + t84;
t350 = qJD(1) * t63 - qJD(2) * t194;
t195 = t269 + t432;
t85 = -t343 * t376 + t336;
t64 = -t269 + t85;
t349 = qJD(1) * t64 - qJD(2) * t195;
t193 = t472 + t266 / 0.2e1;
t228 = t471 - t293 / 0.2e1;
t348 = t193 * qJD(1) + t228 * qJD(2);
t346 = t390 + pkin(2) / 0.2e1 - t313 / 0.2e1;
t238 = t346 * t323;
t345 = qJD(1) * t238 + t323 * t451;
t239 = t346 * t325;
t344 = qJD(1) * t239 + t325 * t451;
t342 = qJD(1) * t85 - t343 * t409;
t341 = qJD(1) * t84 - t290 * t409;
t137 = 0.2e1 * t472 + t430;
t179 = 0.2e1 * t471 - t428;
t328 = (pkin(3) * t397 + t470) * t153;
t16 = t463 / 0.2e1 + t328;
t327 = (t175 * t397 + t322 * t380) * pkin(3) + t175 * t470;
t26 = t462 / 0.2e1 + t327;
t264 = (t396 - t312) * t464;
t338 = -qJD(1) * t16 - qJD(2) * t26 - qJD(3) * t264;
t334 = t336 + t483;
t333 = t337 + t482;
t86 = t432 / 0.2e1 + t434 / 0.2e1 + t336;
t87 = t431 / 0.2e1 + t433 / 0.2e1 + t337;
t309 = t323 * t319;
t307 = t323 * t395;
t302 = t308 * qJD(3);
t277 = t343 * qJD(5);
t276 = t401 * t325 * t323;
t275 = pkin(4) * t278;
t270 = t280 * qJD(2);
t241 = (-pkin(2) / 0.2e1 + t484) * t325;
t240 = pkin(2) * t467 + t484 * t323;
t224 = t228 * qJD(3);
t223 = t228 * qJD(4);
t214 = t400 * t343;
t210 = pkin(4) * t488;
t185 = t193 * qJD(3);
t184 = t193 * qJD(4);
t139 = t179 - t435;
t127 = t141 * qJD(3);
t126 = t141 * qJD(4);
t114 = pkin(3) * t382 + t290 * t470 + t392 + t460 / 0.2e1;
t110 = t115 * qJD(5);
t109 = t114 * qJD(3);
t108 = t114 * qJD(5);
t75 = t137 - t435;
t71 = t322 * t449 - t348;
t70 = pkin(3) * t375;
t69 = -t400 * t464 + t348;
t68 = (-t375 - t374) * pkin(3);
t66 = t269 + t86;
t65 = -t268 + t87;
t59 = t400 * t176;
t47 = t334 + t459;
t46 = t333 - t398;
t43 = t209 + t334;
t42 = -t208 + t333;
t25 = -t462 / 0.2e1 + t327;
t23 = t439 / 0.2e1 + t441 / 0.2e1 + t440 / 0.2e1 + t442 / 0.2e1 + t391;
t15 = -t463 / 0.2e1 + t328;
t14 = pkin(3) * t339 + (t301 + t314) * t392;
t7 = (-t248 / 0.2e1 + t365) * pkin(4) + t335;
t2 = t436 / 0.2e1 + t437 / 0.2e1 - t332 + t340;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t395, -t326 * t452, 0, 0, t309, t302, 0, -t309, 0, 0, t313 * t402 - t325 * t395, t313 * t319 + t307, t270, t197 * qJD(2), t500, t59, 0, -t500, 0, 0, qJD(3) * t163 + t290 * t406 - t260, qJD(3) * t164 + t343 * t406 + t262, t76, qJD(2) * t39 + qJD(3) * t34, t500, t59, 0, -t500, 0, 0, qJD(3) * t72 - qJD(4) * t82 - t260, qJD(3) * t73 - qJD(4) * t83 + t262, t220 + t76, qJD(2) * t33 + qJD(3) * t437 + qJD(4) * t24 + qJD(5) * t38; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t366, -t326 * t373, 0, 0, t309, t302, 0, -t309, 0, 0, t240 * qJD(3) - t325 * t366, qJD(3) * t241 + t307 + t371, t270 + t403, t404 + (-pkin(2) * t324 + pkin(7) * t372) * t452, t500, t59, 0, -t500, 0, 0, qJD(3) * t65 + qJD(4) * t87 + t415, qJD(3) * t66 + qJD(4) * t86 + t414, t454, t422 + (t232 * t249 + t248 * t485 + t314 * t457) * qJD(2) + t14 * qJD(3), t500, t59, 0, -t500, 0, 0, qJD(3) * t42 + qJD(4) * t46 + t415, qJD(3) * t43 + qJD(4) * t47 + t414, t399 + t454, t424 + (t175 * t249 + t247 * t457 + t248 * t499) * qJD(2) + t2 * qJD(3) + t7 * qJD(4) + t23 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t276, t487, t319, -t276, -t402, 0, qJD(2) * t240 - t311 * t319 + t385, qJD(2) * t241 + t311 * t402 + t384, 0, 0, t501, t491, t214, -t501, -t494, 0, qJD(2) * t65 - qJD(3) * t203 + qJD(4) * t137 + t413, qJD(2) * t66 + t412 + t496, t416, t423 + t14 * qJD(2) + (-t203 * t465 - t322 * t486) * t449, t501, t491, t214, -t501, -t494, 0, qJD(2) * t42 - qJD(3) * t153 + qJD(4) * t75 + t446, qJD(2) * t43 + t445 + t504, -t512 + t420, t438 + t2 * qJD(2) + (-t153 * t312 - t464 * t498) * qJD(3) + t15 * qJD(4) + t108; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t501, t491, t214, -t501, -t494, 0, qJD(2) * t87 + qJD(3) * t137 - qJD(4) * t203 + t386, qJD(2) * t86 + t387 + t496, 0, 0, t501, t491, t214, -t501, -t494, 0, qJD(2) * t46 + qJD(3) * t75 - t408 - t444, qJD(2) * t47 - t443 + t504, -t512 + t419, -pkin(4) * t408 + qJD(2) * t7 + qJD(3) * t15 + t448; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t490, qJD(2) * t23 + t109 + t447; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t393, t326 * t453, 0, 0, t309, t302, 0, -t309, 0, 0, -qJD(3) * t238 + t325 * t393, -qJD(3) * t239 - t371, -t403, -t404, t500, t59, 0, -t500, 0, 0, -qJD(3) * t63 - qJD(4) * t84 + t261, -qJD(3) * t64 - qJD(4) * t85 - t263, -t421, -qJD(3) * t13 - t422, t500, t59, 0, -t500, 0, 0, -qJD(3) * t40 - qJD(4) * t44 + t261, -qJD(3) * t41 - qJD(4) * t45 - t263, -t421 + t399, -qJD(3) * t1 + qJD(4) * t8 - qJD(5) * t22 - t424; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t309, t302, 0, -t309, 0, 0, -pkin(2) * t402, -pkin(2) * t319, 0, 0, t500, t59, 0, -t500, 0, 0, qJD(3) * t194 + t290 * t405, qJD(3) * t195 + t343 * t405, 0, qJD(3) * t48, t500, t59, 0, -t500, 0, 0, qJD(3) * t80 - qJD(4) * t106, qJD(3) * t81 - qJD(4) * t107, t220, qJD(3) * t436 + qJD(4) * t30 + qJD(5) * t49; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t276, t487, t319, -t276, -t402, 0, -pkin(7) * t319 - t345, pkin(7) * t402 - t344, 0, 0, t501, t491, t214, -t501, -t494, 0, -qJD(3) * t232 + qJD(4) * t179 - t350, -t349 + t497, t416, (-t232 * t465 - t322 * t485) * t449 + t356, t501, t491, t214, -t501, -t494, 0, -qJD(3) * t175 + qJD(4) * t139 - t354, -t353 + t503, -t513 + t420, (-t175 * t312 - t464 * t499) * qJD(3) + t25 * qJD(4) + t108 + t364; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t501, t491, t214, -t501, -t494, 0, qJD(3) * t179 - qJD(4) * t232 - t341, -t342 + t497, 0, 0, t501, t491, t214, -t501, -t494, 0, qJD(3) * t139 - t352 - t407, -t351 + t503, -t513 + t419, -pkin(4) * t407 + qJD(3) * t25 - t359; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t490, t109 + t355; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t276, -t487, 0, t276, 0, 0, qJD(2) * t238 - t385, qJD(2) * t239 - t384, 0, 0, -t501, -t491, 0, t501, 0, 0, qJD(2) * t63 + t184 - t413, qJD(2) * t64 - t412, 0, qJD(2) * t13 - t423, -t501, -t491, 0, t501, 0, 0, qJD(2) * t40 + t184 - t278 - t446, qJD(2) * t41 - t277 - t445, -t126 + t512, qJD(2) * t1 + qJD(4) * t16 + t110 - t438; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t276, -t487, 0, t276, 0, 0, t345, t344, 0, 0, -t501, -t491, 0, t501, 0, 0, t223 + t350, t349, 0, -t356, -t501, -t491, 0, t501, 0, 0, t223 - t278 + t354, -t277 + t353, -t126 + t513, qJD(4) * t26 + t110 - t364; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t394, -t370, 0, 0, 0, 0, 0, 0, 0, 0, -t394, -t370, 0, t264 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t69, t68, 0, 0, 0, 0, 0, 0, 0, 0, t69, t68, -t492, -pkin(4) * t394 - t338; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t488, -t489, 0, t493; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t501, -t491, 0, t501, 0, 0, qJD(2) * t84 - t185 - t386, qJD(2) * t85 - t387, 0, 0, -t501, -t491, 0, t501, 0, 0, qJD(2) * t44 - t185 - t278 + t444, qJD(2) * t45 - t277 + t443, t127 + t512, -qJD(2) * t8 - qJD(3) * t16 - t275 - t448; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t501, -t491, 0, t501, 0, 0, -t224 + t341, t342, 0, 0, -t501, -t491, 0, t501, 0, 0, -t224 - t278 + t352, -t277 + t351, t127 + t513, -qJD(3) * t26 - t275 + t359; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t71, t70, 0, 0, 0, 0, 0, 0, 0, 0, t71, t70, t492, t338; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t488, -t489, 0, -t210; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t494, t214, -t490, qJD(2) * t22 + t367 - t447; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t494, t214, -t490, -t355 + t367; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t488, t489, 0, -t493; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t488, t489, 0, t210; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t3;
