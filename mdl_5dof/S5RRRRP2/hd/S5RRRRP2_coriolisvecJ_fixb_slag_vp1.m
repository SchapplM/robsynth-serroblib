% Calculate vector of centrifugal and Coriolis load on the joints for
% S5RRRRP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d4]';
% m [6x1]
%   mass of all robot links (including the base)
% rSges [6x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [6x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tauc [5x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2022-01-20 11:49
% Revision: fd3771346c4aea32fdeb66112c511235427c26a7 (2022-01-20)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S5RRRRP2_coriolisvecJ_fixb_slag_vp1(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1),zeros(6,1),zeros(6,3),zeros(6,6)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRP2_coriolisvecJ_fixb_slag_vp1: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRP2_coriolisvecJ_fixb_slag_vp1: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRRP2_coriolisvecJ_fixb_slag_vp1: pkin has to be [8x1] (double)');
assert(isreal(m) && all(size(m) == [6 1]), ...
  'S5RRRRP2_coriolisvecJ_fixb_slag_vp1: m has to be [6x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [6,3]), ...
  'S5RRRRP2_coriolisvecJ_fixb_slag_vp1: rSges has to be [6x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [6 6]), ...
  'S5RRRRP2_coriolisvecJ_fixb_slag_vp1: Icges has to be [6x6] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2022-01-20 11:48:45
% EndTime: 2022-01-20 11:49:18
% DurationCPUTime: 26.72s
% Computational Cost: add. (23477->667), mult. (18784->843), div. (0->0), fcn. (14720->8), ass. (0->398)
t833 = Icges(5,4) + Icges(6,4);
t834 = Icges(5,1) + Icges(6,1);
t830 = Icges(5,2) + Icges(6,2);
t828 = Icges(5,5) + Icges(6,5);
t827 = Icges(5,6) + Icges(6,6);
t431 = qJ(3) + qJ(4);
t423 = cos(t431);
t832 = t833 * t423;
t421 = sin(t431);
t831 = t833 * t421;
t824 = t830 * t423 + t831;
t818 = t834 * t423 - t831;
t829 = -t830 * t421 + t832;
t808 = -t827 * t421 + t828 * t423;
t806 = t834 * t421 + t832;
t432 = qJ(1) + qJ(2);
t422 = sin(t432);
t666 = t421 * t422;
t826 = t833 * t666;
t825 = Icges(5,3) + Icges(6,3);
t424 = cos(t432);
t663 = t422 * t423;
t759 = -t827 * t424 + t833 * t663 - t830 * t666;
t788 = t828 * t424 - t834 * t663 + t826;
t823 = t829 * t424;
t822 = t818 * t424;
t429 = qJD(3) + qJD(4);
t820 = t824 * t429;
t758 = t827 * t422 + t823;
t809 = t828 * t422 + t822;
t819 = t828 * t421 + t827 * t423;
t430 = qJD(1) + qJD(2);
t817 = t827 * t430 - t820;
t816 = -t806 * t429 + t828 * t430;
t815 = t808 * t424;
t814 = t829 + t806;
t811 = t825 * t424 - t828 * t663 + t827 * t666;
t810 = t825 * t422 + t815;
t813 = t824 * t421 - t806 * t423;
t804 = t759 * t421 + t788 * t423;
t812 = t809 * t663;
t805 = -t819 * t429 + t825 * t430;
t803 = t818 * t429 - t820;
t802 = t814 * t429;
t801 = -t816 * t422 + t759 * t429 - t822 * t430;
t662 = t422 * t430;
t800 = t816 * t424 - t758 * t429 - t818 * t662;
t799 = t817 * t422 - t788 * t429 + t823 * t430;
t798 = t817 * t424 + t809 * t429 - t662 * t829;
t797 = t819 * t424;
t796 = t819 * t422;
t795 = t758 * t421;
t794 = t813 * t422 + t797;
t793 = -t813 * t424 + t796;
t792 = t804 * t422;
t791 = t810 * t424 - t812;
t659 = t423 * t424;
t750 = -t810 * t422 - t809 * t659;
t790 = t811 * t422 + t788 * t659;
t789 = t811 * t424;
t766 = t789 - t792;
t765 = -t758 * t666 - t791;
t665 = t421 * t424;
t764 = -t759 * t665 - t790;
t763 = -t758 * t665 - t750;
t787 = -t802 * t421 + t803 * t423 + t819 * t430;
t786 = -t798 * t421 + t800 * t423 + t810 * t430;
t785 = t799 * t421 + t801 * t423 + t811 * t430;
t321 = t422 * t429;
t322 = t424 * t429;
t784 = (-t824 + t818) * t430 + (t806 * t422 + t759) * t322 + (-t806 * t424 - t758) * t321;
t435 = cos(qJ(3));
t418 = t435 * pkin(3) + pkin(2);
t354 = pkin(4) * t423 + t418;
t437 = -pkin(8) - pkin(7);
t428 = qJ(5) - t437;
t617 = rSges(6,1) * t659 + t422 * rSges(6,3);
t539 = t424 * t354 + t428 * t422 + t617;
t783 = t814 * t430 + (t830 * t663 + t788 + t826) * t322 + (-t424 * t824 + t809) * t321;
t782 = t808 * t429 + t813 * t430;
t781 = (t804 + t815) * t430 + t805 * t422;
t780 = -t808 * t662 + (-t809 * t423 + t795) * t430 + t805 * t424;
t779 = t793 * t430;
t336 = rSges(6,1) * t421 + rSges(6,2) * t423;
t710 = pkin(4) * t421;
t566 = -t336 - t710;
t396 = qJD(5) * t424;
t598 = t421 * t321;
t654 = t428 * t430;
t657 = t424 * t430;
t658 = t423 * t429;
t751 = -t421 * t657 - t422 * t658;
t526 = rSges(6,1) * t598 - rSges(6,2) * t751 - t422 * t654 + t396;
t433 = sin(qJ(3));
t607 = qJD(3) * t433;
t601 = pkin(3) * t607;
t664 = t421 * t429;
t311 = -pkin(4) * t664 - t601;
t395 = qJD(5) * t422;
t597 = t421 * t662;
t778 = t395 + (t311 + t654) * t424 + rSges(6,2) * t597 + rSges(6,3) * t657;
t777 = t794 * t430;
t393 = t422 * t437;
t612 = -t424 * t418 + t393;
t647 = -rSges(6,2) * t665 + t539 + t612;
t776 = -t781 * t422 + t785 * t424;
t775 = t780 * t422 + t786 * t424;
t774 = t785 * t422 + t781 * t424;
t773 = t786 * t422 - t780 * t424;
t772 = t765 * t321 - t766 * t322 - t777;
t771 = t763 * t321 - t764 * t322 + t779;
t770 = t801 * t421 - t799 * t423;
t769 = t800 * t421 + t798 * t423;
t768 = t782 * t422 + t787 * t424;
t767 = t787 * t422 - t782 * t424;
t394 = t424 * t437;
t594 = t423 * t662;
t489 = -t322 * t421 - t594;
t577 = t424 * t607;
t541 = pkin(3) * t577;
t591 = t322 * t423;
t621 = t354 - t418;
t651 = t541 + (-t422 * t621 + t394) * t430 + rSges(6,1) * t489 - rSges(6,2) * t591 + t778;
t579 = t422 * t607;
t371 = pkin(3) * t579;
t620 = t430 * t393 + t371;
t650 = t311 * t422 + t430 * t617 + t621 * t657 - t526 + t620;
t762 = -t788 * t421 + t759 * t423;
t761 = t809 * t421 + t758 * t423;
t382 = pkin(7) * t657;
t709 = pkin(2) - t418;
t180 = -t541 - t382 + (t422 * t709 - t394) * t430;
t416 = t424 * pkin(7);
t342 = pkin(2) * t422 - t416;
t619 = t422 * t418 + t394;
t225 = t342 - t619;
t211 = t430 * t225;
t760 = t180 - t211;
t190 = t354 * t422 - t424 * t428 - t619;
t618 = rSges(6,2) * t666 + t424 * rSges(6,3);
t244 = rSges(6,1) * t663 - t618;
t648 = t190 + t244;
t754 = -t783 * t421 + t784 * t423;
t753 = t797 * t321 - t796 * t322 - t808 * t430;
t752 = t795 + t811;
t434 = sin(qJ(1));
t703 = pkin(1) * qJD(1);
t603 = t434 * t703;
t338 = rSges(3,1) * t422 + rSges(3,2) * t424;
t670 = t338 * t430;
t265 = -t603 - t670;
t415 = t422 * pkin(7);
t343 = t424 * pkin(2) + t415;
t226 = -t343 - t612;
t635 = t226 + t343;
t749 = t635 + t647;
t748 = 0.2e1 * qJD(3);
t542 = t429 * t430;
t285 = t422 * t542;
t704 = rSges(6,2) * t421;
t706 = rSges(6,1) * t423;
t339 = -t704 + t706;
t293 = t339 * t429;
t436 = cos(qJ(1));
t427 = t436 * pkin(1);
t439 = qJD(1) ^ 2;
t604 = t439 * t427;
t652 = t435 * qJD(3) ^ 2;
t477 = -pkin(3) * t424 * t652 + t430 * t371 - t604;
t181 = (-t424 * t709 - t415) * t430 - t620;
t299 = t343 * t430;
t649 = -t181 - t299;
t33 = t285 * t336 - t293 * t322 + (t285 * t421 - t322 * t658) * pkin(4) + (t396 + t649 - t650) * t430 + t477;
t602 = t436 * t703;
t533 = -t371 + t602;
t739 = t566 * t321 - t396;
t486 = t533 + t739;
t85 = t430 * t749 + t486;
t747 = t430 * t85 + t33;
t624 = rSges(5,2) * t597 + rSges(5,3) * t657;
t154 = rSges(5,1) * t489 - rSges(5,2) * t591 + t624;
t286 = t424 * t542;
t705 = rSges(5,2) * t421;
t707 = rSges(5,1) * t423;
t340 = -t705 + t707;
t294 = t340 * t429;
t337 = rSges(5,1) * t421 + rSges(5,2) * t423;
t712 = pkin(1) * t434;
t605 = t439 * t712;
t535 = t430 * (-pkin(2) * t662 + t382) - t605;
t509 = t430 * t180 + t535;
t592 = t422 * t652;
t64 = t154 * t430 - t286 * t337 - t294 * t321 + (-t430 * t577 - t592) * pkin(3) + t509;
t245 = rSges(5,1) * t663 - rSges(5,2) * t666 - t424 * rSges(5,3);
t491 = -t322 * t337 - t541;
t465 = t491 - t603;
t636 = t225 - t342;
t96 = (-t245 + t636) * t430 + t465;
t249 = t321 * t337;
t616 = rSges(5,1) * t659 + t422 * rSges(5,3);
t247 = -rSges(5,2) * t665 + t616;
t586 = t247 + t635;
t97 = t430 * t586 - t249 + t533;
t746 = (-t64 * t705 + t97 * (-rSges(5,1) * t664 - rSges(5,2) * t658 - t601) + (t96 * (-t418 - t707) - t97 * t437) * t430) * t424;
t582 = -rSges(5,1) * t598 + rSges(5,2) * t751;
t156 = t430 * t616 + t582;
t65 = t285 * t337 - t294 * t322 + (-t156 + t649) * t430 + t477;
t745 = t430 * t97 + t65;
t309 = t430 * t342;
t744 = t309 - t211;
t655 = t424 * t435;
t743 = rSges(4,1) * t655 + t422 * rSges(4,3);
t741 = t395 - t541;
t425 = Icges(4,4) * t435;
t522 = -Icges(4,2) * t433 + t425;
t376 = Icges(4,1) * t433 + t425;
t661 = t422 * t433;
t613 = rSges(4,2) * t661 + t424 * rSges(4,3);
t660 = t422 * t435;
t262 = rSges(4,1) * t660 - t613;
t243 = t430 * t262;
t606 = qJD(3) * t435;
t599 = rSges(4,2) * t606;
t653 = t430 * t433;
t505 = rSges(4,2) * t422 * t653 + rSges(4,3) * t657 - t424 * t599;
t740 = -rSges(4,1) * t577 + t243 + t309 + t382 + t505;
t280 = t337 * t422;
t282 = t337 * t424;
t609 = qJD(3) * t424;
t610 = qJD(3) * t422;
t641 = -t225 * t610 + t226 * t609;
t92 = t245 * t321 + t247 * t322 + t641;
t738 = -(t280 * t430 - t322 * t340) * t96 - t92 * (-t321 * t280 - t282 * t322) - t97 * (-t430 * t282 - t321 * t340);
t373 = Icges(4,5) * t435 - Icges(4,6) * t433;
t372 = Icges(4,5) * t433 + Icges(4,6) * t435;
t467 = Icges(4,3) * t430 - qJD(3) * t372;
t694 = Icges(4,4) * t433;
t377 = Icges(4,1) * t435 - t694;
t504 = t377 * t424;
t261 = Icges(4,5) * t422 + t504;
t501 = t522 * t424;
t259 = Icges(4,6) * t422 + t501;
t678 = t259 * t433;
t513 = -t261 * t435 + t678;
t733 = -t373 * t662 + t424 * t467 + t430 * t513;
t498 = t373 * t424;
t389 = Icges(4,4) * t661;
t260 = Icges(4,1) * t660 - Icges(4,5) * t424 - t389;
t258 = Icges(4,4) * t660 - Icges(4,2) * t661 - Icges(4,6) * t424;
t679 = t258 * t433;
t514 = -t260 * t435 + t679;
t732 = t422 * t467 + (t498 + t514) * t430;
t383 = rSges(4,1) * t433 + rSges(4,2) * t435;
t310 = t383 * t610;
t656 = t424 * t433;
t263 = -rSges(4,2) * t656 + t743;
t487 = t263 + t343;
t729 = t430 * t487 - t310;
t374 = Icges(4,2) * t435 + t694;
t510 = t374 * t433 - t376 * t435;
t728 = t373 * qJD(3) + t430 * t510;
t256 = Icges(4,5) * t660 - Icges(4,6) * t661 - Icges(4,3) * t424;
t113 = -t256 * t424 - t422 * t514;
t224 = t430 * t245;
t727 = -rSges(5,1) * t594 - t418 * t662 + t224 + t624 + t744;
t628 = -Icges(4,2) * t660 + t260 - t389;
t630 = t376 * t422 + t258;
t726 = -t433 * t628 - t435 * t630;
t223 = t430 * t244;
t32 = -pkin(3) * t592 - t286 * t336 - t293 * t321 + (-t286 * t421 - t321 * t658) * pkin(4) + (t651 + t741) * t430 + t509;
t464 = t322 * t566 + t741;
t565 = -t354 - t706;
t84 = -t603 + (t636 - t648) * t430 + t464;
t701 = t430 * t84;
t725 = (t33 * t565 - t84 * t311 + (-t84 * rSges(6,3) + t565 * t85) * t430) * t422 + (-t336 * t429 * t85 - t32 * t704 + t33 * t428 + t565 * t701) * t424 + (t190 * t430 + t223 - t464 + t744 + t778) * t85 + t749 * t701;
t722 = t285 / 0.2e1;
t721 = t286 / 0.2e1;
t720 = -t321 / 0.2e1;
t719 = t321 / 0.2e1;
t718 = -t322 / 0.2e1;
t717 = t322 / 0.2e1;
t716 = t422 / 0.2e1;
t715 = -t424 / 0.2e1;
t714 = -t430 / 0.2e1;
t713 = t430 / 0.2e1;
t711 = pkin(3) * t433;
t708 = rSges(4,1) * t435;
t55 = t321 * t648 + t322 * t647 + t641;
t702 = t430 * t55;
t699 = t430 * t96;
t580 = t383 * t609;
t490 = -t580 - t603;
t151 = (-t262 - t342) * t430 + t490;
t688 = t151 * t424;
t668 = t372 * t424;
t184 = -t422 * t510 - t668;
t685 = t184 * t430;
t677 = t321 * t423;
t669 = t372 * t422;
t667 = t373 * t430;
t640 = -t422 * t225 + t424 * t226;
t639 = t422 * t245 + t424 * t247;
t638 = -t422 * t256 - t260 * t655;
t257 = Icges(4,3) * t422 + t498;
t637 = t422 * t257 + t261 * t655;
t629 = -t376 * t424 - t259;
t627 = -t374 * t424 + t261;
t320 = pkin(4) * t597;
t626 = t336 * t662 + t320;
t615 = -t374 + t377;
t614 = t376 + t522;
t608 = qJD(3) * t430;
t600 = pkin(3) * t606;
t590 = t424 * t653;
t589 = t422 * t156 + (t154 + t224) * t424;
t588 = t422 * t181 + t760 * t424;
t581 = rSges(4,1) * t579 + rSges(4,2) * t590 + t422 * t599;
t576 = t662 / 0.2e1;
t575 = t657 / 0.2e1;
t574 = -pkin(2) - t708;
t573 = -t610 / 0.2e1;
t570 = t609 / 0.2e1;
t568 = -t337 - t711;
t356 = -t710 - t711;
t567 = t356 + t711;
t341 = t424 * rSges(3,1) - rSges(3,2) * t422;
t564 = t433 * (-t422 ^ 2 - t424 ^ 2);
t279 = t336 * t422;
t281 = t336 * t424;
t553 = -t321 * t279 - t281 * t322;
t220 = t261 * t660;
t552 = t257 * t424 - t220;
t548 = -t430 * t281 - t321 * t339;
t547 = -t256 + t678;
t540 = t648 * t422 + t647 * t424;
t538 = -t612 + t616;
t534 = -pkin(4) * t658 - t293;
t296 = rSges(3,1) * t657 - rSges(3,2) * t662;
t532 = -t294 - t600;
t531 = -pkin(4) * t591 + t279 * t430 - t322 * t339;
t529 = -rSges(4,2) * t433 + t708;
t528 = -t422 * t97 - t424 * t96;
t152 = t602 + t729;
t519 = -t152 * t422 - t688;
t170 = t258 * t435 + t260 * t433;
t171 = t259 * t435 + t261 * t433;
t508 = -t336 + t356;
t507 = t190 * t657 + t650 * t422 + (t223 + t651) * t424;
t114 = -t259 * t661 - t552;
t493 = (-t113 * t424 + t114 * t422) * qJD(3);
t115 = -t258 * t656 - t638;
t116 = -t259 * t656 + t637;
t492 = (-t115 * t424 + t116 * t422) * qJD(3);
t162 = (t262 * t422 + t263 * t424) * qJD(3);
t488 = -t245 - t619;
t483 = t534 - t600;
t482 = -t226 * t422 * t608 + t181 * t610 + t760 * t609;
t480 = -t433 * t627 + t435 * t629;
t479 = t422 * t574 + t416 + t613;
t478 = -rSges(5,3) * t662 - t582 + t620;
t476 = (-t433 * t614 + t435 * t615) * t430;
t469 = Icges(4,5) * t430 - qJD(3) * t376;
t468 = Icges(4,6) * t430 - qJD(3) * t374;
t174 = t424 * t468 - t522 * t662;
t176 = -t377 * t662 + t424 * t469;
t449 = -qJD(3) * t171 - t174 * t433 + t176 * t435 + t257 * t430;
t175 = t422 * t468 + t430 * t501;
t177 = t422 * t469 + t430 * t504;
t448 = -qJD(3) * t170 - t175 * t433 + t177 * t435 + t256 * t430;
t345 = t522 * qJD(3);
t346 = t377 * qJD(3);
t447 = -t345 * t433 + t346 * t435 + t372 * t430 + (-t374 * t435 - t376 * t433) * qJD(3);
t446 = (t574 * t688 + (t151 * (-rSges(4,3) - pkin(7)) + t152 * t574) * t422) * t430;
t445 = (t765 * t422 - t766 * t424) * t722 + (t763 * t422 - t764 * t424) * t721 + (-t422 * t753 + t424 * t754) * t720 + ((t763 * t430 + t776) * t424 + (t764 * t430 + t775) * t422) * t719 + ((t765 * t430 + t774) * t424 + (t766 * t430 + t773) * t422) * t718 + (t422 * t754 + t424 * t753) * t717 + (t764 * t285 + t763 * t286 + t775 * t321 + t776 * t322 + t768 * t430) * t716 + (t766 * t285 + t765 * t286 + t773 * t321 + t774 * t322 + t767 * t430) * t715 + (t784 * t421 + t783 * t423) * t714 + ((t761 * t430 + t770) * t424 + (t762 * t430 + t769) * t422) * t713 + t772 * t576 + t771 * t575;
t185 = -t424 * t510 + t669;
t182 = t185 * t430;
t58 = t493 + t685;
t59 = t182 + t492;
t88 = -qJD(3) * t514 + t175 * t435 + t177 * t433;
t89 = -qJD(3) * t513 + t174 * t435 + t176 * t433;
t93 = t422 * t728 + t447 * t424;
t94 = t447 * t422 - t424 * t728;
t441 = (t182 + ((t114 - t220 + (t257 + t679) * t424 + t638) * t424 + t637 * t422) * qJD(3)) * t570 + (((t758 * t422 + t424 * t759) * t421 + t765 + t790 + t791) * t322 + (t788 * t663 + (t422 * t759 - t758 * t424) * t421 - t750 + t766 - t789) * t321 + t779) * t717 + (-t685 + ((t424 * t547 + t116 - t637) * t424 + (t422 * t547 + t115 + t552) * t422) * qJD(3) + t58) * t573 + (t89 + t93) * t610 / 0.2e1 - (t88 + t94 + t59) * t609 / 0.2e1 + (-qJD(3) * t510 + t345 * t435 + t346 * t433 + t803 * t421 + t802 * t423) * t430 + (t762 - t794) * t722 + (t761 + t793) * t721 + ((t424 * t752 + t750 + t763 - t792) * t322 + ((t804 + t810) * t424 + t752 * t422 + t764 - t812) * t321 + t772 + t777) * t720 + (t768 + t769) * t719 + (t767 - t770 + t771) * t718 + ((t170 + t184) * t422 + (t171 + t185) * t424) * t608 / 0.2e1;
t351 = t529 * qJD(3);
t307 = t383 * t424;
t306 = t383 * t422;
t266 = t341 * t430 + t602;
t255 = t567 * t424;
t254 = t567 * t422;
t228 = -t296 * t430 - t604;
t227 = -t430 * t670 - t605;
t179 = t430 * t743 - t581;
t178 = (-t430 * t660 - t577) * rSges(4,1) + t505;
t99 = -t604 - t351 * t609 + (-t179 - t299 + t310) * t430;
t98 = t178 * t430 + (-t351 * t422 - t383 * t657) * qJD(3) + t535;
t23 = t154 * t322 + t156 * t321 + t245 * t286 - t247 * t285 + t482;
t9 = -t285 * t647 + t286 * t648 + t321 * t650 + t322 * t651 + t482;
t1 = [t441 + m(3) * (t228 * (-t338 - t712) + t227 * (t341 + t427) + (-t296 - t602 + t266) * t265) + (t33 * (t618 - t712) + t32 * (t427 + t539) + (t526 - t602 + t486) * t84 + t725) * m(6) + (t65 * (t488 - t712) + t96 * (t478 - t602) + t64 * (t427 + t538) + (-t603 - t465 + t96 + t727) * t97 + t746) * m(5) + (t99 * (t479 - t712) + t151 * (t581 - t602) + t98 * (t427 + t487) + t446 + (t151 - t490 - t603 + t740) * t152) * m(4); t441 + (t32 * t539 + t33 * t618 + (t526 - t371 + t739) * t84 + t725) * m(6) + (t488 * t65 + t538 * t64 + t586 * t699 + (-t491 + t727) * t97 + (-t249 - t371 + t478) * t96 + t746) * m(5) + (t479 * t99 + t487 * t98 + t446 + (t580 + t740) * t152 + (t581 + t729) * t151) * m(4) + (-(-t265 * t341 - t266 * t338) * t430 + t227 * t341 - t228 * t338 - t265 * t296 - t266 * t670) * m(3); t445 + ((-t610 * t668 + t667) * t422 + (t476 + (-t726 * t424 + (t669 + t480) * t422) * qJD(3)) * t424) * t573 + ((-t609 * t669 - t667) * t424 + (t476 + (t480 * t422 + (t668 - t726) * t424) * qJD(3)) * t422) * t570 + ((t171 * t430 - t88) * t424 + (t170 * t430 + t89) * t422) * t713 + ((t433 * t615 + t435 * t614) * t430 + ((t422 * t627 - t424 * t628) * t435 + (t422 * t629 + t424 * t630) * t433) * qJD(3)) * t714 + (t430 * t93 + ((t116 * t430 - t422 * t732 - t448 * t424) * t424 + (t115 * t430 + t422 * t733 + t449 * t424) * t422) * t748) * t716 + (t430 * t94 + ((t114 * t430 - t448 * t422 + t424 * t732) * t424 + (t113 * t430 + t449 * t422 - t424 * t733) * t422) * t748) * t715 + (t58 + t493) * t576 + (t59 + t492) * t575 + (t84 * t626 + t9 * (t540 + t640) + t55 * (t507 + t588) + (t483 * t84 + t508 * t747) * t424 + (t32 * t508 + t85 * t483 + (-t226 - t647) * t702) * t422 - t84 * (-t254 * t430 + t531) - t85 * (-pkin(4) * t677 + t255 * t430 + t548) - t55 * (t254 * t321 + t255 * t322 + t553) - (-t85 * t590 + ((-t422 * t85 - t424 * t84) * t435 + t55 * t564) * qJD(3)) * pkin(3)) * m(6) + (t23 * (t639 + t640) + t92 * (t588 + t589) + (t532 * t96 + t568 * t745) * t424 + (t64 * t568 + t97 * t532 + (t96 * t337 + t92 * (-t226 - t247)) * t430) * t422 - (-t97 * t590 + (t435 * t528 + t564 * t92) * qJD(3)) * pkin(3) + t738) * m(5) + (0.2e1 * t162 * ((t178 + t243) * t424 + (-t263 * t430 + t179) * t422) + t519 * t351 + ((-t152 * t430 - t99) * t424 + (t151 * t430 - t98) * t422) * t383 - (t151 * t306 - t152 * t307) * t430 - (t162 * (-t306 * t422 - t307 * t424) + t519 * t529) * qJD(3)) * m(4); t445 + (t9 * t540 + t55 * t507 + (t534 * t85 - t647 * t702) * t422 - t85 * t548 - t55 * t553 - (-t85 * t677 + (-t85 * t657 + t55 * (-t321 * t422 - t322 * t424)) * t421) * pkin(4) + (t32 * t422 + t424 * t747) * t566 + (t424 * t534 - t320 - t531 + t626) * t84) * m(6) + (t23 * t639 + t92 * (-t247 * t662 + t589) + t528 * t294 + (-t745 * t424 + (-t64 + t699) * t422) * t337 + t738) * m(5); 0.2e1 * (t32 * t715 + t33 * t716 - t55 * (-t321 * t424 + t322 * t422) / 0.2e1) * m(6);];
tauc = t1(:);
