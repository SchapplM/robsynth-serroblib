% Calculate vector of inverse dynamics joint torques for
% S5RRRRP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d4]';
% m [6x1]
%   mass of all robot links (including the base)
% rSges [6x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [6x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [5x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2022-01-20 11:49
% Revision: fd3771346c4aea32fdeb66112c511235427c26a7 (2022-01-20)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S5RRRRP2_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1),zeros(6,1),zeros(6,3),zeros(6,6)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRP2_invdynJ_fixb_slag_vp1: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRP2_invdynJ_fixb_slag_vp1: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRRP2_invdynJ_fixb_slag_vp1: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRRP2_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRRP2_invdynJ_fixb_slag_vp1: pkin has to be [8x1] (double)');
assert(isreal(m) && all(size(m) == [6 1]), ...
  'S5RRRRP2_invdynJ_fixb_slag_vp1: m has to be [6x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [6,3]), ...
  'S5RRRRP2_invdynJ_fixb_slag_vp1: rSges has to be [6x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [6 6]), ...
  'S5RRRRP2_invdynJ_fixb_slag_vp1: Icges has to be [6x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2022-01-20 11:48:45
% EndTime: 2022-01-20 11:49:23
% DurationCPUTime: 30.66s
% Computational Cost: add. (25350->756), mult. (20028->920), div. (0->0), fcn. (15772->8), ass. (0->424)
t867 = Icges(5,4) + Icges(6,4);
t868 = Icges(5,1) + Icges(6,1);
t864 = Icges(5,2) + Icges(6,2);
t862 = Icges(5,5) + Icges(6,5);
t861 = Icges(5,6) + Icges(6,6);
t463 = qJ(3) + qJ(4);
t454 = cos(t463);
t866 = t867 * t454;
t452 = sin(t463);
t865 = t867 * t452;
t842 = t454 * t864 + t865;
t853 = t454 * t868 - t865;
t863 = -t452 * t864 + t866;
t843 = -t452 * t861 + t454 * t862;
t841 = t452 * t868 + t866;
t464 = qJ(1) + qJ(2);
t453 = sin(t464);
t692 = t452 * t453;
t860 = t867 * t692;
t859 = Icges(5,3) + Icges(6,3);
t455 = cos(t464);
t690 = t453 * t454;
t794 = -t861 * t455 + t690 * t867 - t864 * t692;
t825 = t862 * t455 - t690 * t868 + t860;
t858 = t863 * t455;
t857 = t853 * t455;
t461 = qJD(3) + qJD(4);
t855 = t842 * t461;
t793 = t861 * t453 + t858;
t844 = t862 * t453 + t857;
t854 = t862 * t452 + t861 * t454;
t462 = qJD(1) + qJD(2);
t852 = t861 * t462 - t855;
t851 = -t841 * t461 + t862 * t462;
t850 = t843 * t455;
t849 = t863 + t841;
t846 = t859 * t455 - t862 * t690 + t861 * t692;
t845 = t859 * t453 + t850;
t848 = t842 * t452 - t841 * t454;
t839 = t794 * t452 + t825 * t454;
t847 = t844 * t690;
t840 = -t854 * t461 + t859 * t462;
t838 = t853 * t461 - t855;
t837 = t849 * t461;
t836 = -t851 * t453 + t794 * t461 - t857 * t462;
t689 = t453 * t462;
t835 = t851 * t455 - t793 * t461 - t853 * t689;
t834 = t852 * t453 - t825 * t461 + t858 * t462;
t833 = t852 * t455 + t844 * t461 - t689 * t863;
t446 = pkin(4) * t454;
t467 = cos(qJ(3));
t457 = t467 * pkin(3);
t447 = t457 + pkin(2);
t376 = t446 + t447;
t469 = -pkin(8) - pkin(7);
t460 = qJ(5) - t469;
t686 = t454 * t455;
t642 = rSges(6,1) * t686 + t453 * rSges(6,3);
t570 = t455 * t376 + t460 * t453 + t642;
t832 = t854 * t455;
t831 = t854 * t453;
t830 = t793 * t452;
t796 = -t848 * t453 - t832;
t795 = -t848 * t455 + t831;
t691 = t452 * t455;
t508 = -rSges(6,2) * t691 + t570;
t829 = t839 * t453;
t828 = t845 * t455 - t847;
t786 = -t845 * t453 - t844 * t686;
t827 = t846 * t453 + t825 * t686;
t826 = t846 * t455;
t802 = t826 - t829;
t801 = -t793 * t692 - t828;
t800 = -t794 * t691 - t827;
t799 = -t793 * t691 - t786;
t824 = -t837 * t452 + t838 * t454 + t854 * t462;
t823 = -t833 * t452 + t835 * t454 + t845 * t462;
t822 = t834 * t452 + t836 * t454 + t846 * t462;
t343 = t453 * t461;
t344 = t455 * t461;
t821 = (-t842 + t853) * t462 + (t841 * t453 + t794) * t344 + (-t841 * t455 - t793) * t343;
t820 = t849 * t462 + (t864 * t690 + t825 + t860) * t344 + (-t842 * t455 + t844) * t343;
t819 = t843 * t461 + t848 * t462;
t818 = (t839 + t850) * t462 + t840 * t453;
t817 = -t843 * t689 + (-t844 * t454 + t830) * t462 + t840 * t455;
t418 = t453 * t469;
t638 = -t455 * t447 + t418;
t674 = t638 + t508;
t816 = t795 * t462;
t729 = t454 * rSges(6,2);
t357 = rSges(6,1) * t452 + t729;
t737 = pkin(4) * t452;
t597 = -t357 - t737;
t422 = qJD(5) * t455;
t625 = t452 * t343;
t681 = t460 * t462;
t684 = t455 * t462;
t685 = t454 * t461;
t787 = -t452 * t684 - t453 * t685;
t560 = rSges(6,1) * t625 - t787 * rSges(6,2) - t453 * t681 + t422;
t465 = sin(qJ(3));
t633 = qJD(3) * t465;
t628 = pkin(3) * t633;
t333 = -t461 * t737 - t628;
t421 = qJD(5) * t453;
t624 = t452 * t689;
t815 = t421 + (t333 + t681) * t455 + rSges(6,2) * t624 + rSges(6,3) * t684;
t814 = t796 * t462;
t443 = t453 * pkin(7);
t364 = t455 * pkin(2) + t443;
t243 = -t364 - t638;
t662 = t243 + t364;
t813 = t662 + t674;
t812 = -t818 * t453 + t822 * t455;
t811 = t817 * t453 + t823 * t455;
t810 = t822 * t453 + t818 * t455;
t809 = t823 * t453 - t817 * t455;
t808 = t801 * t343 - t802 * t344 + t814;
t807 = t799 * t343 - t800 * t344 + t816;
t806 = t836 * t452 - t834 * t454;
t805 = t835 * t452 + t833 * t454;
t804 = t819 * t453 + t824 * t455;
t803 = t824 * t453 - t819 * t455;
t419 = t455 * t469;
t621 = t454 * t689;
t518 = -t344 * t452 - t621;
t605 = t455 * t633;
t572 = pkin(3) * t605;
t619 = t344 * t454;
t646 = t376 - t447;
t678 = t572 + (-t453 * t646 + t419) * t462 + rSges(6,1) * t518 - rSges(6,2) * t619 + t815;
t607 = t453 * t633;
t393 = pkin(3) * t607;
t645 = t462 * t418 + t393;
t677 = t333 * t453 + t462 * t642 + t646 * t684 - t560 + t645;
t798 = -t825 * t452 + t794 * t454;
t797 = t844 * t452 + t793 * t454;
t417 = t460 * t455;
t644 = t453 * t447 + t419;
t199 = t376 * t453 - t417 - t644;
t643 = rSges(6,2) * t692 + t455 * rSges(6,3);
t260 = rSges(6,1) * t690 - t643;
t675 = t199 + t260;
t790 = -t820 * t452 + t821 * t454;
t789 = t832 * t343 - t831 * t344 - t843 * t462;
t788 = t830 + t846;
t466 = sin(qJ(1));
t730 = pkin(1) * qJD(1);
t630 = t466 * t730;
t359 = rSges(3,1) * t453 + rSges(3,2) * t455;
t696 = t359 * t462;
t281 = -t630 - t696;
t358 = rSges(5,1) * t452 + rSges(5,2) * t454;
t520 = -t344 * t358 - t572;
t496 = t520 - t630;
t261 = rSges(5,1) * t690 - rSges(5,2) * t692 - t455 * rSges(5,3);
t444 = t455 * pkin(7);
t363 = pkin(2) * t453 - t444;
t242 = t363 - t644;
t663 = t242 - t363;
t615 = -t261 + t663;
t100 = t462 * t615 + t496;
t265 = t343 * t358;
t468 = cos(qJ(1));
t629 = t468 * t730;
t566 = -t393 + t629;
t772 = rSges(5,1) * t686 + t453 * rSges(5,3);
t263 = -rSges(5,2) * t691 + t772;
t613 = t263 + t662;
t101 = t462 * t613 - t265 + t566;
t296 = t358 * t453;
t298 = t358 * t455;
t438 = t454 * rSges(5,1);
t361 = -rSges(5,2) * t452 + t438;
t635 = qJD(3) * t455;
t636 = qJD(3) * t453;
t668 = -t242 * t636 + t243 * t635;
t94 = t261 * t343 + t263 * t344 + t668;
t784 = -t100 * (t296 * t462 - t344 * t361) - t101 * (-t462 * t298 - t343 * t361) - t94 * (-t343 * t296 - t298 * t344);
t610 = -rSges(5,1) * t625 + t787 * rSges(5,2);
t160 = t462 * t772 + t610;
t634 = qJD(3) * t462;
t394 = t453 * t634;
t631 = qJD(4) * t462;
t228 = t453 * t631 + t394 + (-qJDD(3) - qJDD(4)) * t455;
t309 = t361 * t461;
t459 = qJDD(1) + qJDD(2);
t324 = -qJDD(3) * t455 + t394;
t471 = qJD(1) ^ 2;
t523 = (-qJDD(1) * t466 - t468 * t471) * pkin(1);
t679 = t467 * qJD(3) ^ 2;
t738 = pkin(3) * t465;
t490 = -pkin(3) * t455 * t679 + t324 * t738 + t523;
t734 = pkin(2) - t447;
t183 = (-t455 * t734 - t443) * t462 - t645;
t314 = t364 * t462;
t676 = -t183 - t314;
t34 = t228 * t358 - t309 * t344 + (-t160 + t676) * t462 + t615 * t459 + t490;
t783 = t34 - g(1);
t649 = rSges(5,2) * t624 + rSges(5,3) * t684;
t158 = rSges(5,1) * t518 - rSges(5,2) * t619 + t649;
t323 = qJDD(3) * t453 + t455 * t634;
t227 = qJDD(4) * t453 + t455 * t631 + t323;
t406 = pkin(7) * t684;
t182 = -t572 - t406 + (t453 * t734 - t419) * t462;
t458 = t468 * pkin(1);
t739 = pkin(1) * t466;
t568 = qJDD(1) * t458 - t471 * t739;
t534 = t462 * (-pkin(2) * t689 + t406) + t459 * t364 + t568;
t479 = t462 * t182 + t459 * t243 + (-t323 * t465 - t453 * t679) * pkin(3) + t534;
t35 = t158 * t462 - t227 * t358 + t263 * t459 - t309 * t343 + t479;
t782 = t35 - g(2);
t680 = t462 * t465;
t618 = t455 * t680;
t632 = qJD(3) * t467;
t626 = rSges(4,2) * t632;
t609 = rSges(4,1) * t607 + rSges(4,2) * t618 + t453 * t626;
t682 = t455 * t467;
t771 = rSges(4,1) * t682 + t453 * rSges(4,3);
t181 = t462 * t771 - t609;
t733 = rSges(4,1) * t467;
t409 = -rSges(4,2) * t465 + t733;
t372 = t409 * qJD(3);
t407 = rSges(4,1) * t465 + rSges(4,2) * t467;
t688 = t453 * t465;
t639 = rSges(4,2) * t688 + t455 * rSges(4,3);
t687 = t453 * t467;
t278 = rSges(4,1) * t687 - t639;
t653 = -t278 - t363;
t86 = -t372 * t635 + t324 * t407 + (-t181 - t314) * t462 + t653 * t459 + t523;
t781 = t86 - g(1);
t533 = rSges(4,2) * t453 * t680 + rSges(4,3) * t684 - t455 * t626;
t180 = (-t462 * t687 - t605) * rSges(4,1) + t533;
t683 = t455 * t465;
t279 = -rSges(4,2) * t683 + t771;
t87 = t180 * t462 + t279 * t459 - t323 * t407 - t372 * t636 + t534;
t780 = t87 - g(2);
t311 = rSges(3,1) * t684 - rSges(3,2) * t689;
t779 = -t311 * t462 - t359 * t459 - g(1) + t523;
t362 = t455 * rSges(3,1) - rSges(3,2) * t453;
t778 = t362 * t459 - t462 * t696 - g(2) + t568;
t437 = t454 * rSges(6,1);
t731 = rSges(6,2) * t452;
t360 = t437 - t731;
t308 = t360 * t461;
t569 = t663 - t675;
t19 = qJDD(5) * t453 + t228 * t357 - t344 * t308 + (t228 * t452 - t344 * t685) * pkin(4) + t569 * t459 + (t422 + t676 - t677) * t462 + t490;
t768 = t597 * t343 - t422;
t516 = t566 + t768;
t85 = t813 * t462 + t516;
t777 = t462 * t85 + t19;
t776 = t101 * t462 + t34;
t775 = (t101 * (-t358 * t461 - t628) + (t100 * (-t447 - t438) - t101 * t469) * t462) * t455;
t226 = t462 * t242;
t329 = t462 * t363;
t773 = t329 - t226;
t456 = Icges(4,4) * t467;
t556 = -Icges(4,2) * t465 + t456;
t400 = Icges(4,1) * t465 + t456;
t770 = g(1) * t455 + g(2) * t453;
t259 = t462 * t278;
t769 = -rSges(4,1) * t605 + t259 + t329 + t406 + t533;
t397 = Icges(4,5) * t467 - Icges(4,6) * t465;
t396 = Icges(4,5) * t465 + Icges(4,6) * t467;
t498 = Icges(4,3) * t462 - qJD(3) * t396;
t722 = Icges(4,4) * t465;
t401 = Icges(4,1) * t467 - t722;
t532 = t401 * t455;
t277 = Icges(4,5) * t453 + t532;
t529 = t556 * t455;
t275 = Icges(4,6) * t453 + t529;
t704 = t275 * t465;
t544 = -t277 * t467 + t704;
t763 = -t397 * t689 + t455 * t498 + t462 * t544;
t526 = t397 * t455;
t413 = Icges(4,4) * t688;
t276 = Icges(4,1) * t687 - Icges(4,5) * t455 - t413;
t274 = Icges(4,4) * t687 - Icges(4,2) * t688 - Icges(4,6) * t455;
t705 = t274 * t465;
t545 = -t276 * t467 + t705;
t762 = t453 * t498 + (t526 + t545) * t462;
t220 = t279 + t364;
t761 = t220 * t462 - t407 * t636;
t398 = Icges(4,2) * t467 + t722;
t539 = t398 * t465 - t400 * t467;
t758 = t397 * qJD(3) + t462 * t539;
t272 = Icges(4,5) * t687 - Icges(4,6) * t688 - Icges(4,3) * t455;
t123 = -t272 * t455 - t453 * t545;
t241 = t462 * t261;
t757 = -rSges(5,1) * t621 - t447 * t689 + t241 + t649 + t773;
t655 = -Icges(4,2) * t687 + t276 - t413;
t657 = t400 * t453 + t274;
t756 = -t465 * t655 - t467 * t657;
t20 = -qJDD(5) * t455 - t227 * t357 - t343 * t308 + t674 * t459 + (-t227 * t452 - t343 * t685) * pkin(4) + (t421 + t678) * t462 + t479;
t240 = t462 * t260;
t495 = t344 * t597 + t421 - t572;
t596 = -t376 - t437;
t84 = t462 * t569 + t495 - t630;
t727 = t462 * t84;
t755 = (t19 * t596 - t84 * t333 + (-t84 * rSges(6,3) + t596 * t85) * t462) * t453 + (-t357 * t461 * t85 + t19 * t460 - t20 * t731 + t596 * t727) * t455 + (t199 * t462 + t240 - t495 + t773 + t815) * t85 + t813 * t727;
t752 = t227 / 0.2e1;
t751 = t228 / 0.2e1;
t750 = t323 / 0.2e1;
t749 = t324 / 0.2e1;
t748 = -t343 / 0.2e1;
t747 = t343 / 0.2e1;
t746 = -t344 / 0.2e1;
t745 = t344 / 0.2e1;
t744 = t453 / 0.2e1;
t743 = -t455 / 0.2e1;
t742 = t459 / 0.2e1;
t741 = -t462 / 0.2e1;
t740 = t462 / 0.2e1;
t57 = t343 * t675 + t344 * t674 + t668;
t728 = t462 * t57;
t716 = t100 * t462;
t608 = t407 * t635;
t519 = -t608 - t630;
t155 = t462 * t653 + t519;
t714 = t155 * t455;
t694 = t396 * t455;
t190 = -t453 * t539 - t694;
t711 = t190 * t462;
t703 = t343 * t454;
t695 = t396 * t453;
t693 = t397 * t462;
t667 = -t453 * t242 + t455 * t243;
t666 = t453 * t261 + t455 * t263;
t665 = -t453 * t272 - t276 * t682;
t273 = Icges(4,3) * t453 + t526;
t664 = t453 * t273 + t277 * t682;
t656 = -t400 * t455 - t275;
t654 = -t398 * t455 + t277;
t342 = pkin(4) * t624;
t652 = t357 * t689 + t342;
t641 = -t398 + t401;
t640 = t400 + t556;
t627 = pkin(3) * t632;
t617 = t453 * t160 + (t158 + t241) * t455;
t616 = t453 * t183 + (t182 - t226) * t455;
t604 = t689 / 0.2e1;
t603 = t684 / 0.2e1;
t602 = -pkin(2) - t733;
t601 = -t636 / 0.2e1;
t600 = t636 / 0.2e1;
t599 = -t635 / 0.2e1;
t598 = t635 / 0.2e1;
t517 = -t358 - t738;
t595 = t465 * (-t453 ^ 2 - t455 ^ 2);
t295 = t357 * t453;
t297 = t357 * t455;
t584 = -t343 * t295 - t297 * t344;
t237 = t277 * t687;
t583 = t273 * t455 - t237;
t579 = -t462 * t297 - t343 * t360;
t578 = -t272 + t704;
t571 = t675 * t453 + t674 * t455;
t567 = -pkin(4) * t685 - t308;
t565 = -t309 - t627;
t564 = t360 + t446;
t378 = -t737 - t738;
t563 = -pkin(4) * t619 + t295 * t462 - t344 * t360;
t410 = rSges(2,1) * t468 - rSges(2,2) * t466;
t408 = rSges(2,1) * t466 + rSges(2,2) * t468;
t553 = -t100 * t455 - t101 * t453;
t124 = -t275 * t688 - t583;
t552 = -t123 * t455 + t124 * t453;
t125 = -t274 * t683 - t665;
t126 = -t275 * t683 + t664;
t551 = -t125 * t455 + t126 * t453;
t156 = t629 + t761;
t550 = -t156 * t453 - t714;
t172 = t274 * t467 + t276 * t465;
t173 = t275 * t467 + t277 * t465;
t543 = t278 * t453 + t279 * t455;
t540 = t398 * t467 + t400 * t465;
t538 = -t357 + t378;
t537 = t182 * t635 + t183 * t636 - t323 * t242 - t243 * t324;
t536 = t199 * t684 + t677 * t453 + (t240 + t678) * t455;
t196 = -t261 - t644;
t197 = t263 - t638;
t513 = t567 - t627;
t511 = -t465 * t654 + t467 * t656;
t219 = t453 * t602 + t444 + t639;
t510 = -rSges(5,3) * t689 - t610 + t645;
t509 = t453 * t596 + t417 + t643;
t507 = (-t465 * t640 + t467 * t641) * t462;
t500 = Icges(4,5) * t462 - qJD(3) * t400;
t499 = Icges(4,6) * t462 - qJD(3) * t398;
t176 = t455 * t499 - t556 * t689;
t178 = -t401 * t689 + t455 * t500;
t482 = -qJD(3) * t173 - t176 * t465 + t178 * t467 + t273 * t462;
t177 = t453 * t499 + t462 * t529;
t179 = t453 * t500 + t462 * t532;
t481 = -qJD(3) * t172 - t177 * t465 + t179 * t467 + t272 * t462;
t366 = t556 * qJD(3);
t367 = t401 * qJD(3);
t480 = -qJD(3) * t540 - t366 * t465 + t367 * t467 + t396 * t462;
t478 = (t602 * t714 + (t155 * (-rSges(4,3) - pkin(7)) + t156 * t602) * t453) * t462;
t477 = (t799 * t453 - t800 * t455) * t752 + (t801 * t453 - t802 * t455) * t751 + (-t789 * t453 + t790 * t455) * t748 + ((t799 * t462 + t812) * t455 + (t800 * t462 + t811) * t453) * t747 + ((t801 * t462 + t810) * t455 + (t802 * t462 + t809) * t453) * t746 + (t790 * t453 + t789 * t455) * t745 + (t799 * t227 + t800 * t228 + t811 * t343 + t812 * t344 + t795 * t459 + t804 * t462) * t744 + (t801 * t227 + t802 * t228 + t809 * t343 + t810 * t344 + t796 * t459 + t803 * t462) * t743 + (t797 * t453 - t798 * t455) * t742 + (t821 * t452 + t820 * t454) * t741 + ((t797 * t462 + t806) * t455 + (t798 * t462 + t805) * t453) * t740 + t808 * t604 + t807 * t603;
t191 = -t455 * t539 + t695;
t184 = t191 * t462;
t64 = qJD(3) * t552 + t711;
t65 = qJD(3) * t551 + t184;
t90 = -qJD(3) * t545 + t177 * t467 + t179 * t465;
t91 = -qJD(3) * t544 + t176 * t467 + t178 * t465;
t95 = t453 * t758 + t480 * t455;
t96 = t480 * t453 - t455 * t758;
t472 = (t184 + ((t124 - t237 + (t273 + t705) * t455 + t665) * t455 + t664 * t453) * qJD(3)) * t598 + (t191 + t173) * t750 + (t190 + t172) * t749 + (((t793 * t453 + t794 * t455) * t452 + t801 + t827 + t828) * t344 + (t825 * t690 + (t794 * t453 - t793 * t455) * t452 - t786 + t802 - t826) * t343 + t816) * t745 + (t64 - t711 + ((t455 * t578 + t126 - t664) * t455 + (t453 * t578 + t125 + t583) * t453) * qJD(3)) * t601 + (t91 + t95) * t600 + (t90 + t96 + t65) * t599 + (-qJD(3) * t539 + t366 * t467 + t367 * t465 + t838 * t452 + t837 * t454) * t462 + (t795 + t797) * t752 + (t796 + t798) * t751 + ((t788 * t455 + t786 + t799 - t829) * t344 + ((t839 + t845) * t455 + t788 * t453 + t800 - t847) * t343 + t808 - t814) * t748 + (t804 + t805) * t747 + (t841 * t452 + t842 * t454 + Icges(3,3) + t540) * t459 + (t803 - t806 + t807) * t746;
t331 = t455 * t378;
t330 = t453 * t378;
t322 = t407 * t455;
t321 = t407 * t453;
t282 = t362 * t462 + t629;
t271 = pkin(3) * t683 + t331;
t270 = pkin(3) * t688 + t330;
t166 = t543 * qJD(3);
t39 = t482 * t453 - t455 * t763;
t38 = t481 * t453 - t455 * t762;
t37 = t453 * t763 + t482 * t455;
t36 = t453 * t762 + t481 * t455;
t21 = t158 * t344 + t160 * t343 + t227 * t261 - t228 * t263 + t537;
t9 = t227 * t675 - t228 * t674 + t343 * t677 + t344 * t678 + t537;
t1 = [Icges(2,3) * qJDD(1) + t472 + (t778 * (t362 + t458) + t779 * (-t359 - t739) + (-t311 - t629 + t282) * t281) * m(3) + ((t408 ^ 2 + t410 ^ 2) * qJDD(1) + g(1) * t408 - g(2) * t410) * m(2) + (t19 * (t643 - t739) + t20 * (t458 + t570) - g(1) * (t509 - t739) - g(2) * (t458 + t508) + (t560 - t629 + t516) * t84 + t755) * m(6) + (t100 * (t510 - t629) + t782 * (t197 + t458) + t783 * (t196 - t739) + (t100 - t496 - t630 + t757) * t101 + t775) * m(5) + (t155 * (t609 - t629) + t478 + t780 * (t220 + t458) + t781 * (t219 - t739) + (-t630 + t155 - t519 + t769) * t156) * m(4); t472 + (-g(1) * t509 - g(2) * t508 + t19 * t643 + t20 * t570 + (t560 - t393 + t768) * t84 + t755) * m(6) + (t613 * t716 + t782 * t197 + t783 * t196 + (-t520 + t757) * t101 + (-t265 - t393 + t510) * t100 + t775) * m(5) + (t478 + t780 * t220 + t781 * t219 + (t608 + t769) * t156 + (t609 + t761) * t155) * m(4) + (-t281 * t311 - t282 * t696 + (t281 * t462 + t778) * t362 + (t282 * t462 - t779) * t359) * m(3); t65 * t603 + t64 * t604 + ((t126 * t462 - t36) * t455 + (t125 * t462 + t37) * t453) * t600 + (-t172 * t455 + t173 * t453) * t742 + t551 * t750 + t552 * t749 + ((-t635 * t695 - t693) * t455 + (t507 + (t511 * t453 + (t694 - t756) * t455) * qJD(3)) * t453) * t598 + ((t465 * t641 + t467 * t640) * t462 + ((t453 * t654 - t455 * t655) * t467 + (t453 * t656 + t455 * t657) * t465) * qJD(3)) * t741 + (t123 * t324 + t124 * t323 + t190 * t459 + t462 * t96 + (-t38 * t455 + t39 * t453) * qJD(3)) * t743 + ((-t636 * t694 + t693) * t453 + (t507 + (-t756 * t455 + (t695 + t511) * t453) * qJD(3)) * t455) * t601 + ((t124 * t462 - t38) * t455 + (t123 * t462 + t39) * t453) * t599 + ((t173 * t462 - t90) * t455 + (t172 * t462 + t91) * t453) * t740 + t477 + (t125 * t324 + t126 * t323 + t191 * t459 + t462 * t95 + (-t36 * t455 + t37 * t453) * qJD(3)) * t744 + (-t84 * (-t270 * t462 + t563) - t85 * (-pkin(4) * t703 + t271 * t462 + t579) - t57 * (t270 * t343 + t271 * t344 + t584) - (-t85 * t618 + ((-t453 * t85 - t455 * t84) * t467 + t57 * t595) * qJD(3)) * pkin(3) + t84 * t652 + t9 * (t571 + t667) + t57 * (t536 + t616) + (t513 * t84 + t538 * t777) * t455 + (t20 * t538 + t85 * t513 + (-t243 - t674) * t728) * t453 - g(1) * (t331 - t297) - g(2) * (t330 - t295) - g(3) * (t457 + t564)) * m(6) + (t21 * (t666 + t667) + t94 * (t616 + t617) + (t100 * t565 + t517 * t776) * t455 + (t35 * t517 + t101 * t565 + (t100 * t358 + t94 * (-t243 - t263)) * t462) * t453 - (-t101 * t618 + (t467 * t553 + t595 * t94) * qJD(3)) * pkin(3) - g(3) * (t361 + t457) - t770 * t517 + t784) * m(5) + ((t278 * t323 - t279 * t324 + (t180 * t455 + t181 * t453) * qJD(3)) * t543 + t166 * ((t180 + t259) * t455 + (-t279 * t462 + t181) * t453) + t550 * t372 + ((-t156 * t462 - t86) * t455 + (t155 * t462 - t87) * t453) * t407 - (t155 * t321 - t156 * t322) * t462 - (t166 * (-t321 * t453 - t322 * t455) + t550 * t409) * qJD(3) + g(1) * t322 + g(2) * t321 - g(3) * t409) * m(4); t477 + (t9 * t571 + t57 * t536 + (t567 * t85 - t674 * t728) * t453 - t85 * t579 - t57 * t584 - (-t85 * t703 + (-t85 * t684 + t57 * (-t343 * t453 - t344 * t455)) * t452) * pkin(4) - g(3) * t564 + (t20 * t453 + t455 * t777) * t597 + (t455 * t567 - t342 - t563 + t652) * t84 - t770 * (-t729 + (-rSges(6,1) - pkin(4)) * t452)) * m(6) + (t21 * t666 + t94 * (-t263 * t689 + t617) + t553 * t309 + (-t776 * t455 + (-t35 + t716) * t453) * t358 + g(1) * t298 + g(2) * t296 - g(3) * t361 + t784) * m(5); ((t57 * t343 + g(2) - t20) * t455 + (-t57 * t344 - g(1) + t19) * t453) * m(6);];
tau = t1;
