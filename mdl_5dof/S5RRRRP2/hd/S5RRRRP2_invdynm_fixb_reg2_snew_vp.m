% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RRRRP2
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d4]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2022-01-20 11:49
% Revision: fd3771346c4aea32fdeb66112c511235427c26a7 (2022-01-20)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RRRRP2_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRP2_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRP2_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRRP2_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRRP2_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRRP2_invdynm_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2022-01-20 11:49:43
% EndTime: 2022-01-20 11:49:55
% DurationCPUTime: 12.49s
% Computational Cost: add. (64133->541), mult. (82998->687), div. (0->0), fcn. (53268->8), ass. (0->387)
t1029 = qJDD(3) + qJDD(4);
t1034 = sin(qJ(4));
t1038 = cos(qJ(4));
t1032 = qJD(1) + qJD(2);
t1039 = cos(qJ(3));
t1094 = t1032 * t1039;
t1035 = sin(qJ(3));
t1095 = t1032 * t1035;
t978 = t1034 * t1095 - t1038 * t1094;
t980 = t1034 * t1094 + t1038 * t1095;
t932 = t980 * t978;
t1146 = t932 - t1029;
t1154 = t1146 * pkin(4);
t1037 = sin(qJ(1));
t1041 = cos(qJ(1));
t1028 = t1032 ^ 2;
t1040 = cos(qJ(2));
t1030 = qJDD(1) + qJDD(2);
t1036 = sin(qJ(2));
t1089 = t1036 * t1030;
t996 = t1040 * t1028 + t1089;
t1086 = t1040 * t1030;
t999 = t1036 * t1028 - t1086;
t1143 = t1037 * t996 + t1041 * t999;
t1145 = pkin(6) * t999 - t1036 * g(3);
t974 = pkin(6) * t996 - t1040 * g(3);
t1153 = pkin(5) * t1143 + t1037 * t974 + t1041 * t1145;
t1144 = t1037 * t999 - t1041 * t996;
t1152 = pkin(5) * t1144 + t1037 * t1145 - t1041 * t974;
t1098 = t1028 * t1035;
t1099 = qJD(3) * t1032;
t1018 = t1041 * g(1) + t1037 * g(2);
t1043 = qJD(1) ^ 2;
t1003 = -t1043 * pkin(1) - t1018;
t1017 = t1037 * g(1) - t1041 * g(2);
t1051 = qJDD(1) * pkin(1) + t1017;
t941 = t1040 * t1003 + t1036 * t1051;
t929 = -t1028 * pkin(2) + t1030 * pkin(7) + t941;
t1107 = t1035 * t929;
t1020 = qJD(3) * t1094;
t1090 = t1035 * t1030;
t990 = t1020 + t1090;
t1044 = qJDD(3) * pkin(3) - t990 * pkin(8) - t1107 + (pkin(3) * t1098 + pkin(8) * t1099 - g(3)) * t1039;
t1006 = qJD(3) * pkin(3) - pkin(8) * t1095;
t1138 = t1039 ^ 2;
t1022 = t1138 * t1028;
t1071 = qJD(3) * t1095;
t1087 = t1039 * t1030;
t1049 = -t1071 + t1087;
t908 = -t1035 * g(3) + t1039 * t929;
t861 = -pkin(3) * t1022 + t1049 * pkin(8) - qJD(3) * t1006 + t908;
t817 = t1034 * t861 - t1038 * t1044;
t1031 = qJD(3) + qJD(4);
t966 = t1031 * t978;
t1046 = qJ(5) * t966 + 0.2e1 * qJD(5) * t980 + t1154 + t817;
t895 = -t978 * qJD(4) + t1034 * t1049 + t1038 * t990;
t775 = t895 * qJ(5) + t1046;
t1045 = -t775 - t1154;
t1102 = t1038 * t1146;
t1027 = t1031 ^ 2;
t976 = t978 ^ 2;
t915 = -t1027 - t976;
t852 = t1034 * t915 - t1102;
t851 = pkin(3) * t852;
t1151 = t1045 + t851;
t940 = t1036 * t1003 - t1040 * t1051;
t1069 = t1036 * t940 + t1040 * t941;
t888 = t1036 * t941 - t1040 * t940;
t1106 = t1037 * t888;
t1148 = t1041 * t1069 - t1106;
t1100 = t1041 * t888;
t1147 = -t1037 * t1069 - t1100;
t1109 = t1034 * t1146;
t907 = t1039 * g(3) + t1107;
t849 = t1035 * t907 + t1039 * t908;
t1142 = -t966 + t895;
t1070 = t1034 * t990 - t1038 * t1049;
t868 = (qJD(4) - t1031) * t980 + t1070;
t977 = t980 ^ 2;
t853 = t1038 * t915 + t1109;
t808 = t1035 * t853 + t1039 * t852;
t1137 = pkin(2) * t808;
t921 = t932 + t1029;
t1110 = t1034 * t921;
t956 = -t977 - t1027;
t877 = t1038 * t956 - t1110;
t1103 = t1038 * t921;
t878 = -t1034 * t956 - t1103;
t829 = t1035 * t878 + t1039 * t877;
t1136 = pkin(2) * t829;
t818 = t1034 * t1044 + t1038 * t861;
t766 = t1034 * t818 - t1038 * t817;
t1135 = pkin(3) * t766;
t872 = t966 + t895;
t823 = -t1034 * t868 - t1038 * t872;
t825 = t1034 * t872 - t1038 * t868;
t772 = -t1035 * t823 + t1039 * t825;
t898 = -t976 - t977;
t760 = t1036 * t772 - t1040 * t898;
t761 = t1036 * t898 + t1040 * t772;
t1134 = pkin(5) * (t1037 * t761 + t1041 * t760);
t809 = -t1035 * t852 + t1039 * t853;
t867 = (qJD(4) + t1031) * t980 + t1070;
t780 = t1036 * t809 - t1040 * t867;
t781 = t1036 * t867 + t1040 * t809;
t1133 = pkin(5) * (t1037 * t781 + t1041 * t780);
t830 = -t1035 * t877 + t1039 * t878;
t787 = t1036 * t830 - t1040 * t1142;
t788 = t1036 * t1142 + t1040 * t830;
t1132 = pkin(5) * (t1037 * t788 + t1041 * t787);
t1131 = pkin(6) * t760;
t1130 = pkin(6) * t780;
t1129 = pkin(6) * t787;
t770 = t1035 * t825 + t1039 * t823;
t1128 = pkin(7) * t770;
t1127 = pkin(7) * t808;
t1126 = pkin(7) * t829;
t1125 = pkin(8) * t823;
t1124 = pkin(8) * t852;
t1123 = pkin(8) * t877;
t1119 = -pkin(2) * t898 + pkin(7) * t772;
t1118 = -pkin(2) * t867 + pkin(7) * t809;
t1117 = -pkin(2) * t1142 + pkin(7) * t830;
t928 = -t1030 * pkin(2) - t1028 * pkin(7) + t940;
t1116 = -pkin(2) * t928 + pkin(7) * t849;
t1115 = qJD(5) * t978;
t1113 = t1031 * t980;
t1112 = t1034 * t775;
t866 = -t1049 * pkin(3) - pkin(8) * t1022 + t1006 * t1095 + t928;
t1111 = t1034 * t866;
t1108 = t1035 * t766;
t911 = t1035 * t928;
t1105 = t1038 * t775;
t1104 = t1038 * t866;
t1101 = t1039 * t766;
t912 = t1039 * t928;
t991 = -0.2e1 * t1071 + t1087;
t943 = t1039 * t991;
t1097 = t1031 * t1034;
t1096 = t1031 * t1038;
t1033 = t1035 ^ 2;
t1093 = t1033 * t1028;
t1016 = t1039 * t1098;
t1004 = qJDD(3) + t1016;
t1092 = t1035 * t1004;
t1005 = qJDD(3) - t1016;
t1091 = t1035 * t1005;
t1088 = t1039 * t1005;
t1084 = t1033 + t1138;
t874 = pkin(3) * t877;
t1083 = t874 - t818;
t1042 = qJD(3) ^ 2;
t1010 = -t1042 - t1093;
t955 = -t1035 * t1010 - t1088;
t989 = 0.2e1 * t1020 + t1090;
t1082 = -pkin(2) * t989 + pkin(7) * t955 + t911;
t1012 = -t1022 - t1042;
t953 = t1039 * t1012 - t1092;
t1081 = pkin(2) * t991 + pkin(7) * t953 - t912;
t1080 = t1036 * t932;
t1079 = t1040 * t932;
t1078 = -pkin(1) * t770 + pkin(6) * t761;
t1077 = -pkin(1) * t808 + pkin(6) * t781;
t1076 = -pkin(1) * t829 + pkin(6) * t788;
t821 = pkin(3) * t823;
t737 = -pkin(2) * t770 - t821;
t894 = -t980 * qJD(4) - t1070;
t959 = t1031 * pkin(4) - t980 * qJ(5);
t1055 = t976 * pkin(4) - t894 * qJ(5) + t1031 * t959 - t818;
t967 = -0.2e1 * t1115;
t776 = t967 - t1055;
t720 = t1034 * t776 - t1105;
t774 = pkin(4) * t775;
t1075 = pkin(3) * t720 - t774;
t1074 = -pkin(3) * t898 + pkin(8) * t825;
t1073 = -pkin(3) * t867 + pkin(8) * t853;
t1072 = -pkin(3) * t1142 + pkin(8) * t878;
t767 = t1034 * t817 + t1038 * t818;
t721 = t1038 * t776 + t1112;
t804 = -t894 * pkin(4) - t976 * qJ(5) + t980 * t959 + qJDD(5) + t866;
t736 = -pkin(4) * t804 + qJ(5) * t776;
t685 = -pkin(3) * t804 + pkin(8) * t721 + qJ(5) * t1112 + t1038 * t736;
t692 = -pkin(8) * t720 + qJ(5) * t1105 - t1034 * t736;
t699 = -t1035 * t720 + t1039 * t721;
t1068 = -pkin(2) * t804 + pkin(7) * t699 + t1035 * t692 + t1039 * t685;
t754 = -pkin(4) * t898 - qJ(5) * t868 + t776;
t762 = (t872 + t895) * qJ(5) + t1046;
t705 = t1034 * t762 + t1038 * t754 + t1074;
t707 = -t1034 * t754 + t1038 * t762 - t1125;
t1067 = t1035 * t707 + t1039 * t705 + t1119;
t725 = t1074 + t767;
t734 = -t766 - t1125;
t1066 = t1035 * t734 + t1039 * t725 + t1119;
t773 = -pkin(4) * t867 + qJ(5) * t915 - t804;
t731 = qJ(5) * t1109 + t1038 * t773 + t1073;
t745 = qJ(5) * t1102 - t1034 * t773 - t1124;
t1065 = t1035 * t745 + t1039 * t731 + t1118;
t796 = -qJ(5) * t956 + t804;
t841 = -pkin(4) * t1142 - qJ(5) * t921;
t735 = t1034 * t796 + t1038 * t841 + t1072;
t755 = -t1034 * t841 + t1038 * t796 - t1123;
t1064 = t1035 * t755 + t1039 * t735 + t1117;
t783 = t1073 - t1104;
t816 = t1111 - t1124;
t1063 = t1035 * t816 + t1039 * t783 + t1118;
t791 = t1072 + t1111;
t827 = t1104 - t1123;
t1062 = t1035 * t827 + t1039 * t791 + t1117;
t1000 = t1022 + t1093;
t994 = t1084 * t1030;
t1061 = pkin(2) * t1000 + pkin(7) * t994 + t849;
t1060 = -t1037 * t1017 - t1041 * t1018;
t1059 = t1036 * t1016;
t1058 = t1040 * t1016;
t1057 = t817 - t851;
t1008 = t1041 * qJDD(1) - t1037 * t1043;
t1056 = -pkin(5) * t1008 - t1037 * g(3);
t847 = t1035 * t908 - t1039 * t907;
t1053 = t1041 * t1017 - t1037 * t1018;
t1052 = pkin(4) * t956 + t1055;
t718 = t1039 * t767 - t1108;
t756 = -pkin(3) * t866 + pkin(8) * t767;
t1050 = -pkin(2) * t866 + pkin(7) * t718 - pkin(8) * t1108 + t1039 * t756;
t1047 = t874 + t1052;
t1011 = t1022 - t1042;
t1009 = t1042 - t1093;
t1007 = t1037 * qJDD(1) + t1041 * t1043;
t1001 = -t1022 + t1093;
t995 = t1039 * t1004;
t987 = -pkin(5) * t1007 + t1041 * g(3);
t986 = t1084 * t1099;
t968 = 0.2e1 * t1115;
t963 = -t977 + t1027;
t962 = t976 - t1027;
t961 = t1036 * qJDD(3) + t1040 * t986;
t960 = -t1040 * qJDD(3) + t1036 * t986;
t958 = -t1033 * t1099 + t1039 * t990;
t957 = -t1035 * t1049 - t1138 * t1099;
t954 = -t1035 * t1009 + t995;
t952 = t1039 * t1011 - t1091;
t951 = t1039 * t1010 - t1091;
t950 = t1039 * t1009 + t1092;
t949 = t1035 * t1012 + t995;
t948 = t1035 * t1011 + t1088;
t944 = (t990 + t1020) * t1035;
t937 = -t1036 * t1000 + t1040 * t994;
t935 = t1040 * t1000 + t1036 * t994;
t934 = -t1035 * t989 + t943;
t933 = t1035 * t991 + t1039 * t989;
t930 = t977 - t976;
t927 = t1035 * t1089 + t1040 * t954;
t926 = t1036 * t1087 + t1040 * t952;
t925 = -t1035 * t1086 + t1036 * t954;
t924 = t1036 * t952 - t1039 * t1086;
t919 = t1040 * t958 - t1059;
t918 = t1040 * t957 + t1059;
t917 = t1036 * t958 + t1058;
t916 = t1036 * t957 - t1058;
t910 = -pkin(1) * t996 - t941;
t909 = -pkin(1) * t999 - t940;
t906 = t1036 * t989 + t1040 * t955;
t905 = -t1036 * t991 + t1040 * t953;
t904 = t1036 * t955 - t1040 * t989;
t903 = t1036 * t953 + t1040 * t991;
t902 = (t1034 * t980 - t1038 * t978) * t1031;
t901 = (-t1034 * t978 - t1038 * t980) * t1031;
t897 = t1036 * t1001 + t1040 * t934;
t896 = -t1040 * t1001 + t1036 * t934;
t886 = pkin(1) * t888;
t885 = pkin(1) * g(3) + pkin(6) * t1069;
t884 = t1038 * t962 - t1110;
t883 = -t1034 * t963 - t1102;
t882 = t1034 * t962 + t1103;
t881 = t1038 * t963 - t1109;
t880 = -pkin(7) * t951 + t912;
t879 = -pkin(7) * t949 + t911;
t876 = -pkin(2) * t951 + t908;
t875 = -pkin(2) * t949 + t907;
t863 = pkin(4) * t872;
t860 = t1038 * t895 - t980 * t1097;
t859 = t1034 * t895 + t980 * t1096;
t858 = -t1034 * t894 + t978 * t1096;
t857 = t1038 * t894 + t978 * t1097;
t845 = -t1035 * t901 + t1039 * t902;
t844 = t1035 * t902 + t1039 * t901;
t843 = t1036 * t1029 + t1040 * t845;
t842 = -t1040 * t1029 + t1036 * t845;
t840 = pkin(1) * t903 + t1081;
t839 = pkin(1) * t904 + t1082;
t838 = -pkin(6) * t935 - t1040 * t847;
t837 = pkin(6) * t937 - t1036 * t847;
t836 = t1036 * t928 + t1040 * t849;
t835 = t1036 * t849 - t1040 * t928;
t834 = -t1035 * t882 + t1039 * t884;
t833 = -t1035 * t881 + t1039 * t883;
t832 = t1035 * t884 + t1039 * t882;
t831 = t1035 * t883 + t1039 * t881;
t824 = -t1034 * t1142 - t1038 * t867;
t822 = -t1034 * t867 + t1038 * t1142;
t819 = pkin(1) * t935 + t1061;
t813 = -t1035 * t859 + t1039 * t860;
t812 = -t1035 * t857 + t1039 * t858;
t811 = t1035 * t860 + t1039 * t859;
t810 = t1035 * t858 + t1039 * t857;
t806 = -pkin(6) * t904 - t1036 * t876 + t1040 * t880;
t805 = -pkin(6) * t903 - t1036 * t875 + t1040 * t879;
t802 = t1040 * t813 + t1080;
t801 = t1040 * t812 - t1080;
t800 = t1036 * t813 - t1079;
t799 = t1036 * t812 + t1079;
t798 = -pkin(1) * t951 + pkin(6) * t906 + t1036 * t880 + t1040 * t876;
t797 = -pkin(1) * t949 + pkin(6) * t905 + t1036 * t879 + t1040 * t875;
t795 = -t1036 * t868 + t1040 * t834;
t794 = t1036 * t872 + t1040 * t833;
t793 = t1036 * t834 + t1040 * t868;
t792 = t1036 * t833 - t1040 * t872;
t790 = -t1037 * t842 + t1041 * t843;
t789 = t1037 * t843 + t1041 * t842;
t786 = pkin(1) * t787;
t779 = pkin(1) * t780;
t777 = pkin(1) * t835 + t1116;
t771 = -t1035 * t822 + t1039 * t824;
t769 = t1035 * t824 + t1039 * t822;
t765 = -pkin(6) * t835 + (pkin(2) * t1036 - pkin(7) * t1040) * t847;
t764 = t1036 * t930 + t1040 * t771;
t763 = t1036 * t771 - t1040 * t930;
t759 = pkin(1) * t760;
t757 = -t1083 - t1136;
t751 = -t1037 * t800 + t1041 * t802;
t750 = -t1037 * t799 + t1041 * t801;
t749 = t1037 * t802 + t1041 * t800;
t748 = t1037 * t801 + t1041 * t799;
t747 = t1057 - t1137;
t746 = pkin(6) * t836 + (-pkin(2) * t1040 - pkin(7) * t1036 - pkin(1)) * t847;
t743 = -t1037 * t793 + t1041 * t795;
t742 = -t1037 * t792 + t1041 * t794;
t741 = t1037 * t795 + t1041 * t793;
t740 = t1037 * t794 + t1041 * t792;
t738 = pkin(5) * (-t1037 * t787 + t1041 * t788);
t729 = pkin(5) * (-t1037 * t780 + t1041 * t781);
t727 = -t1035 * t791 + t1039 * t827 - t1126;
t726 = -t1047 + t967 - t1136;
t723 = t737 + t863;
t722 = -t1035 * t783 + t1039 * t816 - t1127;
t719 = -t1137 - t1151;
t717 = t1035 * t767 + t1101;
t715 = -t1037 * t763 + t1041 * t764;
t714 = t1037 * t764 + t1041 * t763;
t713 = t1036 * t866 + t1040 * t718;
t712 = t1036 * t718 - t1040 * t866;
t710 = pkin(5) * (-t1037 * t760 + t1041 * t761);
t709 = t786 + t1062;
t708 = t779 + t1063;
t703 = -pkin(2) * t717 - t1135;
t702 = -t1035 * t735 + t1039 * t755 - t1126;
t701 = -t1035 * t731 + t1039 * t745 - t1127;
t700 = -t1036 * t757 + t1040 * t727 - t1129;
t698 = t1035 * t721 + t1039 * t720;
t696 = -t1036 * t747 + t1040 * t722 - t1130;
t695 = t1036 * t727 + t1040 * t757 + t1076;
t694 = t786 + t1064;
t693 = -t1035 * t725 + t1039 * t734 - t1128;
t690 = t1036 * t804 + t1040 * t699;
t689 = t1036 * t699 - t1040 * t804;
t688 = -pkin(7) * t717 - pkin(8) * t1101 - t1035 * t756;
t687 = t1036 * t722 + t1040 * t747 + t1077;
t686 = t779 + t1065;
t683 = t759 + t1066;
t682 = -t1036 * t726 + t1040 * t702 - t1129;
t681 = t1036 * t702 + t1040 * t726 + t1076;
t680 = -t1036 * t719 + t1040 * t701 - t1130;
t679 = -pkin(2) * t698 - t1075;
t678 = t1036 * t701 + t1040 * t719 + t1077;
t677 = -t1036 * t737 + t1040 * t693 - t1131;
t676 = pkin(1) * t712 + t1050;
t675 = -t1035 * t705 + t1039 * t707 - t1128;
t674 = t1036 * t693 + t1040 * t737 + t1078;
t673 = t759 + t1067;
t672 = -pkin(6) * t712 - t1036 * t703 + t1040 * t688;
t671 = -t1036 * t723 + t1040 * t675 - t1131;
t670 = t1036 * t675 + t1040 * t723 + t1078;
t669 = -pkin(1) * t717 + pkin(6) * t713 + t1036 * t688 + t1040 * t703;
t668 = -pkin(7) * t698 - t1035 * t685 + t1039 * t692;
t667 = pkin(1) * t689 + t1068;
t666 = -pkin(6) * t689 - t1036 * t679 + t1040 * t668;
t665 = -pkin(1) * t698 + pkin(6) * t690 + t1036 * t668 + t1040 * t679;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1008, 0, -t1007, 0, t1056, -t987, -t1053, -pkin(5) * t1053, 0, 0, -t1143, 0, t1144, 0, t1153, -t1152, t1147, pkin(5) * t1147 - pkin(6) * t1100 - t1037 * t885, -t1037 * t917 + t1041 * t919, -t1037 * t896 + t1041 * t897, -t1037 * t925 + t1041 * t927, -t1037 * t916 + t1041 * t918, -t1037 * t924 + t1041 * t926, -t1037 * t960 + t1041 * t961, t1041 * t805 - t1037 * t797 - pkin(5) * (t1037 * t905 + t1041 * t903), t1041 * t806 - t1037 * t798 - pkin(5) * (t1037 * t906 + t1041 * t904), t1041 * t838 - t1037 * t837 - pkin(5) * (t1037 * t937 + t1041 * t935), t1041 * t765 - t1037 * t746 - pkin(5) * (t1037 * t836 + t1041 * t835), t751, t715, t742, t750, t743, t790, -t1037 * t687 + t1041 * t696 - t1133, -t1037 * t695 + t1041 * t700 - t1132, -t1037 * t674 + t1041 * t677 - t1134, t1041 * t672 - t1037 * t669 - pkin(5) * (t1037 * t713 + t1041 * t712), t751, t715, t742, t750, t743, t790, -t1037 * t678 + t1041 * t680 - t1133, -t1037 * t681 + t1041 * t682 - t1132, -t1037 * t670 + t1041 * t671 - t1134, t1041 * t666 - t1037 * t665 - pkin(5) * (t1037 * t690 + t1041 * t689); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1007, 0, t1008, 0, t987, t1056, t1060, pkin(5) * t1060, 0, 0, -t1144, 0, -t1143, 0, t1152, t1153, t1148, pkin(5) * t1148 - pkin(6) * t1106 + t1041 * t885, t1037 * t919 + t1041 * t917, t1037 * t897 + t1041 * t896, t1037 * t927 + t1041 * t925, t1037 * t918 + t1041 * t916, t1037 * t926 + t1041 * t924, t1037 * t961 + t1041 * t960, t1037 * t805 + t1041 * t797 + pkin(5) * (-t1037 * t903 + t1041 * t905), t1037 * t806 + t1041 * t798 + pkin(5) * (-t1037 * t904 + t1041 * t906), t1037 * t838 + t1041 * t837 + pkin(5) * (-t1037 * t935 + t1041 * t937), t1037 * t765 + t1041 * t746 + pkin(5) * (-t1037 * t835 + t1041 * t836), t749, t714, t740, t748, t741, t789, t1037 * t696 + t1041 * t687 + t729, t1037 * t700 + t1041 * t695 + t738, t1037 * t677 + t1041 * t674 + t710, t1037 * t672 + t1041 * t669 + pkin(5) * (-t1037 * t712 + t1041 * t713), t749, t714, t740, t748, t741, t789, t1037 * t680 + t1041 * t678 + t729, t1037 * t682 + t1041 * t681 + t738, t1037 * t671 + t1041 * t670 + t710, t1037 * t666 + t1041 * t665 + pkin(5) * (-t1037 * t689 + t1041 * t690); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1017, t1018, 0, 0, 0, 0, 0, 0, 0, t1030, t909, t910, 0, t886, t944, t933, t950, t943, t948, 0, t840, t839, t819, t777, t811, t769, t831, t810, t832, t844, t708, t709, t683, t676, t811, t769, t831, t810, t832, t844, t686, t694, t673, t667; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1043, 0, 0, -g(3), -t1017, 0, 0, 0, -t999, 0, -t996, 0, t1145, t974, -t888, -pkin(6) * t888, t919, t897, t927, t918, t926, t961, t805, t806, t838, t765, t802, t764, t794, t801, t795, t843, t696, t700, t677, t672, t802, t764, t794, t801, t795, t843, t680, t682, t671, t666; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1043, 0, qJDD(1), 0, g(3), 0, -t1018, 0, 0, 0, t996, 0, -t999, 0, -t974, t1145, t1069, t885, t917, t896, t925, t916, t924, t960, t797, t798, t837, t746, t800, t763, t792, t799, t793, t842, t687, t695, t674, t669, t800, t763, t792, t799, t793, t842, t678, t681, t670, t665; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1017, t1018, 0, 0, 0, 0, 0, 0, 0, t1030, t909, t910, 0, t886, t944, t933, t950, t943, t948, 0, t840, t839, t819, t777, t811, t769, t831, t810, t832, t844, t708, t709, t683, t676, t811, t769, t831, t810, t832, t844, t686, t694, t673, t667; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1030, 0, -t1028, 0, 0, -g(3), t940, 0, t958, t934, t954, t957, t952, t986, t879, t880, -t847, -pkin(7) * t847, t813, t771, t833, t812, t834, t845, t722, t727, t693, t688, t813, t771, t833, t812, t834, t845, t701, t702, t675, t668; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1028, 0, t1030, 0, g(3), 0, t941, 0, t1016, -t1001, -t1090, -t1016, -t1087, -qJDD(3), t875, t876, 0, -pkin(2) * t847, -t932, -t930, -t872, t932, t868, -t1029, t747, t757, t737, t703, -t932, -t930, -t872, t932, t868, -t1029, t719, t726, t723, t679; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1030, -t940, -t941, 0, 0, t944, t933, t950, t943, t948, 0, t1081, t1082, t1061, t1116, t811, t769, t831, t810, t832, t844, t1063, t1062, t1066, t1050, t811, t769, t831, t810, t832, t844, t1065, t1064, t1067, t1068; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t990, t991, t1004, -t1020, t1011, t1020, 0, t928, t907, 0, t860, t824, t883, t858, t884, t902, t816, t827, t734, -pkin(8) * t766, t860, t824, t883, t858, t884, t902, t745, t755, t707, t692; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1071, t989, t1009, t1049, t1005, -t1071, -t928, 0, t908, 0, t859, t822, t881, t857, t882, t901, t783, t791, t725, t756, t859, t822, t881, t857, t882, t901, t731, t735, t705, t685; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1016, t1001, t1090, t1016, t1087, qJDD(3), -t907, -t908, 0, 0, t932, t930, t872, -t932, -t868, t1029, -t1057, t1083, t821, t1135, t932, t930, t872, -t932, -t868, t1029, t1151, t968 + t1047, -t863 + t821, t1075; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t895, -t867, -t1146, t966, t962, -t966, 0, t866, t817, 0, t895, -t867, -t1146, t966, t962, -t966, qJ(5) * t1146, t796, t762, qJ(5) * t775; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1113, t1142, t963, t894, t921, -t1113, -t866, 0, t818, 0, t1113, t1142, t963, t894, t921, -t1113, t773, t841, t754, t736; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t932, t930, t872, -t932, -t868, t1029, -t817, -t818, 0, 0, t932, t930, t872, -t932, -t868, t1029, t1045, t968 + t1052, -t863, -t774; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t895, -t867, -t1146, t966, t962, -t966, 0, t804, t775, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1113, t1142, t963, t894, t921, -t1113, -t804, 0, t776, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t932, t930, t872, -t932, -t868, t1029, -t775, -t776, 0, 0;];
m_new_reg = t1;
