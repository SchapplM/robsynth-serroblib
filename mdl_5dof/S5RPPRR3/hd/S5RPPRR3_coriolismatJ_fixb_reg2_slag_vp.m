% Calculate inertial parameters regressor of coriolis matrix for
% S5RPPRR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d4,d5,theta2,theta3]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2022-01-23 09:15
% Revision: fd3771346c4aea32fdeb66112c511235427c26a7 (2022-01-20)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPPRR3_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPPRR3_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPPRR3_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RPPRR3_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2022-01-23 09:14:39
% EndTime: 2022-01-23 09:14:41
% DurationCPUTime: 1.75s
% Computational Cost: add. (4214->106), mult. (7728->148), div. (0->0), fcn. (8920->8), ass. (0->98)
t219 = qJD(4) + qJD(5);
t136 = sin(pkin(9));
t137 = cos(pkin(9));
t140 = sin(qJ(4));
t208 = cos(qJ(4));
t128 = t208 * t136 + t140 * t137;
t207 = cos(qJ(5));
t119 = t207 * t128;
t126 = t140 * t136 - t208 * t137;
t139 = sin(qJ(5));
t193 = t139 * t126;
t210 = t119 - t193;
t195 = t210 ^ 2;
t151 = t207 * t126 + t139 * t128;
t197 = t151 ^ 2;
t215 = -t195 + t197;
t218 = t215 * qJD(1);
t211 = t151 * qJD(1);
t216 = t210 * t211;
t132 = sin(pkin(8)) * pkin(1) + qJ(3);
t204 = pkin(6) + t132;
t154 = t204 * t137;
t155 = t204 * t136;
t92 = t140 * t154 + t208 * t155;
t81 = -t128 * pkin(7) - t92;
t93 = -t140 * t155 + t208 * t154;
t82 = -t126 * pkin(7) + t93;
t39 = -t139 * t82 + t207 * t81;
t214 = t219 * t39;
t212 = qJD(3) * t151;
t174 = t151 * qJD(5);
t143 = qJD(4) * t151 + t174;
t141 = t139 * t81;
t164 = -t141 / 0.2e1;
t165 = t207 * t82;
t40 = t165 + t141;
t125 = t126 ^ 2;
t209 = t128 ^ 2;
t149 = t119 / 0.2e1;
t206 = pkin(4) * t139;
t205 = t128 * pkin(4);
t203 = qJD(4) * pkin(4);
t196 = t151 * t139;
t31 = t195 + t197;
t190 = t31 * qJD(1);
t130 = -cos(pkin(8)) * pkin(1) - t137 * pkin(3) - pkin(2);
t111 = t126 * pkin(4) + t130;
t41 = -t111 * t210 - t151 * t205;
t188 = t41 * qJD(1);
t42 = t111 * t151 - t205 * t210;
t187 = t42 * qJD(1);
t43 = -t93 * t126 + t92 * t128;
t186 = t43 * qJD(1);
t163 = t207 * t210;
t142 = -t196 / 0.2e1 - t163 / 0.2e1;
t45 = (-t128 / 0.2e1 + t142) * pkin(4);
t184 = t45 * qJD(1);
t84 = 0.2e1 * t149 - t193;
t180 = t84 * qJD(1);
t85 = t125 - t209;
t179 = t85 * qJD(1);
t131 = t136 ^ 2 + t137 ^ 2;
t178 = qJD(1) * t111;
t100 = t149 - t119 / 0.2e1;
t177 = t100 * qJD(1);
t96 = t100 * qJD(5);
t176 = t210 * qJD(1);
t175 = t210 * qJD(4);
t171 = t210 * qJD(5);
t106 = t125 + t209;
t170 = t106 * qJD(1);
t112 = t131 * t132;
t169 = t112 * qJD(1);
t168 = t126 * qJD(1);
t123 = t126 * qJD(4);
t167 = t128 * qJD(1);
t124 = t128 * qJD(4);
t166 = t131 * qJD(1);
t162 = t151 * t176;
t159 = t151 * t178;
t158 = t210 * t178;
t157 = t126 * t167;
t156 = t126 * t124;
t153 = t207 * qJD(4);
t152 = t207 * qJD(5);
t150 = qJD(1) * t130 + qJD(3);
t6 = t111 * t205;
t148 = t6 * qJD(1);
t9 = -t40 * t151 - t39 * t210;
t146 = t9 * qJD(1);
t14 = t164 + t141 / 0.2e1;
t145 = -t14 * qJD(1) - t100 * qJD(2);
t144 = t84 * qJD(5) + t175;
t95 = t100 * qJD(4);
t47 = -t84 * qJD(4) - t171;
t46 = t205 / 0.2e1 + t142 * pkin(4);
t17 = -t165 + 0.2e1 * t164;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t131 * qJD(3), t112 * qJD(3), -t156, t85 * qJD(4), 0, t156, 0, 0, t130 * t124, -t130 * t123, t106 * qJD(3), t43 * qJD(3), -t143 * t210, t219 * t215, 0, (t171 + t175) * t151, 0, 0, -t41 * qJD(4) + t111 * t171, -t42 * qJD(4) - t111 * t174, t31 * qJD(3), t9 * qJD(3) + t6 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t166, t169, 0, 0, 0, 0, 0, 0, 0, 0, t170, t186, 0, 0, 0, 0, 0, 0, t96, 0, t190, t46 * qJD(4) + t146; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t157, t179, -t123, t157, -t124, 0, -t93 * qJD(4) + t130 * t167, t92 * qJD(4) - t130 * t168, 0, 0, -t216, t218, -t143, t162, -t144, 0, -qJD(4) * t40 + t17 * qJD(5) - t188, -t187 - t214, (-t139 * t210 + t151 * t207) * t203, t46 * qJD(3) + (t139 * t39 - t207 * t40) * t203 + t148; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t216, t218, -t143, t216, t47, 0, t100 * qJD(3) + t17 * qJD(4) - t40 * qJD(5) + t158, -t159 - t214, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t124, t123, 0, 0, 0, 0, 0, 0, 0, 0, -t144, t143, 0, (-t163 - t196) * t203; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t47, t143, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t166, -t169, 0, 0, 0, 0, 0, 0, t124, -t123, -t170, -t186, 0, 0, 0, 0, 0, 0, t144, -t143, -t190, -t45 * qJD(4) - t146; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t167, -t168, 0, 0, 0, 0, 0, 0, 0, 0, t176, -t211, 0, -t184; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t180, -t211, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t157, -t179, 0, -t157, 0, 0, -t150 * t128, t150 * t126, 0, 0, t216, -t218, 0, -t162, -t96, 0, -qJD(3) * t210 - t14 * qJD(5) + t188, t187 + t212, 0, t45 * qJD(3) - t148; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t96, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t167, t168, 0, 0, 0, 0, 0, 0, 0, 0, -t176, t211, 0, t184; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(5) * t206, -pkin(4) * t152, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t177, 0, -t206 * t219 + t145, (-t153 - t152) * pkin(4), 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t216, -t218, 0, -t216, t95, 0, -t84 * qJD(3) + t14 * qJD(4) - t158, t159 + t212, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t95, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t180, t211, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t177, 0, t139 * t203 - t145, pkin(4) * t153, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t1;
