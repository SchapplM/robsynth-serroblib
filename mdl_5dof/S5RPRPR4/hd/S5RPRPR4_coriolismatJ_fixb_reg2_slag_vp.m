% Calculate inertial parameters regressor of coriolis matrix for
% S5RPRPR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d5,theta2,theta4]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2022-01-23 09:23
% Revision: fd3771346c4aea32fdeb66112c511235427c26a7 (2022-01-20)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPRPR4_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRPR4_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRPR4_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RPRPR4_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2022-01-23 09:23:14
% EndTime: 2022-01-23 09:23:18
% DurationCPUTime: 2.46s
% Computational Cost: add. (4818->126), mult. (8812->172), div. (0->0), fcn. (10028->8), ass. (0->119)
t262 = qJD(3) + qJD(5);
t162 = sin(qJ(5));
t249 = cos(qJ(5));
t160 = sin(pkin(9));
t163 = sin(qJ(3));
t164 = cos(qJ(3));
t239 = cos(pkin(9));
t150 = t160 * t164 + t239 * t163;
t157 = sin(pkin(8)) * pkin(1) + pkin(6);
t216 = qJ(4) + t157;
t145 = t216 * t163;
t146 = t216 * t164;
t170 = -t239 * t145 - t160 * t146;
t93 = -t150 * pkin(7) + t170;
t105 = -t160 * t145 + t239 * t146;
t148 = t160 * t163 - t239 * t164;
t94 = -t148 * pkin(7) + t105;
t50 = t162 * t93 + t249 * t94;
t263 = t262 * t50;
t49 = -t162 * t94 + t249 * t93;
t261 = t262 * t49;
t139 = t249 * t150;
t231 = t162 * t148;
t251 = t139 - t231;
t234 = t251 ^ 2;
t183 = t249 * t148 + t162 * t150;
t236 = t183 ^ 2;
t256 = -t234 + t236;
t260 = t256 * qJD(1);
t252 = t183 * qJD(1);
t257 = t251 * t252;
t253 = qJD(4) * t183;
t208 = t183 * qJD(5);
t172 = qJD(3) * t183 + t208;
t147 = t148 ^ 2;
t250 = t150 ^ 2;
t181 = t139 / 0.2e1;
t248 = pkin(3) * t160;
t247 = t150 * pkin(4);
t246 = t163 * pkin(3);
t245 = qJD(3) * pkin(3);
t180 = t239 * pkin(3) + pkin(4);
t136 = t162 * t248 - t249 * t180;
t238 = t251 * t136;
t137 = t162 * t180 + t249 * t248;
t235 = t183 * t137;
t232 = t148 * t160;
t35 = t234 + t236;
t228 = t35 * qJD(1);
t171 = -t238 / 0.2e1 + t235 / 0.2e1;
t159 = t246 / 0.2e1;
t182 = t159 + t247 / 0.2e1;
t43 = t171 + t182;
t226 = t43 * qJD(1);
t158 = -cos(pkin(8)) * pkin(1) - pkin(2);
t152 = -t164 * pkin(3) + t158;
t123 = t148 * pkin(4) + t152;
t124 = t246 + t247;
t45 = t123 * t251 + t124 * t183;
t225 = t45 * qJD(1);
t46 = -t123 * t183 + t124 * t251;
t224 = t46 * qJD(1);
t52 = -t105 * t148 - t150 * t170;
t222 = t52 * qJD(1);
t96 = 0.2e1 * t181 - t231;
t219 = t96 * qJD(1);
t184 = t239 * t150;
t168 = -t232 / 0.2e1 - t184 / 0.2e1;
t98 = (-t163 / 0.2e1 + t168) * pkin(3);
t218 = t98 * qJD(1);
t99 = t148 * t246 + t152 * t150;
t217 = t99 * qJD(1);
t215 = qJD(1) * t123;
t214 = qJD(1) * t164;
t100 = -t152 * t148 + t150 * t246;
t213 = t100 * qJD(1);
t101 = t147 - t250;
t212 = t101 * qJD(1);
t112 = t181 - t139 / 0.2e1;
t211 = t112 * qJD(1);
t108 = t112 * qJD(5);
t210 = t251 * qJD(1);
t209 = t251 * qJD(3);
t205 = t251 * qJD(5);
t118 = t147 + t250;
t204 = t118 * qJD(1);
t203 = t148 * qJD(1);
t143 = t148 * qJD(3);
t202 = t150 * qJD(1);
t144 = t150 * qJD(3);
t154 = -t163 ^ 2 + t164 ^ 2;
t201 = t154 * qJD(1);
t200 = t163 * qJD(3);
t199 = t164 * qJD(3);
t196 = t183 * t210;
t193 = t183 * t215;
t192 = t251 * t215;
t191 = t148 * t202;
t190 = t148 * t144;
t189 = t158 * t163 * qJD(1);
t188 = t158 * t214;
t187 = t163 * t199;
t8 = t123 * t124;
t179 = t8 * qJD(1);
t11 = -t50 * t183 - t49 * t251;
t177 = t11 * qJD(1);
t25 = t152 * t246;
t176 = t25 * qJD(1);
t174 = t136 * qJD(3);
t173 = t96 * qJD(5) + t209;
t167 = t112 * qJD(2) + t137 * qJD(3);
t155 = t163 * t214;
t126 = t137 * qJD(5);
t125 = t136 * qJD(5);
t107 = t112 * qJD(3);
t97 = t168 * pkin(3) + t159;
t53 = -t96 * qJD(3) - t205;
t44 = -t171 + t182;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t187, t154 * qJD(3), 0, -t187, 0, 0, t158 * t200, t158 * t199, 0, 0, -t190, t101 * qJD(3), 0, t190, 0, 0, t99 * qJD(3), t100 * qJD(3), t118 * qJD(4), t25 * qJD(3) + t52 * qJD(4), -t172 * t251, t262 * t256, 0, (t205 + t209) * t183, 0, 0, t45 * qJD(3) + t123 * t205, t46 * qJD(3) - t123 * t208, t35 * qJD(4), t8 * qJD(3) + t11 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t155, t201, t199, -t155, -t200, 0, -t157 * t199 + t189, t157 * t200 + t188, 0, 0, -t191, t212, -t143, t191, -t144, 0, -qJD(3) * t105 + t217, -qJD(3) * t170 + t213, (t239 * t148 - t150 * t160) * t245, (-t105 * t239 + t160 * t170) * t245 + t97 * qJD(4) + t176, -t257, t260, -t172, t196, -t173, 0, t225 - t263, t224 - t261, (-t136 * t183 - t137 * t251) * qJD(3), (t136 * t50 + t49 * t137) * qJD(3) + t44 * qJD(4) + t179; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t204, t97 * qJD(3) + t222, 0, 0, 0, 0, 0, 0, t108, 0, t228, t44 * qJD(3) + t177; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t257, t260, -t172, t257, t53, 0, t112 * qJD(4) + t192 - t263, -t193 - t261, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t200, -t199, 0, 0, 0, 0, 0, 0, 0, 0, -t144, t143, 0, (-t184 - t232) * t245, 0, 0, 0, 0, 0, 0, -t173, t172, 0, (-t235 + t238) * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t53, t172, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t155, -t201, 0, t155, 0, 0, -t189, -t188, 0, 0, t191, -t212, 0, -t191, 0, 0, -t150 * qJD(4) - t217, t148 * qJD(4) - t213, 0, t98 * qJD(4) - t176, t257, -t260, 0, -t196, -t108, 0, -qJD(4) * t251 - t225, -t224 + t253, 0, -t43 * qJD(4) - t179; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t108, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t126, t125, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t202, t203, 0, t218, 0, 0, 0, 0, 0, 0, -t210, t252, 0, -t226; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t211, 0, -t126 - t167, t125 + t174, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t144, -t143, -t204, -t98 * qJD(3) - t222, 0, 0, 0, 0, 0, 0, t173, -t172, -t228, t43 * qJD(3) - t177; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t202, -t203, 0, -t218, 0, 0, 0, 0, 0, 0, t210, -t252, 0, t226; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t219, -t252, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t257, -t260, 0, -t257, t107, 0, -t96 * qJD(4) - t192, t193 + t253, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t107, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t211, 0, t167, -t174, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t219, t252, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t1;
