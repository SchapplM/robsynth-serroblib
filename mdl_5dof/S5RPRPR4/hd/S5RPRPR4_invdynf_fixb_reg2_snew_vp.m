% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5RPRPR4
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d5,theta2,theta4]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2022-01-23 09:23
% Revision: fd3771346c4aea32fdeb66112c511235427c26a7 (2022-01-20)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5RPRPR4_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRPR4_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRPR4_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPRPR4_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPRPR4_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RPRPR4_invdynf_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2022-01-23 09:23:45
% EndTime: 2022-01-23 09:23:47
% DurationCPUTime: 2.68s
% Computational Cost: add. (14440->211), mult. (31717->308), div. (0->0), fcn. (21339->10), ass. (0->175)
t1411 = qJD(3) + qJD(5);
t1456 = qJD(5) + t1411;
t1415 = sin(pkin(9));
t1417 = cos(pkin(9));
t1424 = cos(qJ(3));
t1447 = qJD(1) * t1424;
t1421 = sin(qJ(3));
t1448 = qJD(1) * t1421;
t1378 = t1415 * t1448 - t1417 * t1447;
t1380 = (t1415 * t1424 + t1417 * t1421) * qJD(1);
t1420 = sin(qJ(5));
t1423 = cos(qJ(5));
t1353 = t1423 * t1378 + t1420 * t1380;
t1455 = t1353 ^ 2;
t1355 = -t1420 * t1378 + t1423 * t1380;
t1454 = t1355 ^ 2;
t1453 = t1378 ^ 2;
t1452 = t1380 ^ 2;
t1451 = t1411 ^ 2;
t1450 = t1424 ^ 2;
t1449 = -2 * qJD(4);
t1446 = qJD(3) * t1378;
t1445 = qJD(3) * t1380;
t1444 = t1355 * t1353;
t1443 = t1380 * t1378;
t1427 = qJD(1) ^ 2;
t1442 = t1450 * t1427;
t1441 = qJD(5) - t1411;
t1422 = sin(qJ(1));
t1425 = cos(qJ(1));
t1401 = -t1425 * g(1) - t1422 * g(2);
t1387 = -t1427 * pkin(1) + t1401;
t1416 = sin(pkin(8));
t1418 = cos(pkin(8));
t1400 = t1422 * g(1) - t1425 * g(2);
t1429 = qJDD(1) * pkin(1) + t1400;
t1364 = t1418 * t1387 + t1416 * t1429;
t1357 = -t1427 * pkin(2) + qJDD(1) * pkin(6) + t1364;
t1413 = -g(3) + qJDD(2);
t1345 = t1424 * t1357 + t1421 * t1413;
t1440 = t1421 * qJDD(1);
t1439 = t1424 * qJDD(1);
t1405 = t1424 * t1427 * t1421;
t1398 = qJDD(3) + t1405;
t1438 = -qJDD(3) - qJDD(5);
t1412 = t1421 ^ 2;
t1437 = t1412 + t1450;
t1436 = qJD(3) * t1448;
t1435 = qJD(3) * t1447;
t1344 = -t1421 * t1357 + t1424 * t1413;
t1389 = t1435 + t1440;
t1330 = (-t1389 + t1435) * qJ(4) + t1398 * pkin(3) + t1344;
t1397 = qJD(3) * pkin(3) - qJ(4) * t1448;
t1430 = -t1436 + t1439;
t1331 = -pkin(3) * t1442 + t1430 * qJ(4) - qJD(3) * t1397 + t1345;
t1303 = t1415 * t1330 + t1417 * t1331 + t1378 * t1449;
t1365 = t1417 * t1389 + t1415 * t1430;
t1343 = -t1365 - t1446;
t1433 = t1415 * t1389 - t1417 * t1430;
t1434 = -t1420 * t1365 - t1423 * t1433;
t1363 = -t1416 * t1387 + t1418 * t1429;
t1391 = -t1416 * qJDD(1) - t1418 * t1427;
t1392 = t1418 * qJDD(1) - t1416 * t1427;
t1432 = t1425 * t1391 - t1422 * t1392;
t1359 = qJDD(3) - t1443;
t1302 = t1417 * t1330 - t1415 * t1331 + t1380 * t1449;
t1431 = t1422 * t1391 + t1425 * t1392;
t1356 = -qJDD(1) * pkin(2) - t1427 * pkin(6) - t1363;
t1428 = -t1423 * t1365 + t1420 * t1433;
t1334 = -t1430 * pkin(3) - qJ(4) * t1442 + t1397 * t1448 + qJDD(4) + t1356;
t1426 = qJD(3) ^ 2;
t1404 = -t1426 - t1442;
t1403 = -t1412 * t1427 - t1426;
t1399 = -qJDD(3) + t1405;
t1396 = t1437 * t1427;
t1395 = -t1422 * qJDD(1) - t1425 * t1427;
t1394 = t1425 * qJDD(1) - t1422 * t1427;
t1393 = t1437 * qJDD(1);
t1390 = -0.2e1 * t1436 + t1439;
t1388 = 0.2e1 * t1435 + t1440;
t1373 = -t1426 - t1452;
t1372 = qJD(3) * pkin(4) - t1380 * pkin(7);
t1371 = t1424 * t1399 - t1421 * t1403;
t1370 = -t1421 * t1398 + t1424 * t1404;
t1369 = t1421 * t1399 + t1424 * t1403;
t1368 = t1424 * t1398 + t1421 * t1404;
t1367 = t1418 * t1393 - t1416 * t1396;
t1366 = t1416 * t1393 + t1418 * t1396;
t1360 = -qJDD(3) - t1443;
t1358 = -t1426 - t1453;
t1350 = t1418 * t1371 + t1416 * t1388;
t1349 = t1418 * t1370 - t1416 * t1390;
t1348 = t1416 * t1371 - t1418 * t1388;
t1347 = t1416 * t1370 + t1418 * t1390;
t1346 = -t1451 - t1454;
t1342 = t1365 - t1446;
t1341 = -t1433 + t1445;
t1340 = t1433 + t1445;
t1339 = -t1452 - t1453;
t1338 = t1417 * t1360 - t1415 * t1373;
t1337 = t1415 * t1360 + t1417 * t1373;
t1336 = -t1416 * t1363 + t1418 * t1364;
t1335 = t1418 * t1363 + t1416 * t1364;
t1333 = t1417 * t1358 - t1415 * t1359;
t1332 = t1415 * t1358 + t1417 * t1359;
t1328 = t1438 - t1444;
t1327 = -t1438 - t1444;
t1326 = -t1451 - t1455;
t1323 = -t1421 * t1344 + t1424 * t1345;
t1322 = t1424 * t1344 + t1421 * t1345;
t1321 = t1417 * t1341 - t1415 * t1343;
t1320 = t1415 * t1341 + t1417 * t1343;
t1319 = -t1454 - t1455;
t1318 = -t1421 * t1337 + t1424 * t1338;
t1317 = t1424 * t1337 + t1421 * t1338;
t1316 = t1423 * t1328 - t1420 * t1346;
t1315 = t1420 * t1328 + t1423 * t1346;
t1314 = t1418 * t1323 + t1416 * t1356;
t1313 = t1416 * t1323 - t1418 * t1356;
t1312 = t1441 * t1353 + t1428;
t1311 = -t1456 * t1353 - t1428;
t1310 = -t1441 * t1355 + t1434;
t1309 = t1456 * t1355 - t1434;
t1308 = t1433 * pkin(4) - t1453 * pkin(7) + t1380 * t1372 + t1334;
t1307 = -t1421 * t1332 + t1424 * t1333;
t1306 = t1424 * t1332 + t1421 * t1333;
t1305 = t1423 * t1326 - t1420 * t1327;
t1304 = t1420 * t1326 + t1423 * t1327;
t1301 = t1418 * t1318 + t1416 * t1342;
t1300 = t1416 * t1318 - t1418 * t1342;
t1299 = -t1421 * t1320 + t1424 * t1321;
t1298 = t1424 * t1320 + t1421 * t1321;
t1297 = t1418 * t1307 + t1416 * t1340;
t1296 = t1416 * t1307 - t1418 * t1340;
t1295 = -t1453 * pkin(4) - t1433 * pkin(7) - qJD(3) * t1372 + t1303;
t1294 = t1359 * pkin(4) + t1343 * pkin(7) + t1302;
t1293 = t1418 * t1299 + t1416 * t1339;
t1292 = t1416 * t1299 - t1418 * t1339;
t1291 = -t1415 * t1315 + t1417 * t1316;
t1290 = t1417 * t1315 + t1415 * t1316;
t1289 = t1423 * t1310 - t1420 * t1312;
t1288 = t1420 * t1310 + t1423 * t1312;
t1287 = -t1415 * t1304 + t1417 * t1305;
t1286 = t1417 * t1304 + t1415 * t1305;
t1285 = -t1415 * t1302 + t1417 * t1303;
t1284 = t1417 * t1302 + t1415 * t1303;
t1283 = t1420 * t1294 + t1423 * t1295;
t1282 = t1423 * t1294 - t1420 * t1295;
t1281 = -t1421 * t1290 + t1424 * t1291;
t1280 = t1424 * t1290 + t1421 * t1291;
t1279 = -t1415 * t1288 + t1417 * t1289;
t1278 = t1417 * t1288 + t1415 * t1289;
t1277 = -t1421 * t1286 + t1424 * t1287;
t1276 = t1424 * t1286 + t1421 * t1287;
t1275 = t1418 * t1281 + t1416 * t1311;
t1274 = t1416 * t1281 - t1418 * t1311;
t1273 = -t1421 * t1284 + t1424 * t1285;
t1272 = t1424 * t1284 + t1421 * t1285;
t1271 = t1418 * t1273 + t1416 * t1334;
t1270 = t1416 * t1273 - t1418 * t1334;
t1269 = t1418 * t1277 + t1416 * t1309;
t1268 = t1416 * t1277 - t1418 * t1309;
t1267 = -t1420 * t1282 + t1423 * t1283;
t1266 = t1423 * t1282 + t1420 * t1283;
t1265 = -t1421 * t1278 + t1424 * t1279;
t1264 = t1424 * t1278 + t1421 * t1279;
t1263 = t1418 * t1265 + t1416 * t1319;
t1262 = t1416 * t1265 - t1418 * t1319;
t1261 = -t1415 * t1266 + t1417 * t1267;
t1260 = t1417 * t1266 + t1415 * t1267;
t1259 = -t1421 * t1260 + t1424 * t1261;
t1258 = t1424 * t1260 + t1421 * t1261;
t1257 = t1418 * t1259 + t1416 * t1308;
t1256 = t1416 * t1259 - t1418 * t1308;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t1395, -t1394, 0, -t1422 * t1400 + t1425 * t1401, 0, 0, 0, 0, 0, 0, t1432, -t1431, 0, -t1422 * t1335 + t1425 * t1336, 0, 0, 0, 0, 0, 0, -t1422 * t1347 + t1425 * t1349, -t1422 * t1348 + t1425 * t1350, -t1422 * t1366 + t1425 * t1367, -t1422 * t1313 + t1425 * t1314, 0, 0, 0, 0, 0, 0, -t1422 * t1296 + t1425 * t1297, -t1422 * t1300 + t1425 * t1301, -t1422 * t1292 + t1425 * t1293, -t1422 * t1270 + t1425 * t1271, 0, 0, 0, 0, 0, 0, -t1422 * t1268 + t1425 * t1269, -t1422 * t1274 + t1425 * t1275, -t1422 * t1262 + t1425 * t1263, -t1422 * t1256 + t1425 * t1257; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1394, t1395, 0, t1425 * t1400 + t1422 * t1401, 0, 0, 0, 0, 0, 0, t1431, t1432, 0, t1425 * t1335 + t1422 * t1336, 0, 0, 0, 0, 0, 0, t1425 * t1347 + t1422 * t1349, t1425 * t1348 + t1422 * t1350, t1425 * t1366 + t1422 * t1367, t1425 * t1313 + t1422 * t1314, 0, 0, 0, 0, 0, 0, t1425 * t1296 + t1422 * t1297, t1425 * t1300 + t1422 * t1301, t1425 * t1292 + t1422 * t1293, t1425 * t1270 + t1422 * t1271, 0, 0, 0, 0, 0, 0, t1425 * t1268 + t1422 * t1269, t1425 * t1274 + t1422 * t1275, t1425 * t1262 + t1422 * t1263, t1425 * t1256 + t1422 * t1257; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1413, 0, 0, 0, 0, 0, 0, t1368, t1369, 0, t1322, 0, 0, 0, 0, 0, 0, t1306, t1317, t1298, t1272, 0, 0, 0, 0, 0, 0, t1276, t1280, t1264, t1258; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1427, -qJDD(1), 0, t1401, 0, 0, 0, 0, 0, 0, t1391, -t1392, 0, t1336, 0, 0, 0, 0, 0, 0, t1349, t1350, t1367, t1314, 0, 0, 0, 0, 0, 0, t1297, t1301, t1293, t1271, 0, 0, 0, 0, 0, 0, t1269, t1275, t1263, t1257; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1427, 0, t1400, 0, 0, 0, 0, 0, 0, t1392, t1391, 0, t1335, 0, 0, 0, 0, 0, 0, t1347, t1348, t1366, t1313, 0, 0, 0, 0, 0, 0, t1296, t1300, t1292, t1270, 0, 0, 0, 0, 0, 0, t1268, t1274, t1262, t1256; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1413, 0, 0, 0, 0, 0, 0, t1368, t1369, 0, t1322, 0, 0, 0, 0, 0, 0, t1306, t1317, t1298, t1272, 0, 0, 0, 0, 0, 0, t1276, t1280, t1264, t1258; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1427, -qJDD(1), 0, t1364, 0, 0, 0, 0, 0, 0, t1370, t1371, t1393, t1323, 0, 0, 0, 0, 0, 0, t1307, t1318, t1299, t1273, 0, 0, 0, 0, 0, 0, t1277, t1281, t1265, t1259; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1427, 0, t1363, 0, 0, 0, 0, 0, 0, t1390, -t1388, t1396, -t1356, 0, 0, 0, 0, 0, 0, -t1340, -t1342, -t1339, -t1334, 0, 0, 0, 0, 0, 0, -t1309, -t1311, -t1319, -t1308; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1413, 0, 0, 0, 0, 0, 0, t1368, t1369, 0, t1322, 0, 0, 0, 0, 0, 0, t1306, t1317, t1298, t1272, 0, 0, 0, 0, 0, 0, t1276, t1280, t1264, t1258; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1404, t1399, t1439, t1345, 0, 0, 0, 0, 0, 0, t1333, t1338, t1321, t1285, 0, 0, 0, 0, 0, 0, t1287, t1291, t1279, t1261; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1398, t1403, -t1440, t1344, 0, 0, 0, 0, 0, 0, t1332, t1337, t1320, t1284, 0, 0, 0, 0, 0, 0, t1286, t1290, t1278, t1260; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1390, t1388, -t1396, t1356, 0, 0, 0, 0, 0, 0, t1340, t1342, t1339, t1334, 0, 0, 0, 0, 0, 0, t1309, t1311, t1319, t1308; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1358, t1360, t1341, t1303, 0, 0, 0, 0, 0, 0, t1305, t1316, t1289, t1267; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1359, t1373, t1343, t1302, 0, 0, 0, 0, 0, 0, t1304, t1315, t1288, t1266; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1340, t1342, t1339, t1334, 0, 0, 0, 0, 0, 0, t1309, t1311, t1319, t1308; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1326, t1328, t1310, t1283; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1327, t1346, t1312, t1282; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1309, t1311, t1319, t1308;];
f_new_reg = t1;
