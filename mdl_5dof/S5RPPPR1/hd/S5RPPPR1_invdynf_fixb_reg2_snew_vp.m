% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5RPPPR1
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d5,theta2,theta3,theta4]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2022-01-20 09:13
% Revision: 008671b0a00594318b890887636eaaff83cd5e2f (2021-12-12)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5RPPPR1_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPPPR1_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPPPR1_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPPPR1_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPPPR1_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RPPPR1_invdynf_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2022-01-20 09:13:19
% EndTime: 2022-01-20 09:13:21
% DurationCPUTime: 2.82s
% Computational Cost: add. (8459->207), mult. (20431->312), div. (0->0), fcn. (13226->10), ass. (0->174)
t1347 = sin(qJ(1));
t1349 = cos(qJ(1));
t1322 = -t1349 * g(1) - t1347 * g(2);
t1350 = qJD(1) ^ 2;
t1309 = -t1350 * pkin(1) + t1322;
t1342 = sin(pkin(7));
t1345 = cos(pkin(7));
t1321 = t1347 * g(1) - t1349 * g(2);
t1355 = qJDD(1) * pkin(1) + t1321;
t1280 = -t1342 * t1309 + t1345 * t1355;
t1273 = -qJDD(1) * pkin(2) - t1350 * qJ(3) + qJDD(3) - t1280;
t1341 = sin(pkin(8));
t1344 = cos(pkin(8));
t1359 = -pkin(3) * t1344 - qJ(4) * t1341;
t1383 = qJD(1) * t1341;
t1367 = -0.2e1 * t1383;
t1390 = qJD(4) * t1367 + t1359 * qJDD(1) + t1273;
t1335 = t1341 ^ 2;
t1337 = t1344 ^ 2;
t1374 = t1335 + t1337;
t1314 = t1374 * t1350;
t1379 = t1344 * qJD(1);
t1325 = -qJD(5) + t1379;
t1389 = qJD(5) - t1325;
t1340 = sin(pkin(9));
t1343 = cos(pkin(9));
t1346 = sin(qJ(5));
t1348 = cos(qJ(5));
t1357 = t1340 * t1348 + t1343 * t1346;
t1353 = t1357 * t1341;
t1289 = qJD(1) * t1353;
t1388 = t1289 ^ 2;
t1380 = t1341 * t1343;
t1364 = t1348 * t1380;
t1291 = -t1346 * t1340 * t1383 + qJD(1) * t1364;
t1387 = t1291 ^ 2;
t1386 = t1325 ^ 2;
t1385 = 2 * qJD(3);
t1384 = -g(3) + qJDD(2);
t1382 = t1291 * t1289;
t1381 = t1335 * t1350;
t1378 = t1344 * t1350;
t1308 = t1359 * qJD(1);
t1377 = t1385 + t1308;
t1376 = qJD(5) + t1325;
t1375 = t1390 * t1343;
t1281 = t1345 * t1309 + t1342 * t1355;
t1373 = qJDD(1) * t1343;
t1372 = t1341 * qJDD(1);
t1371 = t1342 * qJDD(1);
t1331 = t1344 * qJDD(1);
t1370 = t1345 * qJDD(1);
t1330 = t1344 * t1384;
t1369 = qJDD(4) - t1330;
t1368 = t1331 - qJDD(5);
t1334 = t1340 ^ 2;
t1366 = t1334 * t1381;
t1365 = t1340 * t1378;
t1324 = t1341 * t1378;
t1274 = -t1350 * pkin(2) + qJDD(1) * qJ(3) + t1281;
t1265 = t1344 * t1274 + t1341 * t1384 + t1379 * t1385;
t1252 = t1308 * t1379 + t1265;
t1232 = t1343 * t1252 + t1390 * t1340;
t1363 = t1340 * t1372;
t1311 = -t1345 * t1350 - t1371;
t1312 = -t1342 * t1350 + t1370;
t1361 = t1349 * t1311 - t1347 * t1312;
t1360 = t1340 * t1343 * t1381;
t1358 = t1347 * t1311 + t1349 * t1312;
t1356 = -pkin(4) * t1344 - pkin(6) * t1380;
t1354 = -qJDD(1) * t1364 + t1346 * t1363;
t1336 = t1343 ^ 2;
t1318 = -t1347 * qJDD(1) - t1349 * t1350;
t1317 = t1349 * qJDD(1) - t1347 * t1350;
t1313 = t1343 * t1324;
t1310 = t1374 * qJDD(1);
t1307 = t1344 * t1314;
t1306 = (-t1335 * t1336 - t1337) * t1350;
t1305 = t1341 * t1314;
t1304 = (-t1334 * t1335 - t1337) * t1350;
t1302 = t1356 * qJD(1);
t1298 = (t1334 + t1336) * t1381;
t1297 = -t1331 - t1360;
t1296 = t1331 - t1360;
t1295 = (t1365 - t1373) * t1341;
t1294 = (t1365 + t1373) * t1341;
t1293 = -t1313 - t1363;
t1292 = -t1313 + t1363;
t1288 = -t1345 * t1307 - t1342 * t1331;
t1287 = t1345 * t1305 + t1341 * t1371;
t1286 = -t1342 * t1307 + t1344 * t1370;
t1285 = t1342 * t1305 - t1341 * t1370;
t1283 = t1345 * t1310 - t1342 * t1314;
t1282 = t1342 * t1310 + t1345 * t1314;
t1279 = -t1386 - t1387;
t1278 = t1343 * t1296 - t1340 * t1306;
t1277 = -t1340 * t1297 + t1343 * t1304;
t1276 = t1340 * t1296 + t1343 * t1306;
t1275 = t1343 * t1297 + t1340 * t1304;
t1271 = t1343 * t1293 - t1340 * t1295;
t1270 = t1340 * t1293 + t1343 * t1295;
t1269 = -t1368 - t1382;
t1268 = t1368 - t1382;
t1266 = -t1386 - t1388;
t1264 = qJD(3) * t1367 - t1341 * t1274 + t1330;
t1261 = t1344 * t1278 + t1341 * t1294;
t1260 = t1344 * t1277 + t1341 * t1292;
t1259 = t1341 * t1278 - t1344 * t1294;
t1258 = t1341 * t1277 - t1344 * t1292;
t1257 = -t1387 - t1388;
t1256 = -t1342 * t1280 + t1345 * t1281;
t1255 = t1344 * t1271 - t1341 * t1298;
t1254 = t1345 * t1280 + t1342 * t1281;
t1253 = t1341 * t1271 + t1344 * t1298;
t1251 = (t1377 * qJD(1) + t1274) * t1341 + t1369;
t1250 = t1376 * t1289 + t1354;
t1249 = -t1389 * t1289 - t1354;
t1248 = -qJDD(1) * t1353 - t1376 * t1291;
t1247 = t1389 * t1291 + t1357 * t1372;
t1245 = t1348 * t1268 - t1346 * t1279;
t1244 = t1346 * t1268 + t1348 * t1279;
t1243 = t1348 * t1266 - t1346 * t1269;
t1242 = t1346 * t1266 + t1348 * t1269;
t1241 = t1345 * t1261 + t1342 * t1276;
t1240 = t1345 * t1260 + t1342 * t1275;
t1239 = t1342 * t1261 - t1345 * t1276;
t1238 = t1342 * t1260 - t1345 * t1275;
t1237 = -pkin(6) * t1366 + (pkin(4) * qJDD(1) * t1340 + t1274 + (t1302 * t1343 + t1377) * qJD(1)) * t1341 + t1369;
t1236 = -t1341 * t1264 + t1344 * t1265;
t1235 = t1344 * t1264 + t1341 * t1265;
t1234 = t1345 * t1255 + t1342 * t1270;
t1233 = t1342 * t1255 - t1345 * t1270;
t1231 = -t1340 * t1252 + t1375;
t1230 = t1348 * t1248 - t1346 * t1250;
t1229 = t1346 * t1248 + t1348 * t1250;
t1228 = t1345 * t1236 + t1342 * t1273;
t1227 = t1342 * t1236 - t1345 * t1273;
t1226 = -pkin(4) * t1366 - pkin(6) * t1363 + t1302 * t1379 + t1232;
t1225 = t1356 * qJDD(1) + (-t1252 + (-pkin(4) * t1335 * t1343 + pkin(6) * t1341 * t1344) * t1350) * t1340 + t1375;
t1224 = -t1340 * t1244 + t1343 * t1245;
t1223 = t1343 * t1244 + t1340 * t1245;
t1222 = -t1340 * t1242 + t1343 * t1243;
t1221 = t1343 * t1242 + t1340 * t1243;
t1220 = t1344 * t1224 + t1341 * t1249;
t1219 = t1341 * t1224 - t1344 * t1249;
t1218 = -t1340 * t1231 + t1343 * t1232;
t1217 = t1343 * t1231 + t1340 * t1232;
t1216 = t1344 * t1222 + t1341 * t1247;
t1215 = t1341 * t1222 - t1344 * t1247;
t1214 = -t1340 * t1229 + t1343 * t1230;
t1213 = t1343 * t1229 + t1340 * t1230;
t1212 = t1346 * t1225 + t1348 * t1226;
t1211 = t1348 * t1225 - t1346 * t1226;
t1210 = t1344 * t1218 + t1341 * t1251;
t1209 = t1341 * t1218 - t1344 * t1251;
t1208 = t1344 * t1214 + t1341 * t1257;
t1207 = t1341 * t1214 - t1344 * t1257;
t1206 = t1345 * t1220 + t1342 * t1223;
t1205 = t1342 * t1220 - t1345 * t1223;
t1204 = t1345 * t1216 + t1342 * t1221;
t1203 = t1342 * t1216 - t1345 * t1221;
t1202 = t1345 * t1210 + t1342 * t1217;
t1201 = t1342 * t1210 - t1345 * t1217;
t1200 = t1345 * t1208 + t1342 * t1213;
t1199 = t1342 * t1208 - t1345 * t1213;
t1198 = -t1346 * t1211 + t1348 * t1212;
t1197 = t1348 * t1211 + t1346 * t1212;
t1196 = -t1340 * t1197 + t1343 * t1198;
t1195 = t1343 * t1197 + t1340 * t1198;
t1194 = t1344 * t1196 + t1341 * t1237;
t1193 = t1341 * t1196 - t1344 * t1237;
t1192 = t1345 * t1194 + t1342 * t1195;
t1191 = t1342 * t1194 - t1345 * t1195;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t1318, -t1317, 0, -t1347 * t1321 + t1349 * t1322, 0, 0, 0, 0, 0, 0, t1361, -t1358, 0, -t1347 * t1254 + t1349 * t1256, 0, 0, 0, 0, 0, 0, -t1347 * t1286 + t1349 * t1288, -t1347 * t1285 + t1349 * t1287, -t1347 * t1282 + t1349 * t1283, -t1347 * t1227 + t1349 * t1228, 0, 0, 0, 0, 0, 0, -t1347 * t1238 + t1349 * t1240, -t1347 * t1239 + t1349 * t1241, -t1347 * t1233 + t1349 * t1234, -t1347 * t1201 + t1349 * t1202, 0, 0, 0, 0, 0, 0, -t1347 * t1203 + t1349 * t1204, -t1347 * t1205 + t1349 * t1206, -t1347 * t1199 + t1349 * t1200, -t1347 * t1191 + t1349 * t1192; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1317, t1318, 0, t1349 * t1321 + t1347 * t1322, 0, 0, 0, 0, 0, 0, t1358, t1361, 0, t1349 * t1254 + t1347 * t1256, 0, 0, 0, 0, 0, 0, t1349 * t1286 + t1347 * t1288, t1349 * t1285 + t1347 * t1287, t1349 * t1282 + t1347 * t1283, t1349 * t1227 + t1347 * t1228, 0, 0, 0, 0, 0, 0, t1349 * t1238 + t1347 * t1240, t1349 * t1239 + t1347 * t1241, t1349 * t1233 + t1347 * t1234, t1349 * t1201 + t1347 * t1202, 0, 0, 0, 0, 0, 0, t1349 * t1203 + t1347 * t1204, t1349 * t1205 + t1347 * t1206, t1349 * t1199 + t1347 * t1200, t1349 * t1191 + t1347 * t1192; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1384, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1235, 0, 0, 0, 0, 0, 0, t1258, t1259, t1253, t1209, 0, 0, 0, 0, 0, 0, t1215, t1219, t1207, t1193; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1350, -qJDD(1), 0, t1322, 0, 0, 0, 0, 0, 0, t1311, -t1312, 0, t1256, 0, 0, 0, 0, 0, 0, t1288, t1287, t1283, t1228, 0, 0, 0, 0, 0, 0, t1240, t1241, t1234, t1202, 0, 0, 0, 0, 0, 0, t1204, t1206, t1200, t1192; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1350, 0, t1321, 0, 0, 0, 0, 0, 0, t1312, t1311, 0, t1254, 0, 0, 0, 0, 0, 0, t1286, t1285, t1282, t1227, 0, 0, 0, 0, 0, 0, t1238, t1239, t1233, t1201, 0, 0, 0, 0, 0, 0, t1203, t1205, t1199, t1191; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1384, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1235, 0, 0, 0, 0, 0, 0, t1258, t1259, t1253, t1209, 0, 0, 0, 0, 0, 0, t1215, t1219, t1207, t1193; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1350, -qJDD(1), 0, t1281, 0, 0, 0, 0, 0, 0, -t1307, t1305, t1310, t1236, 0, 0, 0, 0, 0, 0, t1260, t1261, t1255, t1210, 0, 0, 0, 0, 0, 0, t1216, t1220, t1208, t1194; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1350, 0, t1280, 0, 0, 0, 0, 0, 0, t1331, -t1372, t1314, -t1273, 0, 0, 0, 0, 0, 0, -t1275, -t1276, -t1270, -t1217, 0, 0, 0, 0, 0, 0, -t1221, -t1223, -t1213, -t1195; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1384, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1235, 0, 0, 0, 0, 0, 0, t1258, t1259, t1253, t1209, 0, 0, 0, 0, 0, 0, t1215, t1219, t1207, t1193; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1337 * t1350, t1324, t1331, t1265, 0, 0, 0, 0, 0, 0, t1277, t1278, t1271, t1218, 0, 0, 0, 0, 0, 0, t1222, t1224, t1214, t1196; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1324, -t1381, -t1372, t1264, 0, 0, 0, 0, 0, 0, -t1292, -t1294, t1298, -t1251, 0, 0, 0, 0, 0, 0, -t1247, -t1249, -t1257, -t1237; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1331, t1372, -t1314, t1273, 0, 0, 0, 0, 0, 0, t1275, t1276, t1270, t1217, 0, 0, 0, 0, 0, 0, t1221, t1223, t1213, t1195; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1304, t1296, t1293, t1232, 0, 0, 0, 0, 0, 0, t1243, t1245, t1230, t1198; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1297, t1306, t1295, t1231, 0, 0, 0, 0, 0, 0, t1242, t1244, t1229, t1197; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1292, t1294, -t1298, t1251, 0, 0, 0, 0, 0, 0, t1247, t1249, t1257, t1237; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1266, t1268, t1248, t1212; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1269, t1279, t1250, t1211; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1247, t1249, t1257, t1237;];
f_new_reg = t1;
