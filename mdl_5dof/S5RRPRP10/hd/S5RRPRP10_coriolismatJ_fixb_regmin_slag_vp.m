% Calculate minimal parameter regressor of coriolis matrix for
% S5RRPRP10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x25]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2021-01-15 21:03
% Revision: 24b2e7d74a0c1a3b64fa2f8f5ad758691ad61af3 (2021-01-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRPRP10_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(7,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRP10_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRP10_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'S5RRPRP10_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [7x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2021-01-15 21:02:49
% EndTime: 2021-01-15 21:02:59
% DurationCPUTime: 2.92s
% Computational Cost: add. (2398->305), mult. (4418->412), div. (0->0), fcn. (3694->4), ass. (0->247)
t320 = pkin(3) + pkin(6);
t183 = sin(qJ(2));
t314 = t183 * pkin(4);
t182 = sin(qJ(4));
t185 = cos(qJ(2));
t287 = t182 * t185;
t186 = -pkin(2) - pkin(7);
t286 = t183 * qJ(3);
t205 = -t185 * t186 + t286;
t100 = -pkin(1) - t205;
t130 = t320 * t183;
t184 = cos(qJ(4));
t119 = t184 * t130;
t62 = t182 * t100 - t119;
t56 = -qJ(5) * t287 + t62;
t53 = -t56 + t314;
t325 = t53 + t56;
t123 = (-qJ(5) + t186) * t184;
t296 = t123 * t183;
t284 = t183 * t184;
t176 = t185 * pkin(6);
t177 = t185 * pkin(3);
t131 = t176 + t177;
t120 = t131 * t182;
t282 = t185 * qJ(3);
t129 = t183 * pkin(2) - t282;
t107 = t183 * pkin(7) + t129;
t87 = t184 * t107;
t299 = t87 + t120;
t58 = qJ(5) * t284 + t299;
t324 = -t58 - t296;
t309 = t53 * t182;
t283 = t184 * t185;
t289 = t182 * t130;
t63 = t184 * t100 + t289;
t57 = -qJ(5) * t283 + t63;
t23 = (-t57 * t184 + t309) * t183;
t169 = t182 * qJD(2);
t248 = t185 * qJD(1);
t223 = t184 * t248;
t113 = t169 + t223;
t170 = t184 * qJD(2);
t194 = t182 * t248 - t170;
t322 = -t56 * t182 / 0.2e1 - t309 / 0.2e1;
t178 = t182 ^ 2;
t180 = t184 ^ 2;
t143 = t178 - t180;
t190 = t143 * qJD(2) + 0.2e1 * t182 * t223;
t121 = t131 * t184;
t285 = t183 * qJ(5);
t312 = t185 * pkin(4);
t55 = t312 + t121 + (-t107 - t285) * t182;
t321 = t55 / 0.2e1;
t291 = t182 * qJ(5);
t122 = t182 * t186 - t291;
t319 = -t122 / 0.2e1;
t318 = -t178 / 0.2e1;
t317 = t182 / 0.2e1;
t316 = -t183 / 0.2e1;
t315 = t182 * pkin(4);
t313 = t184 * pkin(4);
t238 = -t314 / 0.2e1;
t138 = t182 * t238;
t3 = t138 + t322;
t311 = t3 * qJD(1);
t89 = (-t313 - t320) * t183;
t90 = pkin(4) * t283 + t131;
t5 = t53 * t55 + t57 * t58 + t90 * t89;
t310 = t5 * qJD(1);
t6 = t58 * t283 - t55 * t287 + t23;
t306 = t6 * qJD(1);
t243 = pkin(4) * t287;
t7 = -t90 * t243 - t325 * t57;
t305 = t7 * qJD(1);
t8 = t325 * t283;
t304 = t8 * qJD(1);
t303 = t89 * t182;
t302 = t89 * t184;
t288 = t182 * t183;
t137 = pkin(4) * t288 / 0.2e1;
t9 = t137 - t322;
t301 = t9 * qJD(1);
t300 = t90 * t184;
t298 = t122 * t183;
t297 = t122 * t185;
t295 = t123 * t185;
t15 = (t53 + t302) * t185 + (t55 - t300) * t183;
t294 = t15 * qJD(1);
t16 = t58 * t183 - t90 * t288 + (t57 + t303) * t185;
t293 = t16 * qJD(1);
t160 = qJ(3) + t315;
t292 = t160 * t182;
t290 = t182 * t107;
t19 = (-t62 - t119) * t185 - t290 * t183;
t281 = t19 * qJD(1);
t20 = t299 * t183 - t131 * t288 + (t63 - t289) * t185;
t280 = t20 * qJD(1);
t279 = t23 * qJD(1);
t24 = t57 * t283 - t53 * t287;
t278 = t24 * qJD(1);
t181 = t185 ^ 2;
t25 = -t57 * t183 + (-t181 * t313 - t185 * t90) * t182;
t277 = t25 * qJD(1);
t26 = -t178 * t181 * pkin(4) - t56 * t183 + t90 * t283;
t276 = t26 * qJD(1);
t32 = t131 * t283 - t62 * t183;
t275 = t32 * qJD(1);
t33 = -t131 * t287 - t63 * t183;
t274 = t33 * qJD(1);
t273 = t57 * qJD(4);
t208 = -t185 * pkin(2) - t286;
t124 = -pkin(1) + t208;
t67 = t124 * t185 + t129 * t183;
t272 = t67 * qJD(1);
t68 = -t124 * t183 + t129 * t185;
t271 = t68 * qJD(1);
t142 = t178 + t180;
t85 = t142 * t185 * t183;
t270 = t85 * qJD(1);
t179 = t183 ^ 2;
t144 = t181 - t179;
t269 = qJD(1) * t183;
t268 = qJD(1) * t184;
t267 = qJD(2) * qJ(3);
t266 = qJD(3) * t183;
t173 = qJD(3) * t184;
t265 = qJD(4) * t182;
t264 = qJD(4) * t183;
t263 = qJD(4) * t184;
t262 = qJD(4) * t186;
t115 = t144 * t182;
t261 = t115 * qJD(1);
t116 = t142 * t181;
t260 = t116 * qJD(1);
t118 = t144 * t184;
t259 = t118 * qJD(1);
t258 = t122 * qJD(4);
t215 = t318 - t180 / 0.2e1;
t126 = -0.1e1 / 0.2e1 + t215;
t257 = t126 * qJD(2);
t256 = t142 * qJD(2);
t255 = t144 * qJD(1);
t254 = t160 * qJD(2);
t253 = t179 * qJD(1);
t252 = t179 * qJD(3);
t251 = t182 * qJD(5);
t250 = t183 * qJD(2);
t249 = t184 * qJD(5);
t171 = t185 * qJD(2);
t247 = t185 * qJD(3);
t246 = t185 * qJD(4);
t79 = -t290 / 0.2e1;
t245 = t79 + t121 / 0.2e1;
t80 = -t87 / 0.2e1;
t244 = t80 - t120 / 0.2e1;
t242 = pkin(1) * t269;
t241 = pkin(1) * t248;
t240 = pkin(4) * t265;
t239 = pkin(6) * t250;
t237 = t313 / 0.2e1;
t236 = t312 / 0.2e1;
t233 = -t300 / 0.2e1;
t232 = t182 * t246;
t231 = t184 * t246;
t230 = t124 * t129 * qJD(1);
t229 = t124 * t269;
t228 = t182 * t171;
t226 = t185 * t251;
t151 = t183 * t171;
t150 = t183 * t248;
t225 = t182 * t263;
t224 = t182 * t170;
t222 = t185 * t249;
t221 = -t298 / 0.2e1;
t220 = t296 / 0.2e1;
t219 = t292 / 0.2e1;
t218 = -t160 * t185 / 0.2e1;
t217 = -t285 / 0.2e1;
t216 = t176 / 0.2e1 + t177 / 0.2e1;
t214 = t180 / 0.2e1 + t318;
t211 = qJD(4) + t269;
t209 = t185 * t224;
t193 = t185 * t219 + t233;
t1 = (t56 / 0.2e1 + t53 / 0.2e1) * t122 + (t321 + t193) * pkin(4);
t27 = t160 * t313;
t206 = -t1 * qJD(1) + t27 * qJD(2);
t187 = (-t297 / 0.2e1 - t53 / 0.2e1) * t184 + (-t57 / 0.2e1 + t295 / 0.2e1) * t182;
t11 = (pkin(6) / 0.2e1 + pkin(3) / 0.2e1 + t237) * t183 + t187;
t65 = t122 * t182 + t123 * t184;
t204 = t11 * qJD(1) - t65 * qJD(2);
t17 = t233 + (-t291 / 0.2e1 + t122 / 0.2e1) * t183 + (t219 + (0.1e1 - t214) * pkin(4)) * t185 + t245;
t86 = (t160 + t315) * t184;
t203 = -t17 * qJD(1) + t86 * qJD(2);
t102 = t180 * pkin(4) - t292;
t199 = t90 * t317 + t220;
t21 = (t217 + (t315 + t160 / 0.2e1) * t185) * t184 + t199 + t244;
t202 = -t21 * qJD(1) + t102 * qJD(2);
t14 = (t220 - t58 / 0.2e1) * t182 + (t221 + t236 - t55 / 0.2e1) * t184 + t216;
t201 = t14 * qJD(1) + t254;
t200 = -t253 - t264;
t198 = t186 * t316 - t282 / 0.2e1;
t189 = t198 * t184;
t60 = t87 / 0.2e1 + t189;
t197 = qJ(3) * t169 - t60 * qJD(1);
t59 = (t107 / 0.2e1 + t198) * t182;
t196 = -qJ(3) * t170 - t59 * qJD(1);
t82 = t211 * t287;
t104 = t214 * t185;
t195 = t104 * qJD(1) + t224;
t192 = t182 * t181 * t268 - t104 * qJD(2);
t117 = t143 * t181;
t191 = -t117 * qJD(1) + 0.2e1 * t209;
t188 = t208 * qJD(2) + t247;
t172 = qJD(3) * t182;
t166 = pkin(6) * t171;
t161 = t171 / 0.2e1;
t156 = t184 * t247;
t155 = t184 * t171;
t154 = t183 * t268;
t153 = t183 * t173;
t152 = t184 * t252;
t149 = t182 * t269;
t148 = t182 * t266;
t147 = t182 * t252;
t125 = 0.1e1 / 0.2e1 + t215;
t112 = -t154 - t263;
t111 = -t149 - t265;
t108 = t150 + t246 / 0.2e1;
t101 = t194 * pkin(4);
t98 = t200 * t184;
t97 = t184 * t253 - t228;
t96 = t200 * t182;
t95 = t182 * t253 + t155;
t88 = t104 * qJD(4);
t84 = t211 * t283;
t83 = t113 * t183;
t81 = t194 * t183;
t37 = -t120 + t80 + t189;
t36 = t198 * t182 + t121 + t79;
t22 = -t199 + t244 + (t218 + t217 - t243) * t184;
t18 = t180 * t236 + t182 * t217 + t312 * t318 - t193 + t221 + t245 + t312;
t13 = t216 - t324 * t317 + (t319 * t183 + t236 + t321) * t184;
t12 = t184 * t238 + t320 * t316 + t187;
t10 = t137 + t322;
t4 = t138 - t322;
t2 = pkin(4) * t321 + t218 * t315 + t90 * t237 + t325 * t319;
t28 = [0, 0, 0, t151, t144 * qJD(2), 0, 0, 0, -pkin(1) * t250, -pkin(1) * t171, 0, t68 * qJD(2) - t183 * t247, -t67 * qJD(2) + t252, (qJD(2) * t129 - t266) * t124, -t151 * t178 + t181 * t225, -t117 * qJD(4) - 0.2e1 * t183 * t209, -t115 * qJD(2) - t183 * t231, -t118 * qJD(2) + t183 * t232, t151, t19 * qJD(2) + t33 * qJD(4) + t147, -t20 * qJD(2) - t32 * qJD(4) + t152, t15 * qJD(2) + t25 * qJD(4) + t183 * t226 + t147, -t16 * qJD(2) - t26 * qJD(4) + t183 * t222 + t152, -t6 * qJD(2) + t85 * qJD(3) + t8 * qJD(4) + t116 * qJD(5), t5 * qJD(2) + t23 * qJD(3) + t7 * qJD(4) - t24 * qJD(5); 0, 0, 0, t150, t255, t171, -t250, 0, -t166 - t242, t239 - t241, t188, t166 + t271, -t239 - t272, pkin(6) * t188 + t230, -t88 + (-t178 * t248 + t224) * t183, -t190 * t183 + 0.2e1 * t185 * t225, t155 - t261, -t228 - t259, t108, t281 + (-t184 * t205 - t289) * qJD(2) + t156 + t36 * qJD(4), -t130 * t170 - t280 + t37 * qJD(4) + (qJD(2) * t205 - t247) * t182, t294 + (-t160 * t284 + t295 + t303) * qJD(2) + t156 + t18 * qJD(4) - t183 * t249, -t293 + (-t297 + t302) * qJD(2) + t22 * qJD(4) + (-t247 + (qJD(5) + t254) * t183) * t182, -t306 + ((-t55 + t298) * t184 + t324 * t182) * qJD(2) + t4 * qJD(4), t310 + (t58 * t122 + t55 * t123 + t89 * t160) * qJD(2) + t13 * qJD(3) + t2 * qJD(4) + t12 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t171, -t150, t253, t166 - t229, 0, 0, 0, 0, 0, t95, t97, t95, t97, t270, t13 * qJD(2) + t10 * qJD(4) + t279; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t192, t191, -t84, t82, t161, t36 * qJD(2) - t63 * qJD(4) + t274, t37 * qJD(2) + t62 * qJD(4) - t275, t18 * qJD(2) - t273 + t277, t22 * qJD(2) + t56 * qJD(4) - t276, pkin(4) * t231 + t4 * qJD(2) + t304, -pkin(4) * t273 + t2 * qJD(2) + t10 * qJD(3) + t305; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t81, t83, t260, t12 * qJD(2) - t278; 0, 0, 0, -t150, -t255, 0, 0, 0, t242, t241, 0, -t271, t272, -t230, t150 * t178 - t88, 0.2e1 * t184 * t82, -t182 * t264 + t261, -t183 * t263 + t259, -t108, t59 * qJD(4) - t281, t60 * qJD(4) + t280, -t17 * qJD(4) - t294, -t21 * qJD(4) + t293, -t3 * qJD(4) + t306, t14 * qJD(3) - t1 * qJD(4) + t11 * qJD(5) - t310; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), qJ(3) * qJD(3), -t225, t143 * qJD(4), 0, 0, 0, qJ(3) * t263 + t172, -qJ(3) * t265 + t173, t86 * qJD(4) + t172, t102 * qJD(4) + t173, t142 * qJD(5), t160 * qJD(3) + t27 * qJD(4) - t65 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t267, 0, 0, 0, 0, 0, t169, t170, t169, t170, 0, t125 * qJD(5) + t201; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t195, t190, t111, t112, -t248 / 0.2e1, -t182 * t262 - t196, -t184 * t262 - t197, t203 - t258, -t123 * qJD(4) + t202, t240 - t311, -pkin(4) * t258 + t206; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t256, t125 * qJD(3) + t204; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t150, -t253, t229, 0, 0, 0, 0, 0, t96, t98, t96, t98, -t270, -t14 * qJD(2) - t9 * qJD(4) - t279; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2), -t267, 0, 0, 0, 0, 0, -t169, -t170, -t169, -t170, 0, t126 * qJD(5) - t201; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t111, t112, t111, t112, 0, -t240 - t301; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t257; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t192, -t191, t83, -t81, t161, -t59 * qJD(2) + t148 - t274, -t60 * qJD(2) + t153 + t275, t17 * qJD(2) + t148 + t226 - t277, t21 * qJD(2) + t153 + t222 + t276, t3 * qJD(2) - t304, pkin(4) * t226 + t1 * qJD(2) + t9 * qJD(3) - t305; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t195, -t190, t149, t154, t248 / 0.2e1, t196, t197, -t203 - t249, -t202 + t251, t311, -pkin(4) * t249 - t206; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t149, t154, t149, t154, 0, t301; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t194, t113, 0, t101; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t82, -t84, -t260, -pkin(4) * t232 - t11 * qJD(2) + t278; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t263, -t265, -t256, pkin(4) * t263 - t126 * qJD(3) - t204; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t257; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t194, -t113, 0, -t101; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t28;
