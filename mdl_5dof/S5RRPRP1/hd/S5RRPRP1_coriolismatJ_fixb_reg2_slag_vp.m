% Calculate inertial parameters regressor of coriolis matrix for
% S5RRPRP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4,theta3]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2022-01-20 10:20
% Revision: fd3771346c4aea32fdeb66112c511235427c26a7 (2022-01-20)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRPRP1_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRP1_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRP1_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRPRP1_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2022-01-20 10:20:05
% EndTime: 2022-01-20 10:20:08
% DurationCPUTime: 1.89s
% Computational Cost: add. (1352->170), mult. (2680->197), div. (0->0), fcn. (2147->6), ass. (0->138)
t107 = sin(qJ(4));
t106 = cos(pkin(8));
t105 = sin(pkin(8));
t108 = sin(qJ(2));
t96 = t105 * t108 * pkin(1);
t110 = cos(qJ(2));
t165 = t110 * pkin(1);
t99 = pkin(2) + t165;
t124 = t106 * t99 - t96;
t69 = -pkin(3) - t124;
t98 = -t106 * pkin(2) - pkin(3);
t128 = -t98 / 0.2e1 - t69 / 0.2e1;
t179 = t128 * t107;
t109 = cos(qJ(4));
t178 = t128 * t109;
t135 = qJD(1) + qJD(2);
t103 = t107 ^ 2;
t104 = t109 ^ 2;
t93 = t103 + t104;
t175 = t135 * t93;
t94 = t104 - t103;
t174 = t135 * t94;
t76 = t106 * t165 - t96;
t173 = -t76 / 0.2e1;
t172 = t76 / 0.2e1;
t168 = pkin(4) * t107;
t167 = t103 * pkin(4);
t166 = t109 * pkin(4);
t33 = t93 * t76;
t148 = t33 * qJD(1);
t29 = t33 * qJD(2);
t164 = t148 + t29;
t139 = qJD(2) * t107;
t151 = t106 * t108;
t152 = t105 * t110;
t75 = (t151 + t152) * pkin(1);
t56 = t75 * t139;
t141 = qJD(1) * t107;
t57 = t75 * t141;
t163 = t56 + t57;
t162 = pkin(1) * qJD(1);
t161 = pkin(1) * qJD(2);
t122 = pkin(1) * t151 + t105 * t99;
t70 = pkin(7) + t122;
t154 = qJ(5) + t70;
t47 = t154 * t109;
t158 = t47 * t109;
t46 = t154 * t107;
t159 = t46 * t107;
t19 = t158 + t159;
t51 = t69 - t166;
t4 = t19 * t76 + t51 * t75;
t160 = t4 * qJD(1);
t48 = t51 * t107;
t7 = t70 * t33 + t69 * t75;
t157 = t7 * qJD(1);
t97 = t105 * pkin(2) + pkin(7);
t153 = qJ(5) + t97;
t79 = t153 * t107;
t156 = t79 * t107;
t80 = t153 * t109;
t155 = t80 * t109;
t85 = t98 - t166;
t81 = t85 * t107;
t13 = t122 * t76 - t124 * t75;
t150 = t13 * qJD(1);
t149 = t19 * qJD(1);
t134 = t107 * t166;
t36 = -t48 + t134;
t147 = t36 * qJD(1);
t42 = t51 * t109 + t167;
t146 = t42 * qJD(1);
t145 = t47 * qJD(4);
t144 = t75 * qJD(1);
t143 = t76 * qJD(1);
t142 = t80 * qJD(4);
t140 = qJD(1) * t109;
t138 = qJD(2) * t109;
t101 = t107 * qJD(4);
t137 = t107 * qJD(5);
t102 = t109 * qJD(4);
t136 = t109 * qJD(5);
t133 = pkin(4) * t102;
t132 = pkin(4) * t137;
t130 = t81 / 0.2e1 + t48 / 0.2e1;
t129 = t85 / 0.2e1 + t51 / 0.2e1;
t127 = t69 * t141;
t126 = t69 * t140;
t125 = t75 * t138;
t54 = t107 * t173;
t123 = pkin(1) * t135;
t86 = t135 * t107;
t87 = t135 * t109;
t121 = t172 + t129;
t58 = t75 * t140;
t120 = -t58 - t125;
t35 = t155 + t156;
t112 = (t152 / 0.2e1 + t151 / 0.2e1) * pkin(1);
t5 = (-t80 / 0.2e1 - t47 / 0.2e1) * t109 + (-t79 / 0.2e1 - t46 / 0.2e1) * t107 + t112;
t119 = -t5 * qJD(1) + t35 * qJD(2);
t39 = t158 / 0.2e1;
t17 = t39 - t158 / 0.2e1;
t3 = pkin(4) * t48;
t118 = t3 * qJD(1) + t17 * qJD(3);
t11 = (-t166 + t172) * t107 + t130;
t52 = -t81 + t134;
t117 = t11 * qJD(1) - t52 * qJD(2);
t14 = t121 * t109 + t167;
t68 = t85 * t109 + t167;
t116 = t14 * qJD(1) + t68 * qJD(2);
t65 = t155 / 0.2e1;
t32 = t65 - t155 / 0.2e1;
t115 = -t17 * qJD(1) - t32 * qJD(2);
t20 = t54 + t179;
t114 = t20 * qJD(1) - t98 * t139;
t55 = t109 * t173;
t21 = t55 + t178;
t113 = t21 * qJD(1) - t98 * t138;
t1 = t121 * t168;
t10 = pkin(4) * t81;
t111 = t1 * qJD(1) + t10 * qJD(2) + t32 * qJD(3);
t100 = pkin(4) * t101;
t95 = t107 * t102;
t90 = t94 * qJD(4);
t89 = t93 * qJD(5);
t82 = pkin(4) * t86;
t74 = t107 * t87;
t72 = t76 * qJD(2);
t71 = t75 * qJD(2);
t28 = t32 * qJD(4);
t23 = t55 - t178;
t22 = t54 - t179;
t16 = t17 * qJD(4);
t15 = t129 * t109 + t167 + t55;
t12 = t130 + t54 - t134;
t6 = t65 + t39 + t156 / 0.2e1 + t159 / 0.2e1 + t112;
t2 = pkin(4) * t54 + (t51 + t85) * t168 / 0.2e1;
t8 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t108 * t161, -t110 * t161, 0, 0, 0, 0, 0, 0, 0, 0, -t71, -t72, 0, t13 * qJD(2), t95, t90, 0, -t95, 0, 0, t69 * t101 - t125, t69 * t102 + t56, t29, t7 * qJD(2), t95, t90, 0, -t95, 0, 0, -t36 * qJD(4) - t125, t42 * qJD(4) + t56, t29 + t89, t4 * qJD(2) + t3 * qJD(4) + t19 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t108 * t123, -t110 * t123, 0, 0, 0, 0, 0, 0, 0, 0, -t71 - t144, -t72 - t143, 0, t150 + (t105 * t76 - t106 * t75) * qJD(2) * pkin(2), t95, t90, 0, -t95, 0, 0, t22 * qJD(4) + t120, t23 * qJD(4) + t163, t164, t157 + (t97 * t33 + t75 * t98) * qJD(2), t95, t90, 0, -t95, 0, 0, t12 * qJD(4) + t120, t15 * qJD(4) + t163, t164 + t89, t160 + (t35 * t76 + t75 * t85) * qJD(2) + t2 * qJD(4) + t6 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t16; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t74, t174, t102, -t74, -t101, 0, t22 * qJD(2) - t70 * t102 + t127, t23 * qJD(2) + t70 * t101 + t126, 0, 0, t74, t174, t102, -t74, -t101, 0, t12 * qJD(2) - t145 - t147, t15 * qJD(2) + t46 * qJD(4) + t146, -t133, -pkin(4) * t145 + t2 * qJD(2) + t118; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t175, t6 * qJD(2) + t149; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t108 * t162, t110 * t162, 0, 0, 0, 0, 0, 0, 0, 0, t144, t143, 0, -t150, t95, t90, 0, -t95, 0, 0, -t20 * qJD(4) + t58, -t21 * qJD(4) - t57, -t148, -t157, t95, t90, 0, -t95, 0, 0, t11 * qJD(4) + t58, t14 * qJD(4) - t57, -t148 + t89, t1 * qJD(4) - t5 * qJD(5) - t160; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t95, t90, 0, -t95, 0, 0, t98 * t101, t98 * t102, 0, 0, t95, t90, 0, -t95, 0, 0, -t52 * qJD(4), t68 * qJD(4), t89, t10 * qJD(4) + t35 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t28; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t74, t174, t102, -t74, -t101, 0, -t97 * t102 - t114, t97 * t101 - t113, 0, 0, t74, t174, t102, -t74, -t101, 0, t117 - t142, t79 * qJD(4) + t116, -t133, -pkin(4) * t142 + t111; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t175, t119; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t16; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t28; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t101, -t102, 0, 0, 0, 0, 0, 0, 0, 0, -t101, -t102, 0, -t100 - t115; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t74, -t174, 0, t74, 0, 0, t20 * qJD(2) - t127, t21 * qJD(2) - t126, 0, 0, -t74, -t174, 0, t74, 0, 0, -t11 * qJD(2) - t137 + t147, -t14 * qJD(2) - t136 - t146, 0, -t1 * qJD(2) - t118 - t132; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t74, -t174, 0, t74, 0, 0, t114, t113, 0, 0, -t74, -t174, 0, t74, 0, 0, -t117 - t137, -t116 - t136, 0, -t111 - t132; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t115; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t86, -t87, 0, -t82; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t101, t102, -t175, t5 * qJD(2) + t100 - t149; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t101, t102, -t175, t100 - t119; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t86, t87, 0, t82; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t8;
