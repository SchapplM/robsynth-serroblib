% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RRPRP1
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4,theta3]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2022-01-20 10:20
% Revision: fd3771346c4aea32fdeb66112c511235427c26a7 (2022-01-20)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RRPRP1_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRP1_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRP1_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRPRP1_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRPRP1_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRPRP1_invdynm_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2022-01-20 10:20:11
% EndTime: 2022-01-20 10:20:19
% DurationCPUTime: 8.67s
% Computational Cost: add. (28895->426), mult. (41233->529), div. (0->0), fcn. (22674->8), ass. (0->314)
t817 = qJD(1) + qJD(2);
t815 = t817 ^ 2;
t816 = qJDD(1) + qJDD(2);
t822 = sin(pkin(8));
t823 = cos(pkin(8));
t771 = t815 * t823 + t816 * t822;
t774 = t815 * t822 - t816 * t823;
t825 = sin(qJ(2));
t828 = cos(qJ(2));
t715 = t771 * t828 - t774 * t825;
t820 = g(3) - qJDD(3);
t750 = qJ(3) * t771 - t820 * t823;
t919 = qJ(3) * t774 - t820 * t822;
t662 = pkin(6) * t715 + t750 * t828 - t825 * t919;
t826 = sin(qJ(1));
t829 = cos(qJ(1));
t719 = t771 * t825 + t774 * t828;
t918 = t715 * t829 - t719 * t826;
t929 = pkin(6) * t719 + t750 * t825 + t828 * t919;
t941 = pkin(5) * t918 + t829 * t662 - t826 * t929;
t931 = t715 * t826 + t719 * t829;
t940 = pkin(5) * t931 + t826 * t662 + t829 * t929;
t798 = g(1) * t829 + g(2) * t826;
t831 = qJD(1) ^ 2;
t837 = pkin(1) * t831 + t798;
t797 = g(1) * t826 - g(2) * t829;
t841 = qJDD(1) * pkin(1) + t797;
t730 = t825 * t841 - t828 * t837;
t723 = -t815 * pkin(2) + t730;
t729 = -t825 * t837 - t828 * t841;
t833 = t816 * pkin(2) - t729;
t680 = t723 * t822 - t823 * t833;
t681 = t823 * t723 + t822 * t833;
t861 = t680 * t822 + t681 * t823;
t621 = t680 * t823 - t681 * t822;
t881 = t828 * t621;
t574 = -t825 * t861 + t881;
t885 = t825 * t621;
t924 = t828 * t861 + t885;
t938 = t574 * t826 + t829 * t924;
t937 = t574 * t829 - t826 * t924;
t777 = t815 * t828 + t816 * t825;
t754 = pkin(6) * t777 - g(3) * t828;
t780 = t815 * t825 - t816 * t828;
t843 = t777 * t829 - t780 * t826;
t920 = pkin(6) * t780 - g(3) * t825;
t932 = pkin(5) * t843 + t829 * t754 - t826 * t920;
t917 = t777 * t826 + t780 * t829;
t930 = pkin(5) * t917 + t826 * t754 + t829 * t920;
t860 = t729 * t825 + t730 * t828;
t686 = t729 * t828 - t730 * t825;
t884 = t826 * t686;
t925 = t829 * t860 + t884;
t880 = t829 * t686;
t923 = -t826 * t860 + t880;
t824 = sin(qJ(4));
t827 = cos(qJ(4));
t796 = t827 * t815 * t824;
t786 = qJDD(4) + t796;
t907 = pkin(4) * t786;
t811 = t827 * t820;
t672 = -t815 * pkin(3) + t816 * pkin(7) + t681;
t888 = t824 * t672;
t653 = t811 + t888;
t654 = t672 * t827 - t820 * t824;
t602 = t653 * t824 + t654 * t827;
t776 = t827 * t786;
t819 = t827 ^ 2;
t809 = t819 * t815;
t830 = qJD(4) ^ 2;
t794 = -t809 - t830;
t736 = t794 * t824 + t776;
t910 = pkin(3) * t736;
t818 = t824 ^ 2;
t892 = t818 * t815;
t792 = -t830 - t892;
t787 = qJDD(4) - t796;
t886 = t824 * t787;
t738 = t792 * t827 - t886;
t909 = pkin(3) * t738;
t874 = qJD(4) * t817;
t804 = t827 * t874;
t807 = t824 * t816;
t767 = t807 + t804;
t838 = t811 + (t767 - t804) * qJ(5) - t907;
t873 = (qJD(5) * t817);
t857 = t672 + (2 * t873);
t628 = t824 * t857 + t838;
t908 = pkin(4) * t628;
t887 = t824 * t786;
t740 = t794 * t827 - t887;
t803 = t824 * t874;
t808 = t827 * t816;
t769 = t808 - 0.2e1 * t803;
t696 = t740 * t822 + t769 * t823;
t698 = t740 * t823 - t769 * t822;
t647 = t696 * t828 + t698 * t825;
t649 = -t696 * t825 + t698 * t828;
t906 = pkin(5) * (t647 * t829 + t649 * t826);
t882 = t827 * t787;
t742 = -t792 * t824 - t882;
t766 = t807 + 0.2e1 * t804;
t697 = t742 * t822 - t766 * t823;
t699 = t742 * t823 + t766 * t822;
t648 = t697 * t828 + t699 * t825;
t650 = -t697 * t825 + t699 * t828;
t905 = pkin(5) * (t648 * t829 + t650 * t826);
t875 = t818 + t819;
t775 = t875 * t816;
t781 = t809 + t892;
t721 = t775 * t822 + t781 * t823;
t722 = t775 * t823 - t781 * t822;
t678 = t721 * t828 + t722 * t825;
t679 = -t721 * t825 + t722 * t828;
t904 = pkin(5) * (t678 * t829 + t679 * t826);
t903 = pkin(6) * t647;
t902 = pkin(6) * t648;
t901 = pkin(6) * t678;
t900 = pkin(7) * t736;
t899 = pkin(7) * t738;
t896 = qJ(3) * t696;
t895 = qJ(3) * t697;
t894 = qJ(3) * t721;
t893 = t817 * t824;
t889 = t824 * t628;
t671 = -pkin(3) * t816 - pkin(7) * t815 + t680;
t663 = t824 * t671;
t883 = t827 * t628;
t664 = t827 * t671;
t879 = -pkin(3) * t671 + pkin(7) * t602;
t878 = pkin(3) * t769 + pkin(7) * t740;
t877 = -pkin(3) * t766 + pkin(7) * t742;
t876 = pkin(3) * t781 + pkin(7) * t775;
t872 = pkin(4) * t807;
t871 = t822 * t807;
t870 = t823 * t807;
t869 = t663 + t877;
t868 = -t664 + t878;
t580 = t602 * t822 - t671 * t823;
t867 = pkin(2) * t580 + t879;
t866 = t827 * t873;
t865 = -pkin(1) * t736 + pkin(6) * t649;
t864 = -pkin(1) * t738 + pkin(6) * t650;
t863 = -pkin(2) * t736 + qJ(3) * t698;
t862 = -pkin(2) * t738 + qJ(3) * t699;
t858 = -t797 * t826 - t798 * t829;
t856 = t822 * t796;
t855 = t823 * t796;
t801 = 0.2e1 * t866;
t768 = t808 - t803;
t785 = qJD(4) * pkin(4) - qJ(5) * t893;
t844 = pkin(4) * t809 - qJ(5) * t768 + qJD(4) * t785 - t654;
t629 = t801 - t844;
t615 = pkin(4) * t781 + qJ(5) * t808 + t629;
t626 = (qJ(5) * t816 + t857) * t824 + t838;
t854 = t615 * t827 + t626 * t824 + t876;
t634 = -pkin(4) * t768 - qJ(5) * t809 + t785 * t893 + qJDD(5) + t671;
t630 = -qJ(5) * t792 + t634;
t728 = -pkin(4) * t766 - qJ(5) * t787;
t853 = t630 * t824 + t728 * t827 + t877;
t852 = t876 + t602;
t695 = pkin(2) * t697;
t851 = t695 + t869;
t694 = pkin(2) * t696;
t850 = t694 + t868;
t789 = qJDD(1) * t829 - t826 * t831;
t849 = -pkin(5) * t789 - g(3) * t826;
t848 = -pkin(2) * t774 - t680;
t714 = pkin(2) * t721;
t847 = t714 + t854;
t846 = t695 + t853;
t845 = t714 + t852;
t601 = t653 * t827 - t654 * t824;
t842 = t797 * t829 - t798 * t826;
t586 = t629 * t827 + t889;
t588 = -pkin(4) * t634 + qJ(5) * t629;
t840 = -pkin(3) * t634 + pkin(7) * t586 + qJ(5) * t889 + t588 * t827;
t624 = pkin(4) * t769 + qJ(5) * t794 - t634;
t839 = -qJ(5) * t887 + t624 * t827 + t878;
t836 = pkin(4) * t792 + t844;
t563 = t586 * t822 - t634 * t823;
t835 = pkin(2) * t563 + t840;
t834 = t694 + t839;
t832 = -pkin(2) * t771 - t681;
t793 = t809 - t830;
t791 = t830 - t892;
t788 = qJDD(1) * t826 + t829 * t831;
t782 = -t809 + t892;
t764 = -pkin(5) * t788 + g(3) * t829;
t761 = t875 * t874;
t746 = qJDD(4) * t822 + t761 * t823;
t745 = -qJDD(4) * t823 + t761 * t822;
t744 = t767 * t827 - t818 * t874;
t743 = -t768 * t824 - t819 * t874;
t741 = -t791 * t824 + t776;
t739 = t793 * t827 - t886;
t737 = t791 * t827 + t887;
t735 = t793 * t824 + t882;
t732 = (t767 + t804) * t824;
t731 = (t768 - t803) * t827;
t713 = qJ(3) * t722;
t712 = -t766 * t824 + t769 * t827;
t711 = t766 * t827 + t769 * t824;
t709 = t741 * t823 + t871;
t708 = t739 * t823 + t808 * t822;
t707 = t741 * t822 - t870;
t706 = t739 * t822 - t808 * t823;
t705 = t744 * t823 - t856;
t704 = t743 * t823 + t856;
t703 = t744 * t822 + t855;
t702 = t743 * t822 - t855;
t701 = -pkin(1) * t780 - t729;
t700 = -pkin(1) * t777 - t730;
t691 = -t745 * t825 + t746 * t828;
t690 = t745 * t828 + t746 * t825;
t689 = t712 * t823 + t782 * t822;
t688 = t712 * t822 - t782 * t823;
t683 = pkin(1) * t686;
t682 = pkin(1) * g(3) + pkin(6) * t860;
t675 = pkin(1) * t678;
t674 = pkin(6) * t679;
t670 = -t707 * t825 + t709 * t828;
t669 = -t706 * t825 + t708 * t828;
t668 = t707 * t828 + t709 * t825;
t667 = t706 * t828 + t708 * t825;
t658 = -t703 * t825 + t705 * t828;
t657 = -t702 * t825 + t704 * t828;
t656 = t703 * t828 + t705 * t825;
t655 = t702 * t828 + t704 * t825;
t646 = pkin(1) * t648;
t645 = pkin(1) * t647;
t642 = t664 - t899;
t641 = t663 - t900;
t640 = -t690 * t826 + t691 * t829;
t639 = t690 * t829 + t691 * t826;
t638 = -t688 * t825 + t689 * t828;
t637 = t688 * t828 + t689 * t825;
t636 = t654 - t909;
t635 = t653 - t910;
t633 = -pkin(1) * t719 + t848;
t632 = -pkin(1) * t715 + t832;
t617 = pkin(2) * t621;
t616 = pkin(5) * (-t678 * t826 + t679 * t829);
t613 = pkin(2) * t820 + qJ(3) * t861;
t612 = t801 - t836 - t909;
t611 = -t668 * t826 + t670 * t829;
t610 = -t667 * t826 + t669 * t829;
t609 = t668 * t829 + t670 * t826;
t608 = t667 * t829 + t669 * t826;
t607 = t628 - t907 - t910;
t606 = -t656 * t826 + t658 * t829;
t605 = -t655 * t826 + t657 * t829;
t604 = t656 * t829 + t658 * t826;
t603 = t655 * t829 + t657 * t826;
t598 = -qJ(5) * t776 - t624 * t824 - t900;
t597 = t630 * t827 - t728 * t824 - t899;
t594 = pkin(5) * (-t648 * t826 + t650 * t829);
t593 = pkin(5) * (-t647 * t826 + t649 * t829);
t592 = t601 * t823 - t894;
t591 = t601 * t822 + t713;
t590 = -t637 * t826 + t638 * t829;
t589 = t637 * t829 + t638 * t826;
t585 = t629 * t824 - t883;
t583 = t646 + t851;
t582 = t645 + t850;
t581 = t602 * t823 + t671 * t822;
t578 = -t636 * t822 + t642 * t823 - t895;
t577 = -t635 * t822 + t641 * t823 - t896;
t576 = -t615 * t824 + t626 * t827;
t571 = t636 * t823 + t642 * t822 + t862;
t570 = t635 * t823 + t641 * t822 + t863;
t569 = t675 + t845;
t568 = -pkin(4) * t871 + t576 * t823 - t894;
t567 = pkin(4) * t870 + t576 * t822 + t713;
t566 = t645 + t834;
t565 = t646 + t846;
t564 = t586 * t823 + t634 * t822;
t561 = -pkin(3) * t585 + t908;
t560 = t597 * t823 - t612 * t822 - t895;
t559 = t598 * t823 - t607 * t822 - t896;
t558 = t675 + t847;
t557 = t597 * t822 + t612 * t823 + t862;
t556 = t598 * t822 + t607 * t823 + t863;
t555 = -pkin(1) * t574 - t617;
t554 = -t591 * t825 + t592 * t828 - t901;
t553 = t591 * t828 + t592 * t825 + t674;
t552 = -t580 * t825 + t581 * t828;
t551 = t580 * t828 + t581 * t825;
t550 = pkin(6) * t574 + qJ(3) * t881 - t613 * t825;
t549 = pkin(1) * t820 + pkin(6) * t924 + qJ(3) * t885 + t613 * t828;
t548 = -qJ(3) * t580 - (pkin(3) * t822 - pkin(7) * t823) * t601;
t547 = -pkin(7) * t585 + qJ(5) * t883 - t588 * t824;
t546 = -t571 * t825 + t578 * t828 - t902;
t545 = -t570 * t825 + t577 * t828 - t903;
t544 = t571 * t828 + t578 * t825 + t864;
t543 = t570 * t828 + t577 * t825 + t865;
t542 = -t567 * t825 + t568 * t828 - t901;
t541 = t567 * t828 + t568 * t825 + t674;
t540 = -t563 * t825 + t564 * t828;
t539 = t563 * t828 + t564 * t825;
t538 = qJ(3) * t581 - (-pkin(3) * t823 - pkin(7) * t822 - pkin(2)) * t601;
t537 = -t557 * t825 + t560 * t828 - t902;
t536 = -t556 * t825 + t559 * t828 - t903;
t535 = t557 * t828 + t560 * t825 + t864;
t534 = t556 * t828 + t559 * t825 + t865;
t533 = pkin(1) * t551 + t867;
t532 = -qJ(3) * t563 + t547 * t823 - t561 * t822;
t531 = -pkin(2) * t585 + qJ(3) * t564 + t547 * t822 + t561 * t823;
t530 = pkin(1) * t539 + t835;
t529 = -pkin(6) * t551 - t538 * t825 + t548 * t828;
t528 = pkin(1) * t601 + pkin(6) * t552 + t538 * t828 + t548 * t825;
t527 = -pkin(6) * t539 - t531 * t825 + t532 * t828;
t526 = -pkin(1) * t585 + pkin(6) * t540 + t531 * t828 + t532 * t825;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t789, 0, -t788, 0, t849, -t764, -t842, -pkin(5) * t842, 0, 0, -t917, 0, -t843, 0, t930, t932, t923, pkin(5) * t923 + pkin(6) * t880 - t826 * t682, 0, 0, -t931, 0, -t918, 0, t940, t941, t937, pkin(5) * t937 - t826 * t549 + t829 * t550, t606, t590, t611, t605, t610, t640, -t543 * t826 + t545 * t829 - t906, -t544 * t826 + t546 * t829 - t905, -t553 * t826 + t554 * t829 - t904, t829 * t529 - t826 * t528 - pkin(5) * (t551 * t829 + t552 * t826), t606, t590, t611, t605, t610, t640, -t534 * t826 + t536 * t829 - t906, -t535 * t826 + t537 * t829 - t905, -t541 * t826 + t542 * t829 - t904, t829 * t527 - t826 * t526 - pkin(5) * (t539 * t829 + t540 * t826); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t788, 0, t789, 0, t764, t849, t858, pkin(5) * t858, 0, 0, t843, 0, -t917, 0, -t932, t930, t925, pkin(5) * t925 + pkin(6) * t884 + t829 * t682, 0, 0, t918, 0, -t931, 0, -t941, t940, t938, pkin(5) * t938 + t829 * t549 + t826 * t550, t604, t589, t609, t603, t608, t639, t543 * t829 + t545 * t826 + t593, t544 * t829 + t546 * t826 + t594, t553 * t829 + t554 * t826 + t616, t826 * t529 + t829 * t528 + pkin(5) * (-t551 * t826 + t552 * t829), t604, t589, t609, t603, t608, t639, t534 * t829 + t536 * t826 + t593, t535 * t829 + t537 * t826 + t594, t541 * t829 + t542 * t826 + t616, t826 * t527 + t829 * t526 + pkin(5) * (-t539 * t826 + t540 * t829); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t797, t798, 0, 0, 0, 0, 0, 0, 0, t816, t701, t700, 0, -t683, 0, 0, 0, 0, 0, t816, t633, t632, 0, t555, t732, t711, t737, t731, t735, 0, t582, t583, t569, t533, t732, t711, t737, t731, t735, 0, t566, t565, t558, t530; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t831, 0, 0, -g(3), -t797, 0, 0, 0, -t780, 0, -t777, 0, t920, t754, t686, pkin(6) * t686, 0, 0, -t719, 0, -t715, 0, t929, t662, t574, t550, t658, t638, t670, t657, t669, t691, t545, t546, t554, t529, t658, t638, t670, t657, t669, t691, t536, t537, t542, t527; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t831, 0, qJDD(1), 0, g(3), 0, -t798, 0, 0, 0, t777, 0, -t780, 0, -t754, t920, t860, t682, 0, 0, t715, 0, -t719, 0, -t662, t929, t924, t549, t656, t637, t668, t655, t667, t690, t543, t544, t553, t528, t656, t637, t668, t655, t667, t690, t534, t535, t541, t526; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t797, t798, 0, 0, 0, 0, 0, 0, 0, t816, t701, t700, 0, -t683, 0, 0, 0, 0, 0, t816, t633, t632, 0, t555, t732, t711, t737, t731, t735, 0, t582, t583, t569, t533, t732, t711, t737, t731, t735, 0, t566, t565, t558, t530; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t816, 0, -t815, 0, 0, -g(3), t729, 0, 0, 0, -t774, 0, -t771, 0, t919, t750, t621, qJ(3) * t621, t705, t689, t709, t704, t708, t746, t577, t578, t592, t548, t705, t689, t709, t704, t708, t746, t559, t560, t568, t532; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t815, 0, t816, 0, g(3), 0, t730, 0, 0, 0, t771, 0, -t774, 0, -t750, t919, t861, t613, t703, t688, t707, t702, t706, t745, t570, t571, t591, t538, t703, t688, t707, t702, t706, t745, t556, t557, t567, t531; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t816, -t729, -t730, 0, 0, 0, 0, 0, 0, 0, t816, t848, t832, 0, -t617, t732, t711, t737, t731, t735, 0, t850, t851, t845, t867, t732, t711, t737, t731, t735, 0, t834, t846, t847, t835; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t816, 0, -t815, 0, 0, -t820, t680, 0, t744, t712, t741, t743, t739, t761, t641, t642, t601, pkin(7) * t601, t744, t712, t741, t743, t739, t761, t598, t597, t576, t547; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t815, 0, t816, 0, t820, 0, t681, 0, t796, -t782, -t807, -t796, -t808, -qJDD(4), t635, t636, 0, pkin(3) * t601, t796, -t782, -t807, -t796, -t808, -qJDD(4), t607, t612, t872, t561; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t816, -t680, -t681, 0, 0, t732, t711, t737, t731, t735, 0, t868, t869, t852, t879, t732, t711, t737, t731, t735, 0, t839, t853, t854, t840; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t767, t769, t786, -t804, t793, t804, 0, t671, t653, 0, t767, t769, t786, -t804, t793, t804, -qJ(5) * t786, t630, t626, qJ(5) * t628; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t803, t766, t791, t768, t787, -t803, -t671, 0, t654, 0, t803, t766, t791, t768, t787, -t803, t624, t728, t615, t588; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t796, t782, t807, t796, t808, qJDD(4), -t653, -t654, 0, 0, -t796, t782, t807, t796, t808, qJDD(4), -0.2e1 * t824 * t873 - t838 - t888 + t907, t836 - 0.2e1 * t866, -t872, -t908; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t767, t769, t786, -t804, t793, t804, 0, t634, t628, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t803, t766, t791, t768, t787, -t803, -t634, 0, t629, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t796, t782, t807, t796, t808, qJDD(4), -t628, -t629, 0, 0;];
m_new_reg = t1;
