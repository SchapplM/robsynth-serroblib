% Calculate minimal parameter regressor of coriolis matrix for
% S5RRPRR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4,d5,theta3]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x28]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2021-01-15 21:48
% Revision: 24b2e7d74a0c1a3b64fa2f8f5ad758691ad61af3 (2021-01-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRPRR9_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRR9_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRR9_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRPRR9_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2021-01-15 21:47:39
% EndTime: 2021-01-15 21:47:55
% DurationCPUTime: 5.16s
% Computational Cost: add. (5139->337), mult. (10773->496), div. (0->0), fcn. (12239->8), ass. (0->296)
t246 = sin(pkin(9));
t249 = sin(qJ(2));
t252 = cos(qJ(2));
t384 = cos(pkin(9));
t222 = t246 * t249 - t252 * t384;
t415 = -t222 / 0.2e1;
t289 = t384 * t249;
t360 = t246 * t252;
t224 = t289 + t360;
t248 = sin(qJ(4));
t250 = cos(qJ(5));
t356 = t250 * t248;
t247 = sin(qJ(5));
t251 = cos(qJ(4));
t359 = t247 * t251;
t230 = t356 + t359;
t103 = t230 * t224;
t154 = t248 * t224;
t404 = -qJ(3) - pkin(6);
t232 = t404 * t249;
t233 = t404 * t252;
t178 = -t232 * t384 - t233 * t246;
t122 = pkin(4) * t154 + t178;
t355 = t250 * t251;
t228 = t247 * t248 - t355;
t239 = pkin(2) * t246 + pkin(7);
t405 = pkin(8) + t239;
t218 = t405 * t248;
t219 = t405 * t251;
t275 = -t218 * t250 - t219 * t247;
t240 = -pkin(2) * t384 - pkin(3);
t231 = -pkin(4) * t251 + t240;
t433 = -t231 / 0.2e1;
t431 = t103 * t433 - t122 * t228 / 0.2e1 + t275 * t415;
t413 = t230 / 0.2e1;
t430 = t178 * t251;
t432 = t430 / 0.2e1;
t309 = qJD(4) + qJD(5);
t131 = t154 * t247 - t224 * t355;
t148 = -t218 * t247 + t219 * t250;
t428 = t122 * t413 + t131 * t433 + t148 * t415;
t151 = t248 * t222;
t406 = t249 * pkin(2);
t157 = pkin(3) * t224 + pkin(7) * t222 + t406;
t139 = t248 * t157;
t344 = -t139 + t430;
t77 = pkin(8) * t151 - t344;
t387 = t250 * t77;
t299 = -t387 / 0.2e1;
t140 = t251 * t157;
t156 = t251 * t222;
t358 = t178 * t248;
t407 = t224 * pkin(4);
t63 = pkin(8) * t156 + t140 + t358 + t407;
t394 = t247 * t63;
t272 = -t394 / 0.2e1 + t299;
t12 = t272 - t431;
t419 = t232 * t246 - t233 * t384;
t371 = t419 * t248;
t370 = t419 * t251;
t315 = t224 * qJD(1);
t169 = t222 * t315;
t217 = t289 / 0.2e1 + t360 / 0.2e1;
t421 = qJD(4) * t217 + t169;
t391 = t247 * t77;
t300 = -t391 / 0.2e1;
t390 = t250 * t63;
t271 = t300 + t390 / 0.2e1;
t11 = t271 - t428;
t427 = t309 * t148;
t426 = t309 * t275;
t423 = t222 * t309;
t422 = t309 * t228;
t220 = t222 ^ 2;
t221 = t224 ^ 2;
t420 = -t221 - t220;
t418 = qJD(5) * t217 + t421;
t244 = t248 ^ 2;
t245 = t251 ^ 2;
t236 = t245 - t244;
t357 = t248 * t251;
t287 = 0.2e1 * t224 * t357;
t258 = qJD(1) * t287 - qJD(2) * t236;
t408 = t222 * pkin(4);
t364 = t224 * t251;
t242 = -pkin(2) * t252 - pkin(1);
t149 = pkin(3) * t222 - pkin(7) * t224 + t242;
t90 = -t149 * t251 + t371;
t75 = -pkin(8) * t364 - t90;
t62 = t75 + t408;
t61 = t250 * t62;
t417 = -t61 / 0.2e1;
t416 = -t62 / 0.2e1;
t414 = -t224 / 0.2e1;
t412 = t248 / 0.2e1;
t411 = t250 / 0.2e1;
t410 = -t251 / 0.2e1;
t409 = pkin(4) * t248;
t36 = t103 * t228 + t131 * t230;
t403 = t309 * t36;
t56 = -t103 * t413 + t131 * t228 / 0.2e1;
t402 = t309 * t56;
t269 = t359 / 0.2e1 + t356 / 0.2e1;
t92 = (t413 + t269) * t222;
t401 = t309 * t92;
t97 = t222 * t269 + t230 * t415;
t400 = t309 * t97;
t399 = pkin(4) * qJD(4);
t398 = pkin(4) * qJD(5);
t397 = qJD(2) * pkin(2);
t121 = -pkin(4) * t151 + t419;
t132 = t230 * t222;
t91 = t149 * t248 + t370;
t76 = -pkin(8) * t154 + t91;
t392 = t247 * t76;
t27 = -t61 + t392;
t1 = (t390 - t391) * t222 - t27 * t224 + t121 * t103 - t122 * t132;
t396 = t1 * qJD(1);
t135 = t228 * t222;
t388 = t250 * t76;
t28 = t247 * t62 + t388;
t2 = -(t387 + t394) * t222 - t28 * t224 - t121 * t131 + t122 * t135;
t395 = t2 * qJD(1);
t393 = t247 * t75;
t389 = t250 * t75;
t303 = -t408 / 0.2e1;
t282 = t303 + t75 / 0.2e1;
t7 = (t416 + t282) * t247;
t386 = t7 * qJD(1);
t9 = t250 * t282 + t417;
t385 = t9 * qJD(1);
t383 = t122 * t131;
t382 = t122 * t103;
t379 = t131 * t224;
t378 = t132 * t222;
t377 = t135 * t222;
t307 = pkin(4) * t364;
t31 = -t388 - t393;
t15 = t103 * t307 + t222 * t31 - t383;
t374 = t15 * qJD(1);
t32 = t389 - t392;
t16 = -t131 * t307 - t222 * t32 - t382;
t373 = t16 * qJD(1);
t17 = t222 * t27 - t382;
t372 = t17 * qJD(1);
t18 = -t222 * t28 - t383;
t368 = t18 * qJD(1);
t21 = (-t90 + t371) * t224 + t140 * t222;
t367 = t21 * qJD(1);
t22 = (-t91 + t370) * t224 + (t344 - t430) * t222;
t366 = t22 * qJD(1);
t365 = t224 * t103;
t37 = -t103 * t135 - t131 * t132;
t353 = t37 * qJD(1);
t44 = -t154 * t178 + t222 * t90;
t352 = t44 * qJD(1);
t45 = t178 * t364 - t222 * t91;
t351 = t45 * qJD(1);
t48 = t242 * t406;
t350 = t48 * qJD(1);
t52 = -t365 + t378;
t349 = t52 * qJD(1);
t53 = t365 + t378;
t348 = t53 * qJD(1);
t54 = t377 - t379;
t347 = t54 * qJD(1);
t55 = -t377 - t379;
t346 = t55 * qJD(1);
t78 = t178 * t224 - t222 * t419;
t345 = t78 * qJD(1);
t80 = t92 * qJD(1);
t291 = t135 / 0.2e1;
t293 = t250 * t415;
t301 = t247 * t151;
t341 = t301 / 0.2e1 + t251 * t293;
t93 = t291 + t341;
t81 = t93 * qJD(1);
t292 = -t135 / 0.2e1;
t342 = -t301 / 0.2e1 + t156 * t411;
t94 = t292 + t342;
t83 = t94 * qJD(1);
t340 = qJD(1) * t131;
t339 = qJD(1) * t252;
t338 = qJD(2) * t230;
t337 = qJD(2) * t231;
t336 = qJD(2) * t251;
t335 = qJD(4) * t248;
t334 = qJD(4) * t251;
t333 = qJD(5) * t231;
t100 = t224 * t228;
t332 = t100 * qJD(1);
t331 = t103 * qJD(1);
t308 = t221 - t220;
t116 = t308 * t248;
t330 = t116 * qJD(1);
t117 = t420 * t248;
t329 = t117 * qJD(1);
t118 = t308 * t251;
t328 = t118 * qJD(1);
t257 = t246 * t415 + t384 * t414;
t125 = (-t249 / 0.2e1 + t257) * pkin(2);
t327 = t125 * qJD(1);
t137 = t222 * t406 + t224 * t242;
t326 = t137 * qJD(1);
t138 = -t222 * t242 + t224 * t406;
t325 = t138 * qJD(1);
t324 = t151 * qJD(1);
t323 = t154 * qJD(1);
t322 = t156 * qJD(1);
t159 = t420 * t251;
t321 = t159 * qJD(1);
t320 = t420 * qJD(1);
t319 = t217 * qJD(1);
t317 = t222 * qJD(1);
t316 = t222 * qJD(3);
t314 = t224 * qJD(2);
t313 = t224 * qJD(3);
t237 = -t249 ^ 2 + t252 ^ 2;
t312 = t237 * qJD(1);
t311 = t249 * qJD(2);
t310 = t252 * qJD(2);
t306 = pkin(1) * t249 * qJD(1);
t305 = pkin(1) * t339;
t304 = -t409 / 0.2e1;
t302 = t407 / 0.2e1;
t298 = t222 * t334;
t168 = t222 * t314;
t297 = t248 * t334;
t296 = t248 * t336;
t295 = t249 * t339;
t294 = t251 * t315;
t290 = -t139 / 0.2e1 + t432;
t288 = pkin(4) * t309;
t285 = t309 * t230;
t284 = t251 * t302;
t283 = -qJD(4) - t317;
t281 = t302 + t63 / 0.2e1;
t279 = qJD(2) * t287;
t278 = qJD(5) - t283;
t126 = t228 * t409 + t230 * t231;
t4 = (-t103 * t412 + (t228 * t410 + t411) * t224) * pkin(4) + t11;
t277 = qJD(1) * t4 - qJD(2) * t126;
t127 = -t228 * t231 + t230 * t409;
t3 = (t131 * t412 + (-t247 / 0.2e1 + t230 * t410) * t224) * pkin(4) + t12;
t276 = qJD(1) * t3 - qJD(2) * t127;
t49 = t103 ^ 2 - t131 ^ 2;
t19 = qJD(1) * t49 + qJD(2) * t36;
t274 = -t222 * t240 - t224 * t239;
t128 = t228 ^ 2 - t230 ^ 2;
t25 = qJD(1) * t36 + qJD(2) * t128;
t273 = t283 * t251;
t270 = t239 * t222 / 0.2e1 + t240 * t414;
t268 = qJD(1) * t11 - t230 * t337;
t267 = qJD(1) * t12 + t228 * t337;
t30 = -qJD(2) * t56 - t103 * t340;
t43 = -qJD(1) * t56 + t228 * t338;
t256 = t270 * t251;
t40 = -t140 / 0.2e1 - t256;
t266 = -qJD(2) * t240 * t248 - qJD(1) * t40;
t255 = t270 * t248 + t432;
t38 = t255 - t290;
t265 = -qJD(1) * t38 - t240 * t336;
t264 = t224 * t273;
t150 = (t244 / 0.2e1 - t245 / 0.2e1) * t224;
t263 = -qJD(1) * t150 + t296;
t260 = qJD(1) * t221 * t357 + qJD(2) * t150;
t158 = t236 * t221;
t259 = qJD(1) * t158 + t279;
t213 = t217 * qJD(2);
t210 = t251 * t314;
t144 = t151 * qJD(4);
t143 = t150 * qJD(4);
t124 = t406 / 0.2e1 + t257 * pkin(2);
t123 = -t324 - t335;
t96 = t291 + t342;
t95 = t292 + t341;
t89 = t97 * qJD(3);
t84 = t96 * qJD(3);
t82 = t94 * qJD(3);
t79 = t92 * qJD(3);
t66 = -t285 - t80;
t65 = -t83 + t422;
t64 = -t81 - t422;
t47 = qJD(2) * t93 + t103 * t317;
t46 = qJD(2) * t92 - t131 * t317;
t41 = t178 * t412 + t358 / 0.2e1 + t140 / 0.2e1 - t256;
t39 = t255 + t290;
t24 = t95 * qJD(2) - t103 * t278;
t23 = t97 * qJD(2) + t131 * t278;
t14 = t271 + t428;
t13 = t272 + t431;
t10 = pkin(4) * t293 + t392 + t417 - t389 / 0.2e1;
t8 = -t388 - t393 / 0.2e1 + (t303 + t416) * t247;
t6 = t131 * t304 + t230 * t284 - t281 * t247 + t299 + t431;
t5 = -t103 * t304 + t228 * t284 + t250 * t281 + t300 + t428;
t20 = [0, 0, 0, t249 * t310, t237 * qJD(2), 0, 0, 0, -pkin(1) * t311, -pkin(1) * t310, t137 * qJD(2), t138 * qJD(2), -t420 * qJD(3), qJD(2) * t48 + qJD(3) * t78, -t168 * t245 - t221 * t297, -qJD(4) * t158 + t222 * t279, -t222 * t224 * t335 + qJD(2) * t118, -qJD(2) * t116 - t224 * t298, t168, qJD(2) * t21 - qJD(3) * t117 + qJD(4) * t45, qJD(2) * t22 - qJD(3) * t159 + qJD(4) * t44, (-qJD(2) * t135 + t103 * t309) * t131, t37 * qJD(2) + t309 * t49, t54 * qJD(2) - t103 * t423, t52 * qJD(2) + t131 * t423, t168, qJD(2) * t1 + qJD(3) * t53 + qJD(4) * t15 + qJD(5) * t18, qJD(2) * t2 + qJD(3) * t55 + qJD(4) * t16 + qJD(5) * t17; 0, 0, 0, t295, t312, t310, -t311, 0, -pkin(6) * t310 - t306, pkin(6) * t311 - t305, -qJD(2) * t419 + t326, qJD(2) * t178 + t325, (t222 * t384 - t224 * t246) * t397, t350 + (-t178 * t246 - t384 * t419) * t397 + t124 * qJD(3), -t143 + (-t245 * t315 - t296) * t222, t222 * t258 - 0.2e1 * t224 * t297, t248 * t314 + t328, t210 - t330, t421, t367 + (t248 * t274 - t370) * qJD(2) + t41 * qJD(4), t366 + (t251 * t274 + t371) * qJD(2) + t39 * qJD(4), (t338 - t340) * t135 + t402, t353 + (t132 * t230 - t135 * t228) * qJD(2) + t403, t230 * t314 + t309 * t95 + t347, -t228 * t314 + t349 + t400, t418, t396 + (t121 * t228 - t132 * t231 + t224 * t275) * qJD(2) + t5 * qJD(4) + t14 * qJD(5), t395 + (t121 * t230 + t135 * t231 - t148 * t224) * qJD(2) + t6 * qJD(4) + t13 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t320, qJD(2) * t124 + t345, 0, 0, 0, 0, 0, -t329, -t321, 0, 0, 0, 0, 0, t348 + t400, t309 * t96 + t346; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t260, -t259, t283 * t154, t264, t213, qJD(2) * t41 - qJD(4) * t91 + t351, qJD(2) * t39 + qJD(4) * t90 + t352, -t30, t19, t24, t23, t213, qJD(2) * t5 + qJD(4) * t31 + qJD(5) * t8 + t374 + t89, qJD(2) * t6 - qJD(4) * t32 + qJD(5) * t10 + t373 + t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t30, t19, t24, t23, t213, qJD(2) * t14 + qJD(4) * t8 - qJD(5) * t28 + t368 + t89, qJD(2) * t13 + qJD(4) * t10 + qJD(5) * t27 + t372 + t84; 0, 0, 0, -t295, -t312, 0, 0, 0, t306, t305, -t313 - t326, t316 - t325, 0, qJD(3) * t125 - t350, t169 * t245 - t143, 0.2e1 * t248 * t264, qJD(4) * t156 - t328, -t144 + t330, -t421, qJD(4) * t40 - t251 * t313 - t367, qJD(3) * t154 + qJD(4) * t38 - t366, t135 * t340 + t402, -t353 + t403, -t309 * t93 - t347, -t349 - t401, -t418, qJD(3) * t100 - qJD(4) * t4 - qJD(5) * t11 - t396, qJD(3) * t103 - qJD(4) * t3 - qJD(5) * t12 - t395; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t297, t236 * qJD(4), 0, 0, 0, t240 * t335, t240 * t334, -t228 * t285, t309 * t128, 0, 0, 0, qJD(4) * t126 + t230 * t333, qJD(4) * t127 - t228 * t333; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t315, t317, 0, t327, 0, 0, 0, 0, 0, -t294, t323, 0, 0, 0, 0, 0, t332, t331; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t263, -t258, t322 + t334, t123, -t319, -t239 * t334 - t266, t239 * t335 - t265, -t43, t25, t64, t66, -t319, -t277 - t427, -t276 - t426; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t43, t25, t64, t66, -t319, -t268 - t427, -t267 - t426; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t314, -t222 * qJD(2), t320, -qJD(2) * t125 - t345, 0, 0, 0, 0, 0, -t144 + t210 + t329, -qJD(2) * t154 - t298 + t321, 0, 0, 0, 0, 0, -qJD(2) * t100 - t348 - t401, -t103 * qJD(2) - t309 * t94 - t346; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t315, -t317, 0, -t327, 0, 0, 0, 0, 0, t294, -t323, 0, 0, 0, 0, 0, -t332, -t331; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t123, t273, 0, 0, 0, 0, 0, t66, t65; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t66, t65; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t260, t259, -qJD(2) * t156 + t169 * t248, qJD(2) * t151 + t222 * t294, t213, -qJD(2) * t40 + qJD(3) * t151 - t351, -qJD(2) * t38 + t251 * t316 - t352, t30, -t19, t47, t46, t213, qJD(2) * t4 + qJD(5) * t7 - t374 + t79, qJD(2) * t3 + qJD(5) * t9 - t373 + t82; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t263, t258, -t322, t324, t319, t266, t265, t43, -t25, t81, t80, t319, t277, t276; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t324, t251 * t317, 0, 0, 0, 0, 0, t80, t83; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t247 * t398, -t250 * t398; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t247 * t288 + t386, -t250 * t288 + t385; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t30, -t19, t47, t46, t213, qJD(2) * t11 - qJD(4) * t7 - t368 + t79, qJD(2) * t12 - qJD(4) * t9 - t372 + t82; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t43, -t25, t81, t80, t319, t268, t267; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t80, t83; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t247 * t399 - t386, t250 * t399 - t385; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t20;
