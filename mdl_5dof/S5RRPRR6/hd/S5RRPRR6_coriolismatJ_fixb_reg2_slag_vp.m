% Calculate inertial parameters regressor of coriolis matrix for
% S5RRPRR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4,d5,theta3]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2022-01-20 11:18
% Revision: fd3771346c4aea32fdeb66112c511235427c26a7 (2022-01-20)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRPRR6_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRR6_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRR6_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRPRR6_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2022-01-20 11:17:30
% EndTime: 2022-01-20 11:17:39
% DurationCPUTime: 6.42s
% Computational Cost: add. (10869->449), mult. (21855->566), div. (0->0), fcn. (21252->8), ass. (0->371)
t369 = cos(qJ(5));
t365 = cos(pkin(9));
t370 = cos(qJ(4));
t364 = sin(pkin(9));
t420 = -pkin(2) + (-pkin(8) - pkin(7)) * t364;
t371 = cos(qJ(2));
t553 = t371 * pkin(1);
t390 = t420 - t553;
t449 = -t370 * pkin(3) - pkin(4);
t368 = sin(qJ(2));
t554 = t368 * pkin(1);
t359 = qJ(3) + t554;
t367 = sin(qJ(4));
t500 = t367 * t359;
t373 = t390 * t370 + (t449 - t500) * t365;
t199 = t369 * t373;
t556 = t365 * pkin(3);
t403 = -t364 * pkin(7) - pkin(2) - t556;
t384 = t403 - t553;
t488 = t370 * t359;
t266 = t365 * t488 + t367 * t384;
t511 = t364 * t367;
t354 = pkin(8) * t511;
t223 = -t354 + t266;
t366 = sin(qJ(5));
t508 = t366 * t223;
t127 = -t199 + t508;
t451 = t365 * t500;
t222 = -t451 + (t390 - t556) * t370;
t497 = t369 * t222;
t137 = t497 - t508;
t590 = t127 + t137;
t372 = t366 * t373;
t496 = t369 * t223;
t128 = t372 + t496;
t509 = t366 * t222;
t136 = -t496 - t509;
t589 = t128 + t136;
t501 = t367 * qJ(3);
t377 = t420 * t370 + (t449 - t501) * t365;
t230 = t369 * t377;
t489 = t370 * qJ(3);
t290 = t365 * t489 + t367 * t403;
t274 = -t354 + t290;
t506 = t366 * t274;
t161 = -t230 + t506;
t452 = t365 * t501;
t273 = -t452 + (t420 - t556) * t370;
t495 = t369 * t273;
t165 = t495 - t506;
t588 = t161 + t165;
t375 = t366 * t377;
t494 = t369 * t274;
t162 = t375 + t494;
t507 = t366 * t273;
t164 = -t494 - t507;
t587 = t162 + t164;
t490 = t369 * t370;
t503 = t366 * t367;
t329 = t490 - t503;
t565 = t329 / 0.2e1;
t491 = t369 * t367;
t502 = t366 * t370;
t330 = t491 + t502;
t563 = t330 / 0.2e1;
t362 = t364 ^ 2;
t562 = t359 / 0.2e1;
t586 = (qJ(3) / 0.2e1 + t562) * t362;
t463 = qJD(4) + qJD(5);
t305 = t330 * t364;
t308 = t329 * t364;
t521 = t305 * t308;
t585 = t463 * t521;
t307 = t330 * t365;
t309 = t329 * t365;
t147 = -t305 * t309 + t307 * t308;
t464 = qJD(1) + qJD(2);
t584 = t464 * t147;
t168 = t305 ^ 2 - t308 ^ 2;
t583 = t464 * t168;
t200 = -t305 * t364 - t307 * t365;
t582 = t464 * t200;
t201 = t308 * t364 + t309 * t365;
t581 = t464 * t201;
t392 = -t502 / 0.2e1 - t491 / 0.2e1;
t564 = -t330 / 0.2e1;
t231 = (t564 + t392) * t365;
t144 = t464 * t231;
t391 = -t490 / 0.2e1 + t503 / 0.2e1;
t566 = -t329 / 0.2e1;
t232 = (t566 + t391) * t365;
t145 = t464 * t232;
t363 = t365 ^ 2;
t353 = t363 + t362;
t325 = t353 * t367;
t261 = t464 * t325;
t326 = t353 * t370;
t262 = t464 * t326;
t327 = (t367 ^ 2 - t370 ^ 2) * t362;
t580 = t464 * t327;
t579 = t464 * t353;
t427 = t464 * t365;
t578 = t464 * t521;
t577 = qJ(3) + t359;
t355 = pkin(4) * t511;
t313 = t359 * t364 + t355;
t235 = t313 * t308;
t328 = qJ(3) * t364 + t355;
t258 = t328 * t308;
t576 = -t235 / 0.2e1 - t258 / 0.2e1;
t575 = -t137 / 0.2e1;
t574 = t161 / 0.2e1;
t573 = -t162 / 0.2e1;
t572 = t164 / 0.2e1;
t571 = -t165 / 0.2e1;
t570 = -t199 / 0.2e1;
t569 = t222 / 0.2e1;
t568 = -t230 / 0.2e1;
t567 = t273 / 0.2e1;
t561 = -t362 / 0.2e1;
t560 = t365 / 0.2e1;
t559 = t366 / 0.2e1;
t558 = t369 / 0.2e1;
t557 = pkin(2) * t368;
t555 = t365 * pkin(4);
t551 = pkin(1) * qJD(1);
t550 = pkin(1) * qJD(2);
t549 = pkin(4) * qJD(4);
t548 = pkin(4) * qJD(5);
t40 = t127 * t307 + t128 * t309 + t313 * t364;
t544 = qJD(1) * t40;
t510 = t364 * t370;
t459 = pkin(4) * t510;
t282 = t305 * t459;
t532 = t136 * t365;
t66 = -t235 - t282 + t532;
t543 = qJD(1) * t66;
t283 = t308 * t459;
t520 = t313 * t305;
t531 = t137 * t365;
t67 = t283 - t520 + t531;
t542 = qJD(1) * t67;
t535 = t127 * t365;
t79 = -t520 - t535;
t541 = qJD(1) * t79;
t533 = t128 * t365;
t80 = -t235 - t533;
t540 = qJD(1) * t80;
t487 = t370 * t368;
t498 = t367 * t371;
t316 = (-t365 * t498 + t487) * pkin(1);
t493 = t369 * t316;
t450 = t370 * t365 * t371;
t499 = t367 * t368;
t317 = (t450 + t499) * pkin(1);
t504 = t366 * t317;
t208 = t493 - t504;
t492 = t369 * t317;
t505 = t366 * t316;
t209 = t492 + t505;
t85 = -t208 * t308 - t209 * t305;
t539 = qJD(1) * t85;
t529 = t161 * t365;
t527 = t162 * t365;
t526 = t164 * t365;
t525 = t165 * t365;
t21 = -t127 * t136 + t128 * t137 + t313 * t459;
t524 = t21 * qJD(1);
t523 = t266 * t365;
t522 = t290 * t365;
t519 = t316 * t370;
t518 = t317 * t367;
t460 = t364 * t553;
t32 = -t127 * t208 + t128 * t209 + t313 * t460;
t517 = t32 * qJD(1);
t516 = t328 * t305;
t515 = t362 * qJ(3);
t514 = t362 * t359;
t513 = t362 * t370;
t512 = t363 * qJ(3);
t381 = t370 * t384;
t265 = -t381 + t451;
t461 = t362 * t553;
t89 = -t265 * t316 + t266 * t317 + t359 * t461;
t486 = t89 * qJD(1);
t156 = t208 * t365 - t305 * t460;
t197 = t200 * qJD(3);
t483 = -qJD(2) * t156 - t197;
t157 = t209 * t365 + t308 * t460;
t198 = t201 * qJD(3);
t482 = qJD(2) * t157 + t198;
t259 = -t316 * t365 + t367 * t461;
t319 = t325 * qJD(3);
t481 = qJD(2) * t259 + t319;
t260 = t317 * t365 + t370 * t461;
t320 = t326 * qJD(3);
t480 = qJD(2) * t260 + t320;
t322 = t353 * t553;
t343 = t353 * qJD(3);
t479 = qJD(2) * t322 + t343;
t478 = t514 / 0.2e1 + t515 / 0.2e1;
t131 = t514 + (t265 * t367 + t266 * t370) * t365;
t477 = qJD(1) * t131;
t476 = qJD(1) * t156;
t475 = qJD(1) * t157;
t241 = t265 * t365;
t185 = t362 * t500 + t241;
t474 = qJD(1) * t185;
t186 = t362 * t488 + t523;
t473 = qJD(1) * t186;
t187 = (t518 + t519) * t364;
t472 = qJD(1) * t187;
t471 = qJD(1) * t259;
t470 = qJD(1) * t260;
t304 = t353 * t359;
t469 = qJD(1) * t304;
t468 = qJD(1) * t322;
t467 = qJD(3) * t365;
t466 = qJD(4) * t365;
t229 = (-t557 + (t304 - t554) * t371) * pkin(1);
t465 = t229 * qJD(1);
t146 = t147 * qJD(3);
t434 = t571 - t161 / 0.2e1;
t435 = t572 + t136 / 0.2e1;
t436 = t162 / 0.2e1 + t128 / 0.2e1;
t438 = t575 - t127 / 0.2e1;
t4 = (-t435 - t436) * t308 + (t434 + t438) * t305;
t462 = qJD(4) * t4 + t146;
t458 = t368 * t550;
t457 = t368 * t551;
t456 = t555 / 0.2e1;
t455 = t554 / 0.2e1;
t454 = (t305 * t369 - t308 * t366) * t549;
t453 = t367 * t513;
t448 = t367 * t467;
t447 = t370 * t467;
t446 = t367 * t466;
t445 = t370 * t466;
t442 = t510 / 0.2e1;
t441 = t367 * t560;
t440 = -t498 / 0.2e1;
t437 = t574 + t127 / 0.2e1;
t388 = t370 * t403;
t289 = -t388 + t452;
t280 = t289 * t365;
t433 = t241 / 0.2e1 + t280 / 0.2e1;
t432 = t290 / 0.2e1 + t266 / 0.2e1;
t431 = t328 / 0.2e1 + t313 / 0.2e1;
t429 = pkin(1) * t464;
t428 = pkin(4) * t463;
t426 = t463 * t365;
t425 = t364 * t457;
t423 = t366 * t456;
t422 = t369 * t456;
t421 = -t450 / 0.2e1;
t419 = t368 * t429;
t418 = t367 * t427;
t417 = t370 * t427;
t14 = -t305 * t590 - t308 * t589;
t416 = -qJD(1) * t14 - qJD(2) * t4;
t24 = -t305 * t588 - t308 * t587;
t415 = -qJD(1) * t4 - qJD(2) * t24;
t31 = -t161 * t164 + t162 * t165 + t328 * t459;
t378 = t127 * t572 + t128 * t571 + t136 * t574 + t137 * t573;
t396 = t208 * t558 + t209 * t559;
t5 = (-t431 * t510 + t396) * pkin(4) + t378;
t414 = -t5 * qJD(1) + t31 * qJD(2);
t374 = t307 * t437 + t309 * t436 + t364 * t431;
t397 = t208 * t566 + t209 * t564;
t10 = t374 + t397;
t43 = t307 * t161 + t309 * t162 + t364 * t328;
t413 = -qJD(1) * t10 - qJD(2) * t43;
t385 = (-t307 * t558 + t309 * t559) * pkin(4);
t11 = t438 * t330 + (-t128 / 0.2e1 - t136 / 0.2e1) * t329 + t385;
t19 = t434 * t330 + (t573 - t164 / 0.2e1) * t329 + t385;
t412 = -t11 * qJD(1) - t19 * qJD(2);
t393 = -t504 / 0.2e1 + t493 / 0.2e1;
t380 = t393 + t576;
t27 = t365 * t435 - t282 + t380;
t81 = -t258 - t282 + t526;
t410 = qJD(1) * t27 + qJD(2) * t81;
t394 = -t505 / 0.2e1 - t492 / 0.2e1;
t379 = t305 * t431 + t394;
t28 = -t283 + (t571 + t575) * t365 + t379;
t82 = t283 - t516 + t525;
t409 = qJD(1) * t28 - qJD(2) * t82;
t34 = -t365 * t436 + t380;
t99 = -t258 - t527;
t408 = qJD(1) * t34 + qJD(2) * t99;
t35 = t365 * t437 + t379;
t98 = -t516 - t529;
t407 = qJD(1) * t35 - qJD(2) * t98;
t398 = pkin(8) * t442 + t555;
t48 = (t359 * t441 - t381 / 0.2e1 + t569 + t398) * t366;
t68 = (qJ(3) * t441 - t388 / 0.2e1 + t567 + t398) * t366;
t406 = t48 * qJD(1) + t68 * qJD(2);
t50 = t570 + (t456 + t569) * t369;
t70 = t568 + (t456 + t567) * t369;
t405 = t50 * qJD(1) + t70 * qJD(2);
t166 = t515 + (t367 * t289 + t290 * t370) * t365;
t376 = (t432 * t370 + (t289 / 0.2e1 + t265 / 0.2e1) * t367) * t365 + t478;
t395 = -t519 / 0.2e1 - t518 / 0.2e1;
t45 = t376 + t395;
t404 = -qJD(1) * t45 - qJD(2) * t166;
t106 = (t455 - t586) * t370 + (pkin(1) * t440 - t432) * t365;
t243 = t362 * t489 + t522;
t402 = -qJD(1) * t106 + qJD(2) * t243;
t107 = pkin(1) * t421 + (-t554 / 0.2e1 + t586) * t367 + t433;
t242 = t362 * t501 + t280;
t401 = -qJD(1) * t107 - qJD(2) * t242;
t226 = t455 + t577 * (-t363 / 0.2e1 + t561);
t337 = t353 * qJ(3);
t400 = qJD(1) * t226 - qJD(2) * t337;
t399 = -qJD(4) + t427;
t389 = -qJD(5) + t399;
t387 = t399 * t367;
t386 = t399 * t370;
t383 = -t520 / 0.2e1 - t516 / 0.2e1 + t394;
t382 = t393 - t576;
t350 = qJ(3) * t461;
t349 = t364 * t458;
t342 = qJD(4) * t453;
t336 = t364 * t445;
t335 = t364 * t446;
t321 = t327 * qJD(4);
t300 = t464 * t453;
t293 = t364 * t417;
t292 = t364 * t418;
t272 = t364 * t386;
t271 = t364 * t387;
t234 = t330 * t560 + t365 * t392;
t233 = t329 * t560 + t365 * t391;
t227 = t512 / 0.2e1 + t363 * t562 + t455 + t478;
t219 = t234 * qJD(3);
t218 = t233 * qJD(3);
t217 = t232 * qJD(3);
t216 = t231 * qJD(3);
t211 = t445 - t262;
t210 = t446 - t261;
t191 = t308 * t427;
t190 = t308 * t426;
t189 = t305 * t427;
t188 = t305 * t426;
t180 = t187 * qJD(2);
t163 = (-t307 * t329 + t309 * t330) * qJD(3);
t126 = t389 * t308;
t125 = t389 * t305;
t109 = t522 / 0.2e1 + t523 / 0.2e1 + (t365 * t440 + t487 / 0.2e1) * pkin(1) + t577 * t513 / 0.2e1;
t108 = (t421 - t499 / 0.2e1) * pkin(1) - t433 + t577 * t367 * t561;
t97 = -t330 * t463 - t144;
t96 = -t329 * t463 - t145;
t86 = t463 * t168;
t84 = t85 * qJD(2);
t71 = t422 + t506 + t568 - t495 / 0.2e1;
t69 = t423 - t494 - t375 / 0.2e1 - t507 / 0.2e1;
t55 = -t232 * t463 - t581;
t54 = t233 * t463 + t581;
t53 = t234 * t463 - t582;
t52 = -t231 * t463 + t582;
t51 = t422 + t508 + t570 - t497 / 0.2e1;
t49 = t423 - t496 - t372 / 0.2e1 - t509 / 0.2e1;
t44 = t376 - t395;
t37 = t527 / 0.2e1 + t533 / 0.2e1 + t382;
t36 = -t529 / 0.2e1 - t535 / 0.2e1 + t383;
t30 = t525 / 0.2e1 + t531 / 0.2e1 + t283 + t383;
t29 = -t526 / 0.2e1 - t532 / 0.2e1 + t282 + t382;
t20 = t563 * t588 + t565 * t587 + t385;
t12 = t563 * t590 + t565 * t589 + t385;
t9 = t374 - t397;
t6 = -t378 + (t396 + (t313 + t328) * t442) * pkin(4);
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t458, -t371 * t550, 0, 0, 0, 0, 0, 0, 0, 0, -t365 * t458, t349, t479, qJD(2) * t229 + qJD(3) * t304, -t342, t321, t335, t342, t336, 0, qJD(4) * t186 + t481, -qJD(4) * t185 + t480, -t180, qJD(2) * t89 + qJD(3) * t131, -t585, t86, t188, t585, t190, 0, -qJD(4) * t66 - qJD(5) * t80 + t483, qJD(4) * t67 + qJD(5) * t79 + t482, qJD(4) * t14 + t146 + t84, qJD(2) * t32 + qJD(3) * t40 + qJD(4) * t21; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t419, -t371 * t429, 0, 0, 0, 0, 0, 0, 0, 0, -t365 * t419, t349 + t425, t468 + t479, t465 + (t350 + (t371 * t512 - t557) * pkin(1)) * qJD(2) + t227 * qJD(3), -t342, t321, t335, t342, t336, 0, qJD(4) * t109 + t471 + t481, qJD(4) * t108 + t470 + t480, -t180 - t472, t486 + (-t289 * t316 + t290 * t317 + t350) * qJD(2) + t44 * qJD(3), -t585, t86, t188, t585, t190, 0, qJD(4) * t29 + qJD(5) * t37 - t476 + t483, qJD(4) * t30 + qJD(5) * t36 + t475 + t482, t462 + t84 + t539, t517 + (-t161 * t208 + t162 * t209 + t328 * t460) * qJD(2) + t9 * qJD(3) + t6 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t579, qJD(2) * t227 + t469, 0, 0, 0, 0, 0, 0, t261, t262, 0, qJD(2) * t44 + t477, 0, 0, 0, 0, 0, 0, t53, t54, t584, qJD(2) * t9 + qJD(4) * t12 + t163 + t544; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t300, t580, t271, t300, t272, 0, qJD(2) * t109 - qJD(4) * t266 + t473, qJD(2) * t108 + qJD(4) * t265 - t474, 0, 0, -t578, t583, t125, t578, t126, 0, qJD(2) * t29 + qJD(4) * t136 + qJD(5) * t49 + t219 - t543, qJD(2) * t30 - qJD(4) * t137 + qJD(5) * t51 + t218 + t542, -t416 + t454, t524 + t6 * qJD(2) + t12 * qJD(3) + (t136 * t369 + t137 * t366) * t549; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t578, t583, t125, t578, t126, 0, qJD(2) * t37 + qJD(4) * t49 - qJD(5) * t128 + t219 - t540, qJD(2) * t36 + qJD(4) * t51 + qJD(5) * t127 + t218 + t541, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t457, t371 * t551, 0, 0, 0, 0, 0, 0, 0, 0, t365 * t457, -t425, t343 - t468, -qJD(3) * t226 - t465, -t342, t321, t335, t342, t336, 0, -qJD(4) * t106 + t319 - t471, -qJD(4) * t107 + t320 - t470, t472, qJD(3) * t45 - t486, -t585, t86, t188, t585, t190, 0, -qJD(4) * t27 - qJD(5) * t34 - t197 + t476, -qJD(4) * t28 - qJD(5) * t35 + t198 - t475, t462 - t539, qJD(3) * t10 - qJD(4) * t5 - t517; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t343, t337 * qJD(3), -t342, t321, t335, t342, t336, 0, qJD(4) * t243 + t319, -qJD(4) * t242 + t320, 0, qJD(3) * t166, -t585, t86, t188, t585, t190, 0, -qJD(4) * t81 - qJD(5) * t99 - t197, qJD(4) * t82 + qJD(5) * t98 + t198, qJD(4) * t24 + t146, qJD(3) * t43 + qJD(4) * t31; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t579, -t400, 0, 0, 0, 0, 0, 0, t261, t262, 0, -t404, 0, 0, 0, 0, 0, 0, t53, t54, t584, qJD(4) * t20 + t163 - t413; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t300, t580, t271, t300, t272, 0, -qJD(4) * t290 + t402, qJD(4) * t289 + t401, 0, 0, -t578, t583, t125, t578, t126, 0, qJD(4) * t164 + qJD(5) * t69 + t219 - t410, -qJD(4) * t165 + qJD(5) * t71 + t218 - t409, -t415 + t454, t20 * qJD(3) + (t164 * t369 + t165 * t366) * t549 + t414; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t578, t583, t125, t578, t126, 0, qJD(4) * t69 - qJD(5) * t162 + t219 - t408, qJD(4) * t71 + qJD(5) * t161 + t218 - t407, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t579, qJD(2) * t226 - t469, 0, 0, 0, 0, 0, 0, t210, t211, 0, -qJD(2) * t45 - t477, 0, 0, 0, 0, 0, 0, t52, t55, -t584, -qJD(2) * t10 - qJD(4) * t11 - t544; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t579, t400, 0, 0, 0, 0, 0, 0, t210, t211, 0, t404, 0, 0, 0, 0, 0, 0, t52, t55, -t584, -qJD(4) * t19 + t413; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t387, t386, 0, 0, 0, 0, 0, 0, 0, 0, t97, t96, 0, (t329 * t366 - t330 * t369) * t549 + t412; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t97, t96, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t300, -t580, -t292, -t300, -t293, 0, qJD(2) * t106 - t448 - t473, qJD(2) * t107 - t447 + t474, 0, 0, t578, -t583, -t189, -t578, -t191, 0, qJD(2) * t27 + qJD(5) * t48 + t216 + t543, qJD(2) * t28 + qJD(5) * t50 + t217 - t542, t416, qJD(2) * t5 + qJD(3) * t11 - t524; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t300, -t580, -t292, -t300, -t293, 0, -t402 - t448, -t401 - t447, 0, 0, t578, -t583, -t189, -t578, -t191, 0, qJD(5) * t68 + t216 + t410, qJD(5) * t70 + t217 + t409, t415, qJD(3) * t19 - t414; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t418, -t417, 0, 0, 0, 0, 0, 0, 0, 0, t144, t145, 0, -t412; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t366 * t548, -t369 * t548, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t366 * t428 + t406, -t369 * t428 + t405, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t578, -t583, -t189, -t578, -t191, 0, qJD(2) * t34 - qJD(4) * t48 + t216 + t540, qJD(2) * t35 - qJD(4) * t50 + t217 - t541, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t578, -t583, -t189, -t578, -t191, 0, -qJD(4) * t68 + t216 + t408, -qJD(4) * t70 + t217 + t407, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t144, t145, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t366 * t549 - t406, t369 * t549 - t405, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t1;
