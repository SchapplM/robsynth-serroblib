% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5RRPRR6
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4,d5,theta3]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2022-01-20 11:18
% Revision: fd3771346c4aea32fdeb66112c511235427c26a7 (2022-01-20)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5RRPRR6_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRR6_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRR6_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRPRR6_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRPRR6_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRPRR6_invdynf_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2022-01-20 11:18:02
% EndTime: 2022-01-20 11:18:04
% DurationCPUTime: 2.91s
% Computational Cost: add. (14984->219), mult. (20966->315), div. (0->0), fcn. (13752->10), ass. (0->180)
t1378 = qJD(1) + qJD(2);
t1374 = t1378 ^ 2;
t1385 = sin(qJ(2));
t1375 = qJDD(1) + qJDD(2);
t1389 = cos(qJ(2));
t1411 = t1389 * t1375;
t1353 = t1385 * t1374 - t1411;
t1386 = sin(qJ(1));
t1390 = cos(qJ(1));
t1412 = t1385 * t1375;
t1397 = -t1389 * t1374 - t1412;
t1433 = t1386 * t1353 + t1390 * t1397;
t1432 = t1390 * t1353 - t1386 * t1397;
t1381 = sin(pkin(9));
t1376 = t1381 ^ 2;
t1382 = cos(pkin(9));
t1377 = t1382 ^ 2;
t1408 = t1376 + t1377;
t1350 = t1408 * t1374;
t1413 = t1382 * t1378;
t1364 = -qJD(4) + t1413;
t1358 = -qJD(5) + t1364;
t1429 = qJD(5) - t1358;
t1383 = sin(qJ(5));
t1384 = sin(qJ(4));
t1387 = cos(qJ(5));
t1388 = cos(qJ(4));
t1418 = t1378 * t1381;
t1332 = (-t1383 * t1388 - t1384 * t1387) * t1418;
t1428 = t1332 ^ 2;
t1414 = t1381 * t1388;
t1403 = t1378 * t1414;
t1417 = t1378 * t1384;
t1404 = t1381 * t1417;
t1334 = -t1383 * t1404 + t1387 * t1403;
t1427 = t1334 ^ 2;
t1426 = t1358 ^ 2;
t1425 = t1364 ^ 2;
t1424 = 2 * qJD(3);
t1423 = t1382 * g(3);
t1422 = t1334 * t1332;
t1421 = t1375 * t1384;
t1420 = t1375 * t1388;
t1419 = t1376 * t1374;
t1416 = t1378 * t1388;
t1415 = t1381 * t1375;
t1398 = -pkin(3) * t1382 - pkin(7) * t1381;
t1345 = t1398 * t1378;
t1410 = t1424 + t1345;
t1409 = qJD(5) + t1358;
t1369 = -t1390 * g(1) - t1386 * g(2);
t1391 = qJD(1) ^ 2;
t1356 = -t1391 * pkin(1) + t1369;
t1368 = t1386 * g(1) - t1390 * g(2);
t1396 = qJDD(1) * pkin(1) + t1368;
t1330 = t1389 * t1356 + t1385 * t1396;
t1317 = -t1374 * pkin(2) + t1375 * qJ(3) + t1330;
t1309 = -t1381 * g(3) + t1382 * t1317 + t1413 * t1424;
t1298 = t1345 * t1413 + t1309;
t1329 = -t1385 * t1356 + t1389 * t1396;
t1316 = -t1375 * pkin(2) - t1374 * qJ(3) + qJDD(3) - t1329;
t1307 = t1398 * t1375 + t1316;
t1276 = t1388 * t1298 + t1384 * t1307;
t1370 = t1382 * t1375;
t1407 = t1370 - qJDD(4);
t1406 = t1364 * t1417;
t1405 = t1388 * t1419;
t1379 = t1384 ^ 2;
t1402 = t1379 * t1419;
t1401 = -qJDD(5) + t1407;
t1357 = qJD(4) * t1404;
t1340 = t1375 * t1414 - t1357;
t1395 = (-qJD(4) * t1416 - t1421) * t1381;
t1400 = -t1383 * t1340 + t1387 * t1395;
t1399 = t1384 * t1405;
t1394 = -t1387 * t1340 - t1383 * t1395;
t1380 = t1388 ^ 2;
t1363 = t1382 * t1374 * t1381;
t1362 = -t1386 * qJDD(1) - t1390 * t1391;
t1361 = t1390 * qJDD(1) - t1386 * t1391;
t1346 = t1408 * t1375;
t1344 = t1382 * t1350;
t1343 = t1381 * t1350;
t1342 = (t1379 + t1380) * t1419;
t1341 = -t1402 - t1425;
t1339 = -t1364 * pkin(4) - pkin(8) * t1403;
t1338 = -t1399 - t1407;
t1337 = -t1399 + t1407;
t1331 = -t1380 * t1419 - t1425;
t1328 = -t1389 * t1344 - t1382 * t1412;
t1327 = t1389 * t1343 + t1381 * t1412;
t1326 = -t1385 * t1344 + t1382 * t1411;
t1325 = t1385 * t1343 - t1381 * t1411;
t1323 = t1389 * t1346 - t1385 * t1350;
t1322 = t1385 * t1346 + t1389 * t1350;
t1321 = t1357 + (t1406 - t1420) * t1381;
t1320 = -t1357 + (t1406 + t1420) * t1381;
t1319 = (-t1421 + (-qJD(4) - t1364) * t1416) * t1381;
t1318 = (t1421 + (qJD(4) - t1364) * t1416) * t1381;
t1314 = -t1426 - t1427;
t1313 = -t1384 * t1338 + t1388 * t1341;
t1312 = t1388 * t1338 + t1384 * t1341;
t1311 = -t1384 * t1331 + t1388 * t1337;
t1310 = t1388 * t1331 + t1384 * t1337;
t1308 = -0.2e1 * qJD(3) * t1418 - t1381 * t1317 - t1423;
t1306 = -t1401 + t1422;
t1305 = t1401 + t1422;
t1304 = -t1426 - t1428;
t1303 = t1388 * t1307;
t1301 = -t1385 * t1329 + t1389 * t1330;
t1300 = t1389 * t1329 + t1385 * t1330;
t1299 = -t1427 - t1428;
t1297 = t1423 + (t1410 * t1378 + t1317) * t1381;
t1295 = t1388 * t1319 - t1384 * t1321;
t1294 = t1384 * t1319 + t1388 * t1321;
t1293 = t1382 * t1313 + t1381 * t1318;
t1292 = t1381 * t1313 - t1382 * t1318;
t1291 = t1382 * t1311 + t1381 * t1320;
t1290 = t1381 * t1311 - t1382 * t1320;
t1289 = -t1409 * t1332 + t1394;
t1288 = t1429 * t1332 - t1394;
t1287 = -t1409 * t1334 + t1400;
t1286 = t1429 * t1334 - t1400;
t1285 = t1382 * t1295 - t1381 * t1342;
t1284 = t1381 * t1295 + t1382 * t1342;
t1283 = t1387 * t1305 - t1383 * t1314;
t1282 = t1383 * t1305 + t1387 * t1314;
t1281 = -t1381 * t1308 + t1382 * t1309;
t1280 = t1382 * t1308 + t1381 * t1309;
t1279 = t1387 * t1304 - t1383 * t1306;
t1278 = t1383 * t1304 + t1387 * t1306;
t1277 = t1423 - pkin(4) * t1395 - pkin(8) * t1402 + (t1317 + (t1339 * t1388 + t1410) * t1378) * t1381;
t1275 = -t1384 * t1298 + t1303;
t1274 = t1389 * t1293 + t1385 * t1312;
t1273 = t1385 * t1293 - t1389 * t1312;
t1272 = t1389 * t1291 + t1385 * t1310;
t1271 = t1385 * t1291 - t1389 * t1310;
t1270 = t1389 * t1281 + t1385 * t1316;
t1269 = t1385 * t1281 - t1389 * t1316;
t1268 = t1389 * t1285 + t1385 * t1294;
t1267 = t1385 * t1285 - t1389 * t1294;
t1266 = -pkin(4) * t1402 + pkin(8) * t1395 + t1364 * t1339 + t1276;
t1265 = t1303 - t1340 * pkin(8) - t1407 * pkin(4) + (t1364 * pkin(8) * t1418 - pkin(4) * t1405 - t1298) * t1384;
t1264 = t1387 * t1287 - t1383 * t1289;
t1263 = t1383 * t1287 + t1387 * t1289;
t1262 = -t1384 * t1282 + t1388 * t1283;
t1261 = t1388 * t1282 + t1384 * t1283;
t1260 = -t1384 * t1278 + t1388 * t1279;
t1259 = t1388 * t1278 + t1384 * t1279;
t1258 = -t1384 * t1275 + t1388 * t1276;
t1257 = t1388 * t1275 + t1384 * t1276;
t1256 = t1382 * t1262 + t1381 * t1288;
t1255 = t1381 * t1262 - t1382 * t1288;
t1254 = t1382 * t1260 + t1381 * t1286;
t1253 = t1381 * t1260 - t1382 * t1286;
t1252 = t1382 * t1258 + t1381 * t1297;
t1251 = t1381 * t1258 - t1382 * t1297;
t1250 = t1383 * t1265 + t1387 * t1266;
t1249 = t1387 * t1265 - t1383 * t1266;
t1248 = -t1384 * t1263 + t1388 * t1264;
t1247 = t1388 * t1263 + t1384 * t1264;
t1246 = t1382 * t1248 + t1381 * t1299;
t1245 = t1381 * t1248 - t1382 * t1299;
t1244 = t1389 * t1256 + t1385 * t1261;
t1243 = t1385 * t1256 - t1389 * t1261;
t1242 = t1389 * t1254 + t1385 * t1259;
t1241 = t1385 * t1254 - t1389 * t1259;
t1240 = t1389 * t1252 + t1385 * t1257;
t1239 = t1385 * t1252 - t1389 * t1257;
t1238 = -t1383 * t1249 + t1387 * t1250;
t1237 = t1387 * t1249 + t1383 * t1250;
t1236 = t1389 * t1246 + t1385 * t1247;
t1235 = t1385 * t1246 - t1389 * t1247;
t1234 = -t1384 * t1237 + t1388 * t1238;
t1233 = t1388 * t1237 + t1384 * t1238;
t1232 = t1382 * t1234 + t1381 * t1277;
t1231 = t1381 * t1234 - t1382 * t1277;
t1230 = t1389 * t1232 + t1385 * t1233;
t1229 = t1385 * t1232 - t1389 * t1233;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t1362, -t1361, 0, -t1386 * t1368 + t1390 * t1369, 0, 0, 0, 0, 0, 0, t1433, t1432, 0, -t1386 * t1300 + t1390 * t1301, 0, 0, 0, 0, 0, 0, -t1386 * t1326 + t1390 * t1328, -t1386 * t1325 + t1390 * t1327, -t1386 * t1322 + t1390 * t1323, -t1386 * t1269 + t1390 * t1270, 0, 0, 0, 0, 0, 0, -t1386 * t1273 + t1390 * t1274, -t1386 * t1271 + t1390 * t1272, -t1386 * t1267 + t1390 * t1268, -t1386 * t1239 + t1390 * t1240, 0, 0, 0, 0, 0, 0, -t1386 * t1241 + t1390 * t1242, -t1386 * t1243 + t1390 * t1244, -t1386 * t1235 + t1390 * t1236, -t1386 * t1229 + t1390 * t1230; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1361, t1362, 0, t1390 * t1368 + t1386 * t1369, 0, 0, 0, 0, 0, 0, -t1432, t1433, 0, t1390 * t1300 + t1386 * t1301, 0, 0, 0, 0, 0, 0, t1390 * t1326 + t1386 * t1328, t1390 * t1325 + t1386 * t1327, t1390 * t1322 + t1386 * t1323, t1390 * t1269 + t1386 * t1270, 0, 0, 0, 0, 0, 0, t1390 * t1273 + t1386 * t1274, t1390 * t1271 + t1386 * t1272, t1390 * t1267 + t1386 * t1268, t1390 * t1239 + t1386 * t1240, 0, 0, 0, 0, 0, 0, t1390 * t1241 + t1386 * t1242, t1390 * t1243 + t1386 * t1244, t1390 * t1235 + t1386 * t1236, t1390 * t1229 + t1386 * t1230; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1280, 0, 0, 0, 0, 0, 0, t1292, t1290, t1284, t1251, 0, 0, 0, 0, 0, 0, t1253, t1255, t1245, t1231; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1391, -qJDD(1), 0, t1369, 0, 0, 0, 0, 0, 0, t1397, t1353, 0, t1301, 0, 0, 0, 0, 0, 0, t1328, t1327, t1323, t1270, 0, 0, 0, 0, 0, 0, t1274, t1272, t1268, t1240, 0, 0, 0, 0, 0, 0, t1242, t1244, t1236, t1230; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1391, 0, t1368, 0, 0, 0, 0, 0, 0, -t1353, t1397, 0, t1300, 0, 0, 0, 0, 0, 0, t1326, t1325, t1322, t1269, 0, 0, 0, 0, 0, 0, t1273, t1271, t1267, t1239, 0, 0, 0, 0, 0, 0, t1241, t1243, t1235, t1229; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1280, 0, 0, 0, 0, 0, 0, t1292, t1290, t1284, t1251, 0, 0, 0, 0, 0, 0, t1253, t1255, t1245, t1231; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1374, -t1375, 0, t1330, 0, 0, 0, 0, 0, 0, -t1344, t1343, t1346, t1281, 0, 0, 0, 0, 0, 0, t1293, t1291, t1285, t1252, 0, 0, 0, 0, 0, 0, t1254, t1256, t1246, t1232; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1375, -t1374, 0, t1329, 0, 0, 0, 0, 0, 0, t1370, -t1415, t1350, -t1316, 0, 0, 0, 0, 0, 0, -t1312, -t1310, -t1294, -t1257, 0, 0, 0, 0, 0, 0, -t1259, -t1261, -t1247, -t1233; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1280, 0, 0, 0, 0, 0, 0, t1292, t1290, t1284, t1251, 0, 0, 0, 0, 0, 0, t1253, t1255, t1245, t1231; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1377 * t1374, t1363, t1370, t1309, 0, 0, 0, 0, 0, 0, t1313, t1311, t1295, t1258, 0, 0, 0, 0, 0, 0, t1260, t1262, t1248, t1234; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1363, -t1419, -t1415, t1308, 0, 0, 0, 0, 0, 0, -t1318, -t1320, t1342, -t1297, 0, 0, 0, 0, 0, 0, -t1286, -t1288, -t1299, -t1277; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1370, t1415, -t1350, t1316, 0, 0, 0, 0, 0, 0, t1312, t1310, t1294, t1257, 0, 0, 0, 0, 0, 0, t1259, t1261, t1247, t1233; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1341, t1337, t1319, t1276, 0, 0, 0, 0, 0, 0, t1279, t1283, t1264, t1238; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1338, t1331, t1321, t1275, 0, 0, 0, 0, 0, 0, t1278, t1282, t1263, t1237; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1318, t1320, -t1342, t1297, 0, 0, 0, 0, 0, 0, t1286, t1288, t1299, t1277; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1304, t1305, t1287, t1250; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1306, t1314, t1289, t1249; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1286, t1288, t1299, t1277;];
f_new_reg = t1;
