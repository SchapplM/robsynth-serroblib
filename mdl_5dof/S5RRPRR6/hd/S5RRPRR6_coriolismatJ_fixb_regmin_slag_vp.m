% Calculate minimal parameter regressor of coriolis matrix for
% S5RRPRR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4,d5,theta3]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x23]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2022-01-20 11:18
% Revision: fd3771346c4aea32fdeb66112c511235427c26a7 (2022-01-20)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRPRR6_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRR6_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRR6_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRPRR6_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2022-01-20 11:17:28
% EndTime: 2022-01-20 11:17:34
% DurationCPUTime: 2.65s
% Computational Cost: add. (3087->304), mult. (7167->381), div. (0->0), fcn. (6813->8), ass. (0->267)
t200 = sin(pkin(9));
t198 = t200 ^ 2;
t201 = cos(pkin(9));
t199 = t201 ^ 2;
t204 = sin(qJ(2));
t331 = t204 * pkin(1);
t195 = qJ(3) + t331;
t340 = qJ(3) + t195;
t349 = t340 * (t199 / 0.2e1 + t198 / 0.2e1);
t271 = qJD(1) + qJD(2);
t202 = sin(qJ(5));
t203 = sin(qJ(4));
t196 = t202 * t203;
t205 = cos(qJ(5));
t206 = cos(qJ(4));
t290 = t205 * t206;
t339 = t196 - t290;
t150 = t339 * t200;
t291 = t205 * t203;
t299 = t202 * t206;
t224 = -t291 - t299;
t151 = t224 * t200;
t64 = -t150 ^ 2 + t151 ^ 2;
t347 = t271 * t64;
t305 = t200 * t151;
t75 = t224 * t199 + t305;
t346 = t271 * t75;
t76 = -t200 * t150 - t339 * t199;
t345 = t271 * t76;
t99 = t224 * t201;
t50 = t271 * t99;
t251 = qJ(3) / 0.2e1 + t195 / 0.2e1;
t344 = t251 * t198;
t253 = t196 / 0.2e1;
t100 = (-t290 + 0.2e1 * t253) * t201;
t51 = t271 * t100;
t190 = t199 + t198;
t167 = t190 * t203;
t123 = t271 * t167;
t168 = t190 * t206;
t124 = t271 * t168;
t169 = (t203 ^ 2 - t206 ^ 2) * t198;
t343 = t271 * t169;
t342 = t271 * t190;
t341 = t271 * t201;
t270 = qJD(4) + qJD(5);
t332 = pkin(4) * t203;
t233 = (t195 + t332) * t200;
t103 = t150 * t233;
t234 = (qJ(3) + t332) * t200;
t120 = t150 * t234;
t337 = t103 / 0.2e1 + t120 / 0.2e1;
t334 = t201 / 0.2e1;
t333 = pkin(2) * t204;
t207 = cos(qJ(2));
t330 = t207 * pkin(1);
t268 = t200 * t330;
t288 = t206 * t204;
t296 = t203 * t207;
t156 = (-t201 * t296 + t288) * pkin(1);
t293 = t205 * t156;
t289 = t206 * t201;
t260 = t207 * t289;
t297 = t203 * t204;
t157 = (t260 + t297) * pkin(1);
t300 = t202 * t157;
t56 = (t293 - t300) * t201 + t151 * t268;
t73 = t75 * qJD(3);
t329 = -t56 * qJD(2) - t73;
t292 = t205 * t157;
t301 = t202 * t156;
t57 = (t292 + t301) * t201 - t150 * t268;
t74 = t76 * qJD(3);
t328 = t57 * qJD(2) + t74;
t327 = pkin(1) * qJD(1);
t326 = pkin(1) * qJD(2);
t325 = pkin(4) * qJD(4);
t324 = pkin(4) * qJD(5);
t174 = -t201 * pkin(3) - t200 * pkin(7) - pkin(2);
t163 = t174 - t330;
t153 = t206 * t163;
t298 = t203 * t201;
t235 = t195 * t298 - t153;
t304 = t200 * t206;
t266 = pkin(8) * t304;
t92 = -t235 - t266;
t323 = t202 * t92;
t127 = -t203 * t163 - t195 * t289;
t191 = t203 * t200 * pkin(8);
t93 = -t127 - t191;
t322 = t202 * t93;
t321 = t205 * t92;
t320 = t205 * t93;
t83 = -t266 + t153 + (-t195 * t203 - pkin(4)) * t201;
t44 = -t205 * t83 + t322;
t319 = t44 * t201;
t45 = -t202 * t83 - t320;
t318 = t45 * t201;
t46 = -t320 - t323;
t317 = t46 * t201;
t47 = t321 - t322;
t316 = t47 * t201;
t164 = t206 * t174;
t115 = -t266 + t164 + (-qJ(3) * t203 - pkin(4)) * t201;
t138 = -qJ(3) * t289 - t203 * t174;
t131 = -t138 - t191;
t302 = t202 * t131;
t60 = -t205 * t115 + t302;
t315 = t60 * t201;
t294 = t205 * t131;
t61 = -t202 * t115 - t294;
t314 = t61 * t201;
t236 = qJ(3) * t298 - t164;
t130 = -t236 - t266;
t303 = t202 * t130;
t62 = -t294 - t303;
t313 = t62 * t201;
t295 = t205 * t130;
t63 = t295 - t302;
t312 = t63 * t201;
t311 = t127 * t201;
t310 = t138 * t201;
t267 = pkin(4) * t304;
t136 = t151 * t267;
t17 = t103 + t136 + t317;
t309 = t17 * qJD(1);
t137 = t150 * t267;
t217 = t151 * t233;
t18 = -t137 + t217 + t316;
t308 = t18 * qJD(1);
t307 = t198 * t203;
t306 = t198 * t206;
t23 = t217 - t319;
t287 = t23 * qJD(1);
t24 = t103 + t318;
t286 = t24 * qJD(1);
t285 = t56 * qJD(1);
t284 = t57 * qJD(1);
t106 = t235 * t201;
t65 = t195 * t307 + t106;
t283 = t65 * qJD(1);
t66 = t195 * t306 - t311;
t282 = t66 * qJD(1);
t149 = t190 * t195;
t98 = (-t333 + (t149 - t331) * t207) * pkin(1);
t281 = t98 * qJD(1);
t269 = t198 * t330;
t121 = -t156 * t201 + t203 * t269;
t159 = t167 * qJD(3);
t280 = t121 * qJD(2) + t159;
t122 = t157 * t201 + t206 * t269;
t160 = t168 * qJD(3);
t279 = t122 * qJD(2) + t160;
t246 = t190 * t207;
t162 = pkin(1) * t246;
t182 = t190 * qJD(3);
t278 = t162 * qJD(2) + t182;
t277 = qJD(3) * t201;
t276 = qJD(4) * t201;
t275 = t121 * qJD(1);
t274 = t122 * qJD(1);
t273 = t149 * qJD(1);
t272 = t162 * qJD(1);
t265 = t204 * t326;
t264 = t204 * t327;
t263 = pkin(4) * t334;
t262 = t331 / 0.2e1;
t261 = t203 * t306;
t259 = t203 * t276;
t258 = t206 * t276;
t257 = t203 * t277;
t256 = t206 * t277;
t252 = -t296 / 0.2e1;
t134 = t236 * t201;
t250 = t106 / 0.2e1 + t134 / 0.2e1;
t248 = pkin(1) * t271;
t247 = pkin(4) * t270;
t242 = t270 * t151;
t241 = qJD(4) * t261;
t240 = -t260 / 0.2e1;
t239 = t263 - t83 / 0.2e1;
t238 = t263 - t115 / 0.2e1;
t237 = t204 * t248;
t232 = t203 * t341;
t231 = t206 * t341;
t215 = -t300 / 0.2e1 + t293 / 0.2e1;
t209 = t215 + t337;
t1 = t136 + (t62 / 0.2e1 + t46 / 0.2e1) * t201 + t209;
t25 = t120 + t136 + t313;
t230 = t1 * qJD(1) + t25 * qJD(2);
t216 = t130 / 0.2e1 + t238;
t19 = t216 * t202;
t219 = t92 / 0.2e1 + t239;
t9 = t219 * t202;
t229 = t9 * qJD(1) + t19 * qJD(2);
t214 = -t292 / 0.2e1 - t301 / 0.2e1;
t208 = -(t251 + t332) * t305 + t214;
t2 = t137 + (-t63 / 0.2e1 - t47 / 0.2e1) * t201 + t208;
t218 = t151 * t234;
t26 = -t137 + t218 + t312;
t228 = t2 * qJD(1) - t26 * qJD(2);
t32 = t218 - t315;
t6 = (t60 / 0.2e1 + t44 / 0.2e1) * t201 + t208;
t227 = t6 * qJD(1) - t32 * qJD(2);
t33 = t120 + t314;
t5 = (t61 / 0.2e1 + t45 / 0.2e1) * t201 + t209;
t226 = t5 * qJD(1) + t33 * qJD(2);
t11 = t219 * t205;
t21 = t216 * t205;
t225 = t11 * qJD(1) + t21 * qJD(2);
t107 = qJ(3) * t307 + t134;
t35 = pkin(1) * t240 + (-t331 / 0.2e1 + t344) * t203 + t250;
t223 = -t35 * qJD(1) - t107 * qJD(2);
t108 = qJ(3) * t306 - t310;
t34 = (t262 - t344) * t206 + (pkin(1) * t252 + t138 / 0.2e1 + t127 / 0.2e1) * t201;
t222 = -t34 * qJD(1) + t108 * qJD(2);
t177 = t190 * qJ(3);
t96 = t262 - t349;
t221 = t96 * qJD(1) - t177 * qJD(2);
t220 = -qJD(4) + t341;
t213 = t220 * t203;
t212 = t220 * t206;
t211 = t218 / 0.2e1 + t217 / 0.2e1 + t214;
t210 = t215 - t337;
t176 = t200 * t258;
t175 = t200 * t259;
t161 = t169 * qJD(4);
t146 = t271 * t261;
t141 = t200 * t231;
t140 = t200 * t232;
t129 = t200 * t212;
t128 = t200 * t213;
t102 = -t99 / 0.2e1 + (-t299 / 0.2e1 - t291 / 0.2e1) * t201;
t101 = -t339 * t334 + (-t290 / 0.2e1 + t253) * t201;
t97 = t262 + t349;
t89 = t102 * qJD(3);
t88 = t101 * qJD(3);
t87 = t100 * qJD(3);
t86 = t99 * qJD(3);
t85 = t258 - t124;
t84 = t259 - t123;
t70 = t151 * t341;
t69 = t201 * t242;
t68 = t150 * t341;
t67 = t270 * t201 * t150;
t49 = t271 * t151 * t150;
t48 = t150 * t242;
t43 = (-qJD(5) + t220) * t151;
t42 = (-t341 + t270) * t150;
t37 = -t310 / 0.2e1 - t311 / 0.2e1 + (t201 * t252 + t288 / 0.2e1) * pkin(1) + t340 * t306 / 0.2e1;
t36 = (t240 - t297 / 0.2e1) * pkin(1) - t250 - t340 * t307 / 0.2e1;
t31 = t270 * t224 - t50;
t30 = t270 * t339 - t51;
t27 = t270 * t64;
t22 = t302 - t295 / 0.2e1 + t238 * t205;
t20 = -t294 - t303 / 0.2e1 + t238 * t202;
t16 = -t270 * t100 - t345;
t15 = t270 * t101 + t345;
t14 = t270 * t102 - t346;
t13 = -t270 * t99 + t346;
t12 = t322 - t321 / 0.2e1 + t239 * t205;
t10 = -t320 - t323 / 0.2e1 + t239 * t202;
t8 = -t314 / 0.2e1 - t318 / 0.2e1 + t210;
t7 = -t315 / 0.2e1 - t319 / 0.2e1 + t211;
t4 = t312 / 0.2e1 + t316 / 0.2e1 - t137 + t211;
t3 = -t313 / 0.2e1 - t317 / 0.2e1 - t136 + t210;
t28 = [0, 0, 0, 0, -t265, -t207 * t326, -t201 * t265, t278, t98 * qJD(2) + t149 * qJD(3), -t241, t161, t175, t176, 0, t66 * qJD(4) + t280, -t65 * qJD(4) + t279, -t48, t27, -t69, -t67, 0, -t17 * qJD(4) - t24 * qJD(5) + t329, t18 * qJD(4) + t23 * qJD(5) + t328; 0, 0, 0, 0, -t237, -t207 * t248, -t201 * t237, t272 + t278, t281 + t97 * qJD(3) + (qJ(3) * t246 - t333) * t326, -t241, t161, t175, t176, 0, t37 * qJD(4) + t275 + t280, t36 * qJD(4) + t274 + t279, -t48, t27, -t69, -t67, 0, t3 * qJD(4) + t8 * qJD(5) - t285 + t329, t4 * qJD(4) + t7 * qJD(5) + t284 + t328; 0, 0, 0, 0, 0, 0, 0, t342, t97 * qJD(2) + t273, 0, 0, 0, 0, 0, t123, t124, 0, 0, 0, 0, 0, t14, t15; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t146, t343, t128, t129, 0, t37 * qJD(2) + t127 * qJD(4) + t282, t36 * qJD(2) + t235 * qJD(4) - t283, -t49, t347, -t43, t42, 0, t3 * qJD(2) + t46 * qJD(4) + t10 * qJD(5) - t309 + t89, t4 * qJD(2) - t47 * qJD(4) + t12 * qJD(5) + t308 + t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t49, t347, -t43, t42, 0, t8 * qJD(2) + t10 * qJD(4) + t45 * qJD(5) - t286 + t89, t7 * qJD(2) + t12 * qJD(4) + t44 * qJD(5) + t287 + t88; 0, 0, 0, 0, t264, t207 * t327, t201 * t264, t182 - t272, -t96 * qJD(3) - t281, -t241, t161, t175, t176, 0, -t34 * qJD(4) + t159 - t275, -t35 * qJD(4) + t160 - t274, -t48, t27, -t69, -t67, 0, -t1 * qJD(4) - t5 * qJD(5) + t285 - t73, -t2 * qJD(4) - t6 * qJD(5) - t284 + t74; 0, 0, 0, 0, 0, 0, 0, t182, t177 * qJD(3), -t241, t161, t175, t176, 0, t108 * qJD(4) + t159, -t107 * qJD(4) + t160, -t48, t27, -t69, -t67, 0, -t25 * qJD(4) - t33 * qJD(5) - t73, t26 * qJD(4) + t32 * qJD(5) + t74; 0, 0, 0, 0, 0, 0, 0, t342, -t221, 0, 0, 0, 0, 0, t123, t124, 0, 0, 0, 0, 0, t14, t15; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t146, t343, t128, t129, 0, t138 * qJD(4) + t222, t236 * qJD(4) + t223, -t49, t347, -t43, t42, 0, t62 * qJD(4) + t20 * qJD(5) - t230 + t89, -t63 * qJD(4) + t22 * qJD(5) - t228 + t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t49, t347, -t43, t42, 0, t20 * qJD(4) + t61 * qJD(5) - t226 + t89, t22 * qJD(4) + t60 * qJD(5) - t227 + t88; 0, 0, 0, 0, 0, 0, 0, -t342, t96 * qJD(2) - t273, 0, 0, 0, 0, 0, t84, t85, 0, 0, 0, 0, 0, t13, t16; 0, 0, 0, 0, 0, 0, 0, -t342, t221, 0, 0, 0, 0, 0, t84, t85, 0, 0, 0, 0, 0, t13, t16; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t213, t212, 0, 0, 0, 0, 0, t31, t30; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t31, t30; 0, 0, 0, 0, 0, 0, 0, 0, 0, t146, -t343, -t140, -t141, 0, t34 * qJD(2) - t257 - t282, t35 * qJD(2) - t256 + t283, t49, -t347, t70, t68, 0, t1 * qJD(2) + t9 * qJD(5) + t309 + t86, t2 * qJD(2) + t11 * qJD(5) - t308 + t87; 0, 0, 0, 0, 0, 0, 0, 0, 0, t146, -t343, -t140, -t141, 0, -t222 - t257, -t223 - t256, t49, -t347, t70, t68, 0, t19 * qJD(5) + t230 + t86, t21 * qJD(5) + t228 + t87; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t232, -t231, 0, 0, 0, 0, 0, t50, t51; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t202 * t324, -t205 * t324; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t202 * t247 + t229, -t205 * t247 + t225; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t49, -t347, t70, t68, 0, t5 * qJD(2) - t9 * qJD(4) + t286 + t86, t6 * qJD(2) - t11 * qJD(4) - t287 + t87; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t49, -t347, t70, t68, 0, -t19 * qJD(4) + t226 + t86, -t21 * qJD(4) + t227 + t87; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t50, t51; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t202 * t325 - t229, t205 * t325 - t225; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t28;
