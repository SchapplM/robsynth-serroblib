% Calculate minimal parameter regressor of coriolis matrix for
% S5RRPRP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4,theta3]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x25]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2021-01-15 20:30
% Revision: 24b2e7d74a0c1a3b64fa2f8f5ad758691ad61af3 (2021-01-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRPRP6_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRP6_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRP6_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRPRP6_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2021-01-15 20:30:03
% EndTime: 2021-01-15 20:30:18
% DurationCPUTime: 3.98s
% Computational Cost: add. (4687->322), mult. (9191->453), div. (0->0), fcn. (9770->6), ass. (0->275)
t202 = sin(qJ(2));
t350 = -qJ(3) - pkin(6);
t185 = t350 * t202;
t204 = cos(qJ(2));
t186 = t350 * t204;
t200 = sin(pkin(8));
t328 = cos(pkin(8));
t131 = -t328 * t185 - t200 * t186;
t203 = cos(qJ(4));
t368 = t131 * t203;
t369 = t368 / 0.2e1;
t201 = sin(qJ(4));
t183 = t328 * t186;
t310 = t200 * t185;
t365 = -t183 + t310;
t325 = t365 * t201;
t324 = t365 * t203;
t237 = t328 * t202;
t309 = t200 * t204;
t180 = t237 + t309;
t307 = t201 * t203;
t258 = t180 * t307;
t236 = 0.2e1 * t258;
t178 = t200 * t202 - t328 * t204;
t354 = t178 * pkin(4);
t306 = t203 * qJ(5);
t195 = -t204 * pkin(2) - pkin(1);
t212 = t178 * pkin(3) - t180 * pkin(7) + t195;
t62 = -t203 * t212 + t325;
t55 = t180 * t306 + t62;
t45 = -t55 + t354;
t367 = t45 + t55;
t275 = t180 * qJD(1);
t165 = t203 * t275;
t270 = t201 * qJD(2);
t142 = t165 + t270;
t175 = t178 ^ 2;
t176 = t180 ^ 2;
t366 = -t176 - t175;
t352 = t202 * pkin(2);
t107 = t180 * pkin(3) + t178 * pkin(7) + t352;
t85 = t201 * t107;
t330 = t369 - t85 / 0.2e1;
t171 = t237 / 0.2e1 + t309 / 0.2e1;
t364 = pkin(4) / 0.2e1;
t106 = t203 * t178;
t308 = t131 * t201;
t353 = t180 * pkin(4);
t86 = t203 * t107;
t46 = qJ(5) * t106 + t308 + t353 + t86;
t363 = t46 / 0.2e1;
t362 = t131 / 0.2e1;
t360 = -t178 / 0.2e1;
t359 = t178 / 0.2e1;
t358 = -t180 / 0.2e1;
t199 = t203 ^ 2;
t357 = -t199 / 0.2e1;
t356 = -t201 / 0.2e1;
t355 = pkin(4) * t176;
t351 = t203 * pkin(4);
t104 = t201 * t180;
t63 = t201 * t212 + t324;
t56 = -qJ(5) * t104 + t63;
t342 = t56 * t203;
t345 = t45 * t201;
t349 = -t345 / 0.2e1 + t342 / 0.2e1;
t348 = qJD(2) * pkin(2);
t101 = t201 * t178;
t329 = t368 - t85;
t58 = qJ(5) * t101 - t329;
t73 = -pkin(4) * t101 + t365;
t74 = pkin(4) * t104 + t131;
t3 = t45 * t46 + t56 * t58 + t74 * t73;
t347 = t3 * qJD(1);
t259 = t55 / 0.2e1 + t45 / 0.2e1;
t260 = t354 / 0.2e1;
t224 = t260 + t259;
t4 = t224 * t203;
t346 = t4 * qJD(1);
t344 = t45 * t203;
t343 = t46 * t203;
t341 = t58 * t201;
t230 = t56 * t201 + t344;
t6 = (t341 + t343) * t180 - t230 * t178;
t340 = t6 * qJD(1);
t7 = t367 * t104;
t339 = t7 * qJD(1);
t338 = t73 * t201;
t337 = t73 * t203;
t336 = t74 * t180;
t335 = t74 * t201;
t334 = t74 * t203;
t315 = t180 * t203;
t8 = t74 * pkin(4) * t315 - t367 * t56;
t333 = t8 * qJD(1);
t9 = t224 * t201;
t332 = t9 * qJD(1);
t331 = t308 / 0.2e1 + t86 / 0.2e1;
t11 = (t45 + t338) * t180 + (t46 - t335) * t178;
t327 = t11 * qJD(1);
t12 = (-t56 + t337) * t180 + (-t58 - t334) * t178;
t326 = t12 * qJD(1);
t194 = -t328 * pkin(2) - pkin(3);
t184 = t194 - t351;
t243 = t180 * t184 / 0.2e1;
t193 = t200 * pkin(2) + pkin(7);
t289 = qJ(5) + t193;
t172 = t289 * t203;
t317 = t172 * t203;
t170 = t289 * t201;
t320 = t170 * t201;
t206 = (-t317 / 0.2e1 - t320 / 0.2e1) * t178 + t243;
t223 = -t343 / 0.2e1 - t341 / 0.2e1;
t16 = t206 + t223;
t322 = t16 * qJD(1);
t17 = t336 + (-t342 + t345) * t178;
t321 = t17 * qJD(1);
t319 = t170 * t203;
t318 = t172 * t201;
t18 = (-t62 + t325) * t180 + t86 * t178;
t316 = t18 * qJD(1);
t314 = t184 * t201;
t313 = t184 * t203;
t19 = (-t63 + t324) * t180 + (-t368 + t329) * t178;
t312 = t19 * qJD(1);
t198 = t201 ^ 2;
t311 = t198 * t180;
t22 = t230 * t180;
t305 = t22 * qJD(1);
t25 = -t56 * t178 + (t201 * t355 + t336) * t203;
t304 = t25 * qJD(1);
t26 = -t104 * t74 + t55 * t178 + t199 * t355;
t303 = t26 * qJD(1);
t32 = -t104 * t131 + t62 * t178;
t301 = t32 * qJD(1);
t33 = t131 * t315 - t63 * t178;
t300 = t33 * qJD(1);
t34 = t195 * t352;
t299 = t34 * qJD(1);
t298 = t56 * qJD(4);
t59 = t131 * t180 - t178 * t365;
t297 = t59 * qJD(1);
t241 = t180 * t357;
t233 = -t311 / 0.2e1 + t241;
t66 = t233 - t171;
t296 = t66 * qJD(1);
t264 = t176 - t175;
t70 = t264 * t201;
t295 = t70 * qJD(1);
t71 = t366 * t201;
t294 = t71 * qJD(1);
t72 = t264 * t203;
t293 = t72 * qJD(1);
t211 = t200 * t360 + t328 * t358;
t77 = (-t202 / 0.2e1 + t211) * pkin(2);
t292 = t77 * qJD(1);
t83 = t178 * t352 + t195 * t180;
t291 = t83 * qJD(1);
t84 = -t195 * t178 + t180 * t352;
t290 = t84 * qJD(1);
t189 = t198 + t199;
t190 = t199 - t198;
t287 = qJD(1) * t204;
t286 = qJD(4) * t201;
t197 = qJD(4) * t203;
t285 = t101 * qJD(1);
t284 = t104 * qJD(1);
t283 = t106 * qJD(1);
t168 = t198 * t178;
t169 = t199 * t178;
t108 = t168 + t169;
t282 = t108 * qJD(1);
t109 = t189 * t176;
t281 = t109 * qJD(1);
t111 = t366 * t203;
t61 = t111 * qJD(1);
t280 = t366 * qJD(1);
t279 = t171 * qJD(1);
t278 = t172 * qJD(4);
t277 = t178 * qJD(1);
t276 = t178 * qJD(3);
t274 = t180 * qJD(2);
t273 = t180 * qJD(3);
t272 = t189 * qJD(2);
t191 = -t202 ^ 2 + t204 ^ 2;
t271 = t191 * qJD(1);
t269 = t201 * qJD(5);
t268 = t202 * qJD(2);
t267 = t203 * qJD(2);
t266 = t203 * qJD(5);
t265 = t204 * qJD(2);
t263 = pkin(1) * t202 * qJD(1);
t262 = pkin(1) * t287;
t261 = pkin(4) * t286;
t257 = -t335 / 0.2e1;
t256 = t180 * t286;
t255 = t180 * t197;
t254 = t178 * t275;
t253 = t178 * t274;
t252 = t201 * t197;
t251 = t201 * t275;
t250 = t180 * t269;
t249 = t201 * t267;
t248 = t202 * t287;
t247 = t203 * t277;
t246 = t203 * t276;
t245 = t203 * t273;
t244 = t180 * t266;
t242 = -t313 / 0.2e1;
t240 = qJ(5) * t356;
t239 = t106 / 0.2e1;
t238 = t198 / 0.2e1 + t357;
t122 = t178 * t165;
t235 = t101 * qJD(2) + t122;
t234 = t201 * t260;
t232 = qJD(2) * t236;
t231 = t122 + t255;
t216 = t180 * t242 + t257;
t1 = t259 * t172 + (t363 + t216) * pkin(4);
t60 = pkin(4) * t314;
t229 = -t1 * qJD(1) + t60 * qJD(2);
t207 = (-t318 / 0.2e1 + t319 / 0.2e1) * t180 + t349;
t208 = t183 / 0.2e1 - t310 / 0.2e1 + t234;
t14 = t207 + t208;
t98 = t317 + t320;
t228 = t14 * qJD(1) + t98 * qJD(2);
t227 = -t178 * t194 - t180 * t193;
t143 = pkin(4) * t307 - t314;
t20 = t257 + (t306 / 0.2e1 + t172 / 0.2e1) * t178 + (t242 + (0.1e1 - t238) * pkin(4)) * t180 + t331;
t226 = -t20 * qJD(1) - t143 * qJD(2);
t155 = t198 * pkin(4) + t313;
t209 = -pkin(4) * t258 - t334 / 0.2e1 + t201 * t243;
t23 = (t240 - t170 / 0.2e1) * t178 + t209 + t330;
t225 = -t23 * qJD(1) + t155 * qJD(2);
t222 = t193 * t359 + t194 * t358;
t210 = t222 * t203;
t30 = -t86 / 0.2e1 - t210 + (t362 - t131 / 0.2e1) * t201;
t221 = -t30 * qJD(1) - t194 * t270;
t205 = t222 * t201 + t369;
t28 = t205 - t330;
t220 = -t28 * qJD(1) - t194 * t267;
t219 = (-qJD(4) - t277) * t104;
t100 = t238 * t180;
t218 = -t100 * qJD(1) + t249;
t140 = t251 - t267;
t217 = t171 * qJD(4) + t254;
t215 = t176 * qJD(1) * t307 + t100 * qJD(2);
t110 = t190 * t176;
t214 = t110 * qJD(1) + t232;
t213 = qJD(1) * t236 - t190 * qJD(2);
t167 = t171 * qJD(2);
t164 = t180 * t267;
t141 = -t197 - t247;
t135 = t142 * pkin(4);
t99 = t111 * qJD(3);
t94 = t104 * qJD(3);
t91 = t101 * qJD(3);
t88 = t101 * qJD(4);
t87 = t100 * qJD(4);
t76 = t352 / 0.2e1 + t211 * pkin(2);
t75 = -t285 - t286;
t67 = t71 * qJD(3);
t65 = t233 + t171;
t53 = -t104 * qJD(2) - t178 * t197 + t61;
t40 = t164 - t88 + t294;
t31 = t201 * t362 - t210 + t331;
t29 = t205 + t330;
t24 = t170 * t359 + t178 * t240 - t209 + t330;
t21 = pkin(4) * t241 + qJ(5) * t239 + t172 * t360 + t311 * t364 - t216 + t331 + t353;
t15 = t206 - t223;
t13 = t207 - t208;
t10 = t55 * t356 - t342 / 0.2e1 + t234 + t349;
t5 = -t55 * t203 / 0.2e1 - t344 / 0.2e1 + pkin(4) * t239;
t2 = pkin(4) * t363 + t243 * t351 + t335 * t364 - t367 * t172 / 0.2e1;
t27 = [0, 0, 0, t202 * t265, t191 * qJD(2), 0, 0, 0, -pkin(1) * t268, -pkin(1) * t265, t83 * qJD(2), t84 * qJD(2), -t366 * qJD(3), t34 * qJD(2) + t59 * qJD(3), -t176 * t252 - t199 * t253, -t110 * qJD(4) + t178 * t232, t72 * qJD(2) - t178 * t256, -t70 * qJD(2) - t178 * t255, t253, t18 * qJD(2) + t33 * qJD(4) - t67, t19 * qJD(2) + t32 * qJD(4) - t99, t11 * qJD(2) + t25 * qJD(4) - t178 * t244 - t67, t12 * qJD(2) + t26 * qJD(4) + t178 * t250 - t99, -t6 * qJD(2) + t7 * qJD(4) + t109 * qJD(5), t3 * qJD(2) + t17 * qJD(3) + t8 * qJD(4) - t22 * qJD(5); 0, 0, 0, t248, t271, t265, -t268, 0, -pkin(6) * t265 - t263, pkin(6) * t268 - t262, -qJD(2) * t365 + t291, qJD(2) * t131 + t290, (t178 * t328 - t180 * t200) * t348, t299 + (-t131 * t200 - t328 * t365) * t348 + t76 * qJD(3), -t87 + (-t199 * t275 - t249) * t178, (t168 - t169) * qJD(2) + (-qJD(4) + t277) * t236, t180 * t270 + t293, t164 - t295, t217, t316 + (t201 * t227 - t324) * qJD(2) + t31 * qJD(4), t312 + (t203 * t227 + t325) * qJD(2) + t29 * qJD(4), t327 + (-t101 * t184 - t170 * t180 - t337) * qJD(2) + t21 * qJD(4) - t101 * qJD(5), t326 + (-t106 * t184 - t172 * t180 + t338) * qJD(2) + t24 * qJD(4) - t178 * t266, -t340 + (-t46 * t201 + t58 * t203 + (t318 - t319) * t178) * qJD(2) + t5 * qJD(4), t347 + (-t46 * t170 + t58 * t172 + t73 * t184) * qJD(2) + t15 * qJD(3) + t2 * qJD(4) + t13 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t280, t76 * qJD(2) + t297, 0, 0, 0, 0, 0, -t294, -t61, -t294, -t61, 0, t15 * qJD(2) + t10 * qJD(4) + t65 * qJD(5) + t321; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t215, -t214, t219, -t231, t167, t31 * qJD(2) - t63 * qJD(4) + t300, t29 * qJD(2) + t62 * qJD(4) + t301, t21 * qJD(2) - t298 + t304, t24 * qJD(2) + t55 * qJD(4) + t303, pkin(4) * t256 + t5 * qJD(2) + t339, -pkin(4) * t298 + t2 * qJD(2) + t10 * qJD(3) + t333; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t235, t140 * t178, t281, t13 * qJD(2) + t65 * qJD(3) - t305; 0, 0, 0, -t248, -t271, 0, 0, 0, t263, t262, -t273 - t291, t276 - t290, 0, t77 * qJD(3) - t299, t199 * t254 - t87, 0.2e1 * t203 * t219, t106 * qJD(4) - t293, -t88 + t295, -t217, t30 * qJD(4) - t245 - t316, t28 * qJD(4) - t312 + t94, -t20 * qJD(4) - t245 - t327, -t23 * qJD(4) - t326 + t94, -t108 * qJD(3) - t4 * qJD(4) + t340, t16 * qJD(3) - t1 * qJD(4) + t14 * qJD(5) - t347; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t252, t190 * qJD(4), 0, 0, 0, t194 * t286, t194 * t197, -t143 * qJD(4), t155 * qJD(4), t189 * qJD(5), t60 * qJD(4) + t98 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t275, t277, 0, t292, 0, 0, 0, 0, 0, -t165, t284, -t165, t284, -t282, t322; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t218, -t213, t197 + t283, t75, -t279, -t193 * t197 - t221, t193 * t286 - t220, t226 - t278, t170 * qJD(4) + t225, -pkin(4) * t197 - t346, -pkin(4) * t278 + t229; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t272, t228; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t274, -t178 * qJD(2), t280, -t77 * qJD(2) - t297, 0, 0, 0, 0, 0, t40, t53, t40, t53, t108 * qJD(2), -t16 * qJD(2) - t9 * qJD(4) + t66 * qJD(5) - t321; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t275, -t277, 0, -t292, 0, 0, 0, 0, 0, t165, -t284, t165, -t284, t282, -t322; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t75, t141, t75, t141, 0, -t261 - t332; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t296; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t215, t214, -t106 * qJD(2) + t178 * t251, t235, t167, -t30 * qJD(2) - t300 + t91, -t28 * qJD(2) + t246 - t301, t20 * qJD(2) - t244 - t304 + t91, t23 * qJD(2) + t246 + t250 - t303, t4 * qJD(2) - t339, -pkin(4) * t244 + t1 * qJD(2) + t9 * qJD(3) - t333; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t218, t213, -t283, t285, t279, t221, t220, -t226 - t269, -t225 - t266, t346, -pkin(4) * t269 - t229; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t285, t247, t285, t247, 0, t332; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t142, t140, 0, -t135; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t231, t219, -t281, pkin(4) * t255 - t14 * qJD(2) - t66 * qJD(3) + t305; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t286, t197, -t272, -t228 + t261; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t296; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t142, -t140, 0, t135; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t27;
