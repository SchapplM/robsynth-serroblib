% Calculate minimal parameter regressor of coriolis matrix for
% S5RRPPR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d5,theta3,theta4]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x25]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2021-01-15 19:48
% Revision: 24b2e7d74a0c1a3b64fa2f8f5ad758691ad61af3 (2021-01-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRPPR6_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPPR6_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPPR6_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRPPR6_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2021-01-15 19:47:36
% EndTime: 2021-01-15 19:47:49
% DurationCPUTime: 3.35s
% Computational Cost: add. (3518->283), mult. (7399->419), div. (0->0), fcn. (8449->8), ass. (0->239)
t190 = sin(qJ(2));
t316 = -qJ(3) - pkin(6);
t170 = t316 * t190;
t192 = cos(qJ(2));
t171 = t316 * t192;
t187 = sin(pkin(8));
t295 = cos(pkin(8));
t121 = -t295 * t170 - t187 * t171;
t186 = sin(pkin(9));
t331 = t121 * t186;
t188 = cos(pkin(9));
t330 = t121 * t188;
t168 = t295 * t171;
t276 = t187 * t170;
t328 = -t168 + t276;
t329 = t186 * t328;
t280 = t328 * t188;
t221 = t295 * t190;
t275 = t187 * t192;
t164 = t221 + t275;
t191 = cos(qJ(5));
t272 = t191 * t186;
t189 = sin(qJ(5));
t273 = t189 * t188;
t166 = t272 + t273;
t70 = t166 * t164;
t261 = t70 * qJD(1);
t327 = t273 / 0.2e1 + t272 / 0.2e1;
t160 = t187 * t190 - t295 * t192;
t242 = t160 * qJD(1);
t232 = t70 * t242;
t325 = t164 ^ 2;
t112 = t160 ^ 2 + t325;
t184 = t186 ^ 2;
t185 = t188 ^ 2;
t172 = t184 + t185;
t326 = qJD(5) * t70;
t156 = t221 / 0.2e1 + t275 / 0.2e1;
t324 = -t160 / 0.2e1;
t271 = t191 * t188;
t274 = t189 * t186;
t162 = -t271 + t274;
t323 = -t162 / 0.2e1;
t322 = t162 / 0.2e1;
t321 = t166 / 0.2e1;
t181 = -t295 * pkin(2) - pkin(3);
t169 = -t188 * pkin(4) + t181;
t320 = -t169 / 0.2e1;
t319 = pkin(7) * t188;
t318 = t190 * pkin(2);
t176 = pkin(2) * t187 + qJ(4);
t317 = pkin(7) + t176;
t105 = t186 * t164;
t83 = pkin(4) * t105 + t121;
t140 = t164 * t274;
t93 = t164 * t271 - t140;
t153 = t317 * t186;
t154 = t317 * t188;
t99 = -t153 * t189 + t154 * t191;
t195 = t93 * t320 - t83 * t166 / 0.2e1 + t99 * t160 / 0.2e1;
t107 = pkin(3) * t164 + qJ(4) * t160 + t318;
t56 = t188 * t107 + t331;
t36 = pkin(4) * t164 + t160 * t319 + t56;
t304 = t191 * t36;
t102 = t186 * t160;
t57 = t186 * t107 - t330;
t40 = pkin(7) * t102 + t57;
t305 = t189 * t40;
t206 = -t305 / 0.2e1 + t304 / 0.2e1;
t3 = t195 + t206;
t315 = qJD(1) * t3;
t98 = t153 * t191 + t154 * t189;
t196 = -t320 * t70 + t83 * t322 + t98 * t324;
t303 = t191 * t40;
t306 = t189 * t36;
t207 = -t306 / 0.2e1 - t303 / 0.2e1;
t4 = t196 + t207;
t314 = qJD(1) * t4;
t182 = -pkin(2) * t192 - pkin(1);
t106 = t160 * pkin(3) - t164 * qJ(4) + t182;
t54 = t188 * t106 - t329;
t194 = pkin(4) * t160 - t164 * t319 + t54;
t55 = t186 * t106 + t280;
t39 = -pkin(7) * t105 + t55;
t16 = t189 * t39 - t191 * t194;
t9 = t16 * t160 - t70 * t83;
t313 = qJD(1) * t9;
t312 = qJD(2) * pkin(2);
t82 = -pkin(4) * t102 + t328;
t88 = t166 * t160;
t1 = (t304 - t305) * t160 - t16 * t164 + t82 * t70 - t83 * t88;
t311 = t1 * qJD(1);
t310 = t160 * t88;
t92 = t162 * t160;
t309 = t160 * t92;
t308 = t164 * t70;
t307 = t164 * t93;
t17 = t189 * t194 + t191 * t39;
t2 = -(t303 + t306) * t160 - t17 * t164 + t82 * t93 + t83 * t92;
t302 = t2 * qJD(1);
t301 = t54 * t186;
t300 = t55 * t188;
t299 = t56 * t188;
t298 = t57 * t186;
t215 = -t186 * t55 - t188 * t54;
t7 = (t298 + t299) * t164 + t215 * t160;
t297 = t7 * qJD(1);
t8 = t328 * t121 + t54 * t56 + t55 * t57;
t296 = t8 * qJD(1);
t10 = -t160 * t17 + t83 * t93;
t294 = qJD(1) * t10;
t279 = t121 * t164;
t15 = t279 + (-t300 + t301) * t160;
t293 = qJD(1) * t15;
t20 = t215 * t164;
t292 = qJD(1) * t20;
t29 = -t308 + t310;
t291 = qJD(1) * t29;
t30 = t308 + t310;
t290 = qJD(1) * t30;
t31 = t307 + t309;
t289 = qJD(1) * t31;
t32 = t307 - t309;
t288 = qJD(1) * t32;
t42 = -t160 * t328 + t279;
t287 = qJD(1) * t42;
t286 = qJD(1) * t93;
t58 = (t321 - t327) * t160;
t285 = qJD(2) * t58;
t59 = (t321 + t327) * t160;
t284 = qJD(2) * t59;
t11 = (t54 + t329) * t164 + (t56 - t331) * t160;
t283 = t11 * qJD(1);
t12 = (-t55 + t280) * t164 + (-t57 - t330) * t160;
t282 = t12 * qJD(1);
t222 = -t184 / 0.2e1 - t185 / 0.2e1;
t193 = t222 * t176 * t160 + t164 * t181 / 0.2e1;
t204 = -t299 / 0.2e1 - t298 / 0.2e1;
t14 = t193 + t204;
t278 = t14 * qJD(1);
t277 = t164 * t162;
t24 = -t70 * t92 + t88 * t93;
t269 = t24 * qJD(1);
t26 = t182 * t318;
t268 = t26 * qJD(1);
t267 = t58 * qJD(1);
t51 = t59 * qJD(1);
t226 = t274 / 0.2e1;
t201 = -t271 / 0.2e1 + t226;
t60 = (t322 + t201) * t160;
t266 = t60 * qJD(1);
t61 = (t323 + t201) * t160;
t265 = t61 * qJD(1);
t223 = t271 / 0.2e1;
t227 = t160 * t323;
t62 = t160 * t223 + t274 * t324 + t227;
t264 = t62 * qJD(1);
t64 = t172 * t325;
t263 = t64 * qJD(1);
t262 = t277 * qJD(1);
t217 = t222 * t164;
t80 = t217 - t156;
t260 = t80 * qJD(1);
t81 = t112 * t186;
t259 = t81 * qJD(1);
t197 = t187 * t324 - t295 * t164 / 0.2e1;
t85 = (-t190 / 0.2e1 + t197) * pkin(2);
t258 = t85 * qJD(1);
t100 = t160 * t318 + t164 * t182;
t257 = qJD(1) * t100;
t101 = -t160 * t182 + t164 * t318;
t256 = qJD(1) * t101;
t109 = t112 * t188;
t255 = qJD(1) * t109;
t254 = qJD(1) * t192;
t253 = qJD(2) * t328;
t252 = qJD(2) * t166;
t251 = qJD(2) * t169;
t250 = qJD(3) * t164;
t249 = qJD(4) * t160;
t248 = qJD(5) * t160;
t247 = qJD(5) * t166;
t246 = t105 * qJD(1);
t108 = t172 * t160;
t245 = t108 * qJD(1);
t244 = t112 * qJD(1);
t243 = t156 * qJD(1);
t155 = t162 * qJD(5);
t241 = t164 * qJD(1);
t240 = t164 * qJD(2);
t239 = t172 * qJD(2);
t175 = -t190 ^ 2 + t192 ^ 2;
t238 = t175 * qJD(1);
t237 = t190 * qJD(2);
t236 = t192 * qJD(2);
t235 = pkin(1) * t190 * qJD(1);
t234 = pkin(1) * t254;
t233 = t277 * t242;
t231 = t186 * t241;
t230 = t164 * t249;
t229 = t188 * t241;
t228 = t190 * t254;
t220 = -qJD(5) - t242;
t219 = qJD(4) + t251;
t218 = t160 * t229;
t216 = -t168 / 0.2e1 + t276 / 0.2e1;
t214 = -t186 * t56 + t188 * t57;
t23 = t162 * t70 - t166 * t93;
t25 = t70 ^ 2 - t93 ^ 2;
t213 = qJD(1) * t25 + qJD(2) * t23;
t86 = t162 ^ 2 - t166 ^ 2;
t212 = qJD(1) * t23 + qJD(2) * t86;
t211 = -t160 * t181 - t164 * t176;
t127 = t172 * t176;
t205 = t301 / 0.2e1 - t300 / 0.2e1;
t18 = t205 + t216;
t210 = qJD(1) * t18 - qJD(2) * t127;
t209 = -qJD(2) * t162 - t261;
t43 = t140 / 0.2e1 + (t226 - t271) * t164;
t208 = qJD(1) * t43 - t252;
t28 = -t321 * t70 + t93 * t323;
t203 = qJD(2) * t28 - t286 * t70;
t200 = -qJD(1) * t28 + t162 * t252;
t199 = qJD(5) * t156 + t160 * t241;
t152 = t156 * qJD(2);
t84 = t318 / 0.2e1 + t197 * pkin(2);
t79 = t217 + t156;
t63 = t201 * t160 + t227;
t53 = t58 * qJD(5);
t52 = t59 * qJD(5);
t46 = -t140 / 0.2e1 + (t223 + t201) * t164;
t41 = -t247 - t51;
t27 = t28 * qJD(5);
t21 = t23 * qJD(5);
t19 = -t205 + t216;
t13 = t193 - t204;
t6 = -t195 + t206;
t5 = -t196 + t207;
t22 = [0, 0, 0, t190 * t236, t175 * qJD(2), 0, 0, 0, -pkin(1) * t237, -pkin(1) * t236, t100 * qJD(2), t101 * qJD(2), qJD(3) * t112, qJD(2) * t26 + qJD(3) * t42, qJD(2) * t11 + qJD(3) * t81 - t188 * t230, qJD(2) * t12 + qJD(3) * t109 + t186 * t230, -qJD(2) * t7 + qJD(4) * t64, qJD(2) * t8 + qJD(3) * t15 + qJD(4) * t20, (qJD(2) * t92 - t326) * t93, qJD(2) * t24 + qJD(5) * t25, qJD(2) * t31 - t248 * t70, qJD(2) * t29 - t248 * t93, t160 * t240, qJD(2) * t1 + qJD(3) * t30 + qJD(5) * t10 + t249 * t277, qJD(2) * t2 + qJD(3) * t32 + qJD(5) * t9 + t249 * t70; 0, 0, 0, t228, t238, t236, -t237, 0, -pkin(6) * t236 - t235, pkin(6) * t237 - t234, -t253 + t257, qJD(2) * t121 + t256, (t295 * t160 - t164 * t187) * t312, t268 + (-t121 * t187 - t295 * t328) * t312 + t84 * qJD(3), t283 + (t186 * t211 - t280) * qJD(2) - t102 * qJD(4), t186 * t253 + t282 + (qJD(2) * t211 - t249) * t188, qJD(2) * t214 - t297, t296 + (t176 * t214 + t181 * t328) * qJD(2) + t13 * qJD(3) + t19 * qJD(4), t27 + (t252 + t286) * t92, t269 + (-t162 * t92 + t166 * t88) * qJD(2) + t21, qJD(5) * t63 + t166 * t240 + t289, -t162 * t240 + t291 - t53, t199, t311 + (t162 * t82 - t164 * t98 - t169 * t88) * qJD(2) - t59 * qJD(4) + t6 * qJD(5), t302 + (-t164 * t99 + t166 * t82 + t169 * t92) * qJD(2) - t62 * qJD(4) + t5 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t244, qJD(2) * t84 + t287, t259, t255, 0, qJD(2) * t13 + qJD(4) * t79 + t293, 0, 0, 0, 0, 0, -t53 + t290, -qJD(5) * t61 + t288; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t102 - t218, (-qJD(2) * t188 + t231) * t160, t263, qJD(2) * t19 + qJD(3) * t79 + t292, 0, 0, 0, 0, 0, qJD(5) * t46 + t233 - t284, -qJD(2) * t62 + t232; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t203, t213, qJD(2) * t63 + t220 * t70, t220 * t93 - t285, t152, qJD(2) * t6 - qJD(3) * t58 + qJD(4) * t46 - qJD(5) * t17 + t294, qJD(2) * t5 - qJD(3) * t61 + qJD(5) * t16 + t313; 0, 0, 0, -t228, -t238, 0, 0, 0, t235, t234, -t250 - t257, qJD(3) * t160 - t256, 0, qJD(3) * t85 - t268, -t188 * t250 - t283, qJD(3) * t105 - t282, -qJD(3) * t108 + t297, qJD(3) * t14 - qJD(4) * t18 - t296, -t92 * t286 + t27, t21 - t269, -qJD(5) * t60 - t289, -t52 - t291, -t199, qJD(3) * t277 - qJD(4) * t58 - qJD(5) * t3 - t311, qJD(3) * t70 - qJD(4) * t61 - qJD(5) * t4 - t302; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t172 * qJD(4), t127 * qJD(4), -t166 * t155, t86 * qJD(5), 0, 0, 0, t169 * t247, -t169 * t155; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t241, t242, 0, t258, -t229, t246, -t245, t278, 0, 0, 0, 0, 0, t262, t261; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t239, -t210, 0, 0, 0, 0, 0, -t267, -t265; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t200, t212, -t155 - t266, t41, -t243, -qJD(5) * t99 + t166 * t251 - t315, qJD(5) * t98 - t162 * t251 - t314; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t240, -t160 * qJD(2), -t244, -qJD(2) * t85 - t287, t188 * t240 - t259, -qJD(2) * t105 - t255, t108 * qJD(2), -qJD(2) * t14 + qJD(4) * t80 - t293, 0, 0, 0, 0, 0, -qJD(2) * t277 - t290 - t52, -qJD(2) * t70 - qJD(5) * t62 - t288; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t241, -t242, 0, -t258, t229, -t246, t245, -t278, 0, 0, 0, 0, 0, -t262, -t261; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t260, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t41, t155 - t264; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t218, -t160 * t231, -t263, qJD(2) * t18 - qJD(3) * t80 - t292, 0, 0, 0, 0, 0, -qJD(5) * t43 - t233 + t285, qJD(2) * t61 - t232 - t326; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t239, t210, 0, 0, 0, 0, 0, t247 + t267, -t155 + t265; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t260, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t208, t209; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t203, -t213, qJD(2) * t60 + t232, t242 * t93 + t284, t152, qJD(2) * t3 + qJD(3) * t59 + qJD(4) * t43 - t294, qJD(2) * t4 + qJD(3) * t62 + qJD(4) * t70 - t313; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t200, -t212, t266, t51, t243, -t166 * t219 + t315, t162 * t219 + t314; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t51, t264; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t208, -t209; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t22;
