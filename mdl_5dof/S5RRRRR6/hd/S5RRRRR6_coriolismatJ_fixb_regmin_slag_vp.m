% Calculate minimal parameter regressor of coriolis matrix for
% S5RRRRR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d4,d5]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x27]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2022-01-20 12:09
% Revision: fd3771346c4aea32fdeb66112c511235427c26a7 (2022-01-20)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRRR6_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRR6_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRR6_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRRRR6_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2022-01-20 12:08:26
% EndTime: 2022-01-20 12:08:41
% DurationCPUTime: 5.99s
% Computational Cost: add. (5256->289), mult. (10334->341), div. (0->0), fcn. (11310->8), ass. (0->239)
t485 = qJD(4) + qJD(5);
t498 = qJD(3) + t485;
t255 = cos(qJ(4));
t256 = cos(qJ(3));
t352 = t255 * t256;
t251 = sin(qJ(4));
t252 = sin(qJ(3));
t369 = t251 * t252;
t213 = -t352 + t369;
t409 = t213 * pkin(9);
t418 = pkin(7) + pkin(8);
t229 = t418 * t256;
t217 = t255 * t229;
t228 = t418 * t252;
t370 = t251 * t228;
t424 = -t217 + t370;
t128 = t424 + t409;
t250 = sin(qJ(5));
t254 = cos(qJ(5));
t133 = t255 * t228 + t251 * t229;
t353 = t255 * t252;
t368 = t251 * t256;
t215 = -t353 - t368;
t206 = t215 * pkin(9);
t426 = -t133 + t206;
t493 = t498 * (t254 * t128 - t250 * t426);
t492 = t498 * (-t250 * t128 - t254 * t426);
t253 = sin(qJ(2));
t241 = t253 * pkin(1) + pkin(7);
t404 = pkin(8) + t241;
t208 = t404 * t256;
t194 = t255 * t208;
t207 = t404 * t252;
t371 = t251 * t207;
t425 = -t194 + t371;
t108 = t425 + t409;
t100 = t255 * t207 + t251 * t208;
t427 = -t100 + t206;
t491 = t498 * (-t250 * t108 - t254 * t427);
t490 = t498 * (t254 * t108 - t250 * t427);
t325 = qJD(1) + qJD(2);
t107 = t250 * t213 + t254 * t215;
t299 = -t254 * t213 + t250 * t215;
t453 = -t107 ^ 2 + t299 ^ 2;
t462 = t325 * t453;
t324 = qJD(3) + qJD(4);
t327 = t107 * qJD(5);
t460 = t324 * t107 + t327;
t451 = t254 / 0.2e1;
t442 = t299 * t107 * t325;
t407 = t252 * pkin(3);
t408 = t215 * pkin(4);
t180 = t407 - t408;
t105 = t180 * t107;
t244 = -t256 * pkin(3) - pkin(2);
t175 = t213 * pkin(4) + t244;
t103 = t175 * t299;
t257 = cos(qJ(2));
t405 = t257 * pkin(1);
t166 = t175 - t405;
t81 = t166 * t299;
t402 = t81 / 0.2e1 + t103 / 0.2e1;
t441 = t105 - t402;
t328 = qJD(5) * t299;
t440 = t324 * t299 + t328;
t104 = t180 * t299;
t102 = t175 * t107;
t80 = t166 * t107;
t403 = -t80 / 0.2e1 - t102 / 0.2e1;
t439 = t403 - t104;
t243 = -pkin(2) - t405;
t438 = pkin(2) / 0.2e1 - t243 / 0.2e1;
t305 = t175 / 0.2e1 + t166 / 0.2e1;
t430 = t305 * t107;
t127 = t213 ^ 2 - t215 ^ 2;
t429 = t325 * t127;
t235 = -t252 ^ 2 + t256 ^ 2;
t428 = t325 * t235;
t423 = t324 * t133;
t422 = t324 * t100;
t318 = -t405 / 0.2e1;
t421 = t318 - t438;
t176 = t215 * t405;
t177 = t213 * t405;
t342 = t177 * t451 - t250 * t176 / 0.2e1;
t343 = t250 * t177 / 0.2e1 + t176 * t451;
t419 = -pkin(4) / 0.2e1;
t311 = -t194 / 0.2e1;
t310 = -t217 / 0.2e1;
t406 = t255 * pkin(3);
t397 = pkin(1) * qJD(1);
t396 = pkin(1) * qJD(2);
t395 = pkin(2) * qJD(2);
t394 = pkin(3) * qJD(4);
t393 = pkin(4) * qJD(4);
t392 = pkin(4) * qJD(5);
t391 = qJD(3) * pkin(3);
t226 = t244 - t405;
t390 = t226 * t213;
t389 = t226 * t215;
t388 = t244 * t213;
t387 = t244 * t215;
t242 = pkin(4) + t406;
t373 = t250 * t242;
t372 = t250 * t255;
t355 = t254 * t242;
t354 = t254 * t251;
t50 = -t104 - t80;
t351 = t50 * qJD(1);
t51 = -t105 + t81;
t350 = t51 * qJD(1);
t323 = t299 * t408;
t54 = t80 - t323;
t349 = t54 * qJD(1);
t322 = t107 * t408;
t55 = -t81 - t322;
t348 = t55 * qJD(1);
t341 = qJD(1) * t166;
t340 = qJD(1) * t226;
t339 = qJD(1) * t243;
t338 = qJD(2) * t175;
t337 = qJD(2) * t244;
t336 = qJD(4) * t226;
t335 = qJD(4) * t244;
t195 = t213 * t407;
t125 = t195 - t389;
t332 = t125 * qJD(1);
t196 = t215 * t407;
t126 = -t196 - t390;
t331 = t126 * qJD(1);
t326 = t252 * qJD(3);
t249 = t256 * qJD(3);
t321 = t253 * t396;
t320 = t253 * t397;
t319 = -t406 / 0.2e1;
t317 = t299 * t341;
t316 = t107 * t341;
t315 = t213 * t340;
t314 = t215 * t340;
t313 = t252 * t339;
t312 = t256 * t339;
t304 = t244 / 0.2e1 + t226 / 0.2e1;
t303 = pkin(1) * t325;
t302 = pkin(3) * t324;
t301 = pkin(4) * t485;
t151 = t324 * t215;
t296 = t299 * t320;
t295 = t107 * t320;
t294 = t213 * t320;
t293 = t215 * t320;
t292 = t252 * t320;
t291 = t253 * t303;
t288 = t323 + t403;
t287 = t322 + t402;
t16 = t343 - t439;
t52 = -t104 - t102;
t286 = -t16 * qJD(1) + t52 * qJD(2);
t17 = t342 + t441;
t53 = -t105 + t103;
t285 = -t17 * qJD(1) + t53 * qJD(2);
t20 = t288 - t343;
t56 = t102 - t323;
t284 = t20 * qJD(1) - t56 * qJD(2);
t22 = t287 - t342;
t57 = -t103 - t322;
t283 = t22 * qJD(1) - t57 * qJD(2);
t139 = t195 - t387;
t259 = (-t368 / 0.2e1 - t353 / 0.2e1) * t405;
t72 = t304 * t215 + t259;
t62 = -t195 + t72;
t280 = -t62 * qJD(1) + t139 * qJD(2);
t140 = -t196 - t388;
t258 = (-t352 / 0.2e1 + t369 / 0.2e1) * t405;
t73 = t304 * t213 + t258;
t63 = t196 + t73;
t279 = t63 * qJD(1) - t140 * qJD(2);
t138 = t311 + t194 / 0.2e1;
t155 = t310 + t217 / 0.2e1;
t278 = t138 * qJD(1) + t155 * qJD(2);
t277 = t319 + pkin(4) / 0.2e1 + t242 / 0.2e1;
t276 = t318 + t438;
t168 = t276 * t252;
t275 = t168 * qJD(1) + t252 * t395;
t170 = t276 * t256;
t274 = t170 * qJD(1) + t256 * t395;
t40 = -t299 * t305 + t342;
t269 = -t40 * qJD(1) + t299 * t338;
t39 = t343 + t430;
t268 = -t39 * qJD(1) - t107 * t338;
t267 = t73 * qJD(1) + t213 * t337;
t266 = -t72 * qJD(1) - t215 * t337;
t167 = t277 * t250;
t265 = t167 * qJD(3);
t169 = t277 * t254;
t264 = t169 * qJD(3);
t198 = pkin(3) * t354 + t373;
t263 = t198 * qJD(3);
t204 = (t354 + t372) * pkin(3);
t262 = t204 * qJD(3);
t237 = t250 * t251 * pkin(3);
t197 = t237 - t355;
t261 = t197 * qJD(3);
t205 = t254 * t406 - t237;
t260 = t205 * qJD(3);
t74 = -t388 / 0.2e1 - t390 / 0.2e1 + t258;
t75 = -t387 / 0.2e1 - t389 / 0.2e1 + t259;
t236 = t252 * t249;
t234 = t252 * t321;
t227 = t235 * qJD(3);
t203 = t325 * t256 * t252;
t200 = t205 * qJD(4);
t199 = t204 * qJD(4);
t188 = t215 * t321;
t187 = t213 * t321;
t186 = t198 * qJD(5);
t185 = t197 * qJD(5);
t172 = t421 * t256;
t171 = t421 * t252;
t153 = t237 - t355 / 0.2e1 + (t419 + t319) * t254;
t152 = t250 * t419 - t373 / 0.2e1 + (-t354 - t372 / 0.2e1) * pkin(3);
t150 = t324 * t213;
t136 = t107 * t321;
t135 = t299 * t321;
t134 = 0.2e1 * t310 + t370;
t101 = 0.2e1 * t311 + t371;
t83 = t325 * t215 * t213;
t82 = t213 * t151;
t65 = -t196 + t74;
t64 = t195 + t75;
t59 = t324 * t127;
t42 = t343 - t430;
t41 = t342 + (t166 + t175) * t299 / 0.2e1;
t26 = t440 * t107;
t23 = t287 + t342;
t21 = t288 + t343;
t19 = t342 - t441;
t18 = t343 + t439;
t1 = (qJD(5) + t324) * t453;
t2 = [0, 0, 0, 0, -t321, -t257 * t396, t236, t227, 0, 0, 0, t243 * t326 - t256 * t321, t243 * t249 + t234, t82, t59, 0, 0, 0, t125 * qJD(3) - t215 * t336 + t187, t126 * qJD(3) - t213 * t336 - t188, -t26, t1, 0, 0, 0, t50 * qJD(3) - t54 * qJD(4) - t166 * t327 - t135, t51 * qJD(3) - t55 * qJD(4) + t166 * t328 - t136; 0, 0, 0, 0, -t291, -t257 * t303, t236, t227, 0, 0, 0, t171 * qJD(3) - t256 * t291, t172 * qJD(3) + t234 + t292, t82, t59, 0, 0, 0, t64 * qJD(3) + t75 * qJD(4) + t187 + t294, t65 * qJD(3) + t74 * qJD(4) - t188 - t293, -t26, t1, 0, 0, 0, t18 * qJD(3) + t21 * qJD(4) + t42 * qJD(5) - t135 - t296, t19 * qJD(3) + t23 * qJD(4) + t41 * qJD(5) - t136 - t295; 0, 0, 0, 0, 0, 0, t203, t428, t249, -t326, 0, t171 * qJD(2) - t241 * t249 + t313, t172 * qJD(2) + t241 * t326 + t312, t83, t429, -t150, t151, 0, t64 * qJD(2) + qJD(3) * t425 + t101 * qJD(4) + t332, t65 * qJD(2) + t331 + t422, -t442, t462, t440, t460, 0, t18 * qJD(2) + t351 + t490, t19 * qJD(2) + t350 + t491; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83, t429, -t150, t151, 0, t75 * qJD(2) + t101 * qJD(3) + qJD(4) * t425 - t314, t74 * qJD(2) - t315 + t422, -t442, t462, t440, t460, 0, t21 * qJD(2) - t349 + t490, t23 * qJD(2) - t348 + t491; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t442, t462, t440, t460, 0, t42 * qJD(2) - t316 + t490, t41 * qJD(2) + t317 + t491; 0, 0, 0, 0, t320, t257 * t397, t236, t227, 0, 0, 0, -t168 * qJD(3) + t256 * t320, -t170 * qJD(3) - t292, t82, t59, 0, 0, 0, -t62 * qJD(3) - t72 * qJD(4) - t294, -t63 * qJD(3) - t73 * qJD(4) + t293, -t26, t1, 0, 0, 0, -t16 * qJD(3) + t20 * qJD(4) - t39 * qJD(5) + t296, -t17 * qJD(3) + t22 * qJD(4) - t40 * qJD(5) + t295; 0, 0, 0, 0, 0, 0, t236, t227, 0, 0, 0, -pkin(2) * t326, -pkin(2) * t249, t82, t59, 0, 0, 0, t139 * qJD(3) - t215 * t335, t140 * qJD(3) - t213 * t335, -t26, t1, 0, 0, 0, t52 * qJD(3) - t56 * qJD(4) - t175 * t327, t53 * qJD(3) - t57 * qJD(4) + t175 * t328; 0, 0, 0, 0, 0, 0, t203, t428, t249, -t326, 0, -pkin(7) * t249 - t275, pkin(7) * t326 - t274, t83, t429, -t150, t151, 0, qJD(3) * t424 + t134 * qJD(4) + t280, -t279 + t423, -t442, t462, t440, t460, 0, t286 + t493, t285 + t492; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83, t429, -t150, t151, 0, t134 * qJD(3) + qJD(4) * t424 + t266, -t267 + t423, -t442, t462, t440, t460, 0, t284 + t493, t283 + t492; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t442, t462, t440, t460, 0, t268 + t493, t269 + t492; 0, 0, 0, 0, 0, 0, -t203, -t428, 0, 0, 0, t168 * qJD(2) - t313, t170 * qJD(2) - t312, -t83, -t429, 0, 0, 0, t62 * qJD(2) + t138 * qJD(4) - t332, t63 * qJD(2) - t331, t442, -t462, 0, 0, 0, t16 * qJD(2) - t351, t17 * qJD(2) - t350; 0, 0, 0, 0, 0, 0, -t203, -t428, 0, 0, 0, t275, t274, -t83, -t429, 0, 0, 0, t155 * qJD(4) - t280, t279, t442, -t462, 0, 0, 0, -t286, -t285; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t251 * t394, -t255 * t394, 0, 0, 0, 0, 0, -t199 - t186, -t200 + t185; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t251 * t302 + t278, -t255 * t302, 0, 0, 0, 0, 0, t152 * qJD(5) - t199 - t262, t153 * qJD(5) - t200 - t260; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t152 * qJD(4) - t186 - t263, t153 * qJD(4) + t185 + t261; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t83, -t429, 0, 0, 0, t72 * qJD(2) - t138 * qJD(3) + t314, t73 * qJD(2) + t315, t442, -t462, 0, 0, 0, -t20 * qJD(2) + t349, -t22 * qJD(2) + t348; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t83, -t429, 0, 0, 0, -t155 * qJD(3) - t266, t267, t442, -t462, 0, 0, 0, -t284, -t283; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t251 * t391 - t278, t255 * t391, 0, 0, 0, 0, 0, -t167 * qJD(5) + t262, -t169 * qJD(5) + t260; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t250 * t392, -t254 * t392; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t250 * t301 - t265, -t254 * t301 - t264; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t442, -t462, 0, 0, 0, t39 * qJD(2) + t316, t40 * qJD(2) - t317; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t442, -t462, 0, 0, 0, -t268, -t269; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t167 * qJD(4) + t263, t169 * qJD(4) - t261; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t250 * t393 + t265, t254 * t393 + t264; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t2;
