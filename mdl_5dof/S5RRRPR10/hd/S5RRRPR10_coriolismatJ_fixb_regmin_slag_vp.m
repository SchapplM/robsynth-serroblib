% Calculate minimal parameter regressor of coriolis matrix for
% S5RRRPR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,d1,d2,d3,d5,theta4]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x28]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2021-01-15 23:43
% Revision: 24b2e7d74a0c1a3b64fa2f8f5ad758691ad61af3 (2021-01-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRPR10_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPR10_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPR10_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S5RRRPR10_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2021-01-15 23:41:21
% EndTime: 2021-01-15 23:42:12
% DurationCPUTime: 19.08s
% Computational Cost: add. (12757->715), mult. (31608->1046), div. (0->0), fcn. (35088->10), ass. (0->522)
t452 = cos(pkin(5));
t454 = sin(qJ(3));
t457 = cos(qJ(3));
t451 = sin(pkin(5));
t455 = sin(qJ(2));
t680 = t451 * t455;
t395 = -t452 * t457 + t454 * t680;
t397 = t452 * t454 + t457 * t680;
t450 = sin(pkin(10));
t721 = cos(pkin(10));
t288 = t721 * t395 + t397 * t450;
t456 = cos(qJ(5));
t762 = t456 * t288;
t766 = t762 / 0.2e1;
t767 = -t762 / 0.2e1;
t769 = t766 + t767;
t770 = qJD(5) * t769;
t557 = t721 * t454;
t443 = t457 * pkin(8);
t647 = t457 * qJ(4) + t443;
t725 = -pkin(8) - qJ(4);
t336 = t450 * t647 - t725 * t557;
t768 = -t336 / 0.2e1;
t556 = t721 * t457;
t682 = t450 * t454;
t404 = -t556 + t682;
t637 = qJD(2) * t404;
t761 = qJD(1) * t288;
t765 = t637 + t761;
t458 = cos(qJ(2));
t679 = t451 * t458;
t433 = pkin(7) * t679;
t434 = t452 * t455 * pkin(1);
t400 = t433 + t434;
t370 = pkin(8) * t452 + t400;
t545 = -pkin(2) * t458 - pkin(8) * t455;
t371 = (-pkin(1) + t545) * t451;
t257 = t454 * t370 - t457 * t371;
t204 = -t397 * qJ(4) - t257;
t178 = -pkin(3) * t679 + t204;
t258 = t457 * t370 + t454 * t371;
t602 = -t395 * qJ(4) + t258;
t759 = t721 * t602;
t111 = t450 * t178 + t759;
t764 = t111 / 0.2e1;
t751 = t288 / 0.2e1;
t756 = t721 * t647 + t725 * t682;
t763 = -t756 / 0.2e1;
t373 = t721 * t397;
t683 = t450 * t395;
t758 = t373 - t683;
t753 = t758 / 0.2e1;
t453 = sin(qJ(5));
t160 = t453 * t758;
t692 = t756 * t453;
t691 = t756 * t456;
t760 = t450 * t602;
t561 = 0.2e1 * t751;
t544 = t561 * t404;
t402 = t404 ^ 2;
t681 = t450 * t457;
t407 = t557 + t681;
t403 = t407 ^ 2;
t757 = -t403 - t402;
t445 = t453 ^ 2;
t447 = t456 ^ 2;
t431 = t447 - t445;
t634 = qJD(2) * t456;
t596 = t453 * t634;
t548 = t407 * t596;
t755 = -qJD(3) * t431 + 0.2e1 * t548;
t117 = t204 * t721 - t760;
t754 = t117 / 0.2e1;
t752 = -t288 / 0.2e1;
t748 = t336 / 0.2e1;
t728 = pkin(1) * t458;
t398 = pkin(7) * t680 - t452 * t728;
t369 = -pkin(2) * t452 + t398;
t745 = t369 / 0.2e1;
t744 = -t397 / 0.2e1;
t743 = -t404 / 0.2e1;
t742 = t404 / 0.2e1;
t741 = -t407 / 0.2e1;
t740 = t407 / 0.2e1;
t604 = t454 * t679;
t415 = t450 * t604;
t739 = -t415 / 0.2e1;
t438 = pkin(3) * t450 + pkin(9);
t738 = t438 / 0.2e1;
t439 = -t721 * pkin(3) - pkin(4);
t737 = -t439 / 0.2e1;
t736 = t439 / 0.2e1;
t440 = -pkin(3) * t457 - pkin(2);
t735 = -t440 / 0.2e1;
t734 = -t450 / 0.2e1;
t733 = t450 / 0.2e1;
t732 = -t453 / 0.2e1;
t731 = t453 / 0.2e1;
t730 = -t454 / 0.2e1;
t729 = t456 / 0.2e1;
t727 = t397 * pkin(3);
t726 = t454 * pkin(3);
t724 = pkin(3) * qJD(3);
t110 = t721 * t178 - t760;
t103 = pkin(4) * t679 - t110;
t116 = t204 * t450 + t759;
t238 = t456 * t679 + t160;
t104 = -pkin(9) * t679 + t111;
t301 = pkin(3) * t395 + t369;
t463 = pkin(4) * t288 - pkin(9) * t758 + t301;
t44 = t104 * t453 - t456 * t463;
t148 = pkin(4) * t758 + pkin(9) * t288 + t727;
t665 = t456 * t148;
t678 = t453 * t117;
t530 = t665 - t678;
t673 = t453 * t288;
t5 = -t103 * t673 + t116 * t238 + t288 * t530 - t44 * t758;
t723 = t5 * qJD(1);
t240 = -t453 * t679 + t456 * t758;
t45 = t456 * t104 + t453 * t463;
t667 = t456 * t117;
t676 = t453 * t148;
t531 = t667 + t676;
t6 = -t103 * t762 + t116 * t240 - t288 * t531 - t45 * t758;
t722 = t6 * qJD(1);
t21 = -t103 * t238 + t288 * t44;
t720 = qJD(1) * t21;
t22 = t103 * t240 - t288 * t45;
t719 = qJD(1) * t22;
t31 = -t110 * t758 - t111 * t288;
t718 = qJD(1) * t31;
t42 = -t116 * t679 - t288 * t727 - t301 * t758;
t717 = qJD(1) * t42;
t43 = t117 * t679 - t288 * t301 + t727 * t758;
t716 = qJD(1) * t43;
t606 = t288 * t673;
t697 = t758 * t238;
t66 = -t606 - t697;
t715 = qJD(1) * t66;
t67 = -t606 + t697;
t714 = qJD(1) * t67;
t605 = t288 * t762;
t700 = t240 * t758;
t68 = -t605 + t700;
t713 = qJD(1) * t68;
t69 = t605 + t700;
t712 = qJD(1) * t69;
t584 = t240 * t743;
t487 = -t288 * t447 * t740 + t456 * t584;
t516 = t556 * t679;
t345 = t516 - t415;
t657 = t456 * t345;
t297 = t453 * t680 + t657;
t694 = t297 * t453;
t75 = -t694 / 0.2e1 + t487;
t711 = qJD(1) * t75;
t577 = -t680 / 0.2e1;
t585 = t238 * t743;
t696 = t288 * t407;
t84 = t585 - t657 / 0.2e1 + (-t696 / 0.2e1 + t577) * t453;
t710 = qJD(1) * t84;
t496 = t407 * t767 + t584;
t425 = t456 * t680;
t669 = t453 * t345;
t540 = t425 / 0.2e1 - t669 / 0.2e1;
t85 = t496 - t540;
t709 = qJD(1) * t85;
t399 = (pkin(2) * t455 - pkin(8) * t458) * t451;
t383 = t457 * t399;
t668 = t454 * t398;
t555 = t383 + t668;
t656 = t457 * t458;
t237 = (pkin(3) * t455 - qJ(4) * t656) * t451 + t555;
t558 = t721 * t237;
t381 = t454 * t399;
t382 = t457 * t398;
t648 = t381 - t382;
t253 = -qJ(4) * t604 + t648;
t684 = t450 * t253;
t141 = t558 - t684;
t128 = -pkin(4) * t680 - t141;
t296 = -t425 + t669;
t344 = t407 * t679;
t423 = pkin(3) * t604;
t342 = t423 + t400;
t175 = pkin(4) * t344 - pkin(9) * t345 + t342;
t664 = t456 * t175;
t214 = t450 * t237;
t246 = t721 * t253;
t142 = t246 + t214;
t129 = pkin(9) * t680 + t142;
t677 = t453 * t129;
t62 = t664 - t677;
t11 = t103 * t296 + t128 * t238 + t288 * t62 - t344 * t44;
t708 = t11 * qJD(1);
t707 = t116 * t453;
t706 = t116 * t456;
t666 = t456 * t129;
t675 = t453 * t175;
t63 = t666 + t675;
t12 = t103 * t297 + t128 * t240 - t288 * t63 - t344 * t45;
t705 = t12 * qJD(1);
t17 = (-t111 + t116) * t758 + (t110 - t117) * t288;
t704 = t17 * qJD(1);
t18 = -t110 * t345 - t111 * t344 - t141 * t758 - t142 * t288;
t703 = t18 * qJD(1);
t19 = -t110 * t116 + t111 * t117 + t301 * t727;
t702 = t19 * qJD(1);
t20 = t110 * t141 + t111 * t142 + t301 * t342;
t701 = t20 * qJD(1);
t699 = t240 * t453;
t698 = t240 * t456;
t29 = -t110 * t680 + t141 * t679 - t342 * t288 - t301 * t344;
t695 = t29 * qJD(1);
t30 = t342 * t758 + t301 * t345 + (-t111 * t455 + t142 * t458) * t451;
t693 = t30 * qJD(1);
t690 = t369 * t457;
t689 = t407 * t238;
t688 = t407 * t456;
t307 = t453 * t407;
t663 = t456 * t238;
t499 = t663 / 0.2e1 + t699 / 0.2e1;
t477 = t307 * t762 + t404 * t499;
t501 = t296 * t732 + t297 * t729;
t41 = t477 - t501;
t687 = t41 * qJD(1);
t444 = t451 ^ 2;
t449 = t458 ^ 2;
t686 = t444 * t449;
t685 = t444 * t455;
t674 = t453 * t238;
t312 = pkin(4) * t407 + pkin(9) * t404 + t726;
t672 = t453 * t312;
t671 = t336 * t453;
t670 = t453 * t344;
t660 = t456 * t312;
t659 = t336 * t456;
t658 = t456 * t344;
t73 = -t663 - t699;
t64 = t73 * t288;
t655 = t64 * qJD(1);
t65 = -t238 * t297 - t240 * t296;
t654 = t65 * qJD(1);
t93 = t257 * t680 - t369 * t604 - t400 * t395 + t555 * t679;
t653 = t93 * qJD(1);
t94 = t400 * t397 + (-t258 * t455 + (t648 + t690) * t458) * t451;
t652 = t94 * qJD(1);
t95 = -t238 * t344 - t288 * t296;
t651 = t95 * qJD(1);
t96 = t240 * t344 + t288 * t297;
t650 = t96 * qJD(1);
t432 = -t454 ^ 2 + t457 ^ 2;
t157 = -t257 * t679 - t369 * t395;
t646 = qJD(1) * t157;
t158 = -t258 * t679 - t369 * t397;
t645 = qJD(1) * t158;
t644 = qJD(1) * t240;
t401 = t557 / 0.2e1 + t681 / 0.2e1;
t341 = t401 * t679;
t641 = qJD(1) * t341;
t640 = qJD(1) * t397;
t639 = qJD(1) * t452;
t638 = qJD(1) * t458;
t636 = qJD(2) * t407;
t635 = qJD(2) * t454;
t633 = qJD(2) * t457;
t632 = qJD(2) * t458;
t631 = qJD(3) * t407;
t630 = qJD(3) * t453;
t629 = qJD(3) * t454;
t628 = qJD(3) * t456;
t627 = qJD(3) * t457;
t626 = qJD(4) * t456;
t625 = qJD(5) * t288;
t624 = qJD(5) * t453;
t623 = qJD(5) * t456;
t165 = 0.2e1 * t767;
t622 = t165 * qJD(1);
t210 = -t395 * t457 - t397 * t454;
t249 = t210 * t679;
t621 = t249 * qJD(1);
t259 = (t741 + t401) * t679;
t620 = t259 * qJD(1);
t260 = t739 + (t556 / 0.2e1 + t742) * t679;
t619 = t260 * qJD(1);
t618 = t758 * qJD(3);
t617 = t288 * qJD(3);
t319 = -t395 * t680 + t454 * t686;
t616 = t319 * qJD(1);
t320 = -t397 * t680 + t457 * t686;
t615 = t320 * qJD(1);
t339 = pkin(1) * t685 + t400 * t452;
t614 = t339 * qJD(1);
t340 = -t398 * t452 + t444 * t728;
t613 = t340 * qJD(1);
t612 = t341 * qJD(5);
t406 = (-t455 ^ 2 + t449) * t444;
t611 = t406 * qJD(1);
t610 = t451 * qJD(3);
t609 = t403 - t402;
t608 = t727 / 0.2e1;
t607 = t726 / 0.2e1;
t603 = -t721 / 0.2e1;
t601 = t451 * t638;
t600 = t404 * t636;
t599 = t447 * t636;
t598 = t407 * t634;
t597 = t451 * t632;
t595 = t458 * t610;
t594 = t453 * t628;
t593 = qJD(4) * t679;
t592 = t404 * t623;
t591 = t404 * t631;
t590 = t444 * t638;
t589 = qJD(2) * t680;
t588 = t453 * t623;
t392 = t407 * t628;
t587 = t103 * t731;
t586 = t103 * t729;
t583 = t240 * t740;
t582 = t758 * t740;
t581 = t688 / 0.2e1;
t580 = t288 * t738;
t579 = t238 * t737;
t578 = t240 * t736;
t576 = t680 / 0.2e1;
t575 = -t679 / 0.2e1;
t574 = t679 / 0.2e1;
t573 = -t677 / 0.2e1;
t572 = t673 / 0.2e1;
t571 = -t670 / 0.2e1;
t570 = t670 / 0.2e1;
t569 = -t307 / 0.2e1;
t568 = t307 / 0.2e1;
t567 = -t666 / 0.2e1;
t564 = -t658 / 0.2e1;
t563 = t103 / 0.2e1 + t754;
t562 = -t214 / 0.2e1 - t246 / 0.2e1;
t560 = t748 + t768;
t559 = t381 / 0.2e1 - t382 / 0.2e1;
t554 = qJD(2) + t639;
t553 = -qJD(5) - t761;
t552 = -qJD(5) - t637;
t551 = t632 * t685;
t550 = t455 * t590;
t549 = t457 * t601;
t547 = t450 * t577;
t543 = 0.2e1 * t453 * t392;
t541 = t175 / 0.2e1 + t103 * t741;
t539 = t580 + t148 / 0.2e1;
t538 = t423 / 0.2e1 + t433 / 0.2e1 + t434 / 0.2e1;
t537 = -qJD(3) + t601;
t495 = pkin(4) * t404 - pkin(9) * t407 + t440;
t188 = -t456 * t495 + t692;
t460 = t188 * t753 + t238 * t763 + t530 * t743 + (t660 + t671) * t752 + t404 * t587 + t336 * t572;
t470 = -t128 * t456 / 0.2e1 + t296 * t736 + t438 * t571;
t1 = (t44 / 0.2e1 - t707 / 0.2e1) * t407 + t460 + t470;
t56 = (-t188 + t692) * t407 + t660 * t404;
t536 = -t1 * qJD(1) + t56 * qJD(2);
t189 = t453 * t495 + t691;
t459 = t189 * t753 + t240 * t763 + t531 * t742 + (-t659 + t672) * t751 + t404 * t586 + t336 * t766;
t471 = t128 * t731 + t297 * t736 + t438 * t564;
t2 = (t45 / 0.2e1 - t706 / 0.2e1) * t407 + t459 + t471;
t57 = (-t189 + t691) * t407 - t672 * t404;
t535 = -t2 * qJD(1) + t57 * qJD(2);
t464 = t753 * t756 + t763 * t758;
t486 = (t344 * t734 + t345 * t603) * pkin(3);
t9 = (t764 - t116 / 0.2e1) * t407 + (t754 - t110 / 0.2e1) * t404 + t486 + t464;
t534 = t9 * qJD(1);
t127 = t440 * t726;
t466 = t110 * t756 / 0.2e1 + t336 * t764 + t116 * t768 + t117 * t763;
t493 = t142 * t733 + t141 * t721 / 0.2e1;
t7 = (t301 * t730 + t397 * t735 + t493) * pkin(3) + t466;
t533 = -t7 * qJD(1) + t127 * qJD(2);
t59 = 0.2e1 * t753 * t407 + t544;
t87 = t288 ^ 2 + t758 ^ 2;
t532 = qJD(1) * t87 + qJD(2) * t59;
t529 = -t288 * t439 - t438 * t758;
t528 = -t404 * t439 - t407 * t438;
t120 = t188 * t404 - t307 * t336;
t479 = t188 * t752 + t238 * t748 + t44 * t743;
t14 = -t453 * t541 + t479 + t567;
t527 = -qJD(1) * t14 + qJD(2) * t120;
t121 = -t189 * t404 + t336 * t688;
t478 = t189 * t751 + t240 * t768 + t45 * t742;
t13 = t456 * t541 + t478 + t573;
t526 = qJD(1) * t13 - qJD(2) * t121;
t167 = t336 * t407 - t404 * t756;
t465 = t110 * t740 + t111 * t742 - t288 * t763 + t758 * t768;
t27 = t465 + t538;
t525 = -qJD(1) * t27 + qJD(2) * t167;
t254 = t609 * t453;
t505 = t453 * t544;
t472 = t758 * t569 + t505 - t689 / 0.2e1;
t47 = t564 + t472;
t524 = -qJD(1) * t47 + qJD(2) * t254;
t255 = t757 * t453;
t473 = t758 * t568 + t505 + t689 / 0.2e1;
t49 = t564 + t473;
t523 = qJD(1) * t49 - qJD(2) * t255;
t256 = t609 * t456;
t462 = (t582 - t544) * t456 + t583;
t51 = t571 + t462;
t522 = -qJD(1) * t51 - qJD(2) * t256;
t294 = t404 * t726 + t407 * t440;
t468 = t301 * t741 + t575 * t756 + t735 * t758;
t491 = -t684 / 0.2e1 + t558 / 0.2e1;
t506 = t721 * t576;
t33 = (t288 * t730 + t397 * t743 + t506) * pkin(3) + t468 + t491;
t521 = -qJD(1) * t33 + qJD(2) * t294;
t295 = -t404 * t440 + t407 * t726;
t469 = -t288 * t735 + t301 * t742 - t336 * t575;
t32 = (t397 * t741 + t730 * t758 + t547) * pkin(3) + t469 + t562;
t520 = -qJD(1) * t32 + qJD(2) * t295;
t316 = t757 * t456;
t461 = (t582 + t544) * t456 + t583;
t53 = t570 + t461;
t519 = qJD(1) * t53 - qJD(2) * t316;
t518 = qJD(1) * t59 - qJD(2) * t757;
t517 = t552 * t456;
t492 = -t288 * t733 + t603 * t758;
t144 = (t744 + t492) * pkin(3);
t490 = t404 * t734 + t407 * t603;
t279 = (t730 + t490) * pkin(3);
t515 = qJD(1) * t144 + qJD(2) * t279;
t514 = qJD(1) * t160 + qJD(2) * t307;
t161 = t561 * t453;
t304 = t453 * t404;
t119 = qJD(1) * t161 + qJD(2) * t304;
t164 = 0.2e1 * t766;
t309 = t456 * t404;
t513 = -qJD(1) * t164 - qJD(2) * t309;
t250 = t395 ^ 2 - t397 ^ 2;
t512 = qJD(1) * t250 + qJD(2) * t210;
t511 = qJD(1) * t210 + qJD(2) * t432;
t285 = -t683 / 0.2e1 + t373 / 0.2e1;
t510 = qJD(1) * t285 + qJD(2) * t401;
t509 = qJD(1) * t758 + t636;
t507 = t635 + t640;
t504 = t451 * t545;
t467 = pkin(2) * t395 / 0.2e1 + t690 / 0.2e1 + t454 * pkin(8) * t575;
t151 = t467 + t559;
t503 = pkin(2) * t633 - qJD(1) * t151;
t494 = pkin(2) * t744 + t574 * t443;
t153 = -t383 / 0.2e1 + (t745 - t398 / 0.2e1) * t454 + t494;
t502 = pkin(2) * t635 - qJD(1) * t153;
t500 = t404 * t738 + t407 * t737;
t286 = t395 * t730 + t397 * t457 / 0.2e1;
t498 = -qJD(2) * t286 + t395 * t640;
t497 = qJD(1) * t286 + t454 * t633;
t61 = (-t674 + t698) * t407;
t88 = t238 ^ 2 - t240 ^ 2;
t489 = qJD(1) * t88 - qJD(2) * t61 + qJD(3) * t73;
t488 = t312 / 0.2e1 + t500;
t106 = t453 * t488 + t456 * t560;
t23 = t453 * t539 + t456 * t563 + t579;
t485 = -qJD(1) * t23 - qJD(2) * t106 - t439 * t628;
t108 = t453 * t560 - t456 * t488;
t25 = t453 * t563 - t456 * t539 + t578;
t484 = -qJD(1) * t25 - qJD(2) * t108 - t439 * t630;
t115 = t499 * t407;
t133 = -t674 / 0.2e1 + t698 / 0.2e1;
t483 = qJD(2) * t115 - qJD(3) * t133 + t238 * t644;
t303 = (t445 / 0.2e1 - t447 / 0.2e1) * t407;
t482 = qJD(1) * t133 - qJD(2) * t303 + t594;
t143 = t758 * t742 + t696 / 0.2e1;
t481 = qJD(2) * t143 + qJD(5) * t285 + t758 * t761;
t480 = qJD(1) * t143 + qJD(5) * t401 + t600;
t315 = t431 * t403;
t476 = qJD(1) * t61 + qJD(2) * t315 + t543;
t475 = -qJD(1) * t73 + t755;
t474 = qJD(1) * t115 + qJD(3) * t303 + t403 * t596;
t424 = qJD(2) * t576;
t394 = t401 * qJD(3);
t374 = (t590 - t610 / 0.2e1) * t455;
t356 = -0.2e1 * t407 * t588;
t331 = t658 / 0.2e1;
t299 = t304 * qJD(5);
t298 = t303 * qJD(5);
t281 = t286 * qJD(3);
t278 = pkin(3) * t490 + t607;
t277 = t456 * t618;
t262 = t407 * t574 + t341;
t261 = t404 * t575 + t516 / 0.2e1 + t739;
t207 = t210 * qJD(3);
t205 = t509 * t456;
t177 = qJD(2) * t341 + qJD(3) * t285;
t162 = t288 * t732 + t572;
t156 = t162 * qJD(5);
t155 = t161 * qJD(5);
t154 = t454 * t745 + t668 / 0.2e1 + t383 / 0.2e1 + t494;
t152 = t467 - t559;
t145 = pkin(3) * t492 + t608;
t134 = t143 * qJD(3);
t130 = t133 * qJD(5);
t118 = -t119 - t624;
t112 = t115 * qJD(5);
t109 = t336 * t731 + t671 / 0.2e1 + t660 / 0.2e1 - t500 * t456;
t107 = t336 * t729 + t659 / 0.2e1 - t672 / 0.2e1 + t500 * t453;
t86 = t496 + t540;
t83 = t288 * t569 + t585 + t657 / 0.2e1 + t453 * t576;
t74 = t694 / 0.2e1 + t487;
t72 = t73 * qJD(5);
t60 = t61 * qJD(5);
t58 = t59 * qJD(4);
t52 = t571 + t461;
t50 = t570 + t462;
t48 = t331 + t473;
t46 = t331 + t472;
t40 = t477 + t501;
t35 = pkin(3) * t547 + t407 * t608 + t607 * t758 - t469 + t562;
t34 = pkin(3) * t506 + t288 * t607 + t404 * t608 - t468 + t491;
t28 = -t465 + t538;
t26 = t438 * t767 + t578 + t587 - t678 / 0.2e1 + t665 / 0.2e1;
t24 = t453 * t580 + t579 + t586 - t667 / 0.2e1 - t676 / 0.2e1;
t16 = t103 * t581 + t573 + t664 / 0.2e1 - t478;
t15 = t103 * t569 + t567 - t675 / 0.2e1 - t479;
t10 = t110 * t742 + t111 * t741 + t116 * t740 + t117 * t743 - t464 + t486;
t8 = pkin(3) * t493 + t301 * t607 + t440 * t608 - t466;
t4 = t116 * t581 + t45 * t741 - t459 + t471;
t3 = t116 * t568 + t44 * t741 - t460 + t470;
t36 = [0, 0, 0, t551, t406 * qJD(2), t452 * t597, -t452 * t589, 0, -t339 * qJD(2), -t340 * qJD(2), (-t395 * qJD(3) + t457 * t597) * t397, qJD(2) * t249 + qJD(3) * t250, -t320 * qJD(2) + t395 * t595, t319 * qJD(2) + t397 * t595, -t551, -qJD(2) * t93 - qJD(3) * t158, qJD(2) * t94 + qJD(3) * t157, -t29 * qJD(2) - t42 * qJD(3) + t593 * t758, t30 * qJD(2) + t43 * qJD(3) - t288 * t593, qJD(2) * t18 + qJD(3) * t17 + qJD(4) * t87, qJD(2) * t20 + qJD(3) * t19 + qJD(4) * t31, (qJD(2) * t297 - qJD(5) * t238 - t456 * t617) * t240, qJD(2) * t65 - qJD(3) * t64 + qJD(5) * t88, qJD(2) * t96 + qJD(3) * t68 - t238 * t625, qJD(2) * t95 - qJD(3) * t67 - t240 * t625, (qJD(2) * t344 + t618) * t288, qJD(2) * t11 + qJD(3) * t5 - qJD(4) * t66 + qJD(5) * t22, qJD(2) * t12 + qJD(3) * t6 + qJD(4) * t69 + qJD(5) * t21; 0, 0, 0, t550, t611, t554 * t679, -t554 * t680, 0, -qJD(2) * t400 - t614, qJD(2) * t398 - t613, t451 * t507 * t656 + t281, t432 * t597 + t207 + t621, t454 * t589 - t615, t457 * t589 + t616, -t374, -t653 + (-t400 * t457 + t454 * t504) * qJD(2) + t154 * qJD(3), t652 + (t400 * t454 + t457 * t504) * qJD(2) + t152 * qJD(3), -t695 + (-t336 * t680 + t342 * t404 + t344 * t440) * qJD(2) + t34 * qJD(3) + t262 * qJD(4), t693 + (t342 * t407 + t345 * t440 - t680 * t756) * qJD(2) + t35 * qJD(3) + t261 * qJD(4), t703 + (-t141 * t407 - t142 * t404 + t336 * t345 - t344 * t756) * qJD(2) + t10 * qJD(3) + t58, t701 + (-t141 * t336 + t142 * t756 + t342 * t440) * qJD(2) + t8 * qJD(3) + t28 * qJD(4), qJD(3) * t74 - t112 + (t598 + t644) * t297, t654 + t40 * qJD(3) - t60 + (-t296 * t456 - t694) * t636, t650 + (t297 * t404 + t407 * t658) * qJD(2) + t50 * qJD(3) + t83 * qJD(5), t651 + (-t296 * t404 - t307 * t344) * qJD(2) + t46 * qJD(3) + t86 * qJD(5), t765 * t344 + t134 + t612, t708 + (t128 * t307 - t188 * t344 + t296 * t336 + t404 * t62) * qJD(2) + t3 * qJD(3) + t48 * qJD(4) + t16 * qJD(5), t705 + (t128 * t688 - t189 * t344 + t297 * t336 - t404 * t63) * qJD(2) + t4 * qJD(3) + t52 * qJD(4) + t15 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t498, t512, t537 * t395, t537 * t397, t424, qJD(2) * t154 - qJD(3) * t258 - t645, qJD(2) * t152 + qJD(3) * t257 + t646, qJD(2) * t34 - qJD(3) * t116 - t717, qJD(2) * t35 - qJD(3) * t117 + t716, t704 + t10 * qJD(2) + (t288 * t721 - t450 * t758) * t724, t702 + t8 * qJD(2) + (-t116 * t721 + t117 * t450) * t724 + t145 * qJD(4), qJD(2) * t74 + t130 - (t630 + t644) * t762, t40 * qJD(2) - t431 * t617 - t655 + t72, qJD(2) * t50 + t453 * t618 + t713 + t770, qJD(2) * t46 + t156 + t277 - t714, t481, t723 + t3 * qJD(2) + (t453 * t529 - t706) * qJD(3) + t26 * qJD(5), t722 + t4 * qJD(2) + (t456 * t529 + t707) * qJD(3) + t24 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t262 * qJD(2) + t601 * t758, t261 * qJD(2) - t288 * t601, t532, qJD(2) * t28 + qJD(3) * t145 + t718, 0, 0, 0, 0, 0, qJD(2) * t48 + t156 - t715, qJD(2) * t52 + t712 + t770; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t483, t489, t83 * qJD(2) + qJD(3) * t769 + t238 * t553, t86 * qJD(2) + t162 * qJD(3) + t240 * t553, t177, qJD(2) * t16 + qJD(3) * t26 + qJD(4) * t162 - qJD(5) * t45 + t719, qJD(2) * t15 + qJD(3) * t24 + qJD(4) * t769 + qJD(5) * t44 + t720; 0, 0, 0, -t550, -t611, -t452 * t601, t639 * t680, 0, t614, t613, -t397 * t549 + t281, t207 - t621, -t457 * t595 + t615, t454 * t595 - t616, t374, qJD(3) * t153 + t653, qJD(3) * t151 - t652, -qJD(3) * t33 - qJD(4) * t259 + t695, -qJD(3) * t32 - qJD(4) * t260 - t693, -qJD(3) * t9 + t58 - t703, -qJD(3) * t7 - qJD(4) * t27 - t701, qJD(3) * t75 - t297 * t644 - t112, qJD(3) * t41 - t60 - t654, qJD(3) * t51 + qJD(5) * t84 - t650, qJD(3) * t47 + qJD(5) * t85 - t651, -t344 * t761 + t134 - t612, -qJD(3) * t1 + qJD(4) * t49 - qJD(5) * t13 - t708, -qJD(3) * t2 + qJD(4) * t53 - qJD(5) * t14 - t705; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t454 * t627, t432 * qJD(3), 0, 0, 0, -pkin(2) * t629, -pkin(2) * t627, t294 * qJD(3), t295 * qJD(3), -qJD(4) * t757, qJD(3) * t127 + qJD(4) * t167, -t403 * t588 - t447 * t591, -qJD(5) * t315 + t404 * t543, -t404 * t407 * t624 + qJD(3) * t256, -qJD(3) * t254 - t407 * t592, t591, qJD(3) * t56 - qJD(4) * t255 + qJD(5) * t121, qJD(3) * t57 - qJD(4) * t316 + qJD(5) * t120; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t497, t511, -t537 * t457, t537 * t454, qJD(1) * t577, -pkin(8) * t627 - t502, pkin(8) * t629 - t503, -qJD(3) * t756 + t521, qJD(3) * t336 + t520, (t404 * t721 - t407 * t450) * t724 - t534, (-t336 * t450 - t721 * t756) * t724 + t278 * qJD(4) + t533, t711 - t298 + (-t594 - t599) * t404, t755 * t404 + t356 + t687, t407 * t630 - t522, t392 - t524, t480, (t453 * t528 - t691) * qJD(3) + t109 * qJD(5) + t536, (t456 * t528 + t692) * qJD(3) + t107 * qJD(5) + t535; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t620, -t619, t518, qJD(3) * t278 + t525, 0, 0, 0, 0, 0, t523, t519; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t474, -t476, t307 * t552 + t710, t407 * t517 + t709, t394 - t641, qJD(3) * t109 - qJD(5) * t189 - t526, qJD(3) * t107 + qJD(5) * t188 + t527; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t498, -t512, (-qJD(1) * t395 + t633) * t679, -t507 * t679, t424, -qJD(2) * t153 + t645, -qJD(2) * t151 - t646, qJD(2) * t33 - qJD(4) * t758 + t717, qJD(2) * t32 + qJD(4) * t288 - t716, qJD(2) * t9 - t704, qJD(2) * t7 + qJD(4) * t144 - t702, -qJD(2) * t75 + t698 * t761 + t130, -qJD(2) * t41 + t655 + t72, -qJD(2) * t51 + qJD(5) * t164 - t713, -qJD(2) * t47 - t155 + t714, -t481, qJD(2) * t1 + qJD(5) * t25 - t626 * t758 - t723, qJD(2) * t2 + qJD(4) * t160 + qJD(5) * t23 - t722; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t497, -t511, t549, -t454 * t601, qJD(1) * t576, t502, t503, -qJD(4) * t407 - t521, qJD(4) * t404 - t520, t534, qJD(4) * t279 - t533, t404 * t599 - t298 - t711, -0.2e1 * t404 * t548 + t356 - t687, qJD(5) * t309 + t522, -t299 + t524, -t480, qJD(5) * t108 - t407 * t626 - t536, qJD(4) * t307 + qJD(5) * t106 - t535; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t588, t431 * qJD(5), 0, 0, 0, t439 * t624, t439 * t623; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t509, t765, 0, t515, 0, 0, 0, 0, 0, -t205, t514; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t482, -t475, -t513 + t623, t118, -t510, -t438 * t623 - t484, t438 * t624 - t485; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t259 * qJD(2) - t537 * t758, t260 * qJD(2) + t288 * t537, -t532, qJD(2) * t27 - qJD(3) * t144 - t718, 0, 0, 0, 0, 0, -qJD(2) * t49 - t155 + t277 + t715, -qJD(2) * t53 - qJD(3) * t160 + qJD(5) * t165 - t712; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t620 + t631, -qJD(3) * t404 + t619, -t518, -qJD(3) * t279 - t525, 0, 0, 0, 0, 0, -t299 + t392 - t523, -qJD(3) * t307 - t519 - t592; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t509, -t765, 0, -t515, 0, 0, 0, 0, 0, t205, -t514; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t118, t517 + t622; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t483, -t489, -qJD(2) * t84 - qJD(3) * t164 + t238 * t761, -qJD(2) * t85 + qJD(3) * t161 + t240 * t761, t177, qJD(2) * t13 - qJD(3) * t25 + qJD(4) * t161 - t719, qJD(2) * t14 - qJD(3) * t23 - qJD(4) * t165 - t720; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t474, t476, -qJD(3) * t309 + t453 * t600 - t710, qJD(3) * t304 + t404 * t598 - t709, t394 + t641, -qJD(3) * t108 + qJD(4) * t304 + t526, -qJD(3) * t106 + t404 * t626 - t527; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t482, t475, t513, t119, t510, t484, t485; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t119, t404 * t634 - t622; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t36;
