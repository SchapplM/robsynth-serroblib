% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S5RRRPR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d5,theta4]';
% 
% Output:
% MMD_reg [((5+1)*5/2)x(5*10)]
%   inertial parameter regressor of inertia matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2022-01-20 11:44
% Revision: fd3771346c4aea32fdeb66112c511235427c26a7 (2022-01-20)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S5RRRPR3_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPR3_inertiaDJ_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPR3_inertiaDJ_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRRPR3_inertiaDJ_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2022-01-20 11:43:15
% EndTime: 2022-01-20 11:43:19
% DurationCPUTime: 1.25s
% Computational Cost: add. (2156->156), mult. (4764->253), div. (0->0), fcn. (4259->8), ass. (0->122)
t118 = sin(pkin(9));
t119 = cos(pkin(9));
t121 = sin(qJ(3));
t123 = cos(qJ(3));
t141 = -t118 * t121 + t119 * t123;
t120 = sin(qJ(5));
t152 = pkin(3) * t119 + pkin(4);
t174 = pkin(3) * t118;
t175 = cos(qJ(5));
t82 = -t120 * t174 + t175 * t152;
t90 = t118 * t123 + t119 * t121;
t177 = pkin(8) * t90;
t114 = t123 * qJD(3);
t157 = t121 * qJD(3);
t86 = t119 * t114 - t118 * t157;
t176 = t86 * pkin(8);
t124 = cos(qJ(2));
t173 = t124 * pkin(1);
t172 = -qJ(4) - pkin(7);
t159 = t118 * t114 + t119 * t157;
t56 = t120 * t141 + t175 * t90;
t30 = t56 * qJD(5) + t120 * t86 + t175 * t159;
t133 = t175 * t141;
t55 = t120 * t90 - t133;
t122 = sin(qJ(2));
t163 = pkin(1) * qJD(2);
t113 = t122 * t163;
t112 = pkin(3) * t157;
t67 = t159 * pkin(4) + t112;
t59 = t113 + t67;
t111 = -t123 * pkin(3) - pkin(2);
t70 = -t141 * pkin(4) + t111;
t66 = t70 - t173;
t171 = t66 * t30 + t59 * t55;
t158 = qJD(5) * t120;
t29 = -qJD(5) * t133 + t120 * t159 + t90 * t158 - t175 * t86;
t170 = -t66 * t29 + t59 * t56;
t169 = t70 * t30 + t67 * t55;
t168 = -t70 * t29 + t67 * t56;
t95 = t113 + t112;
t99 = t111 - t173;
t167 = -t95 * t141 + t99 * t159;
t166 = t99 * t86 + t95 * t90;
t165 = t111 * t159 - t141 * t112;
t164 = t111 * t86 + t90 * t112;
t109 = pkin(1) * t122 + pkin(7);
t160 = -qJ(4) - t109;
t88 = t160 * t121;
t79 = t118 * t88;
t115 = t123 * qJ(4);
t89 = t109 * t123 + t115;
t54 = t119 * t89 + t79;
t101 = pkin(7) * t123 + t115;
t100 = t172 * t121;
t91 = t118 * t100;
t61 = t119 * t101 + t91;
t80 = t119 * t88;
t110 = -pkin(2) - t173;
t162 = t110 * t114 + t121 * t113;
t92 = t119 * t100;
t155 = pkin(2) * t157;
t154 = pkin(2) * t114;
t153 = t124 * t163;
t151 = t121 * t114;
t53 = -t118 * t89 + t80;
t138 = t53 - t177;
t130 = t175 * t138;
t87 = t141 * pkin(8);
t45 = t87 + t54;
t17 = -t120 * t45 + t130;
t132 = t120 * t138;
t18 = t175 * t45 + t132;
t146 = t159 * pkin(8);
t140 = qJD(4) + t153;
t134 = t140 * t123;
t135 = t140 * t121;
t143 = t160 * t123;
t32 = t119 * t134 - t118 * t135 + (t118 * t143 + t80) * qJD(3);
t125 = -t146 + t32;
t31 = -t118 * t134 - t119 * t135 + (t119 * t143 - t79) * qJD(3);
t126 = t31 - t176;
t4 = -qJD(5) * t130 - t120 * t126 - t175 * t125 + t45 * t158;
t148 = qJD(5) * t175;
t5 = -qJD(5) * t132 - t120 * t125 + t175 * t126 - t45 * t148;
t150 = t17 * t29 - t18 * t30 + t4 * t55 - t5 * t56;
t147 = t172 * t123;
t51 = t141 * qJD(4) + (t118 * t147 + t92) * qJD(3);
t127 = -t146 + t51;
t50 = -t90 * qJD(4) + (t119 * t147 - t91) * qJD(3);
t128 = t50 - t176;
t60 = -t101 * t118 + t92;
t137 = t60 - t177;
t131 = t120 * t137;
t52 = t87 + t61;
t10 = -qJD(5) * t131 - t120 * t127 + t175 * t128 - t52 * t148;
t129 = t175 * t137;
t23 = -t120 * t52 + t129;
t24 = t175 * t52 + t131;
t9 = -qJD(5) * t129 - t120 * t128 - t175 * t127 + t52 * t158;
t149 = -t10 * t56 + t23 * t29 - t24 * t30 + t9 * t55;
t145 = t32 * t141 - t54 * t159 - t31 * t90 - t53 * t86;
t144 = t51 * t141 - t61 * t159 - t50 * t90 - t60 * t86;
t116 = t121 ^ 2;
t117 = t123 ^ 2;
t142 = (t116 + t117) * t124;
t139 = t110 * t157 - t123 * t113;
t83 = t120 * t152 + t175 * t174;
t104 = -0.2e1 * t151;
t103 = 0.2e1 * t151;
t94 = 0.2e1 * (-t116 + t117) * qJD(3);
t84 = t142 * t163;
t72 = t83 * qJD(5);
t71 = t82 * qJD(5);
t58 = 0.2e1 * t90 * t86;
t57 = -0.2e1 * t141 * t159;
t49 = (-t118 * t159 - t119 * t86) * pkin(3);
t35 = 0.2e1 * t86 * t141 - 0.2e1 * t90 * t159;
t16 = -0.2e1 * t56 * t29;
t15 = 0.2e1 * t55 * t30;
t8 = 0.2e1 * t29 * t55 - 0.2e1 * t30 * t56;
t3 = t29 * t82 - t30 * t83 - t55 * t71 + t56 * t72;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t113, -0.2e1 * t153, 0, 0, t103, t94, 0, t104, 0, 0, 0.2e1 * t139, 0.2e1 * t162, 0.2e1 * t84, 0.2e1 * (t109 * t142 + t110 * t122) * t163, t58, t35, 0, t57, 0, 0, 0.2e1 * t167, 0.2e1 * t166, 0.2e1 * t145, 0.2e1 * t31 * t53 + 0.2e1 * t32 * t54 + 0.2e1 * t95 * t99, t16, t8, 0, t15, 0, 0, 0.2e1 * t171, 0.2e1 * t170, 0.2e1 * t150, 0.2e1 * t17 * t5 - 0.2e1 * t18 * t4 + 0.2e1 * t59 * t66; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t113, -t153, 0, 0, t103, t94, 0, t104, 0, 0, t139 - t155, -t154 + t162, t84, (-pkin(2) * t122 + pkin(7) * t142) * t163, t58, t35, 0, t57, 0, 0, t165 + t167, t164 + t166, t144 + t145, t111 * t95 + t99 * t112 + t31 * t60 + t32 * t61 + t50 * t53 + t51 * t54, t16, t8, 0, t15, 0, 0, t169 + t171, t168 + t170, t149 + t150, t10 * t17 - t18 * t9 + t23 * t5 - t24 * t4 + t59 * t70 + t66 * t67; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t103, t94, 0, t104, 0, 0, -0.2e1 * t155, -0.2e1 * t154, 0, 0, t58, t35, 0, t57, 0, 0, 0.2e1 * t165, 0.2e1 * t164, 0.2e1 * t144, 0.2e1 * t111 * t112 + 0.2e1 * t50 * t60 + 0.2e1 * t51 * t61, t16, t8, 0, t15, 0, 0, 0.2e1 * t169, 0.2e1 * t168, 0.2e1 * t149, 0.2e1 * t10 * t23 - 0.2e1 * t24 * t9 + 0.2e1 * t67 * t70; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t114, 0, -t157, 0, -t109 * t114 - t121 * t153, t109 * t157 - t123 * t153, 0, 0, 0, 0, t86, 0, -t159, 0, t31, -t32, t49, (t118 * t32 + t119 * t31) * pkin(3), 0, 0, -t29, 0, -t30, 0, t5, t4, t3, -t17 * t72 + t18 * t71 - t4 * t83 + t5 * t82; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t114, 0, -t157, 0, -pkin(7) * t114, pkin(7) * t157, 0, 0, 0, 0, t86, 0, -t159, 0, t50, -t51, t49, (t118 * t51 + t119 * t50) * pkin(3), 0, 0, -t29, 0, -t30, 0, t10, t9, t3, t10 * t82 - t23 * t72 + t24 * t71 - t83 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t72, -0.2e1 * t71, 0, 0.2e1 * t71 * t83 - 0.2e1 * t72 * t82; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t159, t86, 0, t95, 0, 0, 0, 0, 0, 0, t30, -t29, 0, t59; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t159, t86, 0, t112, 0, 0, 0, 0, 0, 0, t30, -t29, 0, t67; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t29, 0, -t30, 0, t5, t4, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t29, 0, -t30, 0, t10, t9, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t72, -t71, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg = t1;
