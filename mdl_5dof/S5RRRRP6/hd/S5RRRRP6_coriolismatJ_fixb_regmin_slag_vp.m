% Calculate minimal parameter regressor of coriolis matrix for
% S5RRRRP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d4]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x28]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2021-01-16 00:11
% Revision: 24b2e7d74a0c1a3b64fa2f8f5ad758691ad61af3 (2021-01-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRRP6_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRP6_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRP6_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRRP6_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2021-01-16 00:10:28
% EndTime: 2021-01-16 00:10:52
% DurationCPUTime: 9.38s
% Computational Cost: add. (8433->552), mult. (16750->716), div. (0->0), fcn. (17168->6), ass. (0->439)
t484 = qJD(2) + qJD(3);
t357 = cos(qJ(4));
t356 = sin(qJ(2));
t614 = pkin(7) + pkin(6);
t325 = t614 * t356;
t358 = cos(qJ(2));
t326 = t614 * t358;
t589 = sin(qJ(3));
t590 = cos(qJ(3));
t415 = t590 * t325 + t589 * t326;
t644 = t415 * t357;
t609 = t644 / 0.2e1;
t355 = sin(qJ(4));
t645 = t415 * t355;
t181 = t645 / 0.2e1;
t309 = t589 * t356 - t590 * t358;
t165 = t357 * t309;
t340 = t589 * t358;
t341 = t590 * t356;
t311 = -t341 - t340;
t298 = t311 * pkin(4);
t647 = qJ(5) * t165 - t298 + t645;
t608 = -t415 / 0.2e1;
t534 = t311 * t355;
t130 = -pkin(4) * t534 + t415;
t613 = t130 / 0.2e1;
t646 = t298 + (t613 + t608) * t355;
t629 = t484 * t311;
t412 = t309 * t629;
t351 = qJD(4) * t357;
t587 = t309 * pkin(4);
t346 = -pkin(2) * t358 - pkin(1);
t584 = t311 * pkin(8);
t418 = t309 * pkin(3) + t584;
t379 = t346 + t418;
t313 = t589 * t325;
t468 = t590 * t326;
t416 = t468 - t313;
t631 = t416 * t355;
t105 = -t357 * t379 + t631;
t519 = t357 * qJ(5);
t95 = -t311 * t519 + t105;
t79 = -t95 + t587;
t473 = t95 / 0.2e1 + t79 / 0.2e1;
t382 = (t587 / 0.2e1 + t473) * t357;
t625 = qJD(1) * t382;
t643 = -pkin(4) * t351 - t625;
t162 = t355 * t309;
t283 = pkin(4) * t162;
t642 = -t283 / 0.2e1 - t313 / 0.2e1;
t395 = -t283 + t416;
t633 = t395 * t355;
t641 = (-t79 - t633) * t311;
t632 = t395 * t357;
t630 = t416 * t357;
t106 = t355 * t379 + t630;
t523 = t355 * qJ(5);
t96 = t311 * t523 + t106;
t640 = (t96 - t632) * t311;
t639 = (t105 - t631) * t311;
t638 = (t106 - t630) * t311;
t637 = t484 * t415;
t636 = 0.2e1 * t311;
t480 = t590 * pkin(2);
t635 = t79 + t95;
t634 = t130 * t395;
t353 = t355 ^ 2;
t354 = t357 ^ 2;
t334 = t354 + t353;
t628 = t484 * t334;
t335 = t354 - t353;
t627 = t484 * t335;
t308 = t311 ^ 2;
t483 = -t309 ^ 2 + t308;
t420 = -t589 * t311 / 0.2e1;
t602 = -t309 / 0.2e1;
t368 = (t590 * t602 + t420) * pkin(2);
t479 = t589 * pkin(2);
t343 = t479 + pkin(8);
t535 = t311 * t343;
t344 = -t480 - pkin(3);
t536 = t309 * t344;
t626 = t584 / 0.2e1 + t535 / 0.2e1 - t536 / 0.2e1 + t368;
t623 = qJD(4) * t382;
t445 = t165 / 0.2e1;
t580 = t79 * t357;
t592 = -t357 / 0.2e1;
t381 = pkin(4) * t445 - t580 / 0.2e1 + t95 * t592;
t622 = t381 * qJD(4);
t520 = t355 * t357;
t472 = t311 * t520;
t559 = t130 * t357;
t422 = pkin(4) * t472 - t559 / 0.2e1;
t306 = t468 / 0.2e1;
t621 = t306 + t642;
t305 = -t468 / 0.2e1;
t620 = t305 - t642;
t585 = t311 * pkin(3);
t586 = t309 * pkin(8);
t195 = -t585 + t586;
t588 = pkin(2) * t356;
t168 = t195 + t588;
t149 = t355 * t168;
t515 = -t149 / 0.2e1 + t609;
t439 = -t353 / 0.2e1 + t354 / 0.2e1;
t161 = t439 * t311;
t501 = qJD(1) * t357;
t537 = t308 * t355;
t619 = t161 * t484 + t501 * t537;
t459 = t311 * t501;
t194 = t309 * t459;
t618 = t162 * t484 - t194;
t139 = 0.2e1 * t355 * t459 + t627;
t150 = t357 * t168;
t81 = t150 + t647;
t616 = t81 / 0.2e1;
t174 = t357 * t195;
t88 = t174 + t647;
t615 = t88 / 0.2e1;
t612 = t395 / 0.2e1;
t611 = -t150 / 0.2e1;
t610 = -t174 / 0.2e1;
t516 = qJ(5) + t343;
t292 = t516 * t355;
t606 = -t292 / 0.2e1;
t605 = t292 / 0.2e1;
t293 = t516 * t357;
t604 = -t293 / 0.2e1;
t603 = t293 / 0.2e1;
t583 = t357 * pkin(4);
t320 = t344 - t583;
t600 = -t320 / 0.2e1;
t582 = pkin(8) + qJ(5);
t321 = t582 * t355;
t599 = -t321 / 0.2e1;
t598 = t321 / 0.2e1;
t322 = t582 * t357;
t597 = -t322 / 0.2e1;
t596 = t343 / 0.2e1;
t595 = t344 / 0.2e1;
t345 = -pkin(3) - t583;
t594 = -t345 / 0.2e1;
t593 = -t355 / 0.2e1;
t591 = t357 / 0.2e1;
t581 = pkin(3) * qJD(3);
t579 = t81 * t355;
t578 = t88 * t355;
t471 = qJ(5) * t162;
t513 = -t149 + t644;
t100 = t471 - t513;
t9 = t100 * t96 + t79 * t81 + t634;
t577 = t9 * qJD(1);
t17 = t635 * t534;
t573 = qJD(1) * t17;
t533 = t311 * t357;
t482 = pkin(4) * t533;
t18 = -t130 * t482 - t635 * t96;
t572 = qJD(1) * t18;
t410 = -t96 * t355 - t580;
t39 = t410 * t311;
t571 = qJD(1) * t39;
t48 = -t309 * t96 + (pkin(4) * t537 - t130 * t311) * t357;
t570 = qJD(1) * t48;
t49 = pkin(4) * t308 * t354 + t130 * t534 + t309 * t95;
t569 = qJD(1) * t49;
t61 = t105 * t309 + t415 * t534;
t568 = qJD(1) * t61;
t62 = -t106 * t309 - t415 * t533;
t567 = qJD(1) * t62;
t566 = qJD(4) * t96;
t565 = t100 * t357;
t173 = t355 * t195;
t511 = t644 - t173;
t101 = t471 - t511;
t564 = t101 * t357;
t12 = t101 * t96 + t79 * t88 + t634;
t563 = t12 * qJD(1);
t560 = t130 * t355;
t388 = t410 * t309;
t15 = (-t100 * t355 - t357 * t81) * t311 + t388;
t556 = t15 * qJD(1);
t16 = (-t101 * t355 - t357 * t88) * t311 + t388;
t555 = t16 * qJD(1);
t19 = t641 + (t81 - t560) * t309;
t554 = t19 * qJD(1);
t20 = t641 + (t88 - t560) * t309;
t553 = t20 * qJD(1);
t21 = t640 + (-t100 - t559) * t309;
t552 = t21 * qJD(1);
t22 = t640 + (-t101 - t559) * t309;
t551 = t22 * qJD(1);
t27 = t150 * t309 + t639;
t547 = t27 * qJD(1);
t28 = t638 + (t513 - t644) * t309;
t546 = t28 * qJD(1);
t29 = t174 * t309 + t639;
t545 = t29 * qJD(1);
t544 = t292 * t311;
t543 = t292 * t355;
t542 = t292 * t357;
t541 = t293 * t311;
t540 = t293 * t355;
t539 = t293 * t357;
t30 = t638 + (t511 - t644) * t309;
t538 = t30 * qJD(1);
t307 = t320 * t355;
t532 = t320 * t357;
t531 = t321 * t311;
t530 = t321 * t355;
t529 = t321 * t357;
t528 = t322 * t311;
t527 = t322 * t355;
t526 = t322 * t357;
t426 = -t480 / 0.2e1;
t398 = t600 + t426;
t364 = pkin(2) * t420 + (t345 / 0.2e1 + t398) * t309;
t442 = t605 + t599;
t444 = t612 - t395 / 0.2e1;
t34 = t442 * t311 + t364 * t355 - t357 * t444;
t525 = t34 * qJD(1);
t328 = t345 * t355;
t524 = t345 * t357;
t397 = -t344 / 0.2e1 + t426;
t360 = (t596 - t479 / 0.2e1 - pkin(8) / 0.2e1) * t311 + (-pkin(3) / 0.2e1 + t397) * t309;
t44 = t355 * t360;
t517 = t44 * qJD(1);
t514 = t150 / 0.2e1 + t181;
t512 = -t173 / 0.2e1 + t609;
t291 = t334 * t480;
t323 = t334 * qJD(5);
t510 = t291 * qJD(3) + t323;
t125 = t483 * t355;
t509 = qJD(1) * t125;
t126 = t483 * t357;
t508 = qJD(1) * t126;
t147 = t309 * t588 - t311 * t346;
t507 = qJD(1) * t147;
t148 = -t309 * t346 - t311 * t588;
t506 = qJD(1) * t148;
t172 = t335 * t308;
t505 = qJD(1) * t172;
t504 = qJD(1) * t309;
t503 = qJD(1) * t311;
t502 = qJD(1) * t346;
t500 = qJD(1) * t358;
t499 = qJD(2) * t344;
t498 = qJD(3) * t346;
t497 = qJD(4) * t293;
t496 = qJD(4) * t322;
t135 = qJD(4) * t355;
t495 = qJD(5) * t355;
t494 = qJD(5) * t357;
t493 = t483 * qJD(1);
t492 = t161 * qJD(1);
t491 = t162 * qJD(1);
t160 = t165 * qJD(1);
t171 = t334 * t308;
t490 = t171 * qJD(1);
t211 = t305 + t306;
t489 = t211 * qJD(1);
t300 = t341 / 0.2e1 + t340 / 0.2e1;
t488 = t300 * qJD(1);
t336 = -t356 ^ 2 + t358 ^ 2;
t487 = t336 * qJD(1);
t486 = t356 * qJD(2);
t485 = t358 * qJD(2);
t481 = pkin(4) * t520;
t478 = pkin(1) * t356 * qJD(1);
t477 = pkin(1) * t500;
t475 = pkin(4) * t495;
t470 = t355 * t590;
t469 = t357 * t590;
t467 = t309 * t502;
t466 = t311 * t502;
t465 = t311 * t135;
t464 = t311 * t351;
t463 = t311 * t495;
t462 = t311 * t494;
t209 = t309 * t503;
t339 = t355 * t351;
t461 = t355 * t503;
t460 = t356 * t500;
t281 = t309 * t494;
t458 = -t560 / 0.2e1;
t457 = t560 / 0.2e1;
t455 = -t534 / 0.2e1;
t454 = t307 / 0.2e1;
t453 = t532 / 0.2e1;
t452 = t328 / 0.2e1;
t451 = t524 / 0.2e1;
t450 = -t523 / 0.2e1;
t449 = -t162 / 0.2e1;
t448 = t162 / 0.2e1;
t447 = -t519 / 0.2e1;
t446 = -t165 / 0.2e1;
t441 = t603 + t597;
t440 = -t307 / 0.2e1 - t328 / 0.2e1;
t438 = t590 * qJD(2);
t437 = t590 * qJD(3);
t436 = t589 * qJD(2);
t435 = t589 * qJD(3);
t427 = pkin(2) * t436;
t331 = t355 * t427;
t36 = t441 * t311 + t355 * t444 + t364 * t357;
t434 = -qJD(1) * t36 - t331;
t47 = t357 * t360;
t433 = -qJD(1) * t47 - t331;
t431 = t484 * t357;
t430 = t484 * t355;
t429 = -t482 / 0.2e1;
t428 = pkin(2) * t435;
t425 = t479 / 0.2e1;
t421 = -t470 / 0.2e1;
t419 = t439 * pkin(4);
t414 = t194 + t464;
t413 = t355 * t431;
t411 = t357 * t430;
t409 = t357 * t428;
t408 = pkin(2) * t421;
t407 = t357 * t426;
t406 = qJ(5) * t445 - t298 + t457;
t102 = pkin(4) * t307;
t3 = t473 * t293 + (t311 * t453 + t458 + t616) * pkin(4);
t405 = -qJD(1) * t3 + qJD(2) * t102;
t110 = (t292 * t470 + t293 * t469 + t589 * t320) * pkin(2);
t359 = (t96 * t469 / 0.2e1 + t79 * t421 + t589 * t613) * pkin(2) + t101 * t603 + t320 * t612 + t88 * t606;
t371 = t100 * t597 + t395 * t594 + t81 * t598;
t2 = t359 + t371;
t404 = t2 * qJD(1) + t110 * qJD(2);
t7 = (t101 / 0.2e1 - t100 / 0.2e1) * t357 + (-t88 / 0.2e1 + t616) * t355 + (t355 * t441 - t357 * t442) * t309;
t403 = -qJD(1) * t7 - qJD(2) * t291;
t402 = t535 - t536;
t154 = t539 + t543;
t392 = t540 / 0.2e1 - t542 / 0.2e1;
t394 = t96 * t591 + t79 * t593;
t363 = t311 * t392 + t394;
t24 = t363 + t620;
t401 = qJD(1) * t24 + qJD(2) * t154;
t249 = -t307 + t481;
t370 = (-t532 / 0.2e1 + t419) * t311;
t32 = t611 + (t604 + t447) * t309 + t370 + t646;
t400 = qJD(1) * t32 - qJD(2) * t249;
t352 = t353 * pkin(4);
t263 = t352 + t532;
t40 = t320 * t455 + (t450 + t606) * t309 + t422 + t515;
t399 = -qJD(1) * t40 + qJD(2) * t263;
t396 = t586 / 0.2e1 - t585 / 0.2e1;
t393 = qJ(5) * t449 - t422;
t391 = t309 * t596 + t311 * t595;
t377 = t391 * t357;
t52 = t611 - t377 + (t415 / 0.2e1 + t608) * t355;
t390 = -qJD(1) * t52 - t355 * t499;
t366 = t391 * t355 + t609;
t50 = t366 - t515;
t389 = -qJD(1) * t50 - t357 * t499;
t387 = (qJD(4) + t504) * t534;
t128 = -qJD(4) * t300 + t209;
t332 = t357 * t427;
t386 = -t332 - t409;
t385 = pkin(3) / 0.2e1 + t397;
t384 = t594 + t398;
t383 = t396 * t357;
t380 = t413 * t636;
t116 = pkin(4) * t328;
t5 = t473 * t322 + (t311 * t451 + t458 + t615) * pkin(4);
t54 = t384 * t355 * pkin(4);
t378 = -qJD(1) * t5 - qJD(2) * t54 + qJD(3) * t116;
t103 = t425 + (t597 + t604) * t357 + (t599 + t606) * t355;
t219 = t526 + t530;
t362 = (t527 / 0.2e1 - t529 / 0.2e1) * t311 + t394;
t26 = t362 + t620;
t376 = qJD(1) * t26 - qJD(2) * t103 + qJD(3) * t219;
t142 = (t426 + t583) * t355 + t440;
t284 = -t328 + t481;
t369 = (-t524 / 0.2e1 + t419) * t311;
t38 = t610 + (t597 + t447) * t309 + t369 + t646;
t375 = qJD(1) * t38 - qJD(2) * t142 - qJD(3) * t284;
t151 = t357 * t384 - t352;
t299 = t352 + t524;
t42 = t345 * t455 + (t450 + t599) * t309 + t422 + t512;
t374 = -qJD(1) * t42 - qJD(2) * t151 + qJD(3) * t299;
t203 = -t431 - t461;
t204 = t430 - t459;
t245 = t385 * t355;
t58 = t610 - t383;
t373 = -qJD(1) * t58 + qJD(2) * t245 + t355 * t581;
t246 = t385 * t357;
t367 = t396 * t355 + t609;
t56 = -t644 / 0.2e1 + t173 / 0.2e1 + t367;
t372 = -qJD(1) * t56 + qJD(2) * t246 + t357 * t581;
t365 = t309 * t600 + t368;
t350 = pkin(4) * t135;
t333 = t355 * t428;
t324 = t335 * qJD(4);
t248 = pkin(3) * t592 + t344 * t591 + t407;
t247 = pkin(3) * t593 + t355 * t595 + t408;
t192 = t484 * t309;
t191 = t204 * pkin(4);
t169 = t484 * t300;
t167 = t174 / 0.2e1;
t156 = t162 * qJD(5);
t155 = t161 * qJD(4);
t152 = t352 + t451 + t453 + t407;
t143 = (t426 - t583) * t355 - t440;
t141 = 0.2e1 * t305 + t313;
t136 = t351 + t160;
t134 = -t491 - t135;
t117 = pkin(4) * t457;
t114 = t411 - t492;
t113 = -t413 + t492;
t111 = 0.2e1 * t357 * t387;
t107 = -t354 * t209 - t155;
t104 = t526 / 0.2e1 + t539 / 0.2e1 + t530 / 0.2e1 + t543 / 0.2e1 + t425;
t98 = qJD(4) * t165 - t508;
t97 = -qJD(4) * t162 + t509;
t70 = -t155 + (t354 * t503 - t413) * t309;
t64 = -t355 * t629 + t508;
t63 = -t311 * t431 - t509;
t60 = 0.2e1 * (qJD(4) - t504) * t472 - t309 * t627;
t59 = 0.2e1 * t181 + t167 - t383;
t57 = t367 + t512;
t55 = (t408 + t452 + t454) * pkin(4);
t53 = t181 - t377 + t514;
t51 = t366 + t515;
t46 = pkin(3) * t445 + t626 * t357 + t631;
t45 = pkin(3) * t448 + t626 * t355 - t630;
t43 = t309 * t598 + t311 * t452 + t393 + t512;
t41 = t309 * t605 + t311 * t454 + t393 + t515;
t37 = t309 * t597 + t167 + t181 + t369 + t406;
t35 = t541 / 0.2e1 + t633 + t528 / 0.2e1 + t345 * t446 + t365 * t357;
t33 = t544 / 0.2e1 - t632 + t531 / 0.2e1 + t345 * t449 + t365 * t355;
t31 = t293 * t602 + t370 + t406 + t514;
t25 = t362 + t621;
t23 = t363 + t621;
t8 = t564 / 0.2e1 - t578 / 0.2e1 + t322 * t448 + t565 / 0.2e1 + t321 * t446 - t579 / 0.2e1 + t392 * t309;
t6 = pkin(4) * t615 + t345 * t429 + t635 * t597 + t117;
t4 = pkin(4) * t616 + t320 * t429 + t635 * t604 + t117;
t1 = t359 - t371;
t10 = [0, 0, 0, t356 * t485, t336 * qJD(2), 0, 0, 0, -pkin(1) * t486, -pkin(1) * t485, t412, -t484 * t483, 0, 0, 0, qJD(2) * t147 - t311 * t498, qJD(2) * t148 - t309 * t498, -t308 * t339 + t354 * t412, -qJD(4) * t172 - t309 * t380, t126 * t484 + t309 * t465, -t125 * t484 + t309 * t464, -t412, qJD(2) * t27 + qJD(3) * t29 + qJD(4) * t62, qJD(2) * t28 + qJD(3) * t30 + qJD(4) * t61, qJD(2) * t19 + qJD(3) * t20 + qJD(4) * t48 + t281 * t311, qJD(2) * t21 + qJD(3) * t22 + qJD(4) * t49 - t309 * t463, -qJD(2) * t15 - qJD(3) * t16 - qJD(4) * t17 + qJD(5) * t171, qJD(2) * t9 + qJD(3) * t12 + qJD(4) * t18 - qJD(5) * t39; 0, 0, 0, t460, t487, t485, -t486, 0, -pkin(6) * t485 - t478, pkin(6) * t486 - t477, t209, -t493, -t192, t629, 0, -qJD(2) * t416 + qJD(3) * t141 + t507, t506 + t637, t70, t60, t64, t63, -t128, t547 + (t355 * t402 - t630) * qJD(2) + t45 * qJD(3) + t53 * qJD(4), t546 + (t357 * t402 + t631) * qJD(2) + t46 * qJD(3) + t51 * qJD(4), t554 + (-t162 * t320 + t544 - t632) * qJD(2) + t33 * qJD(3) + t31 * qJD(4) - t156, t552 + (-t165 * t320 + t541 + t633) * qJD(2) + t35 * qJD(3) + t41 * qJD(4) - t281, -t556 + (t565 - t579 + (t540 - t542) * t309) * qJD(2) + t8 * qJD(3) + t622, t577 + (t100 * t293 - t292 * t81 + t320 * t395) * qJD(2) + t1 * qJD(3) + t4 * qJD(4) + t23 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t209, -t493, -t192, t629, 0, qJD(2) * t141 - qJD(3) * t416 - t466, -t467 + t637, t70, t60, t64, t63, -t128, t545 + t45 * qJD(2) + (t355 * t418 - t630) * qJD(3) + t59 * qJD(4), t538 + t46 * qJD(2) + (t357 * t418 + t631) * qJD(3) + t57 * qJD(4), t553 + t33 * qJD(2) + (-t162 * t345 + t531 - t632) * qJD(3) + t37 * qJD(4) - t156, t551 + t35 * qJD(2) + (-t165 * t345 + t528 + t633) * qJD(3) + t43 * qJD(4) - t281, -t555 + t8 * qJD(2) + (t564 - t578 + (t527 - t529) * t309) * qJD(3) + t622, t563 + t1 * qJD(2) + (t101 * t322 - t321 * t88 + t345 * t395) * qJD(3) + t6 * qJD(4) + t25 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t619, t411 * t636 - t505, t387, t414, t169, qJD(2) * t53 + qJD(3) * t59 - qJD(4) * t106 + t567, qJD(2) * t51 + qJD(3) * t57 + qJD(4) * t105 + t568, qJD(2) * t31 + qJD(3) * t37 - t566 + t570, qJD(2) * t41 + qJD(3) * t43 + qJD(4) * t95 + t569, -pkin(4) * t465 + t381 * t484 - t573, -pkin(4) * t566 + qJD(2) * t4 + qJD(3) * t6 + t572; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t618, t203 * t309, t490, qJD(2) * t23 + qJD(3) * t25 - t571; 0, 0, 0, -t460, -t487, 0, 0, 0, t478, t477, -t209, t493, 0, 0, 0, qJD(3) * t211 - t507, -t506, t107, t111, t98, t97, t128, qJD(3) * t44 + qJD(4) * t52 - t547, qJD(3) * t47 + qJD(4) * t50 - t546, qJD(3) * t34 + qJD(4) * t32 - t554, qJD(3) * t36 - qJD(4) * t40 - t552, qJD(3) * t7 + t556 - t623, qJD(3) * t2 - qJD(4) * t3 + qJD(5) * t24 - t577; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t428, -pkin(2) * t437, t339, t324, 0, 0, 0, t135 * t344 - t409, t344 * t351 + t333, -t249 * qJD(4) - t409, qJD(4) * t263 + t333, t510, qJD(3) * t110 + qJD(4) * t102 + qJD(5) * t154; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t489 + (-t436 - t435) * pkin(2), (-t438 - t437) * pkin(2), t339, t324, 0, 0, 0, t247 * qJD(4) + t386 + t517, qJD(4) * t248 + t333 - t433, t143 * qJD(4) + t386 + t525, qJD(4) * t152 + t333 - t434, -t403 + t510, (t321 * t470 + t322 * t469 + t345 * t589) * pkin(2) * qJD(3) + t55 * qJD(4) + t104 * qJD(5) + t404; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t114, t139, t136, t134, -t488, qJD(3) * t247 - t343 * t351 - t390, qJD(3) * t248 + t135 * t343 - t389, qJD(3) * t143 + t400 - t497, qJD(3) * t152 + qJD(4) * t292 + t399, t643, -pkin(4) * t497 + qJD(3) * t55 + t405; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t628, qJD(3) * t104 + t401; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t209, t493, 0, 0, 0, -qJD(2) * t211 + t466, t467, t107, t111, t98, t97, t128, -qJD(2) * t44 + qJD(4) * t58 - t545, -qJD(2) * t47 + qJD(4) * t56 - t538, -qJD(2) * t34 + qJD(4) * t38 - t553, -qJD(2) * t36 - qJD(4) * t42 - t551, -qJD(2) * t7 + t555 - t623, -qJD(2) * t2 - qJD(4) * t5 + qJD(5) * t26 - t563; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t427 - t489, pkin(2) * t438, t339, t324, 0, 0, 0, -qJD(4) * t245 + t332 - t517, -qJD(4) * t246 + t433, -qJD(4) * t142 + t332 - t525, -qJD(4) * t151 + t434, t323 + t403, -qJD(4) * t54 - qJD(5) * t103 - t404; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t339, t324, 0, 0, 0, -pkin(3) * t135, -pkin(3) * t351, -t284 * qJD(4), t299 * qJD(4), t323, qJD(4) * t116 + qJD(5) * t219; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t114, t139, t136, t134, -t488, -pkin(8) * t351 - t373, pkin(8) * t135 - t372, t375 - t496, qJD(4) * t321 + t374, t643, -pkin(4) * t496 + t378; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t628, t376; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t619, -t380 + t505, -t165 * t484 - t309 * t461, t618, t169, -qJD(2) * t52 - qJD(3) * t58 - t567, -qJD(2) * t50 - qJD(3) * t56 - t568, -qJD(2) * t32 - qJD(3) * t38 + t462 - t570, qJD(2) * t40 + qJD(3) * t42 - t463 - t569, t382 * t484 + t573, pkin(4) * t462 + qJD(2) * t3 + qJD(3) * t5 - t572; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t113, -t139, -t160, t491, t488, qJD(3) * t245 + t390, qJD(3) * t246 + t389, qJD(3) * t142 - t400 - t495, qJD(3) * t151 - t399 - t494, t625, qJD(3) * t54 - t405 - t475; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t113, -t139, -t160, t491, t488, t373, t372, -t375 - t495, -t374 - t494, t625, -t378 - t475; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t204, t203, 0, -t191; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t414, t387, -t490, -pkin(4) * t464 - qJD(2) * t24 - qJD(3) * t26 + t571; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t135, t351, -t628, qJD(3) * t103 + t350 - t401; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t135, t351, -t628, t350 - t376; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t204, -t203, 0, t191; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t10;
