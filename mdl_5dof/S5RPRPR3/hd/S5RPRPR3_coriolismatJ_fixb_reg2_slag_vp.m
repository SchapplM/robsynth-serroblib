% Calculate inertial parameters regressor of coriolis matrix for
% S5RPRPR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d5,theta2,theta4]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2022-01-23 09:21
% Revision: fd3771346c4aea32fdeb66112c511235427c26a7 (2022-01-20)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPRPR3_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRPR3_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRPR3_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RPRPR3_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2022-01-23 09:20:58
% EndTime: 2022-01-23 09:21:00
% DurationCPUTime: 1.52s
% Computational Cost: add. (2559->156), mult. (5035->221), div. (0->0), fcn. (4300->8), ass. (0->149)
t180 = qJD(1) + qJD(3);
t141 = sin(pkin(9));
t143 = cos(pkin(9));
t146 = cos(qJ(5));
t223 = t146 ^ 2;
t144 = sin(qJ(5));
t224 = t144 ^ 2;
t84 = (t223 / 0.2e1 + t224 / 0.2e1 - 0.1e1 / 0.2e1) * t143 * t141;
t230 = t180 * t84;
t139 = t141 ^ 2;
t118 = (-t223 + t224) * t139;
t229 = t180 * t118;
t140 = t143 ^ 2;
t133 = t139 + t140;
t119 = t133 * t144;
t70 = t180 * t119;
t120 = t133 * t146;
t71 = t180 * t120;
t228 = t180 * t133;
t165 = t180 * t143;
t145 = sin(qJ(3));
t163 = cos(pkin(8)) * pkin(1) + pkin(2);
t153 = t145 * t163;
t220 = sin(pkin(8)) * pkin(1);
t221 = cos(qJ(3));
t164 = t221 * t220;
t113 = t164 + t153;
t111 = qJ(4) + t113;
t227 = qJ(4) + t111;
t186 = t84 * qJD(2);
t155 = -pkin(4) * t143 - pkin(7) * t141 - pkin(3);
t199 = t146 * qJ(4);
t100 = t143 * t199 + t144 * t155;
t112 = t145 * t220 - t163 * t221;
t149 = t112 + t155;
t198 = t146 * t111;
t52 = t143 * t198 + t144 * t149;
t177 = t100 / 0.2e1 + t52 / 0.2e1;
t202 = t143 * t144;
t51 = t111 * t202 - t146 * t149;
t99 = qJ(4) * t202 - t146 * t155;
t179 = t99 / 0.2e1 + t51 / 0.2e1;
t207 = t139 * t111;
t208 = t139 * qJ(4);
t211 = t208 / 0.2e1 + t207 / 0.2e1;
t147 = (t144 * t179 + t146 * t177) * t143 + t211;
t197 = t146 * t112;
t200 = t144 * t113;
t61 = -t143 * t197 + t200;
t215 = t61 * t144;
t196 = t146 * t113;
t201 = t144 * t112;
t60 = t143 * t201 + t196;
t216 = t60 * t146;
t152 = -t216 / 0.2e1 - t215 / 0.2e1;
t4 = t147 + t152;
t43 = t208 + (t100 * t146 + t144 * t99) * t143;
t226 = qJD(1) * t4 + qJD(3) * t43 + t186;
t14 = t207 + (t51 * t144 + t52 * t146) * t143;
t225 = t14 * qJD(1) + t186;
t222 = t111 / 0.2e1;
t218 = t51 * t143;
t217 = t52 * t143;
t214 = t99 * t143;
t115 = t119 * qJD(4);
t34 = t139 * t201 + t143 * t60;
t213 = -qJD(3) * t34 + t115;
t116 = t120 * qJD(4);
t35 = -t139 * t197 + t143 * t61;
t212 = qJD(3) * t35 + t116;
t128 = t133 * qJD(4);
t63 = t133 * t112;
t210 = -qJD(3) * t63 + t128;
t209 = t100 * t143;
t206 = t139 * t112;
t205 = t139 * t144;
t203 = t140 * qJ(4);
t15 = (t61 * t146 / 0.2e1 - t60 * t144 / 0.2e1 + t143 * t112 / 0.2e1) * t141;
t195 = t15 * qJD(1);
t20 = (-pkin(3) + t112) * t113 - t111 * t63;
t194 = t20 * qJD(1);
t22 = (t215 + t216) * t141;
t193 = t22 * qJD(1);
t24 = -t111 * t205 - t218;
t192 = t24 * qJD(1);
t94 = t139 * t198;
t25 = -t94 - t217;
t191 = t25 * qJD(1);
t190 = t34 * qJD(1);
t189 = t35 * qJD(1);
t59 = t133 * t111;
t188 = t59 * qJD(1);
t187 = t63 * qJD(1);
t185 = qJD(4) * t143;
t184 = qJD(5) * t144;
t183 = qJD(5) * t146;
t182 = t112 * qJD(1);
t181 = t113 * qJD(1);
t110 = t113 * qJD(3);
t178 = t146 * t205;
t135 = t139 * t199;
t176 = -t135 / 0.2e1 - t94 / 0.2e1;
t175 = t143 * t184;
t174 = t143 * t183;
t173 = t141 * t181;
t172 = t144 * t185;
t171 = t146 * t185;
t169 = t201 / 0.2e1;
t168 = t197 / 0.2e1;
t167 = t196 / 0.2e1;
t162 = t144 * t165;
t161 = t146 * t165;
t6 = -t111 * t206 - t51 * t60 + t52 * t61;
t160 = qJD(1) * t6 + qJD(2) * t15;
t10 = t167 + (t169 - t177) * t143 + t176;
t67 = -t135 - t209;
t158 = -qJD(1) * t10 - qJD(3) * t67;
t11 = (-t113 / 0.2e1 + (qJ(4) / 0.2e1 + t222) * t139) * t144 + (t168 + t179) * t143;
t66 = -qJ(4) * t205 - t214;
t157 = -qJD(1) * t11 + qJD(3) * t66;
t126 = t133 * qJ(4);
t148 = t164 / 0.2e1 + t153 / 0.2e1;
t30 = t148 + t227 * (-t140 / 0.2e1 - t139 / 0.2e1);
t156 = qJD(1) * t30 - qJD(3) * t126;
t154 = -qJD(5) + t165;
t151 = t154 * t144;
t150 = t154 * t146;
t127 = qJD(5) * t178;
t125 = t141 * t174;
t124 = t141 * t175;
t114 = t118 * qJD(5);
t109 = t112 * qJD(3);
t106 = t180 * t178;
t103 = t141 * t161;
t102 = t141 * t162;
t101 = qJ(4) * t206;
t98 = t141 * t110;
t83 = t141 * t150;
t82 = t141 * t151;
t73 = t84 * qJD(4);
t65 = t174 - t71;
t64 = t175 - t70;
t31 = t203 / 0.2e1 + t140 * t222 + t148 + t211;
t21 = t22 * qJD(3);
t13 = t209 / 0.2e1 + t217 / 0.2e1 + t143 * t169 + t167 - t176;
t12 = -t214 / 0.2e1 - t218 / 0.2e1 + t143 * t168 - t200 / 0.2e1 - t227 * t205 / 0.2e1;
t5 = qJD(3) * t15 + t73;
t3 = t147 - t152;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t110, t109, 0, 0, 0, 0, 0, 0, 0, 0, -t143 * t110, t98, t210, qJD(3) * t20 + qJD(4) * t59, -t127, t114, t124, t127, t125, 0, -qJD(5) * t25 + t213, qJD(5) * t24 + t212, -t21, qJD(3) * t6 + qJD(4) * t14; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t110 - t181, t109 + t182, 0, 0, 0, 0, 0, 0, 0, 0, -t113 * t165, t98 + t173, -t187 + t210, t194 + (-pkin(3) * t113 - t112 * t203 - t101) * qJD(3) + t31 * qJD(4), -t127, t114, t124, t127, t125, 0, qJD(5) * t13 - t190 + t213, qJD(5) * t12 + t189 + t212, -t21 - t193, (t100 * t61 - t60 * t99 - t101) * qJD(3) + t3 * qJD(4) + t160; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t228, qJD(3) * t31 + t188, 0, 0, 0, 0, 0, 0, t70, t71, 0, qJD(3) * t3 + t225; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t106, t229, t82, t106, t83, 0, qJD(3) * t13 - qJD(5) * t52 - t191, qJD(3) * t12 + qJD(5) * t51 + t192, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t195 + t73; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t230; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t141 * t183, t141 * t184, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t181, -t182, 0, 0, 0, 0, 0, 0, 0, 0, t143 * t181, -t173, t128 + t187, -qJD(4) * t30 - t194, -t127, t114, t124, t127, t125, 0, -qJD(5) * t10 + t115 + t190, -qJD(5) * t11 + t116 - t189, t193, qJD(4) * t4 - t160; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t195 + t73; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t128, t126 * qJD(4), -t127, t114, t124, t127, t125, 0, -qJD(5) * t67 + t115, qJD(5) * t66 + t116, 0, t43 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t228, -t156, 0, 0, 0, 0, 0, 0, t70, t71, 0, t226; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t106, t229, t82, t106, t83, 0, -qJD(5) * t100 + t158, qJD(5) * t99 + t157, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t228, qJD(3) * t30 - t188, 0, 0, 0, 0, 0, 0, t64, t65, 0, -qJD(3) * t4 - t225; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t230; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t228, t156, 0, 0, 0, 0, 0, 0, t64, t65, 0, -t226; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t151, t150, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t106, -t229, -t102, -t106, -t103, 0, qJD(3) * t10 - t172 + t191, qJD(3) * t11 - t171 - t192, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t106, -t229, -t102, -t106, -t103, 0, -t158 - t172, -t157 - t171, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t162, -t161, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t1;
