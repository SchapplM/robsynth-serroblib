% Calculate inertial parameters regressor of coriolis matrix for
% S5RRPPR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d5,theta3,theta4]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2022-01-20 10:06
% Revision: fd3771346c4aea32fdeb66112c511235427c26a7 (2022-01-20)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRPPR2_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPPR2_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPPR2_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRPPR2_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2022-01-20 10:05:57
% EndTime: 2022-01-20 10:06:00
% DurationCPUTime: 1.79s
% Computational Cost: add. (2666->168), mult. (5349->245), div. (0->0), fcn. (4603->8), ass. (0->161)
t186 = qJD(1) + qJD(2);
t142 = sin(pkin(9));
t144 = cos(pkin(9));
t148 = cos(qJ(5));
t234 = t148 ^ 2;
t146 = sin(qJ(5));
t235 = t146 ^ 2;
t90 = (t234 / 0.2e1 + t235 / 0.2e1 - 0.1e1 / 0.2e1) * t144 * t142;
t242 = t186 * t90;
t140 = t142 ^ 2;
t121 = (-t234 + t235) * t140;
t241 = t186 * t121;
t141 = t144 ^ 2;
t136 = t140 + t141;
t122 = t136 * t146;
t82 = t186 * t122;
t123 = t136 * t148;
t83 = t186 * t123;
t240 = t186 * t136;
t168 = t186 * t144;
t143 = sin(pkin(8));
t149 = cos(qJ(2));
t181 = t149 * pkin(1) + pkin(2);
t145 = cos(pkin(8));
t147 = sin(qJ(2));
t209 = t145 * t147;
t167 = pkin(1) * t209 + t143 * t181;
t110 = qJ(4) + t167;
t138 = t143 * pkin(2) + qJ(4);
t239 = t138 + t110;
t192 = t90 * qJD(3);
t215 = t140 * t138;
t180 = -t145 * pkin(2) - pkin(3);
t236 = -t144 * pkin(4) - t142 * pkin(7);
t154 = t180 + t236;
t210 = t144 * t146;
t78 = t138 * t210 - t148 * t154;
t203 = t148 * t138;
t79 = t144 * t203 + t146 * t154;
t28 = t215 + (t146 * t78 + t79 * t148) * t144;
t212 = t143 * t147;
t153 = -pkin(1) * t212 + t145 * t181;
t152 = -pkin(3) - t153;
t151 = t152 + t236;
t206 = t148 * t110;
t54 = t144 * t206 + t146 * t151;
t184 = t79 / 0.2e1 + t54 / 0.2e1;
t53 = t110 * t210 - t148 * t151;
t185 = t78 / 0.2e1 + t53 / 0.2e1;
t216 = t140 * t110;
t219 = t215 / 0.2e1 + t216 / 0.2e1;
t150 = (t185 * t146 + t184 * t148) * t144 + t219;
t118 = (t145 * t149 - t212) * pkin(1);
t204 = t148 * t118;
t211 = t143 * t149;
t117 = (t209 + t211) * pkin(1);
t208 = t146 * t117;
t63 = t144 * t204 + t208;
t224 = t63 * t146;
t205 = t148 * t117;
t207 = t146 * t118;
t62 = -t144 * t207 + t205;
t225 = t62 * t148;
t158 = -t225 / 0.2e1 - t224 / 0.2e1;
t4 = t150 + t158;
t238 = t4 * qJD(1) + t28 * qJD(2) + t192;
t14 = t216 + (t53 * t146 + t54 * t148) * t144;
t237 = t14 * qJD(1) + t192;
t233 = t110 / 0.2e1;
t229 = pkin(1) * qJD(1);
t228 = pkin(1) * qJD(2);
t227 = t53 * t144;
t226 = t54 * t144;
t223 = t78 * t144;
t222 = t79 * t144;
t115 = t122 * qJD(4);
t41 = -t140 * t207 + t62 * t144;
t221 = -t41 * qJD(2) + t115;
t116 = t123 * qJD(4);
t42 = t140 * t204 + t63 * t144;
t220 = t42 * qJD(2) + t116;
t132 = t136 * qJD(4);
t73 = t136 * t118;
t218 = t73 * qJD(2) + t132;
t214 = t140 * t146;
t213 = t141 * t138;
t20 = (t63 * t148 / 0.2e1 - t62 * t146 / 0.2e1 - t144 * t118 / 0.2e1) * t142;
t202 = t20 * qJD(1);
t21 = t110 * t73 + t152 * t117;
t201 = t21 * qJD(1);
t23 = (t224 + t225) * t142;
t200 = t23 * qJD(1);
t29 = -t110 * t214 - t227;
t199 = t29 * qJD(1);
t94 = t140 * t206;
t30 = -t94 - t226;
t198 = t30 * qJD(1);
t40 = -t153 * t117 + t167 * t118;
t197 = t40 * qJD(1);
t196 = t41 * qJD(1);
t195 = t42 * qJD(1);
t59 = t136 * t110;
t194 = t59 * qJD(1);
t193 = t73 * qJD(1);
t191 = qJD(4) * t144;
t190 = qJD(5) * t146;
t189 = qJD(5) * t148;
t188 = t117 * qJD(1);
t112 = t117 * qJD(2);
t187 = t118 * qJD(1);
t183 = t148 * t214;
t124 = t140 * t203;
t182 = -t124 / 0.2e1 - t94 / 0.2e1;
t179 = t144 * t190;
t178 = t144 * t189;
t177 = t142 * t188;
t176 = t146 * t191;
t175 = t148 * t191;
t173 = -t207 / 0.2e1;
t172 = t205 / 0.2e1;
t171 = -t204 / 0.2e1;
t169 = pkin(1) * t186;
t166 = t146 * t168;
t165 = t148 * t168;
t6 = t118 * t216 - t53 * t62 + t54 * t63;
t163 = t6 * qJD(1) + t20 * qJD(3);
t10 = t172 + (t173 - t184) * t144 + t182;
t56 = -t124 - t222;
t162 = -t10 * qJD(1) - t56 * qJD(2);
t11 = (-t117 / 0.2e1 + (t138 / 0.2e1 + t233) * t140) * t146 + (t171 + t185) * t144;
t55 = -t138 * t214 - t223;
t161 = -t11 * qJD(1) + t55 * qJD(2);
t104 = t136 * t138;
t155 = (t211 / 0.2e1 + t209 / 0.2e1) * pkin(1);
t31 = t155 + t239 * (-t141 / 0.2e1 - t140 / 0.2e1);
t160 = t31 * qJD(1) - t104 * qJD(2);
t159 = -qJD(5) + t168;
t157 = t159 * t146;
t156 = t159 * t148;
t131 = qJD(5) * t183;
t130 = t142 * t178;
t129 = t142 * t179;
t114 = t121 * qJD(5);
t113 = t118 * qJD(2);
t107 = t142 * t112;
t102 = t186 * t183;
t101 = t142 * t165;
t100 = t142 * t166;
t93 = t118 * t215;
t89 = t142 * t156;
t88 = t142 * t157;
t85 = t90 * qJD(4);
t72 = t178 - t83;
t71 = t179 - t82;
t32 = t213 / 0.2e1 + t141 * t233 + t155 + t219;
t22 = t23 * qJD(2);
t13 = t222 / 0.2e1 + t226 / 0.2e1 + t144 * t173 + t172 - t182;
t12 = -t223 / 0.2e1 - t227 / 0.2e1 + t144 * t171 - t208 / 0.2e1 - t239 * t214 / 0.2e1;
t5 = t20 * qJD(2) + t85;
t3 = t150 - t158;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t147 * t228, -t149 * t228, 0, 0, 0, 0, 0, 0, 0, 0, -t112, -t113, 0, t40 * qJD(2), 0, 0, 0, 0, 0, 0, -t144 * t112, t107, t218, t21 * qJD(2) + t59 * qJD(4), -t131, t114, t129, t131, t130, 0, -t30 * qJD(5) + t221, t29 * qJD(5) + t220, -t22, t6 * qJD(2) + t14 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t147 * t169, -t149 * t169, 0, 0, 0, 0, 0, 0, 0, 0, -t112 - t188, -t113 - t187, 0, t197 + (-t117 * t145 + t118 * t143) * qJD(2) * pkin(2), 0, 0, 0, 0, 0, 0, -t117 * t168, t107 + t177, t193 + t218, t201 + (t117 * t180 + t118 * t213 + t93) * qJD(2) + t32 * qJD(4), -t131, t114, t129, t131, t130, 0, t13 * qJD(5) - t196 + t221, t12 * qJD(5) + t195 + t220, -t22 - t200, (-t62 * t78 + t63 * t79 + t93) * qJD(2) + t3 * qJD(4) + t163; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t240, t32 * qJD(2) + t194, 0, 0, 0, 0, 0, 0, t82, t83, 0, t3 * qJD(2) + t237; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t102, t241, t88, t102, t89, 0, t13 * qJD(2) - t54 * qJD(5) - t198, t12 * qJD(2) + t53 * qJD(5) + t199, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t147 * t229, t149 * t229, 0, 0, 0, 0, 0, 0, 0, 0, t188, t187, 0, -t197, 0, 0, 0, 0, 0, 0, t144 * t188, -t177, t132 - t193, -t31 * qJD(4) - t201, -t131, t114, t129, t131, t130, 0, -t10 * qJD(5) + t115 + t196, -t11 * qJD(5) + t116 - t195, t200, t4 * qJD(4) - t163; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t132, t104 * qJD(4), -t131, t114, t129, t131, t130, 0, -t56 * qJD(5) + t115, t55 * qJD(5) + t116, 0, t28 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t202 + t85; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t240, -t160, 0, 0, 0, 0, 0, 0, t82, t83, 0, t238; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t102, t241, t88, t102, t89, 0, -t79 * qJD(5) + t162, t78 * qJD(5) + t161, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t202 + t85; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t242; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t142 * t189, t142 * t190, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t240, t31 * qJD(2) - t194, 0, 0, 0, 0, 0, 0, t71, t72, 0, -t4 * qJD(2) - t237; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t240, t160, 0, 0, 0, 0, 0, 0, t71, t72, 0, -t238; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t242; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t157, t156, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t102, -t241, -t100, -t102, -t101, 0, t10 * qJD(2) - t176 + t198, t11 * qJD(2) - t175 - t199, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t102, -t241, -t100, -t102, -t101, 0, -t162 - t176, -t161 - t175, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t166, -t165, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t1;
