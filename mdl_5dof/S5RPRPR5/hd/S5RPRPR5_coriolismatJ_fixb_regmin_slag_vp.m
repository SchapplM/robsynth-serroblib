% Calculate minimal parameter regressor of coriolis matrix for
% S5RPRPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d5,theta2,theta4]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x24]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2021-01-15 11:56
% Revision: d12c3222fdeb2c5f3b3c8fa5751e113be2fc3aae (2021-01-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPRPR5_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRPR5_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRPR5_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RPRPR5_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2021-01-15 11:55:17
% EndTime: 2021-01-15 11:55:28
% DurationCPUTime: 2.70s
% Computational Cost: add. (2980->244), mult. (6898->367), div. (0->0), fcn. (7440->8), ass. (0->218)
t311 = qJD(3) + qJD(5);
t167 = sin(pkin(9));
t169 = cos(pkin(9));
t168 = sin(pkin(8));
t174 = cos(qJ(3));
t254 = t174 * t168;
t172 = sin(qJ(3));
t264 = t168 * t172;
t133 = -t167 * t264 + t169 * t254;
t173 = cos(qJ(5));
t124 = t173 * t133;
t262 = t169 * t172;
t265 = t167 * t174;
t149 = t262 + t265;
t130 = t149 * t168;
t171 = sin(qJ(5));
t259 = t171 * t130;
t305 = t124 - t259;
t77 = t173 * t130 + t171 * t133;
t310 = -t305 ^ 2 + t77 ^ 2;
t318 = t310 * qJD(1);
t150 = pkin(3) * t264 + t168 * qJ(2);
t103 = t130 * pkin(4) + t150;
t317 = t103 * t77;
t170 = cos(pkin(8));
t228 = qJD(1) * t170;
t28 = t77 * t228;
t316 = qJD(3) * t77;
t315 = t103 * t305;
t70 = t305 * t228;
t314 = t77 * qJD(1);
t313 = t77 * qJD(5);
t261 = t169 * t174;
t266 = t167 * t172;
t145 = t261 - t266;
t69 = -t171 * t145 - t173 * t149;
t180 = t69 * t170;
t132 = t149 * t170;
t256 = t173 * t132;
t135 = t145 * t170;
t257 = t171 * t135;
t182 = -t257 / 0.2e1 - t256 / 0.2e1;
t178 = t180 / 0.2e1 + t182;
t298 = t178 * qJD(1);
t312 = t311 * t69 - t298;
t234 = t305 * qJD(1);
t192 = t173 * t145 - t171 * t149;
t181 = t192 * t170;
t255 = t173 * t135;
t258 = t171 * t132;
t183 = t258 / 0.2e1 - t255 / 0.2e1;
t177 = -t181 / 0.2e1 + t183;
t309 = qJD(2) * t177 + qJD(4) * t77;
t299 = t177 * qJD(1);
t308 = -t311 * t192 - t299;
t307 = -t169 / 0.2e1;
t151 = -pkin(2) * t170 - t168 * pkin(6) - pkin(1);
t144 = t174 * t151;
t196 = -qJ(4) * t254 + t144;
t276 = qJ(2) * t172;
t100 = (-pkin(3) - t276) * t170 + t196;
t127 = -t174 * t170 * qJ(2) - t172 * t151;
t108 = -qJ(4) * t264 - t127;
t263 = t169 * t108;
t60 = t167 * t100 + t263;
t207 = t170 * t276;
t107 = t196 - t207;
t63 = -t167 * t107 - t263;
t306 = t60 + t63;
t175 = -t180 / 0.2e1 + t182;
t303 = qJD(2) * t175;
t176 = t181 / 0.2e1 + t183;
t302 = qJD(2) * t176;
t300 = qJD(2) * t178;
t202 = t124 / 0.2e1;
t297 = t145 / 0.2e1;
t296 = -t149 / 0.2e1;
t295 = t167 / 0.2e1;
t294 = t168 / 0.2e1;
t293 = t170 / 0.2e1;
t292 = pkin(3) * t167;
t291 = t130 * pkin(7);
t290 = t133 * pkin(7);
t289 = pkin(3) * qJD(3);
t267 = t167 * t108;
t59 = t169 * t100 - t267;
t33 = -t170 * pkin(4) - t290 + t59;
t288 = t171 * t33;
t38 = t60 - t291;
t287 = t171 * t38;
t39 = t63 + t291;
t286 = t171 * t39;
t64 = t169 * t107 - t267;
t40 = t64 - t290;
t285 = t171 * t40;
t284 = t173 * t33;
t283 = t173 * t38;
t282 = t173 * t39;
t281 = t173 * t40;
t179 = (t132 * t307 + t135 * t295) * pkin(3);
t5 = (-t64 / 0.2e1 + t59 / 0.2e1) * t149 + (-t60 / 0.2e1 - t63 / 0.2e1) * t145 + t179;
t280 = t5 * qJD(1);
t7 = -t306 * t133 + (t59 - t64) * t130;
t279 = t7 * qJD(1);
t18 = t282 - t285;
t213 = pkin(3) * t254;
t189 = t133 * pkin(4) + t213;
t8 = t18 * t170 - t189 * t77 - t315;
t278 = t8 * qJD(1);
t19 = t281 + t286;
t9 = t19 * t170 + t189 * t305 - t317;
t277 = t9 * qJD(1);
t10 = t150 * t213 + t59 * t63 + t60 * t64;
t275 = t10 * qJD(1);
t14 = -t284 + t287;
t11 = -t14 * t170 - t317;
t274 = t11 * qJD(1);
t15 = -t283 - t288;
t12 = t15 * t170 - t315;
t273 = t12 * qJD(1);
t13 = -t59 * t132 + t60 * t135 + t150 * t168;
t272 = t13 * qJD(1);
t162 = t169 * pkin(3) + pkin(4);
t142 = -t173 * t162 + t171 * t292;
t271 = t142 * t170;
t143 = t171 * t162 + t173 * t292;
t270 = t143 * t170;
t165 = t168 ^ 2;
t268 = t165 * t174;
t17 = -t60 * t130 - t59 * t133;
t260 = t17 * qJD(1);
t24 = -t130 * t213 - t150 * t133 + t63 * t170;
t252 = t24 * qJD(1);
t25 = -t150 * t130 + t133 * t213 + t64 * t170;
t251 = t25 * qJD(1);
t29 = (-t256 - t257) * t170 - t168 * t77;
t250 = t29 * qJD(1);
t30 = (t255 - t258) * t170 + t168 * t305;
t249 = t30 * qJD(1);
t55 = -t135 * t130 + t132 * t133;
t244 = t55 * qJD(1);
t187 = -t130 * t296 + t133 * t297;
t57 = t294 + t187;
t243 = t57 * qJD(1);
t62 = 0.2e1 * t202 - t259;
t241 = t62 * qJD(1);
t186 = -t130 * t295 + t133 * t307;
t66 = (-t254 / 0.2e1 + t186) * pkin(3);
t240 = t66 * qJD(1);
t73 = t202 - t124 / 0.2e1;
t237 = t73 * qJD(1);
t74 = -t168 * t130 - t132 * t170;
t236 = t74 * qJD(1);
t75 = t168 * t133 + t135 * t170;
t235 = t75 * qJD(1);
t233 = t305 * qJD(3);
t81 = t130 ^ 2 + t133 ^ 2;
t231 = t81 * qJD(1);
t185 = -t265 / 0.2e1 - t262 / 0.2e1;
t86 = (t296 + t185) * t170;
t230 = t86 * qJD(1);
t184 = -t261 / 0.2e1 + t266 / 0.2e1;
t87 = (-t145 / 0.2e1 + t184) * t170;
t229 = t87 * qJD(1);
t159 = t170 ^ 2 + t165;
t227 = qJD(2) * t170;
t226 = qJD(3) * t170;
t225 = qJD(4) * t170;
t197 = -t144 + t207;
t101 = t165 * t276 + t170 * t197;
t224 = t101 * qJD(1);
t102 = qJ(2) * t268 - t127 * t170;
t223 = t102 * qJD(1);
t222 = t130 * qJD(1);
t221 = t130 * qJD(4);
t220 = t133 * qJD(1);
t219 = t133 * qJD(4);
t146 = t159 * t172;
t218 = t146 * qJD(1);
t147 = t159 * t174;
t217 = t147 * qJD(1);
t148 = (t172 ^ 2 - t174 ^ 2) * t165;
t216 = t148 * qJD(1);
t156 = t159 * qJ(2);
t215 = t156 * qJD(1);
t214 = t159 * qJD(1);
t212 = t77 * t234;
t211 = t305 * t314;
t210 = t39 / 0.2e1 + t38 / 0.2e1;
t209 = -t40 / 0.2e1 + t33 / 0.2e1;
t208 = t172 * t268;
t206 = t172 * t226;
t205 = t174 * t226;
t204 = t172 * t228;
t203 = t174 * t228;
t201 = t73 * qJD(5) + t70;
t200 = -qJD(3) + t228;
t199 = -qJD(5) + t228;
t198 = qJD(1) * t208;
t1 = -t270 / 0.2e1 + t210 * t173 + t209 * t171;
t195 = t1 * qJD(1) + t143 * qJD(3);
t2 = t271 / 0.2e1 + t209 * t173 - t210 * t171;
t194 = t2 * qJD(1) - t142 * qJD(3);
t193 = -t313 - t316;
t191 = t200 * t172;
t190 = t200 * t174;
t188 = t62 * qJD(5) + t233 - t70;
t129 = t143 * qJD(5);
t128 = t142 * qJD(5);
t89 = t149 * t293 + t185 * t170;
t88 = t145 * t293 + t184 * t170;
t65 = t213 / 0.2e1 + t186 * pkin(3);
t58 = t294 - t187;
t20 = t200 * t77 - t313;
t6 = t64 * t149 / 0.2e1 + t59 * t296 + t179 + t306 * t297;
t4 = t270 / 0.2e1 - t283 / 0.2e1 - t288 / 0.2e1 - t285 / 0.2e1 + t282 / 0.2e1;
t3 = -t271 / 0.2e1 + t287 / 0.2e1 - t284 / 0.2e1 - t281 / 0.2e1 - t286 / 0.2e1;
t16 = [0, 0, 0, 0, t159 * qJD(2), t156 * qJD(2), -qJD(3) * t208, t148 * qJD(3), t168 * t206, t168 * t205, 0, t146 * qJD(2) + t102 * qJD(3), t147 * qJD(2) - t101 * qJD(3), -t74 * qJD(2) - t24 * qJD(3) + t170 * t219, t75 * qJD(2) + t25 * qJD(3) - t170 * t221, t55 * qJD(2) + t7 * qJD(3) + t81 * qJD(4), t13 * qJD(2) + t10 * qJD(3) + t17 * qJD(4), t193 * t305, t311 * t310, -t193 * t170, (qJD(5) * t305 + t233) * t170, 0, -t29 * qJD(2) - t8 * qJD(3) - t12 * qJD(5) + t225 * t305, t30 * qJD(2) + t9 * qJD(3) + t11 * qJD(5) - t225 * t77; 0, 0, 0, 0, t214, t215, 0, 0, 0, 0, 0, t218, t217, t89 * qJD(3) - t236, t88 * qJD(3) + t235, t244, t272 + (-t132 * t145 + t135 * t149) * qJD(2) + t6 * qJD(3) + t58 * qJD(4), 0, 0, 0, 0, 0, t175 * t311 - t250, t176 * t311 + t249; 0, 0, 0, 0, 0, 0, -t198, t216, t168 * t191, t168 * t190, 0, t127 * qJD(3) + t223, qJD(3) * t197 - t224, t89 * qJD(2) + t63 * qJD(3) - t252, t88 * qJD(2) - t64 * qJD(3) + t251, t279 + (t130 * t169 - t133 * t167) * t289, t275 + t6 * qJD(2) + t65 * qJD(4) + (t167 * t64 + t169 * t63) * t289, -t211, t318, t20, -t188, 0, t18 * qJD(3) + t4 * qJD(5) - t278 + t303, -t19 * qJD(3) + t3 * qJD(5) + t277 + t302; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t170 * t220, -t170 * t222, t231, t58 * qJD(2) + t65 * qJD(3) + t260, 0, 0, 0, 0, 0, t201, -t28; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t212, t318, t199 * t77 - t316, -t62 * qJD(3) + t199 * t305, 0, t4 * qJD(3) + t73 * qJD(4) + t15 * qJD(5) - t273 + t303, t3 * qJD(3) + t14 * qJD(5) + t274 + t302; 0, 0, 0, 0, -t214, -t215, 0, 0, 0, 0, 0, t206 - t218, t205 - t217, -t86 * qJD(3) + t236, -t87 * qJD(3) - t235, -t244, -t5 * qJD(3) - t57 * qJD(4) - t272, 0, 0, 0, 0, 0, -t178 * t311 + t250, -t177 * t311 - t249; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t191, t190, -t149 * qJD(3) - t230, -t145 * qJD(3) - t229, 0, -t280 + (t145 * t167 - t149 * t169) * t289, 0, 0, 0, 0, 0, t312, t308; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t243, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t312, t308; 0, 0, 0, 0, 0, 0, t198, -t216, -t168 * t204, -t168 * t203, 0, -t172 * t227 - t223, -t174 * t227 + t224, t86 * qJD(2) - t219 + t252, t87 * qJD(2) + t221 - t251, -t279, t5 * qJD(2) + t66 * qJD(4) - t275, t211, -t318, -t28, -t201, 0, -qJD(4) * t305 - t1 * qJD(5) + t278 + t300, -t2 * qJD(5) - t277 + t309; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t204, -t203, t230, t229, 0, t280, 0, 0, 0, 0, 0, t298, t299; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t129, t128; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t220, t222, 0, t240, 0, 0, 0, 0, 0, -t234, t314; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t237, 0, -t129 - t195, t128 - t194; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t200 * t133, t200 * t130, -t231, t57 * qJD(2) - t66 * qJD(3) - t260, 0, 0, 0, 0, 0, t188, t20; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t243, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t220, -t222, 0, -t240, 0, 0, 0, 0, 0, t234, -t314; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t241, -t314; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t212, -t318, -t28, t73 * qJD(3) - t70, 0, t1 * qJD(3) - t62 * qJD(4) + t273 + t300, t2 * qJD(3) - t274 + t309; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t298, t299; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t237, 0, t195, t194; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t241, t314; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t16;
