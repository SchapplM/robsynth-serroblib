% Calculate inertial parameters regressor of coriolis matrix for
% S5RPRPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d5,theta2,theta4]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2022-01-23 09:26
% Revision: fd3771346c4aea32fdeb66112c511235427c26a7 (2022-01-20)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPRPR5_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRPR5_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRPR5_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RPRPR5_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2022-01-23 09:26:04
% EndTime: 2022-01-23 09:26:13
% DurationCPUTime: 5.33s
% Computational Cost: add. (8127->322), mult. (17524->453), div. (0->0), fcn. (19103->8), ass. (0->276)
t250 = cos(pkin(9));
t254 = cos(qJ(3));
t358 = t250 * t254;
t248 = sin(pkin(9));
t253 = sin(qJ(3));
t362 = t248 * t253;
t226 = t358 - t362;
t359 = t250 * t253;
t361 = t248 * t254;
t230 = t359 + t361;
t252 = sin(qJ(5));
t398 = cos(qJ(5));
t294 = -t398 * t226 + t252 * t230;
t434 = qJD(3) + qJD(5);
t251 = cos(pkin(8));
t216 = t226 * t251;
t304 = t398 * t216;
t213 = t230 * t251;
t356 = t252 * t213;
t263 = t356 / 0.2e1 - t304 / 0.2e1;
t421 = t294 * t251;
t428 = t421 / 0.2e1 + t263;
t439 = qJD(1) * t428;
t442 = t434 * t294 - t439;
t176 = t252 * t226 + t398 * t230;
t305 = t398 * t213;
t355 = t252 * t216;
t262 = -t355 / 0.2e1 - t305 / 0.2e1;
t423 = t176 * t251;
t427 = -t423 / 0.2e1 + t262;
t440 = qJD(1) * t427;
t441 = -t434 * t176 - t440;
t426 = t423 / 0.2e1 + t262;
t438 = qJD(2) * t426;
t437 = qJD(2) * t427;
t429 = -t421 / 0.2e1 + t263;
t436 = qJD(2) * t429;
t249 = sin(pkin(8));
t211 = t230 * t249;
t351 = t254 * t249;
t353 = t253 * t249;
t214 = -t248 * t353 + t250 * t351;
t147 = t398 * t211 + t252 * t214;
t369 = t147 ^ 2;
t202 = t398 * t214;
t357 = t252 * t211;
t410 = t202 - t357;
t370 = t410 ^ 2;
t430 = t369 - t370;
t435 = t430 * qJD(1);
t433 = qJD(2) * t428 + qJD(4) * t147;
t285 = -pkin(1) + (-pkin(6) - qJ(4)) * t249;
t273 = t285 * t254;
t354 = t253 * qJ(2);
t274 = -t254 * pkin(2) - pkin(3) - t354;
t258 = t274 * t251 + t273;
t307 = -pkin(6) * t249 - pkin(1);
t397 = pkin(2) * t251;
t279 = -t307 + t397;
t352 = t254 * qJ(2);
t206 = t251 * t352 - t253 * t279;
t242 = qJ(4) * t353;
t260 = -t242 + t206;
t412 = t250 * t260;
t111 = t248 * t258 + t412;
t395 = pkin(7) * t211;
t78 = t111 - t395;
t390 = t252 * t78;
t393 = t214 * pkin(7);
t257 = -t248 * (t253 * t307 - t242) - t393 + t250 * t273 + (-t248 * (-t253 * pkin(2) + t352) + t250 * t274 - pkin(4)) * t251;
t69 = t398 * t257;
t46 = -t69 + t390;
t308 = t251 * t354;
t181 = -t308 + (t285 - t397) * t254;
t413 = t248 * t260;
t116 = t250 * t181 - t413;
t81 = t116 - t393;
t310 = t398 * t81;
t115 = -t181 * t248 - t412;
t80 = t115 + t395;
t389 = t252 * t80;
t53 = t310 + t389;
t432 = t46 + t53;
t256 = t252 * t257;
t312 = t398 * t78;
t47 = t312 + t256;
t311 = t398 * t80;
t388 = t252 * t81;
t52 = t311 - t388;
t431 = t47 + t52;
t407 = t176 / 0.2e1;
t406 = -t294 / 0.2e1;
t231 = pkin(3) * t353 + t249 * qJ(2);
t177 = pkin(4) * t211 + t231;
t425 = t147 * t177;
t326 = t410 * qJD(1);
t424 = t147 * t326;
t422 = t177 * t410;
t420 = qJD(3) * t147;
t418 = qJD(5) * t147;
t417 = t147 * qJD(1);
t414 = -t250 / 0.2e1;
t411 = t111 + t115;
t408 = t214 ^ 2;
t405 = -t176 / 0.2e1;
t286 = t202 / 0.2e1;
t306 = pkin(3) * t250 + pkin(4);
t396 = pkin(3) * t248;
t224 = t252 * t306 + t398 * t396;
t404 = -t224 / 0.2e1;
t403 = t226 / 0.2e1;
t402 = -t230 / 0.2e1;
t401 = t248 / 0.2e1;
t400 = t249 / 0.2e1;
t399 = t251 / 0.2e1;
t394 = t214 * pkin(4);
t25 = (t405 + t407) * t410 + (t294 / 0.2e1 + t406) * t147;
t392 = t25 * qJD(3);
t391 = pkin(3) * qJD(3);
t313 = pkin(3) * t351;
t182 = t313 + t394;
t9 = t177 * t182 - t46 * t52 + t47 * t53;
t387 = t9 * qJD(1);
t12 = -t147 * t47 + t410 * t46;
t386 = qJD(1) * t12;
t20 = -t182 * t147 + t251 * t52 - t422;
t385 = qJD(1) * t20;
t21 = t182 * t410 + t251 * t53 - t425;
t384 = qJD(1) * t21;
t27 = -t251 * t46 - t425;
t383 = qJD(1) * t27;
t28 = -t251 * t47 - t422;
t382 = qJD(1) * t28;
t149 = -t305 - t355;
t152 = t304 - t356;
t50 = -t147 * t152 - t149 * t410;
t381 = qJD(1) * t50;
t110 = t250 * t258 - t413;
t51 = -t110 * t214 - t111 * t211;
t380 = qJD(1) * t51;
t64 = t115 * t251 - t211 * t313 - t231 * t214;
t379 = qJD(1) * t64;
t65 = t116 * t251 - t231 * t211 + t214 * t313;
t378 = qJD(1) * t65;
t70 = -t249 * t147 + t149 * t251;
t377 = qJD(1) * t70;
t71 = t152 * t251 + t249 * t410;
t376 = qJD(1) * t71;
t11 = -t149 * t46 + t152 * t47 + t177 * t249;
t371 = t11 * qJD(1);
t261 = (t213 * t414 + t216 * t401) * pkin(3);
t17 = (-t116 / 0.2e1 + t110 / 0.2e1) * t230 + (-t111 / 0.2e1 - t115 / 0.2e1) * t226 + t261;
t368 = t17 * qJD(1);
t19 = -t411 * t214 + (t110 - t116) * t211;
t363 = t19 * qJD(1);
t360 = t25 * qJD(1);
t26 = t110 * t115 + t111 * t116 + t231 * t313;
t350 = t26 * qJD(1);
t45 = -t110 * t213 + t111 * t216 + t231 * t249;
t349 = t45 * qJD(1);
t48 = t369 + t370;
t348 = t48 * qJD(1);
t272 = -t147 * t405 + t406 * t410;
t55 = t400 + t272;
t346 = t55 * qJD(1);
t223 = t252 * t396 - t398 * t306;
t271 = -t410 * t223 / 0.2e1 - t147 * t404;
t240 = t313 / 0.2e1;
t291 = t240 + t394 / 0.2e1;
t57 = t271 + t291;
t345 = t57 * qJD(1);
t246 = t249 ^ 2;
t241 = t251 ^ 2 + t246;
t106 = -t211 * t216 + t213 * t214;
t343 = qJD(1) * t106;
t205 = t254 * t279 + t308;
t125 = t246 * qJ(2) + (t205 * t253 + t206 * t254) * t251;
t342 = qJD(1) * t125;
t143 = -t249 * t211 - t213 * t251;
t341 = qJD(1) * t143;
t144 = t214 * t249 + t216 * t251;
t340 = qJD(1) * t144;
t172 = t206 * t251 + t246 * t352;
t339 = qJD(1) * t172;
t338 = qJD(1) * t251;
t337 = qJD(2) * t251;
t336 = qJD(3) * t410;
t335 = qJD(3) * t214;
t334 = qJD(3) * t251;
t333 = qJD(4) * t251;
t269 = -t211 * t402 + t214 * t403;
t108 = t400 + t269;
t332 = t108 * qJD(1);
t114 = 0.2e1 * t286 - t357;
t330 = t114 * qJD(1);
t208 = t211 ^ 2;
t126 = t208 - t408;
t329 = t126 * qJD(1);
t268 = -t211 * t401 + t214 * t414;
t129 = (-t351 / 0.2e1 + t268) * pkin(3);
t328 = t129 * qJD(1);
t142 = t286 - t202 / 0.2e1;
t327 = t142 * qJD(1);
t153 = t208 + t408;
t324 = t153 * qJD(1);
t267 = -t361 / 0.2e1 - t359 / 0.2e1;
t158 = (t402 + t267) * t251;
t323 = t158 * qJD(1);
t266 = -t358 / 0.2e1 + t362 / 0.2e1;
t159 = (-t226 / 0.2e1 + t266) * t251;
t322 = t159 * qJD(1);
t171 = t205 * t251 + t246 * t354;
t321 = t171 * qJD(1);
t320 = t211 * qJD(1);
t319 = t214 * qJD(1);
t227 = t241 * t253;
t318 = t227 * qJD(1);
t228 = t241 * t254;
t317 = t228 * qJD(1);
t229 = (t253 ^ 2 - t254 ^ 2) * t246;
t316 = t229 * qJD(1);
t236 = t241 * qJ(2);
t315 = t236 * qJD(1);
t314 = t241 * qJD(1);
t309 = t246 * t253 * t254;
t303 = t253 * t334;
t302 = t254 * t334;
t299 = t410 * t417;
t298 = t211 * t319;
t297 = t211 * t335;
t296 = t253 * t338;
t295 = t254 * t338;
t192 = t251 * t319;
t293 = -t192 + t335;
t139 = t251 * t326;
t292 = qJD(5) * t142 + t139;
t290 = -qJD(3) + t338;
t289 = -qJD(5) + t338;
t288 = qJD(3) * t309;
t287 = -t310 / 0.2e1;
t284 = t69 / 0.2e1 + t223 * t399;
t259 = t431 * t406 + t432 * t407;
t270 = t149 * t223 / 0.2e1 + t152 * t404;
t2 = t259 + t270;
t283 = t2 * qJD(1);
t4 = -t432 * t147 - t431 * t410;
t282 = t4 * qJD(1) + t25 * qJD(2);
t255 = t224 * t399 - t256 / 0.2e1 - t312 / 0.2e1;
t264 = -t388 / 0.2e1 + t311 / 0.2e1;
t13 = -t255 + t264;
t281 = qJD(1) * t13 + qJD(3) * t224;
t14 = t287 + (-t80 / 0.2e1 - t78 / 0.2e1) * t252 + t284;
t280 = qJD(1) * t14 - qJD(3) * t223;
t278 = t290 * t253;
t277 = t290 * t254;
t276 = qJD(5) * t410 + t336;
t275 = -t418 - t420;
t265 = qJD(5) * t114 - t139 + t336;
t237 = qJD(1) * t309;
t210 = t224 * qJD(5);
t209 = t223 * qJD(5);
t191 = t251 * t320;
t161 = t230 * t399 + t267 * t251;
t160 = t226 * t399 + t266 * t251;
t145 = -qJD(3) * t211 + t191;
t128 = t268 * pkin(3) + t240;
t109 = t400 - t269;
t68 = t251 * t417;
t58 = -t271 + t291;
t56 = t400 - t272;
t54 = t147 * t290 - t418;
t18 = t116 * t230 / 0.2e1 + t110 * t402 + t261 + t411 * t403;
t16 = t255 + t264;
t15 = t390 / 0.2e1 + t287 - t389 / 0.2e1 - t284;
t1 = t259 - t270;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t241 * qJD(2), t236 * qJD(2), -t288, t229 * qJD(3), t249 * t303, t288, t249 * t302, 0, qJD(2) * t227 + qJD(3) * t172, qJD(2) * t228 - qJD(3) * t171, 0, qJD(2) * t125, -t297, t126 * qJD(3), t211 * t334, t297, t214 * t334, 0, -qJD(2) * t143 - qJD(3) * t64 + t214 * t333, qJD(2) * t144 + qJD(3) * t65 - t211 * t333, qJD(2) * t106 + qJD(3) * t19 + qJD(4) * t153, qJD(2) * t45 + qJD(3) * t26 + qJD(4) * t51, t275 * t410, t434 * t430, -t275 * t251, t276 * t147, t276 * t251, 0, -qJD(2) * t70 - qJD(3) * t20 - qJD(5) * t28 + t333 * t410, qJD(2) * t71 + qJD(3) * t21 + qJD(5) * t27 - t147 * t333, qJD(2) * t50 + qJD(3) * t4 + qJD(4) * t48, qJD(2) * t11 + qJD(3) * t9 + qJD(4) * t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t314, t315, 0, 0, 0, 0, 0, 0, t318, t317, 0, t342, 0, 0, 0, 0, 0, 0, qJD(3) * t161 - t341, qJD(3) * t160 + t340, t343, t349 + (-t213 * t226 + t216 * t230) * qJD(2) + t18 * qJD(3) + t109 * qJD(4), 0, 0, 0, 0, 0, 0, t434 * t426 - t377, t434 * t429 + t376, t381 + t392, t371 + (-t149 * t294 + t152 * t176) * qJD(2) + t1 * qJD(3) + t56 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t237, t316, t249 * t278, t237, t249 * t277, 0, -qJD(3) * t206 + t339, qJD(3) * t205 - t321, 0, 0, -t298, t329, t145, t298, -t293, 0, qJD(2) * t161 + qJD(3) * t115 - t379, qJD(2) * t160 - qJD(3) * t116 + t378, t363 + (t211 * t250 - t214 * t248) * t391, t350 + t18 * qJD(2) + t128 * qJD(4) + (t115 * t250 + t116 * t248) * t391, -t299, t435, t54, t424, -t265, 0, qJD(3) * t52 + qJD(5) * t16 - t385 + t438, -qJD(3) * t53 + qJD(5) * t15 + t384 + t436, (-t147 * t223 - t224 * t410) * qJD(3) + t282, t387 + t1 * qJD(2) + (-t223 * t52 + t224 * t53) * qJD(3) + t58 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t192, -t191, t324, qJD(2) * t109 + qJD(3) * t128 + t380, 0, 0, 0, 0, 0, 0, t292, -t68, t348, qJD(2) * t56 + qJD(3) * t58 + t386; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t424, t435, t147 * t289 - t420, t424, -qJD(3) * t114 + t289 * t410, 0, qJD(3) * t16 + qJD(4) * t142 - qJD(5) * t47 - t382 + t438, qJD(3) * t15 + qJD(5) * t46 + t383 + t436, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t314, -t315, 0, 0, 0, 0, 0, 0, t303 - t318, t302 - t317, 0, -t342, 0, 0, 0, 0, 0, 0, -qJD(3) * t158 + t341, -qJD(3) * t159 - t340, -t343, -qJD(3) * t17 - qJD(4) * t108 - t349, 0, 0, 0, 0, 0, 0, -t434 * t427 + t377, -t434 * t428 - t376, -t381 + t392, qJD(3) * t2 - qJD(4) * t55 - t371; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t278, t277, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t230 - t323, -qJD(3) * t226 - t322, 0, -t368 + (t226 * t248 - t230 * t250) * t391, 0, 0, 0, 0, 0, 0, t441, t442, t360, (t176 * t223 - t224 * t294) * qJD(3) + t283; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t332, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t346; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t441, t442, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t237, -t316, -t249 * t296, -t237, -t249 * t295, 0, -t253 * t337 - t339, -t254 * t337 + t321, 0, 0, t298, -t329, -t191, -t298, -t192, 0, qJD(2) * t158 - qJD(4) * t214 + t379, qJD(2) * t159 + qJD(4) * t211 - t378, -t363, qJD(2) * t17 + qJD(4) * t129 - t350, t299, -t435, -t68, -t424, -t292, 0, -qJD(4) * t410 - qJD(5) * t13 + t385 + t437, -qJD(5) * t14 - t384 + t433, -t282, -qJD(2) * t2 - qJD(4) * t57 - t387; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t296, -t295, 0, 0, 0, 0, 0, 0, 0, 0, t323, t322, 0, t368, 0, 0, 0, 0, 0, 0, t440, t439, -t360, -t283; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t210, t209, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t319, t320, 0, t328, 0, 0, 0, 0, 0, 0, -t326, t417, 0, -t345; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t327, 0, -t210 - t281, t209 - t280, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t293, t145, -t324, qJD(2) * t108 - qJD(3) * t129 - t380, 0, 0, 0, 0, 0, 0, t265, t54, -t348, qJD(2) * t55 + qJD(3) * t57 - t386; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t332, 0, 0, 0, 0, 0, 0, 0, 0, 0, t346; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t319, -t320, 0, -t328, 0, 0, 0, 0, 0, 0, t326, -t417, 0, t345; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t330, -t417, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t424, -t435, -t147 * t338, -t424, qJD(3) * t142 - t338 * t410, 0, qJD(3) * t13 - qJD(4) * t114 + t382 + t437, qJD(3) * t14 - t383 + t433, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t440, t439, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t327, 0, t281, t280, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t330, t417, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t3;
