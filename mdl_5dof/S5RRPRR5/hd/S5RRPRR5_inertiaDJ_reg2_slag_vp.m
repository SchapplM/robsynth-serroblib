% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S5RRPRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4,d5,theta3]';
% 
% Output:
% MMD_reg [((5+1)*5/2)x(5*10)]
%   inertial parameter regressor of inertia matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2022-01-20 11:03
% Revision: fd3771346c4aea32fdeb66112c511235427c26a7 (2022-01-20)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S5RRPRR5_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRR5_inertiaDJ_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRR5_inertiaDJ_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRPRR5_inertiaDJ_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2022-01-20 11:02:55
% EndTime: 2022-01-20 11:03:00
% DurationCPUTime: 1.26s
% Computational Cost: add. (2037->137), mult. (4366->217), div. (0->0), fcn. (4111->8), ass. (0->103)
t100 = sin(pkin(9));
t101 = cos(pkin(9));
t141 = t100 ^ 2 + t101 ^ 2;
t161 = t141 * qJD(3);
t163 = 0.2e1 * t161;
t105 = cos(qJ(2));
t140 = pkin(1) * qJD(2);
t136 = t105 * t140;
t88 = qJD(3) + t136;
t162 = t141 * t88;
t103 = sin(qJ(4));
t155 = cos(qJ(4));
t126 = t155 * qJD(3);
t150 = -pkin(7) - qJ(3);
t127 = t150 * t100;
t81 = t155 * t127;
t97 = t101 * pkin(7);
t87 = t101 * qJ(3) + t97;
t45 = (qJD(3) * t100 + qJD(4) * t87) * t103 - qJD(4) * t81 - t101 * t126;
t131 = t155 * t101;
t132 = t155 * t100;
t104 = sin(qJ(2));
t92 = t104 * pkin(1) + qJ(3);
t156 = -pkin(7) - t92;
t70 = t156 * t132;
t76 = t101 * t92 + t97;
t31 = (qJD(4) * t76 + t100 * t88) * t103 - qJD(4) * t70 - t88 * t131;
t113 = t103 * t100 - t131;
t74 = t113 * qJD(4);
t160 = t74 * pkin(8);
t128 = qJD(4) * t155;
t138 = qJD(4) * t103;
t75 = t100 * t128 + t101 * t138;
t159 = t75 * pkin(4);
t158 = t75 * pkin(8);
t139 = t103 * t101;
t83 = t132 + t139;
t157 = t83 * pkin(8);
t154 = cos(qJ(5));
t153 = t105 * pkin(1);
t93 = -t101 * pkin(3) - pkin(2);
t152 = t93 * t74;
t151 = t93 * t75;
t102 = sin(qJ(5));
t53 = -t102 * t113 + t154 * t83;
t30 = t53 * qJD(5) - t102 * t74 + t154 * t75;
t110 = t154 * t113;
t52 = t102 * t83 + t110;
t62 = t113 * pkin(4) + t93;
t60 = t62 - t153;
t94 = t104 * t140;
t61 = t94 + t159;
t149 = t60 * t30 + t61 * t52;
t137 = qJD(5) * t102;
t29 = qJD(5) * t110 + t102 * t75 + t83 * t137 + t154 * t74;
t148 = -t60 * t29 + t61 * t53;
t86 = t93 - t153;
t146 = t113 * t94 + t86 * t75;
t145 = -t86 * t74 + t83 * t94;
t134 = t103 * t156;
t51 = t100 * t134 + t155 * t76;
t57 = t103 * t127 + t155 * t87;
t135 = pkin(4) * t137;
t50 = -t103 * t76 + t70;
t115 = -t50 + t157;
t112 = t154 * t115;
t78 = t113 * pkin(8);
t43 = -t78 + t51;
t15 = -t102 * t43 - t112;
t16 = -t102 * t115 + t154 * t43;
t32 = -t76 * t128 - t88 * t139 + (-qJD(4) * t134 - t155 * t88) * t100;
t107 = t32 + t160;
t109 = t158 + t31;
t3 = qJD(5) * t112 - t102 * t107 + t154 * t109 + t43 * t137;
t4 = -t16 * qJD(5) + t102 * t109 + t154 * t107;
t130 = t15 * t29 - t16 * t30 + t3 * t52 - t4 * t53;
t56 = -t103 * t87 + t81;
t114 = -t56 + t157;
t111 = t154 * t114;
t49 = -t78 + t57;
t23 = -t102 * t49 - t111;
t24 = -t102 * t114 + t154 * t49;
t46 = -t87 * t128 - qJD(3) * t139 + (-t150 * t138 - t126) * t100;
t106 = t46 + t160;
t108 = t158 + t45;
t8 = qJD(5) * t111 - t102 * t106 + t154 * t108 + t49 * t137;
t9 = -t24 * qJD(5) + t102 * t108 + t154 * t106;
t129 = t23 * t29 - t24 * t30 + t8 * t52 - t9 * t53;
t124 = t31 * t113 - t32 * t83 + t50 * t74 - t51 * t75;
t123 = t45 * t113 - t46 * t83 + t56 * t74 - t57 * t75;
t122 = t100 * t94;
t121 = t101 * t94;
t120 = t53 * t159 - t62 * t29;
t119 = t52 * t159 + t62 * t30;
t118 = qJD(5) * t154 * pkin(4);
t55 = -0.2e1 * t83 * t74;
t54 = 0.2e1 * t113 * t75;
t35 = 0.2e1 * t74 * t113 - 0.2e1 * t83 * t75;
t18 = -0.2e1 * t53 * t29;
t17 = 0.2e1 * t52 * t30;
t10 = 0.2e1 * t29 * t52 - 0.2e1 * t53 * t30;
t7 = (t154 * t29 - t102 * t30 + (t102 * t53 - t154 * t52) * qJD(5)) * pkin(4);
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t94, -0.2e1 * t136, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t121, 0.2e1 * t122, 0.2e1 * t162, 0.2e1 * (-pkin(2) - t153) * t94 + 0.2e1 * t92 * t162, t55, t35, 0, t54, 0, 0, 0.2e1 * t146, 0.2e1 * t145, 0.2e1 * t124, -0.2e1 * t51 * t31 + 0.2e1 * t50 * t32 + 0.2e1 * t86 * t94, t18, t10, 0, t17, 0, 0, 0.2e1 * t149, 0.2e1 * t148, 0.2e1 * t130, 0.2e1 * t15 * t4 - 0.2e1 * t16 * t3 + 0.2e1 * t60 * t61; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t94, -t136, 0, 0, 0, 0, 0, 0, 0, 0, -t121, t122, t161 + t162, -pkin(2) * t94 + qJ(3) * t162 + t161 * t92, t55, t35, 0, t54, 0, 0, t146 + t151, t145 - t152, t123 + t124, -t31 * t57 + t32 * t56 - t51 * t45 + t50 * t46 + t93 * t94, t18, t10, 0, t17, 0, 0, t119 + t149, t120 + t148, t129 + t130, t15 * t9 + t60 * t159 - t16 * t8 + t4 * t23 - t3 * t24 + t61 * t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t163, qJ(3) * t163, t55, t35, 0, t54, 0, 0, 0.2e1 * t151, -0.2e1 * t152, 0.2e1 * t123, -0.2e1 * t57 * t45 + 0.2e1 * t56 * t46, t18, t10, 0, t17, 0, 0, 0.2e1 * t119, 0.2e1 * t120, 0.2e1 * t129, 0.2e1 * t62 * t159 + 0.2e1 * t23 * t9 - 0.2e1 * t24 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t94, 0, 0, 0, 0, 0, 0, t75, -t74, 0, t94, 0, 0, 0, 0, 0, 0, t30, -t29, 0, t61; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t75, -t74, 0, 0, 0, 0, 0, 0, 0, 0, t30, -t29, 0, t159; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t74, 0, -t75, 0, t32, t31, 0, 0, 0, 0, -t29, 0, -t30, 0, t4, t3, t7, (t154 * t4 - t102 * t3 + (-t102 * t15 + t154 * t16) * qJD(5)) * pkin(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t74, 0, -t75, 0, t46, t45, 0, 0, 0, 0, -t29, 0, -t30, 0, t9, t8, t7, (t154 * t9 - t102 * t8 + (-t102 * t23 + t154 * t24) * qJD(5)) * pkin(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t135, -0.2e1 * t118, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t29, 0, -t30, 0, t4, t3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t29, 0, -t30, 0, t9, t8, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t135, -t118, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg = t1;
