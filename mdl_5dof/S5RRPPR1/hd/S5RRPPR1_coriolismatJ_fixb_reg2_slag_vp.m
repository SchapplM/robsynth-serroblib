% Calculate inertial parameters regressor of coriolis matrix for
% S5RRPPR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d5,theta3,theta4]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2022-01-20 09:52
% Revision: fd3771346c4aea32fdeb66112c511235427c26a7 (2022-01-20)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRPPR1_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPPR1_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPPR1_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRPPR1_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2022-01-20 09:51:48
% EndTime: 2022-01-20 09:51:51
% DurationCPUTime: 1.62s
% Computational Cost: add. (3048->145), mult. (5827->197), div. (0->0), fcn. (5722->8), ass. (0->132)
t135 = cos(pkin(9));
t210 = cos(qJ(5));
t169 = t210 * t135;
t133 = sin(pkin(9));
t137 = sin(qJ(5));
t192 = t137 * t133;
t150 = t169 - t192;
t170 = t210 * t133;
t191 = t137 * t135;
t119 = t170 + t191;
t176 = qJD(1) + qJD(2);
t217 = t176 * t119;
t221 = t150 * t217;
t214 = t119 ^ 2;
t215 = t150 ^ 2;
t72 = -t214 + t215;
t220 = t176 * t72;
t83 = t214 + t215;
t219 = t176 * t83;
t218 = t176 * t150;
t131 = t133 ^ 2;
t132 = t135 ^ 2;
t126 = t131 + t132;
t216 = t176 * t126;
t213 = t150 / 0.2e1;
t212 = t119 / 0.2e1;
t136 = cos(pkin(8));
t171 = -t136 * pkin(2) - pkin(3);
t209 = t135 * pkin(4);
t122 = t171 - t209;
t211 = t122 / 0.2e1;
t139 = cos(qJ(2));
t208 = t139 * pkin(1);
t134 = sin(pkin(8));
t138 = sin(qJ(2));
t127 = t134 * t138 * pkin(1);
t116 = t136 * t208 - t127;
t70 = t119 * t116;
t71 = t150 * t116;
t19 = t70 * t119 + t150 * t71;
t80 = t83 * qJD(4);
t206 = t19 * qJD(2) + t80;
t203 = pkin(1) * qJD(1);
t202 = pkin(1) * qJD(2);
t129 = pkin(2) + t208;
t193 = t136 * t138;
t175 = pkin(1) * t193;
t151 = t134 * t129 + t175;
t147 = qJ(4) + t151;
t141 = (-pkin(7) - t147) * t133;
t130 = t135 * pkin(7);
t90 = t135 * t147 + t130;
t47 = t137 * t90 - t210 * t141;
t201 = t47 * t119;
t48 = t137 * t141 + t210 * t90;
t200 = t48 * t150;
t164 = t134 * pkin(2) + qJ(4);
t107 = t135 * t164 + t130;
t152 = (-pkin(7) - t164) * t133;
t74 = t137 * t107 - t210 * t152;
t198 = t74 * t119;
t76 = t210 * t107 + t137 * t152;
t197 = t76 * t150;
t123 = t126 * qJD(4);
t75 = t126 * t116;
t196 = t75 * qJD(2) + t123;
t194 = t134 * t139;
t16 = t200 + t201;
t190 = t16 * qJD(1);
t18 = t71 * t212 - t70 * t213;
t189 = t18 * qJD(1);
t188 = t19 * qJD(1);
t115 = (t193 + t194) * pkin(1);
t162 = t136 * t129 - t127;
t159 = -pkin(3) - t162;
t144 = t132 * t147;
t145 = t131 * t147;
t68 = t144 + t145;
t20 = t159 * t115 + t68 * t116;
t187 = t20 * qJD(1);
t46 = -t162 * t115 + t151 * t116;
t186 = t46 * qJD(1);
t185 = t68 * qJD(1);
t184 = t75 * qJD(1);
t183 = t115 * qJD(1);
t105 = t115 * qJD(2);
t182 = t116 * qJD(1);
t181 = t150 * qJD(1);
t180 = t150 * qJD(2);
t111 = t150 * qJD(5);
t179 = t119 * qJD(1);
t178 = t119 * qJD(2);
t177 = t119 * qJD(5);
t95 = t159 - t209;
t174 = t95 * t181;
t173 = t95 * t179;
t172 = t211 + t95 / 0.2e1;
t168 = t115 * t181;
t167 = t115 * t179;
t166 = t133 * t183;
t165 = t150 * t177;
t163 = pkin(1) * t176;
t158 = t131 * t164;
t157 = t132 * t164;
t25 = t197 + t198;
t146 = (t194 / 0.2e1 + t193 / 0.2e1) * pkin(1);
t8 = (-t74 / 0.2e1 - t47 / 0.2e1) * t119 - (t76 / 0.2e1 + t48 / 0.2e1) * t150 + t146;
t155 = -t8 * qJD(1) + t25 * qJD(2);
t10 = t95 * t115 + t47 * t70 + t48 * t71;
t154 = t10 * qJD(1) + t18 * qJD(3);
t100 = t157 + t158;
t36 = t146 + t126 * (-qJ(4) - t175 / 0.2e1 + (-pkin(2) / 0.2e1 - t129 / 0.2e1) * t134);
t153 = t36 * qJD(1) - t100 * qJD(2);
t142 = (-t169 / 0.2e1 + t192 / 0.2e1) * t116;
t22 = -t150 * t172 + t142;
t149 = t22 * qJD(1) - t122 * t180;
t143 = (-t191 / 0.2e1 - t170 / 0.2e1) * t116;
t21 = -t172 * t119 + t143;
t148 = t21 * qJD(1) - t122 * t178;
t114 = t119 * qJD(4);
t110 = t150 * qJD(4);
t106 = t116 * qJD(2);
t103 = t133 * t105;
t82 = t115 * t178;
t81 = t115 * t180;
t69 = t72 * qJD(5);
t37 = t157 / 0.2e1 + t144 / 0.2e1 + t158 / 0.2e1 + t145 / 0.2e1 + t146;
t24 = t119 * t211 + t95 * t212 + t143;
t23 = t142 + (t122 + t95) * t213;
t9 = t146 + t198 / 0.2e1 + t197 / 0.2e1 + t201 / 0.2e1 + t200 / 0.2e1;
t3 = t18 * qJD(2);
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t138 * t202, -t139 * t202, 0, 0, 0, 0, 0, 0, 0, 0, -t105, -t106, 0, t46 * qJD(2), 0, 0, 0, 0, 0, 0, -t135 * t105, t103, t196, t20 * qJD(2) + t68 * qJD(4), t165, t69, 0, -t165, 0, 0, t177 * t95 - t81, t111 * t95 + t82, t206, t10 * qJD(2) + t16 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t138 * t163, -t139 * t163, 0, 0, 0, 0, 0, 0, 0, 0, -t105 - t183, -t106 - t182, 0, t186 + (-t115 * t136 + t116 * t134) * qJD(2) * pkin(2), 0, 0, 0, 0, 0, 0, -t176 * t135 * t115, t103 + t166, t184 + t196, t187 + (t100 * t116 + t115 * t171) * qJD(2) + t37 * qJD(4), t165, t69, 0, -t165, 0, 0, t24 * qJD(5) - t168 - t81, t23 * qJD(5) + t167 + t82, t188 + t206, (t115 * t122 + t70 * t74 + t71 * t76) * qJD(2) + t9 * qJD(4) + t154; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t216, t37 * qJD(2) + t185, 0, 0, 0, 0, 0, 0, 0, 0, t219, t9 * qJD(2) + t190; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t221, t220, t111, -t221, -t177, 0, t24 * qJD(2) - t48 * qJD(5) + t173, t23 * qJD(2) + t47 * qJD(5) + t174, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t138 * t203, t139 * t203, 0, 0, 0, 0, 0, 0, 0, 0, t183, t182, 0, -t186, 0, 0, 0, 0, 0, 0, t135 * t183, -t166, t123 - t184, -t36 * qJD(4) - t187, t165, t69, 0, -t165, 0, 0, -t21 * qJD(5) + t168, -t22 * qJD(5) - t167, t80 - t188, -t8 * qJD(4) - t154; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t123, t100 * qJD(4), t165, t69, 0, -t165, 0, 0, t122 * t177, t122 * t111, t80, t25 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t189; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t216, -t153, 0, 0, 0, 0, 0, 0, 0, 0, t219, t155; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t221, t220, t111, -t221, -t177, 0, -t76 * qJD(5) - t148, t74 * qJD(5) - t149, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t189; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t177, -t111, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t216, t36 * qJD(2) - t185, 0, 0, 0, 0, 0, 0, t177, t111, -t219, t8 * qJD(2) - t190; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t216, t153, 0, 0, 0, 0, 0, 0, t177, t111, -t219, -t155; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t217, t218, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t221, -t220, 0, t221, 0, 0, t21 * qJD(2) - t114 - t173, t22 * qJD(2) - t110 - t174, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t221, -t220, 0, t221, 0, 0, -t114 + t148, -t110 + t149, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t217, -t218, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t1;
