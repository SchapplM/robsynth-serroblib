% Calculate minimal parameter regressor of coriolis matrix for
% S5RRPRP7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4,theta3]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x25]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2021-01-15 20:42
% Revision: 24b2e7d74a0c1a3b64fa2f8f5ad758691ad61af3 (2021-01-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRPRP7_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRP7_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRP7_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRPRP7_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2021-01-15 20:41:27
% EndTime: 2021-01-15 20:41:40
% DurationCPUTime: 4.25s
% Computational Cost: add. (4556->338), mult. (8911->465), div. (0->0), fcn. (9488->6), ass. (0->275)
t204 = cos(qJ(4));
t201 = sin(pkin(8));
t203 = sin(qJ(2));
t205 = cos(qJ(2));
t335 = cos(pkin(8));
t179 = t201 * t203 - t205 * t335;
t177 = t179 ^ 2;
t245 = t335 * t203;
t320 = t201 * t205;
t181 = t245 + t320;
t178 = t181 ^ 2;
t270 = -t178 - t177;
t378 = t270 * t204;
t383 = qJD(3) * t378;
t202 = sin(qJ(4));
t379 = t270 * t202;
t382 = qJD(3) * t379;
t381 = t378 * qJD(1);
t380 = t379 * qJD(1);
t174 = t181 * qJ(5);
t357 = -qJ(3) - pkin(6);
t185 = t357 * t203;
t187 = t357 * t205;
t130 = -t185 * t335 - t187 * t201;
t376 = t130 * t204;
t359 = t203 * pkin(2);
t108 = pkin(3) * t181 + pkin(7) * t179 + t359;
t89 = t202 * t108;
t338 = -t376 / 0.2e1 + t89 / 0.2e1;
t377 = -t174 - t338;
t374 = t201 * t185 - t187 * t335;
t332 = t374 * t202;
t331 = t374 * t204;
t375 = 0.2e1 * t202;
t101 = t202 * t179;
t290 = t101 * qJD(1);
t292 = qJD(4) * t202;
t373 = t290 + t292;
t281 = t179 * qJD(1);
t372 = -t281 - qJD(4);
t103 = t202 * t181;
t106 = t204 * t181;
t236 = pkin(4) * t103 - qJ(5) * t106;
t69 = t130 + t236;
t371 = -t69 / 0.2e1;
t370 = -t108 / 0.2e1;
t369 = t181 / 0.2e1;
t199 = t202 ^ 2;
t368 = -t199 / 0.2e1;
t200 = t204 ^ 2;
t367 = -t200 / 0.2e1;
t366 = -t202 / 0.2e1;
t365 = t202 / 0.2e1;
t364 = -t204 / 0.2e1;
t363 = t204 / 0.2e1;
t362 = pkin(4) * t202;
t361 = t179 * pkin(4);
t360 = t181 * pkin(4);
t358 = t204 * pkin(4);
t356 = qJD(2) * pkin(2);
t328 = t179 * qJ(5);
t196 = -pkin(2) * t205 - pkin(1);
t213 = pkin(3) * t179 - pkin(7) * t181 + t196;
t63 = t202 * t213 + t331;
t49 = t63 + t328;
t62 = -t204 * t213 + t332;
t50 = t62 - t361;
t336 = -t376 + t89;
t51 = t174 + t336;
t316 = t204 * t108;
t318 = t130 * t202;
t52 = -t316 - t318 - t360;
t317 = t204 * qJ(5);
t186 = t317 - t362;
t68 = t179 * t186 + t374;
t3 = t49 * t51 + t50 * t52 + t68 * t69;
t355 = t3 * qJD(1);
t319 = t202 * qJ(5);
t234 = t319 + t358;
t98 = t234 * t181;
t4 = -t49 * t62 + t50 * t63 + t69 * t98;
t354 = t4 * qJD(1);
t353 = t49 * t179;
t352 = t49 * t204;
t105 = t204 * t179;
t5 = t50 * t105 - t52 * t106 + (t181 * t51 - t353) * t202;
t351 = t5 * qJD(1);
t350 = t50 * t202;
t6 = -t63 * t106 + (t352 + (t50 - t62) * t202) * t181;
t349 = t6 * qJD(1);
t348 = t62 * t179;
t347 = t63 * t179;
t346 = t68 * t202;
t345 = t68 * t204;
t344 = t69 * t202;
t343 = t69 * t204;
t266 = -t49 / 0.2e1 + t63 / 0.2e1;
t222 = t328 / 0.2e1 - t266;
t265 = -t62 / 0.2e1 + t50 / 0.2e1;
t224 = t361 / 0.2e1 - t265;
t7 = t202 * t222 + t204 * t224;
t342 = t7 * qJD(1);
t8 = t202 * t224 - t204 * t222;
t341 = t8 * qJD(1);
t195 = -pkin(2) * t335 - pkin(3);
t175 = -t234 + t195;
t246 = t106 / 0.2e1;
t340 = t175 * t246 + t344 / 0.2e1;
t339 = t318 / 0.2e1 + t316 / 0.2e1;
t11 = (t49 - t345) * t181 + (t51 + t343) * t179;
t334 = t11 * qJD(1);
t12 = (-t50 + t346) * t181 + (-t52 - t344) * t179;
t333 = t12 * qJD(1);
t15 = t69 * t181 + (-t350 - t352) * t179;
t329 = t15 * qJD(1);
t18 = (-t62 + t332) * t181 + t316 * t179;
t327 = t18 * qJD(1);
t194 = pkin(2) * t201 + pkin(7);
t326 = t181 * t194;
t325 = t186 * t202;
t19 = (-t63 + t331) * t181 + (-t376 - t336) * t179;
t324 = t19 * qJD(1);
t323 = t194 * t179;
t322 = t195 * t181;
t250 = t175 * t369;
t211 = (t367 + t368) * t323 + t250;
t223 = t363 * t52 + t366 * t51;
t21 = t211 + t223;
t315 = t21 * qJD(1);
t22 = -t347 + (t98 * t202 + t343) * t181;
t314 = t22 * qJD(1);
t23 = -t348 + (-t98 * t204 + t344) * t181;
t313 = t23 * qJD(1);
t26 = -t106 * t69 + t353;
t312 = t26 * qJD(1);
t32 = -t103 * t130 + t348;
t310 = t32 * qJD(1);
t33 = t106 * t130 - t347;
t309 = t33 * qJD(1);
t34 = t196 * t359;
t308 = t34 * qJD(1);
t53 = t130 * t181 - t179 * t374;
t307 = t53 * qJD(1);
t306 = t62 * qJD(4);
t269 = t178 - t177;
t73 = t269 * t202;
t305 = t73 * qJD(1);
t75 = t269 * t204;
t303 = t75 * qJD(1);
t212 = -t201 * t179 / 0.2e1 - t335 * t181 / 0.2e1;
t80 = (-t203 / 0.2e1 + t212) * pkin(2);
t301 = t80 * qJD(1);
t87 = t179 * t359 + t181 * t196;
t300 = t87 * qJD(1);
t88 = -t179 * t196 + t181 * t359;
t299 = t88 * qJD(1);
t297 = t181 * t368 + t200 * t369;
t190 = t200 - t199;
t295 = qJD(1) * t205;
t294 = qJD(2) * t202;
t293 = qJD(2) * t204;
t291 = qJD(4) * t204;
t289 = t101 * qJD(3);
t288 = t103 * qJD(1);
t97 = t105 * qJD(1);
t287 = t106 * qJD(1);
t166 = t199 * t179;
t167 = t200 * t179;
t109 = t166 + t167;
t286 = t109 * qJD(1);
t283 = t270 * qJD(1);
t176 = t245 / 0.2e1 + t320 / 0.2e1;
t282 = t176 * qJD(1);
t280 = t179 * qJD(3);
t279 = t179 * qJD(4);
t171 = t179 * qJD(5);
t278 = t181 * qJD(1);
t277 = t181 * qJD(2);
t276 = t181 * qJD(3);
t191 = -t203 ^ 2 + t205 ^ 2;
t275 = t191 * qJD(1);
t274 = t202 * qJD(5);
t273 = t203 * qJD(2);
t272 = t204 * qJD(5);
t271 = t205 * qJD(2);
t268 = pkin(1) * t203 * qJD(1);
t267 = pkin(1) * t295;
t168 = t360 / 0.2e1;
t247 = t323 / 0.2e1;
t264 = -t175 * t106 / 0.2e1 + t204 * t247 - t344 / 0.2e1;
t263 = t168 + t339;
t262 = t202 * t279;
t261 = t194 * t292;
t260 = t204 * t279;
t259 = t194 * t291;
t258 = t179 * t278;
t257 = t179 * t277;
t256 = t202 * t291;
t255 = t202 * t278;
t254 = t181 * t274;
t192 = t202 * t293;
t253 = t202 * t272;
t252 = t203 * t295;
t251 = t204 * t278;
t163 = t204 * t277;
t249 = -t325 / 0.2e1;
t248 = -t323 / 0.2e1;
t71 = t176 + t297;
t244 = qJD(1) * t71 + t192;
t99 = (t199 / 0.2e1 + t367) * t181;
t243 = qJD(1) * t99 - t192;
t144 = t204 * t178 * t202 * qJD(1);
t242 = qJD(2) * t99 + t144;
t240 = t202 * t251;
t239 = t202 * t163;
t238 = -t360 / 0.2e1 - t318 / 0.2e1;
t237 = -t98 / 0.2e1 + t248;
t235 = 0.2e1 * t239;
t233 = t202 * t52 + t204 * t51;
t232 = t175 * t179 + t326;
t231 = -t179 * t195 - t326;
t116 = t175 * t204 - t325;
t207 = (t186 * t369 + t371) * t204 + (t250 + t237) * t202;
t17 = t207 + t377;
t230 = -qJD(1) * t17 + qJD(2) * t116;
t117 = -t175 * t202 - t186 * t204;
t13 = (t249 - pkin(4) / 0.2e1) * t181 + (t370 + t237) * t204 + t238 + t340;
t229 = -qJD(1) * t13 + qJD(2) * t117;
t228 = t372 * t202;
t227 = t372 * t204;
t226 = -qJD(4) * t186 - t274;
t225 = -t51 * qJ(5) / 0.2e1 + t52 * pkin(4) / 0.2e1;
t206 = (t202 * t266 + t204 * t265) * t194 + t186 * t371 + t98 * t175 / 0.2e1;
t2 = t206 + t225;
t221 = t175 * t186 * qJD(2) - t2 * qJD(1);
t25 = t263 + t264;
t220 = -qJD(1) * t25 + t175 * t294;
t139 = t204 * t248;
t30 = t139 + (t322 / 0.2e1 + t370) * t204;
t219 = -qJD(1) * t30 - t195 * t294;
t208 = (t247 - t322 / 0.2e1) * t202 + t376 / 0.2e1;
t28 = t208 + t338;
t218 = -qJD(1) * t28 - t195 * t293;
t217 = t181 * t227;
t216 = qJD(4) * t176 + t258;
t110 = t190 * t178;
t215 = qJD(1) * t110 + t235;
t214 = -qJD(2) * t190 + 0.2e1 * t240;
t210 = -qJD(4) * t234 + t272;
t123 = t178 * t200 + t177;
t209 = qJD(1) * t123 + t239 + t279;
t165 = t176 * qJD(2);
t162 = t202 * t277;
t145 = t181 * t253;
t143 = t372 * qJ(5);
t133 = qJD(2) * t199 + t240;
t96 = t105 * qJD(4);
t92 = t101 * qJD(4);
t90 = t99 * qJD(4);
t79 = t359 / 0.2e1 + t212 * pkin(2);
t78 = t97 + t291;
t72 = -t176 + t297;
t64 = -qJD(2) * t105 + t179 * t255;
t61 = t63 * qJD(4);
t45 = t181 * t228;
t31 = t130 * t365 + t195 * t246 + t139 + t339;
t29 = t208 - t338;
t24 = -t316 / 0.2e1 + t238 + t264;
t20 = t211 - t223;
t16 = t207 - t377;
t14 = t181 * t249 + t204 * t237 + t168 + t263 + t340;
t10 = t62 * t364 + t49 * t366 + t63 * t365 + t50 * t363 + (t319 / 0.2e1 + t358 / 0.2e1) * t179;
t9 = t62 * t366 + t352 / 0.2e1 + t63 * t364 + t350 / 0.2e1 + (-t317 / 0.2e1 + t362 / 0.2e1) * t179;
t1 = t206 - t225;
t27 = [0, 0, 0, t203 * t271, t191 * qJD(2), 0, 0, 0, -pkin(1) * t273, -pkin(1) * t271, t87 * qJD(2), t88 * qJD(2), -t270 * qJD(3), qJD(2) * t34 + qJD(3) * t53, -t178 * t256 - t200 * t257, -qJD(4) * t110 + t179 * t235, qJD(2) * t75 - t181 * t262, -qJD(2) * t73 - t181 * t260, t257, qJD(2) * t18 + qJD(4) * t33 - t382, qJD(2) * t19 + qJD(4) * t32 - t383, qJD(2) * t12 + qJD(4) * t22 - t178 * t253 - t382, -qJD(2) * t5 - qJD(4) * t6 - t179 * t254, qJD(2) * t11 + qJD(4) * t23 + qJD(5) * t123 + t383, qJD(2) * t3 + qJD(3) * t15 + qJD(4) * t4 + qJD(5) * t26; 0, 0, 0, t252, t275, t271, -t273, 0, -pkin(6) * t271 - t268, pkin(6) * t273 - t267, -qJD(2) * t374 + t300, qJD(2) * t130 + t299, (t179 * t335 - t181 * t201) * t356, t308 + (-t130 * t201 - t335 * t374) * t356 + t79 * qJD(3), -t90 + (-t200 * t278 - t192) * t179, (t166 - t167) * qJD(2) + (-qJD(4) + t281) * t106 * t375, t162 + t303, t163 - t305, t216, t327 + (t202 * t231 - t331) * qJD(2) + t31 * qJD(4), t324 + (t204 * t231 + t332) * qJD(2) + t29 * qJD(4), t333 + (-t202 * t232 - t345) * qJD(2) + t14 * qJD(4) + t72 * qJD(5), qJD(2) * t233 + qJD(4) * t10 - t351, t334 + (t204 * t232 - t346) * qJD(2) + t16 * qJD(4) + t145, t355 + (t68 * t175 + t194 * t233) * qJD(2) + t20 * qJD(3) + t1 * qJD(4) + t24 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t283, qJD(2) * t79 + t307, 0, 0, 0, 0, 0, -t380, -t381, -t380, 0, t381, qJD(2) * t20 + qJD(4) * t9 + t329; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t242, -t215, t45, t217, t165, qJD(2) * t31 + t309 - t61, qJD(2) * t29 + t306 + t310, qJD(2) * t14 + t314 - t61, t10 * qJD(2) + qJD(4) * t236 - t254 - t349, qJD(2) * t16 + t171 - t306 + t313, t354 + t1 * qJD(2) + t9 * qJD(3) + (-pkin(4) * t63 - qJ(5) * t62) * qJD(4) + t49 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t72 - t144, t45, t209, qJD(2) * t24 + qJD(4) * t49 + t312; 0, 0, 0, -t252, -t275, 0, 0, 0, t268, t267, -t276 - t300, t280 - t299, 0, qJD(3) * t80 - t308, t200 * t258 - t90, t217 * t375, t96 - t303, -t92 + t305, -t216, qJD(4) * t30 - t204 * t276 - t327, qJD(3) * t103 + qJD(4) * t28 - t324, -qJD(3) * t106 + qJD(4) * t13 + qJD(5) * t71 - t333, -qJD(3) * t109 - qJD(4) * t7 + qJD(5) * t105 + t351, qJD(4) * t17 - t202 * t276 + t145 - t334, qJD(3) * t21 + qJD(4) * t2 + qJD(5) * t25 - t355; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t256, t190 * qJD(4), 0, 0, 0, t195 * t292, t195 * t291, -qJD(4) * t117 + t253, 0, -qJD(4) * t116 + qJD(5) * t199, t226 * t175; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t278, t281, 0, t301, 0, 0, 0, 0, 0, -t251, t288, -t287, -t286, -t255, t315; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t243, -t214, t78, -t373, -t282, -t219 - t259, -t218 + t261, -t229 - t259, t210 - t342, -t230 - t261, t194 * t210 - t221; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t244, t78, t133, -t220 + t259; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t277, -t179 * qJD(2), t283, -qJD(2) * t80 - t307, 0, 0, 0, 0, 0, t163 - t92 + t380, -qJD(2) * t103 - t260 + t381, qJD(2) * t106 - t262 + t380, t109 * qJD(2), t162 + t96 - t381, -qJD(2) * t21 - qJD(4) * t8 + qJD(5) * t101 - t329; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t278, -t281, 0, -t301, 0, 0, 0, 0, 0, t251, -t288, t287, t286, t255, -t315; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t373, t227, t228, 0, t78, -t226 - t341; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t373; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t242, t215, t64, qJD(2) * t101 + t179 * t251, t165, -qJD(2) * t30 + t289 - t309, -qJD(2) * t28 + t204 * t280 - t310, -qJD(2) * t13 + t202 * t280 - t314, qJD(2) * t7 + t349, -qJD(2) * t17 - qJD(3) * t105 + t171 - t313, qJ(5) * t171 - qJD(2) * t2 + qJD(3) * t8 - t354; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t243, t214, -t97, t290, t282, t219, t218, t229, t342, t230, t221; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t290, t204 * t281, t202 * t281, 0, -t97, t341; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), qJ(5) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t372, -t143; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t71 + t144, t64, -t209, -qJ(5) * t279 - qJD(2) * t25 - t289 - t312; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t244, -t97, -t133, t220; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t290; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t372, t143; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t27;
