% Calculate minimal parameter regressor of coriolis matrix for
% S5RRRPR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d5,theta4]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x28]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2021-01-15 23:25
% Revision: 24b2e7d74a0c1a3b64fa2f8f5ad758691ad61af3 (2021-01-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRPR9_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPR9_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPR9_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRRPR9_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2021-01-15 23:24:01
% EndTime: 2021-01-15 23:24:42
% DurationCPUTime: 11.96s
% Computational Cost: add. (7771->548), mult. (17391->767), div. (0->0), fcn. (18550->8), ass. (0->413)
t365 = cos(pkin(9));
t367 = sin(qJ(3));
t534 = t365 * t367;
t364 = sin(pkin(9));
t369 = cos(qJ(3));
t537 = t364 * t369;
t306 = t534 + t537;
t368 = sin(qJ(2));
t283 = t306 * t368;
t522 = t368 * t369;
t524 = t367 * t368;
t286 = -t364 * t524 + t365 * t522;
t366 = sin(qJ(5));
t581 = cos(qJ(5));
t178 = t581 * t283 + t366 * t286;
t533 = t365 * t369;
t304 = t364 * t367 - t533;
t214 = t581 * t304 + t366 * t306;
t572 = qJ(4) + pkin(7);
t326 = t572 * t367;
t327 = t572 * t369;
t453 = -t365 * t326 - t327 * t364;
t412 = -pkin(8) * t306 + t453;
t611 = t581 * t412;
t245 = -t364 * t326 + t365 * t327;
t189 = -pkin(8) * t304 + t245;
t636 = t366 * t189;
t404 = t611 - t636;
t370 = cos(qJ(2));
t583 = -t370 / 0.2e1;
t355 = -pkin(3) * t369 - pkin(2);
t276 = pkin(4) * t304 + t355;
t598 = -t276 / 0.2e1;
t318 = pkin(3) * t524 + t368 * pkin(6);
t221 = pkin(4) * t283 + t318;
t601 = -t221 / 0.2e1;
t380 = t178 * t598 + t214 * t601 - t404 * t583;
t637 = qJD(3) + qJD(5);
t635 = t581 * t189;
t445 = -t635 / 0.2e1;
t613 = t366 * t412;
t86 = t635 + t613;
t403 = -t366 * t304 + t581 * t306;
t510 = qJD(2) * t403;
t602 = -t403 / 0.2e1;
t603 = -t214 / 0.2e1;
t271 = t581 * t286;
t528 = t366 * t283;
t608 = t271 - t528;
t632 = t178 * t602 + t603 * t608;
t397 = qJD(1) * t632 - t214 * t510;
t513 = qJD(1) * t608;
t399 = qJD(2) * t632 - t178 * t513;
t619 = t178 ^ 2 - t608 ^ 2;
t634 = qJD(1) * t619;
t620 = t214 ^ 2 - t403 ^ 2;
t633 = qJD(2) * t620;
t444 = -t611 / 0.2e1;
t631 = t178 * t214;
t490 = t370 * qJD(1);
t630 = t178 * t490;
t626 = t221 * t178;
t625 = t221 * t608;
t158 = t608 * t490;
t441 = -pkin(2) * t370 - t368 * pkin(7);
t325 = -pkin(1) + t441;
t308 = t369 * t325;
t440 = -qJ(4) * t522 + t308;
t580 = pkin(6) * t367;
t218 = (-pkin(3) - t580) * t370 + t440;
t520 = t369 * t370;
t485 = pkin(6) * t520;
t275 = t367 * t325 + t485;
t238 = -qJ(4) * t524 + t275;
t536 = t365 * t238;
t130 = t364 * t218 + t536;
t523 = t367 * t370;
t488 = pkin(6) * t523;
t237 = t440 - t488;
t147 = -t237 * t364 - t536;
t610 = t130 + t147;
t518 = t637 * t214;
t420 = t510 + t513;
t624 = qJD(3) * t178;
t623 = qJD(4) * t178;
t622 = qJD(4) * t214;
t621 = t178 * qJD(5);
t618 = t403 * t601 + t598 * t608;
t616 = -qJD(1) * t178 - qJD(2) * t214;
t600 = -t453 / 0.2e1;
t599 = t453 / 0.2e1;
t614 = t608 * t403;
t607 = qJD(4) * t403;
t331 = t364 * t523;
t288 = t365 * t520 - t331;
t469 = t581 * t288;
t285 = t306 * t370;
t527 = t366 * t285;
t517 = -t527 / 0.2e1 + t469 / 0.2e1;
t360 = t367 ^ 2;
t362 = t369 ^ 2;
t340 = t362 - t360;
t492 = t368 * qJD(1);
t468 = t369 * t492;
t606 = qJD(2) * t340 - 0.2e1 * t367 * t468;
t416 = t637 * t403;
t539 = t364 * t238;
t129 = t365 * t218 - t539;
t605 = -t129 / 0.2e1;
t148 = t237 * t365 - t539;
t604 = -t148 / 0.2e1;
t443 = t271 / 0.2e1;
t576 = t367 * pkin(3);
t277 = pkin(4) * t306 + t576;
t597 = -t277 / 0.2e1;
t596 = t283 / 0.2e1;
t594 = t304 / 0.2e1;
t593 = -t306 / 0.2e1;
t592 = -t331 / 0.2e1;
t591 = -t355 / 0.2e1;
t590 = -t364 / 0.2e1;
t589 = t364 / 0.2e1;
t588 = -t365 / 0.2e1;
t587 = t365 / 0.2e1;
t586 = -t367 / 0.2e1;
t585 = -t368 / 0.2e1;
t584 = -t369 / 0.2e1;
t582 = t370 / 0.2e1;
t579 = pkin(8) * t283;
t578 = t286 * pkin(8);
t577 = t364 * pkin(3);
t575 = t368 * pkin(2);
t574 = t368 * pkin(3);
t573 = t370 * pkin(7);
t24 = t631 / 0.2e1 + t608 * t602 - t178 * t603 - t614 / 0.2e1;
t33 = -t614 + t631;
t571 = t24 * qJD(3) + t33 * qJD(5);
t570 = t637 * t632;
t569 = pkin(3) * qJD(3);
t82 = -pkin(4) * t370 + t129 - t578;
t568 = t366 * t82;
t329 = -t573 + t575;
t317 = t369 * t329;
t348 = pkin(6) * t524;
t229 = -qJ(4) * t520 + t317 + t348 + t574;
t212 = t365 * t229;
t316 = t367 * t329;
t487 = pkin(6) * t522;
t239 = -qJ(4) * t523 + t316 - t487;
t538 = t364 * t239;
t142 = t212 - t538;
t87 = pkin(4) * t368 - pkin(8) * t288 + t142;
t567 = t366 * t87;
t92 = t130 - t579;
t566 = t366 * t92;
t211 = t364 * t229;
t233 = t365 * t239;
t143 = t233 + t211;
t93 = -pkin(8) * t285 + t143;
t565 = t366 * t93;
t94 = t147 + t579;
t564 = t366 * t94;
t95 = t148 - t578;
t563 = t366 * t95;
t270 = t581 * t285;
t526 = t366 * t288;
t180 = t270 + t526;
t346 = pkin(3) * t523;
t359 = t370 * pkin(6);
t319 = t359 + t346;
t222 = pkin(4) * t285 + t319;
t480 = t581 * t82;
t41 = -t480 + t566;
t479 = t581 * t87;
t9 = (t479 - t565) * t370 + t41 * t368 - t222 * t178 - t221 * t180;
t562 = t9 * qJD(1);
t486 = pkin(3) * t522;
t414 = pkin(4) * t286 + t486;
t476 = t581 * t94;
t50 = t476 - t563;
t21 = -t178 * t414 + t370 * t50 - t625;
t561 = qJD(1) * t21;
t475 = t581 * t95;
t51 = t475 + t564;
t22 = t51 * t370 + t414 * t608 - t626;
t560 = qJD(1) * t22;
t29 = -t370 * t41 - t626;
t559 = qJD(1) * t29;
t478 = t581 * t92;
t42 = t478 + t568;
t30 = -t370 * t42 - t625;
t558 = qJD(1) * t30;
t52 = -t129 * t286 - t130 * t283;
t557 = qJD(1) * t52;
t60 = t147 * t370 - t283 * t486 - t318 * t286;
t556 = qJD(1) * t60;
t61 = t148 * t370 - t318 * t283 + t286 * t486;
t555 = qJD(1) * t61;
t70 = t178 * t368 - t180 * t370;
t554 = qJD(1) * t70;
t183 = t469 - t527;
t71 = t183 * t370 - t368 * t608;
t553 = qJD(1) * t71;
t438 = -t270 / 0.2e1 - t526 / 0.2e1;
t460 = t403 * t583;
t96 = t460 - t438;
t552 = qJD(1) * t96;
t97 = t460 + t438;
t551 = qJD(1) * t97;
t544 = t403 * t370;
t98 = -t544 / 0.2e1 + t438;
t550 = qJD(1) * t98;
t545 = t214 * t370;
t99 = -t545 / 0.2e1 + t517;
t549 = qJD(1) * t99;
t477 = t581 * t93;
t10 = (t477 + t567) * t370 - t42 * t368 + t222 * t608 + t221 * t183;
t548 = t10 * qJD(1);
t19 = -t129 * t288 - t130 * t285 - t142 * t286 - t143 * t283;
t547 = t19 * qJD(1);
t20 = -t610 * t286 + (t129 - t148) * t283;
t546 = t20 * qJD(1);
t25 = t129 * t142 + t130 * t143 + t318 * t319;
t543 = t25 * qJD(1);
t26 = t129 * t147 + t130 * t148 + t318 * t486;
t542 = t26 * qJD(1);
t34 = -t129 * t368 + t142 * t370 - t319 * t283 - t318 * t285;
t541 = t34 * qJD(1);
t35 = -t130 * t368 + t143 * t370 + t319 * t286 + t318 * t288;
t540 = t35 * qJD(1);
t525 = t367 * t283;
t361 = t368 ^ 2;
t521 = t369 * t361;
t49 = -t178 * t183 - t180 * t608;
t519 = t49 * qJD(1);
t363 = t370 ^ 2;
t341 = t363 - t361;
t459 = t214 * t582;
t101 = -t459 + t517;
t516 = qJD(1) * t101;
t102 = -t459 - t517;
t515 = qJD(1) * t102;
t176 = t443 - t271 / 0.2e1;
t514 = qJD(1) * t176;
t274 = -t308 + t488;
t223 = -t274 * t370 - t361 * t580;
t512 = qJD(1) * t223;
t224 = -pkin(6) * t521 - t275 * t370;
t511 = qJD(1) * t224;
t509 = qJD(2) * t276;
t508 = qJD(2) * t367;
t507 = qJD(2) * t369;
t506 = qJD(3) * t608;
t505 = qJD(3) * t367;
t504 = qJD(3) * t369;
t503 = qJD(3) * t370;
t502 = qJD(4) * t370;
t500 = qJD(5) * t276;
t151 = t274 * t368 + (-t348 + t317) * t370;
t499 = t151 * qJD(1);
t152 = t316 * t370 + (-t275 + t485) * t368;
t498 = t152 * qJD(1);
t406 = t537 / 0.2e1 + t534 / 0.2e1;
t198 = (t593 + t406) * t370;
t497 = t198 * qJD(1);
t458 = t533 / 0.2e1;
t199 = t592 + (t458 + t594) * t370;
t496 = t199 * qJD(1);
t314 = t341 * t367;
t495 = t314 * qJD(1);
t315 = t363 * t369 - t521;
t494 = t315 * qJD(1);
t493 = t341 * qJD(1);
t491 = t368 * qJD(2);
t489 = t370 * qJD(2);
t484 = pkin(1) * t492;
t483 = pkin(1) * t490;
t482 = t576 / 0.2e1;
t481 = t574 / 0.2e1;
t474 = t365 * pkin(3) + pkin(4);
t467 = t367 * t507;
t466 = t369 * t491;
t465 = t367 * t503;
t464 = t369 * t503;
t463 = t367 * t504;
t462 = t368 * t489;
t461 = t368 * t490;
t457 = -t522 / 0.2e1;
t456 = -t211 / 0.2e1 - t233 / 0.2e1;
t455 = t346 / 0.2e1 + t359 / 0.2e1;
t452 = t369 * t481;
t451 = -qJD(3) + t490;
t450 = -qJD(5) + t490;
t449 = t367 * t466;
t447 = t476 / 0.2e1;
t446 = -t475 / 0.2e1;
t442 = t490 - qJD(3) / 0.2e1;
t439 = t212 / 0.2e1 - t538 / 0.2e1;
t372 = t178 * t597 + t414 * t603 - t582 * t86 + t618;
t294 = t366 * t577 - t581 * t474;
t392 = -t565 / 0.2e1 + t479 / 0.2e1;
t376 = t294 * t585 + t392;
t1 = t372 + t376;
t63 = t214 * t277 + t276 * t403;
t437 = -t1 * qJD(1) + t63 * qJD(2);
t371 = t414 * t602 + t597 * t608 - t380;
t295 = t366 * t474 + t581 * t577;
t393 = -t567 / 0.2e1 - t477 / 0.2e1;
t375 = t295 * t585 + t393;
t2 = t371 + t375;
t64 = -t214 * t276 + t277 * t403;
t436 = -t2 * qJD(1) + t64 * qJD(2);
t384 = (t285 * t590 + t288 * t588) * pkin(3);
t5 = (t130 / 0.2e1 + t147 / 0.2e1) * t306 + (t148 / 0.2e1 + t605) * t304 + (t599 + t600) * t283 + t384;
t435 = t5 * qJD(1);
t62 = t355 * t576;
t374 = t610 * t600 + (t604 - t605) * t245;
t409 = t142 * t587 + t143 * t589;
t7 = (t318 * t586 + t355 * t457 + t409) * pkin(3) + t374;
t434 = -t7 * qJD(1) + t62 * qJD(2);
t433 = qJD(2) * t24 + t634;
t432 = qJD(1) * t24 + t633;
t431 = qJD(2) * t33 + t634;
t430 = qJD(1) * t33 + t633;
t108 = -t245 * t304 - t306 * t453;
t373 = t129 * t306 / 0.2e1 + t130 * t594 + t286 * t599 + t245 * t596;
t27 = t373 + t455;
t429 = -qJD(1) * t27 + qJD(2) * t108;
t195 = t304 * t576 + t306 * t355;
t378 = -t245 * t582 + t286 * t591 + t318 * t593;
t37 = (-t525 / 0.2e1 + (t304 * t584 + t587) * t368) * pkin(3) + t378 + t439;
t428 = -qJD(1) * t37 + qJD(2) * t195;
t196 = -t304 * t355 + t306 * t576;
t377 = -t283 * t591 + t318 * t594 + t453 * t583;
t36 = (t286 * t586 + (t306 * t584 + t590) * t368) * pkin(3) + t377 + t456;
t427 = -qJD(1) * t36 + qJD(2) * t196;
t426 = t451 * t368;
t137 = 0.2e1 * t443 - t528;
t424 = qJD(1) * t137 + t510;
t146 = t283 * t304 + t286 * t306;
t190 = t283 ^ 2 + t286 ^ 2;
t423 = qJD(1) * t190 + qJD(2) * t146;
t236 = t304 ^ 2 + t306 ^ 2;
t422 = qJD(1) * t146 + qJD(2) * t236;
t408 = -t283 * t589 + t286 * t588;
t154 = (t457 + t408) * pkin(3);
t407 = t304 * t590 + t306 * t588;
t185 = (t586 + t407) * pkin(3);
t421 = qJD(1) * t154 + qJD(2) * t185;
t418 = -qJD(1) * t283 - qJD(2) * t304;
t417 = qJD(1) * t286 + qJD(2) * t306;
t415 = t621 + t624;
t413 = t573 / 0.2e1 - t575 / 0.2e1;
t391 = t413 * t367;
t234 = t316 / 0.2e1 - t391;
t411 = pkin(2) * t507 - qJD(1) * t234;
t390 = t413 * t369;
t235 = -t317 / 0.2e1 + t390;
t410 = pkin(2) * t508 - qJD(1) * t235;
t379 = t86 * t583 + t618;
t11 = t379 + t392;
t402 = qJD(1) * t11 - t403 * t509;
t12 = -t380 + t393;
t401 = qJD(1) * t12 + t214 * t509;
t396 = qJD(2) * t97 - qJD(5) * t176 - t158;
t395 = t369 * t426;
t299 = (t360 / 0.2e1 - t362 / 0.2e1) * t368;
t394 = -qJD(1) * t299 + t467;
t389 = t294 * t582 + t480 / 0.2e1;
t388 = t295 * t583 + t478 / 0.2e1;
t387 = qJD(1) * t367 * t521 + qJD(2) * t299;
t313 = t340 * t361;
t386 = qJD(1) * t313 + 0.2e1 * t449;
t15 = t447 + (-t95 / 0.2e1 + t82 / 0.2e1) * t366 + t388;
t43 = t445 + t635 / 0.2e1;
t383 = qJD(1) * t15 + qJD(2) * t43 + qJD(3) * t295;
t16 = t446 + (-t94 / 0.2e1 - t92 / 0.2e1) * t366 + t389;
t44 = t444 + t611 / 0.2e1;
t382 = qJD(1) * t16 - qJD(2) * t44 - qJD(3) * t294;
t381 = qJD(2) * t96 + qJD(5) * t137 - t158 + t506;
t353 = -t492 / 0.2e1;
t352 = t492 / 0.2e1;
t351 = t491 / 0.2e1;
t303 = t442 * t368;
t298 = t299 * qJD(3);
t282 = (-qJD(5) / 0.2e1 + t442) * t368;
t279 = t295 * qJD(5);
t278 = t294 * qJD(5);
t208 = t348 + t317 / 0.2e1 + t390;
t207 = t487 - t316 / 0.2e1 - t391;
t201 = t306 * t582 + t406 * t370;
t200 = t304 * t583 + t370 * t458 + t592;
t184 = t407 * pkin(3) + t482;
t153 = pkin(3) * t408 + t452;
t135 = t146 * qJD(4);
t103 = t544 / 0.2e1 + t438;
t100 = t545 / 0.2e1 + t517;
t47 = t101 * qJD(2) - t630;
t46 = 0.2e1 * t445 - t613;
t45 = t636 + 0.2e1 * t444;
t39 = t286 * t482 + t306 * t452 + t574 * t590 - t377 + t456;
t38 = pkin(3) * t525 / 0.2e1 + t304 * t452 + t365 * t481 - t378 + t439;
t31 = -t102 * qJD(2) + t178 * t451 - t621;
t28 = -t373 + t455;
t18 = -t568 / 0.2e1 - t563 / 0.2e1 + t447 - t388;
t17 = t566 / 0.2e1 + t446 - t564 / 0.2e1 - t389;
t14 = -t379 + t392;
t13 = t380 + t393;
t8 = t409 * pkin(3) + t318 * t482 + t355 * t452 - t374;
t6 = t129 * t594 - t283 * t599 + t304 * t604 + t453 * t596 + t610 * t593 + t384;
t4 = -t371 + t375;
t3 = -t372 + t376;
t23 = [0, 0, 0, t462, t341 * qJD(2), 0, 0, 0, -pkin(1) * t491, -pkin(1) * t489, -t361 * t463 + t362 * t462, -t313 * qJD(3) - 0.2e1 * t370 * t449, -t315 * qJD(2) + t368 * t465, t314 * qJD(2) + t368 * t464, -t462, -qJD(2) * t151 - qJD(3) * t224, qJD(2) * t152 + qJD(3) * t223, -t34 * qJD(2) - t60 * qJD(3) + t286 * t502, t35 * qJD(2) + t61 * qJD(3) - t283 * t502, qJD(2) * t19 + qJD(3) * t20 + qJD(4) * t190, qJD(2) * t25 + qJD(3) * t26 + qJD(4) * t52, (qJD(2) * t183 - t415) * t608, qJD(2) * t49 + t637 * t619, -t71 * qJD(2) + t370 * t415, -t70 * qJD(2) + (qJD(5) * t608 + t506) * t370, -t462, -t9 * qJD(2) - t21 * qJD(3) - t30 * qJD(5) + t502 * t608, t10 * qJD(2) + t22 * qJD(3) + t29 * qJD(5) - t178 * t502; 0, 0, 0, t461, t493, t489, -t491, 0, -pkin(6) * t489 - t484, pkin(6) * t491 - t483, -t298 + (t362 * t492 + t467) * t370, -0.2e1 * t368 * t463 + t370 * t606, t367 * t491 - t494, t466 + t495, -t303, -t499 + (t367 * t441 - t485) * qJD(2) + t208 * qJD(3), t498 + (t369 * t441 + t488) * qJD(2) + t207 * qJD(3), -t541 + (t285 * t355 + t304 * t319 + t368 * t453) * qJD(2) + t38 * qJD(3) + t201 * qJD(4), t540 + (-t245 * t368 + t288 * t355 + t306 * t319) * qJD(2) + t39 * qJD(3) + t200 * qJD(4), t547 + (-t142 * t306 - t143 * t304 - t245 * t285 - t288 * t453) * qJD(2) + t6 * qJD(3) + t135, t543 + (t142 * t453 + t143 * t245 + t319 * t355) * qJD(2) + t8 * qJD(3) + t28 * qJD(4), t183 * t420 + t570, t519 + (-t180 * t403 - t183 * t214) * qJD(2) + t571, -qJD(3) * t102 + qJD(5) * t100 + t403 * t491 - t553, -qJD(3) * t96 + qJD(5) * t103 - t214 * t491 - t554, -t282, -t562 + (t180 * t276 + t214 * t222 + t368 * t404) * qJD(2) + t3 * qJD(3) - t97 * qJD(4) + t14 * qJD(5), t548 + (t183 * t276 + t222 * t403 - t368 * t86) * qJD(2) + t4 * qJD(3) + t101 * qJD(4) + t13 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t387, -t386, t367 * t426, t395, t351, qJD(2) * t208 - qJD(3) * t275 - t511, qJD(2) * t207 + qJD(3) * t274 + t512, qJD(2) * t38 + qJD(3) * t147 - t556, qJD(2) * t39 - qJD(3) * t148 + t555, t546 + t6 * qJD(2) + (t283 * t365 - t286 * t364) * t569, t542 + t8 * qJD(2) + t153 * qJD(4) + (t147 * t365 + t148 * t364) * t569, t399, t433, t31, -t381, t351, qJD(2) * t3 + qJD(3) * t50 + qJD(5) * t18 - t561, qJD(2) * t4 - qJD(3) * t51 + qJD(5) * t17 + t560; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t201 * qJD(2) + t286 * t490, t200 * qJD(2) - t283 * t490, t423, qJD(2) * t28 + qJD(3) * t153 + t557, 0, 0, 0, 0, 0, -t396, t47; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t399, t431, t100 * qJD(2) + t178 * t450 - t624, t103 * qJD(2) - t137 * qJD(3) + t450 * t608, t351, qJD(2) * t14 + qJD(3) * t18 + qJD(4) * t176 - qJD(5) * t42 - t558, qJD(2) * t13 + qJD(3) * t17 + qJD(5) * t41 + t559; 0, 0, 0, -t461, -t493, 0, 0, 0, t484, t483, -t362 * t461 - t298, 0.2e1 * t367 * t395, -t464 + t494, t465 - t495, t303, qJD(3) * t235 + t499, qJD(3) * t234 - t498, -qJD(3) * t37 - qJD(4) * t198 + t541, -qJD(3) * t36 - qJD(4) * t199 - t540, -qJD(3) * t5 + t135 - t547, -qJD(3) * t7 - qJD(4) * t27 - t543, -t183 * t513 + t570, -t519 + t571, -qJD(3) * t101 - qJD(5) * t99 + t553, -qJD(3) * t97 - qJD(5) * t98 + t554, t282, -qJD(3) * t1 - qJD(4) * t96 - qJD(5) * t11 + t562, -qJD(3) * t2 + qJD(4) * t102 - qJD(5) * t12 - t548; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t463, t340 * qJD(3), 0, 0, 0, -pkin(2) * t505, -pkin(2) * t504, t195 * qJD(3), t196 * qJD(3), qJD(4) * t236, qJD(3) * t62 + qJD(4) * t108, -t518 * t403, t637 * t620, 0, 0, 0, qJD(3) * t63 + t403 * t500, qJD(3) * t64 - t214 * t500; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t394, t606, -t451 * t369, t451 * t367, t353, -pkin(7) * t504 - t410, pkin(7) * t505 - t411, -qJD(3) * t245 + t428, -qJD(3) * t453 + t427, (t304 * t365 - t306 * t364) * t569 - t435, t184 * qJD(4) + (-t245 * t365 + t364 * t453) * t569 + t434, t397, t432, -t516 - t518, -t416 - t551, t353, -qJD(3) * t86 + t46 * qJD(5) + t437, -qJD(3) * t404 + t45 * qJD(5) + t436; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t497, -t496, t422, qJD(3) * t184 + t429, 0, 0, 0, 0, 0, -t552, t515; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t397, t430, -t549 - t518, -t416 - t550, t353, qJD(3) * t46 - qJD(5) * t86 - t402, qJD(3) * t45 - qJD(5) * t404 - t401; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t387, t386, (-t367 * t492 + t507) * t370, (-t468 - t508) * t370, t351, -qJD(2) * t235 + t511, -qJD(2) * t234 - t512, qJD(2) * t37 - qJD(4) * t286 + t556, qJD(2) * t36 + qJD(4) * t283 - t555, qJD(2) * t5 - t546, qJD(2) * t7 + qJD(4) * t154 - t542, -t399, -t433, t47, t396, t351, qJD(2) * t1 - qJD(4) * t608 - qJD(5) * t15 + t561, qJD(2) * t2 - qJD(5) * t16 - t560 + t623; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t394, -t606, t369 * t490, -t367 * t490, t352, t410, t411, -qJD(4) * t306 - t428, qJD(4) * t304 - t427, t435, qJD(4) * t185 - t434, -t397, -t432, t516, t551, t352, -qJD(5) * t43 - t437 - t607, qJD(5) * t44 - t436 + t622; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t279, t278; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t417, -t418, 0, t421, 0, 0, 0, 0, 0, -t420, -t616; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t514, 0, -t279 - t383, t278 - t382; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t198 * qJD(2) - t286 * t451, t199 * qJD(2) + t283 * t451, -t423, qJD(2) * t27 - qJD(3) * t154 - t557, 0, 0, 0, 0, 0, t381, t31; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t306 + t497, -qJD(3) * t304 + t496, -t422, -qJD(3) * t185 - t429, 0, 0, 0, 0, 0, t416 + t552, -t515 - t518; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t417, t418, 0, -t421, 0, 0, 0, 0, 0, t420, t616; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t424, t616; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t399, -t431, t99 * qJD(2) - t630, t98 * qJD(2) + t176 * qJD(3) - t158, t351, qJD(2) * t11 + qJD(3) * t15 - qJD(4) * t137 + t558, qJD(2) * t12 + qJD(3) * t16 - t559 + t623; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t397, -t430, t549, t550, t352, qJD(3) * t43 + t402 - t607, -qJD(3) * t44 + t401 + t622; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t514, 0, t383, t382; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t424, -t616; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t23;
