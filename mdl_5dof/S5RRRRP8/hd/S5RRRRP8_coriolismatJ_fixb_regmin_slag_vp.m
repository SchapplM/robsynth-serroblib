% Calculate minimal parameter regressor of coriolis matrix for
% S5RRRRP8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d4]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x28]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2021-01-16 00:22
% Revision: 24b2e7d74a0c1a3b64fa2f8f5ad758691ad61af3 (2021-01-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRRP8_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRP8_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRP8_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRRP8_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2021-01-16 00:21:25
% EndTime: 2021-01-16 00:21:57
% DurationCPUTime: 12.69s
% Computational Cost: add. (8820->597), mult. (18845->791), div. (0->0), fcn. (18907->6), ass. (0->447)
t387 = cos(qJ(3));
t629 = pkin(7) + pkin(8);
t345 = t629 * t387;
t386 = cos(qJ(4));
t336 = t386 * t345;
t384 = sin(qJ(3));
t344 = t629 * t384;
t383 = sin(qJ(4));
t543 = t383 * t344;
t268 = t336 - t543;
t535 = t386 * t387;
t327 = t383 * t384 - t535;
t552 = t327 * qJ(5);
t181 = t268 - t552;
t385 = sin(qJ(2));
t593 = t384 * pkin(3);
t479 = pkin(6) + t593;
t444 = t479 * t385;
t536 = t386 * t384;
t541 = t383 * t387;
t331 = t536 + t541;
t300 = t331 * t385;
t600 = t300 * pkin(4);
t235 = t444 + t600;
t604 = pkin(3) * t387;
t374 = -pkin(2) - t604;
t596 = t327 * pkin(4);
t291 = t374 + t596;
t611 = t331 / 0.2e1;
t540 = t384 * t385;
t303 = -t383 * t540 + t385 * t535;
t615 = t303 / 0.2e1;
t530 = t235 * t611 + t291 * t615;
t388 = cos(qJ(2));
t606 = -t388 / 0.2e1;
t645 = t181 * t606 - t530;
t627 = -t181 / 0.2e1;
t616 = -t303 / 0.2e1;
t650 = t181 * t616;
t443 = -pkin(2) * t388 - t385 * pkin(7);
t341 = -pkin(1) + t443;
t325 = t387 * t341;
t538 = t385 * t387;
t448 = -pkin(8) * t538 + t325;
t603 = pkin(6) * t384;
t229 = (-pkin(3) - t603) * t388 + t448;
t533 = t387 * t388;
t495 = pkin(6) * t533;
t282 = t384 * t341 + t495;
t254 = -pkin(8) * t540 + t282;
t238 = t386 * t254;
t123 = t383 * t229 + t238;
t556 = t300 * qJ(5);
t109 = t123 - t556;
t637 = t386 * t344 + t383 * t345;
t639 = t331 * qJ(5) + t637;
t644 = -t639 / 0.2e1;
t646 = t644 + t639 / 0.2e1;
t649 = t646 * t109;
t539 = t384 * t388;
t496 = pkin(6) * t539;
t253 = t448 - t496;
t546 = t383 * t253;
t131 = -t238 - t546;
t112 = t131 + t556;
t648 = t109 + t112;
t497 = qJD(3) + qJD(4);
t612 = -t331 / 0.2e1;
t618 = t300 / 0.2e1;
t642 = t109 * t612 - t618 * t639 + t650;
t641 = t497 * t639;
t617 = -t300 / 0.2e1;
t614 = -t327 / 0.2e1;
t605 = t388 / 0.2e1;
t640 = t639 * t605;
t638 = t497 * t637;
t456 = t497 * t331;
t210 = t386 * t229;
t545 = t383 * t254;
t122 = -t210 + t545;
t294 = t303 * qJ(5);
t108 = t122 + t294;
t105 = -pkin(4) * t388 - t108;
t532 = t105 + t108;
t589 = t388 * pkin(7);
t592 = t385 * pkin(2);
t346 = -t589 + t592;
t337 = t387 * t346;
t366 = pkin(6) * t540;
t237 = t385 * pkin(3) - pkin(8) * t533 + t337 + t366;
t212 = t386 * t237;
t334 = t384 * t346;
t494 = pkin(6) * t538;
t259 = -pkin(8) * t539 + t334 - t494;
t544 = t383 * t259;
t528 = t212 / 0.2e1 - t544 / 0.2e1;
t348 = t383 * t539;
t305 = t386 * t533 - t348;
t553 = t305 * qJ(5);
t480 = -t553 / 0.2e1 + t528;
t636 = t235 * t614 + t291 * t617;
t415 = -t541 / 0.2e1 - t536 / 0.2e1;
t197 = (t612 - t415) * t388;
t499 = t388 * qJD(1);
t276 = t303 * t499;
t634 = qJD(2) * t197 + t497 * t303 - t276;
t379 = t384 ^ 2;
t381 = t387 ^ 2;
t359 = t381 - t379;
t501 = t385 * qJD(1);
t478 = t387 * t501;
t633 = qJD(2) * t359 - 0.2e1 * t384 * t478;
t632 = t303 ^ 2;
t631 = t331 ^ 2;
t630 = -pkin(4) / 0.2e1;
t460 = t212 - t544;
t591 = t385 * pkin(4);
t107 = t460 - t553 + t591;
t628 = t107 / 0.2e1;
t622 = t181 / 0.2e1;
t621 = -t210 / 0.2e1;
t620 = -t229 / 0.2e1;
t619 = -t238 / 0.2e1;
t613 = t327 / 0.2e1;
t610 = -t336 / 0.2e1;
t590 = t386 * pkin(3);
t373 = pkin(4) + t590;
t609 = -t373 / 0.2e1;
t608 = t373 / 0.2e1;
t607 = t386 / 0.2e1;
t602 = t112 * pkin(4);
t601 = t181 * pkin(4);
t302 = t331 * t388;
t599 = t302 * pkin(4);
t598 = t303 * pkin(4);
t597 = t305 * pkin(4);
t595 = t331 * pkin(4);
t594 = t383 * pkin(3);
t551 = t331 * t303;
t555 = t300 * t327;
t97 = -t551 + t555;
t588 = t497 * t97;
t587 = pkin(3) * qJD(3);
t586 = pkin(3) * qJD(4);
t585 = pkin(4) * qJD(4);
t12 = t532 * t300;
t584 = qJD(1) * t12;
t156 = t235 * t303;
t15 = pkin(4) * t156 - t532 * t109;
t583 = qJD(1) * t15;
t31 = -t105 * t303 - t109 * t300;
t582 = qJD(1) * t31;
t493 = pkin(3) * t538;
t256 = t493 + t598;
t44 = t112 * t388 - t256 * t300 - t156;
t581 = qJD(1) * t44;
t537 = t386 * t253;
t132 = t537 - t545;
t113 = t132 - t294;
t564 = t235 * t300;
t45 = t113 * t388 + t256 * t303 - t564;
t580 = qJD(1) * t45;
t46 = t632 * pkin(4) - t108 * t388 - t564;
t579 = qJD(1) * t46;
t47 = -t109 * t388 - t300 * t598 - t156;
t578 = qJD(1) * t47;
t482 = pkin(3) * t605;
t446 = t482 + t253 / 0.2e1;
t66 = t446 * t386 + t621;
t577 = qJD(1) * t66;
t244 = t303 * t444;
t76 = t131 * t388 - t300 * t493 - t244;
t576 = qJD(1) * t76;
t77 = t132 * t388 + (-t479 * t300 + t303 * t604) * t385;
t575 = qJD(1) * t77;
t89 = -t122 * t388 - t300 * t444;
t574 = qJD(1) * t89;
t90 = -t123 * t388 - t244;
t573 = qJD(1) * t90;
t211 = t383 * t237;
t246 = t386 * t259;
t527 = t246 + t211;
t554 = t302 * qJ(5);
t111 = t527 - t554;
t11 = -t105 * t305 - t107 * t303 - t109 * t302 - t111 * t300;
t571 = t11 * qJD(1);
t13 = -t648 * t303 + (t105 - t113) * t300;
t570 = t13 * qJD(1);
t364 = pkin(3) * t539;
t378 = t388 * pkin(6);
t338 = t378 + t364;
t236 = t338 + t599;
t14 = t105 * t107 + t109 * t111 + t235 * t236;
t569 = t14 * qJD(1);
t16 = t105 * t112 + t109 * t113 + t235 * t256;
t568 = t16 * qJD(1);
t23 = -t105 * t385 + t107 * t388 - t235 * t302 - t236 * t300;
t565 = t23 * qJD(1);
t561 = t637 * t388;
t560 = t268 * t388;
t28 = -t109 * t385 + t111 * t388 + t235 * t305 + t236 * t303;
t559 = t28 * qJD(1);
t218 = t291 * t331;
t35 = t122 * t385 - t338 * t300 - t302 * t444 + t460 * t388;
t550 = t35 * qJD(1);
t36 = t527 * t388 + t338 * t303 + (t479 * t305 - t123) * t385;
t549 = t36 * qJD(1);
t548 = t374 * t300;
t547 = t374 * t303;
t380 = t385 ^ 2;
t534 = t387 * t380;
t129 = -t300 * t611 + t303 * t614;
t531 = t497 * t129;
t313 = t327 * qJD(4);
t526 = -t327 * qJD(3) - t313;
t382 = t388 ^ 2;
t360 = t382 - t380;
t171 = t300 * t385 - t302 * t388;
t525 = qJD(1) * t171;
t172 = -t303 * t385 + t305 * t388;
t524 = qJD(1) * t172;
t281 = -t325 + t496;
t230 = -t281 * t388 - t380 * t603;
t523 = qJD(1) * t230;
t231 = -pkin(6) * t534 - t282 * t388;
t522 = qJD(1) * t231;
t521 = qJD(1) * t303;
t520 = qJD(2) * t331;
t519 = qJD(2) * t374;
t518 = qJD(2) * t384;
t517 = qJD(2) * t387;
t516 = qJD(3) * t384;
t515 = qJD(3) * t387;
t514 = qJD(3) * t388;
t513 = qJD(4) * t109;
t512 = qJD(4) * t181;
t511 = qJD(4) * t331;
t116 = -t300 * t305 - t302 * t303;
t510 = t116 * qJD(1);
t147 = t281 * t385 + (-t366 + t337) * t388;
t509 = t147 * qJD(1);
t148 = t334 * t388 + (-t282 + t495) * t385;
t508 = t148 * qJD(1);
t507 = t197 * qJD(1);
t198 = (t612 + t415) * t388;
t189 = t198 * qJD(1);
t465 = t386 * t605;
t199 = t327 * t606 + t387 * t465 - t348 / 0.2e1;
t190 = t199 * qJD(1);
t200 = t348 / 0.2e1 + (t614 - t535 / 0.2e1) * t388;
t506 = t200 * qJD(1);
t505 = t300 * qJD(5);
t293 = t303 * qJD(5);
t330 = t360 * t384;
t504 = t330 * qJD(1);
t315 = t331 * qJD(5);
t333 = t382 * t387 - t534;
t503 = t333 * qJD(1);
t502 = t360 * qJD(1);
t500 = t385 * qJD(2);
t498 = t388 * qJD(2);
t492 = pkin(1) * t501;
t491 = pkin(1) * t499;
t490 = t383 * t586;
t489 = t386 * t586;
t488 = -t604 / 0.2e1;
t487 = t600 / 0.2e1;
t486 = t596 / 0.2e1;
t485 = -t594 / 0.2e1;
t484 = t593 / 0.2e1;
t483 = t590 / 0.2e1;
t481 = t609 + t630;
t477 = t384 * t517;
t476 = t387 * t500;
t475 = t384 * t514;
t474 = t387 * t514;
t473 = t384 * t515;
t472 = t385 * t498;
t471 = t385 * t499;
t470 = t561 / 0.2e1;
t469 = t383 * t617;
t468 = t383 * t614;
t464 = t108 / 0.2e1 + t105 / 0.2e1;
t462 = -t211 / 0.2e1 - t246 / 0.2e1;
t461 = pkin(3) * t497;
t458 = t105 * t613 + t642;
t134 = qJD(2) * t198 - t276;
t455 = t497 * t388;
t454 = t385 * t485;
t453 = t493 / 0.2e1;
t452 = -qJD(3) + t499;
t422 = t444 / 0.2e1;
t451 = t331 * t422 + t528 + t547 / 0.2e1;
t450 = t384 * t476;
t447 = -t590 / 0.2e1 + t608;
t445 = t499 - qJD(3) / 0.2e1;
t295 = t593 + t595;
t389 = t105 * t627 + t113 * t622 + t235 * t295 / 0.2e1 + t256 * t291 / 0.2e1 + t648 * t644;
t407 = t107 * t608 + t111 * t594 / 0.2e1;
t1 = -t389 + t407;
t34 = t291 * t295;
t442 = -t1 * qJD(1) + t34 * qJD(2);
t3 = t464 * t181 + t649 + (t628 - t530) * pkin(4);
t41 = pkin(4) * t218;
t441 = -qJD(1) * t3 + qJD(2) * t41;
t390 = t108 * t613 + t458 - t642;
t8 = t597 / 0.2e1 + t390;
t440 = qJD(1) * t8;
t406 = t302 * t485 + t305 * t609;
t5 = (t109 / 0.2e1 + t112 / 0.2e1) * t331 + (t113 / 0.2e1 - t105 / 0.2e1) * t327 + (t622 + t627) * t303 + t646 * t300 + t406;
t439 = t5 * qJD(1);
t438 = -t547 / 0.2e1 + t528;
t423 = -t444 / 0.2e1;
t437 = t327 * t423 + t462 - t548 / 0.2e1;
t394 = t105 * t611 + t109 * t613 + t181 * t618 - t615 * t639;
t419 = t364 / 0.2e1 + t378 / 0.2e1 + t599 / 0.2e1;
t17 = t394 + t419;
t78 = -t181 * t327 + t331 * t639;
t436 = -qJD(1) * t17 + qJD(2) * t78;
t126 = t295 * t327 + t218;
t395 = t256 * t613 + t295 * t618 - t645;
t20 = t481 * t385 + t395 - t480;
t435 = -qJD(1) * t20 - qJD(2) * t126;
t217 = t291 * t327;
t127 = t295 * t331 - t217;
t414 = t554 / 0.2e1 + t462;
t393 = t414 - t636;
t398 = t256 * t611 + t295 * t615 - t640;
t21 = t454 + t393 - t398;
t434 = qJD(1) * t21 - qJD(2) * t127;
t135 = -t327 * t595 - t218;
t24 = (t385 + t129) * pkin(4) + t480 + t645;
t433 = qJD(1) * t24 + qJD(2) * t135;
t136 = -pkin(4) * t631 + t217;
t409 = -pkin(4) * t551 + t640;
t26 = t393 + t409;
t432 = qJD(1) * t26 + qJD(2) * t136;
t297 = t300 ^ 2;
t149 = t297 - t632;
t52 = qJD(1) * t149 + qJD(2) * t97;
t326 = t327 ^ 2;
t182 = t326 - t631;
t62 = qJD(1) * t97 + qJD(2) * t182;
t193 = t327 * t593 + t331 * t374;
t396 = -t268 * t605 - t300 * t484;
t38 = (t327 * t488 + t479 * t612 + t483) * t385 + t396 + t438;
t431 = -t38 * qJD(1) + t193 * qJD(2);
t194 = -t327 * t374 + t331 * t593;
t397 = t593 * t616 + t470;
t413 = t548 / 0.2e1 + t462;
t37 = (t331 * t488 + t479 * t613 + t485) * t385 + t397 + t413;
t430 = -t37 * qJD(1) + t194 * qJD(2);
t258 = t610 + t336 / 0.2e1;
t64 = t619 + t238 / 0.2e1 + (t620 + t446) * t383;
t429 = qJD(1) * t64 + qJD(2) * t258;
t428 = t452 * t385;
t115 = t481 * t303 + (t469 - t538 / 0.2e1) * pkin(3);
t146 = t481 * t331 + (t468 - t384 / 0.2e1) * pkin(3);
t427 = qJD(1) * t115 + qJD(2) * t146;
t420 = t630 + t447;
t119 = t420 * t300;
t153 = t420 * t327;
t426 = qJD(1) * t119 + qJD(2) * t153;
t130 = t551 + t555;
t191 = t297 + t632;
t425 = qJD(1) * t191 + qJD(2) * t130;
t255 = t326 + t631;
t424 = qJD(1) * t130 + qJD(2) * t255;
t207 = -qJD(1) * t300 - qJD(2) * t327;
t208 = t520 + t521;
t421 = t589 / 0.2e1 - t592 / 0.2e1;
t405 = t421 * t384;
t251 = t334 / 0.2e1 - t405;
t418 = pkin(2) * t517 - qJD(1) * t251;
t404 = t421 * t387;
t252 = -t337 / 0.2e1 + t404;
t417 = pkin(2) * t518 - qJD(1) * t252;
t55 = t327 * t422 + t413 + t470;
t412 = qJD(1) * t55 + t327 * t519;
t54 = -t560 / 0.2e1 + t331 * t423 + t438;
t411 = qJD(1) * t54 - t331 * t519;
t410 = t387 * t428;
t81 = qJD(2) * t129 - t300 * t521;
t99 = -qJD(1) * t129 + t327 * t520;
t317 = (t379 / 0.2e1 - t381 / 0.2e1) * t385;
t408 = -qJD(1) * t317 + t477;
t186 = 0.2e1 * t610 + t543;
t403 = qJD(1) * t384 * t534 + qJD(2) * t317;
t329 = t359 * t380;
t402 = qJD(1) * t329 + 0.2e1 * t450;
t392 = (t109 * t607 - t464 * t383) * pkin(3) + t109 * t609;
t10 = -t602 / 0.2e1 + t392;
t391 = (t181 * t607 - t383 * t646) * pkin(3) + t181 * t609;
t30 = t601 / 0.2e1 + t391;
t306 = (-t373 + t590) * t594;
t400 = -qJD(1) * t10 - qJD(2) * t30 - qJD(3) * t306;
t399 = t414 + t636;
t67 = pkin(3) * t465 - t537 / 0.2e1 + t545 + t621;
t65 = 0.2e1 * t619 - t546 / 0.2e1 + (t482 + t620) * t383;
t370 = -t501 / 0.2e1;
t369 = t501 / 0.2e1;
t368 = t500 / 0.2e1;
t324 = t445 * t385;
t312 = t327 * qJD(5);
t309 = t317 * qJD(3);
t296 = (-qJD(4) / 0.2e1 + t445) * t385;
t250 = t258 * qJD(3);
t249 = t258 * qJD(4);
t202 = t366 + t337 / 0.2e1 + t404;
t201 = t494 - t334 / 0.2e1 - t405;
t192 = t208 * pkin(4);
t152 = t447 * t327 + t486;
t151 = t186 + t552;
t145 = pkin(3) * t468 + t331 * t609 + t484 + t595 / 0.2e1;
t133 = t199 * qJD(2) - t300 * t499;
t128 = t130 * qJD(5);
t121 = -t456 - t189;
t120 = -t190 + t526;
t118 = t447 * t300 + t487;
t114 = pkin(3) * t469 + t303 * t609 + t453 + t598 / 0.2e1;
t87 = -t200 * qJD(2) + (-qJD(4) + t452) * t300;
t61 = t66 * qJD(3);
t60 = t64 * qJD(3);
t59 = t66 * qJD(4);
t58 = t64 * qJD(4);
t57 = t560 / 0.2e1 + t451;
t56 = -t561 / 0.2e1 + t437;
t51 = t294 + t67;
t50 = t65 + t556;
t49 = t386 * t587 - t577;
t48 = t383 * t587 - t429;
t43 = -t386 * t461 + t577;
t42 = -t383 * t461 + t429;
t40 = t331 * t453 - t397 + t437 + t454;
t39 = t327 * t453 + t385 * t483 - t396 + t451;
t29 = -t601 / 0.2e1 + t391;
t27 = t399 - t409;
t25 = t303 * t486 + t331 * t487 + t480 + t591 - t645;
t22 = t454 + t398 + t399;
t19 = t385 * t608 + t591 / 0.2e1 + t395 + t480;
t18 = -t394 + t419;
t9 = t602 / 0.2e1 + t392;
t7 = -t597 / 0.2e1 + t390;
t6 = t112 * t612 + t113 * t614 - t617 * t639 + t406 + t458 - t650;
t4 = t532 * t627 + t649 + (t628 + t530) * pkin(4);
t2 = t389 + t407;
t32 = [0, 0, 0, t472, t360 * qJD(2), 0, 0, 0, -pkin(1) * t500, -pkin(1) * t498, -t380 * t473 + t381 * t472, -t329 * qJD(3) - 0.2e1 * t388 * t450, -t333 * qJD(2) + t385 * t475, t330 * qJD(2) + t385 * t474, -t472, -qJD(2) * t147 - qJD(3) * t231, qJD(2) * t148 + qJD(3) * t230, (qJD(2) * t305 - t300 * t497) * t303, qJD(2) * t116 + t149 * t497, -t172 * qJD(2) + t300 * t455, -t171 * qJD(2) + t303 * t455, -t472, -qJD(2) * t35 - qJD(3) * t76 - qJD(4) * t90, qJD(2) * t36 + qJD(3) * t77 + qJD(4) * t89, -t23 * qJD(2) - t44 * qJD(3) - t47 * qJD(4) + t293 * t388, t28 * qJD(2) + t45 * qJD(3) + t46 * qJD(4) - t388 * t505, qJD(2) * t11 + qJD(3) * t13 + qJD(4) * t12 + qJD(5) * t191, qJD(2) * t14 + qJD(3) * t16 + qJD(4) * t15 + qJD(5) * t31; 0, 0, 0, t471, t502, t498, -t500, 0, -pkin(6) * t498 - t492, pkin(6) * t500 - t491, -t309 + (t381 * t501 + t477) * t388, -0.2e1 * t385 * t473 + t388 * t633, t384 * t500 - t503, t476 + t504, -t324, -t509 + (t384 * t443 - t495) * qJD(2) + t202 * qJD(3), t508 + (t387 * t443 + t496) * qJD(2) + t201 * qJD(3), t208 * t305 + t531, t510 + (-t302 * t331 - t305 * t327) * qJD(2) + t588, -t200 * t497 + t331 * t500 - t524, -t197 * t497 - t327 * t500 - t525, -t296, -t550 + (t302 * t374 + t327 * t338 - t385 * t637) * qJD(2) + t39 * qJD(3) + t57 * qJD(4), t549 + (-t268 * t385 + t305 * t374 + t331 * t338) * qJD(2) + t40 * qJD(3) + t56 * qJD(4), -t565 + (t236 * t327 + t291 * t302 - t385 * t639) * qJD(2) + t19 * qJD(3) + t25 * qJD(4) - t198 * qJD(5), t559 + (-t181 * t385 + t236 * t331 + t291 * t305) * qJD(2) + t22 * qJD(3) + t27 * qJD(4) + t199 * qJD(5), t571 + (-t107 * t331 - t111 * t327 - t181 * t302 + t305 * t639) * qJD(2) + t6 * qJD(3) + t7 * qJD(4) + t128, t569 + (-t107 * t639 + t111 * t181 + t236 * t291) * qJD(2) + t2 * qJD(3) + t4 * qJD(4) + t18 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t403, -t402, t384 * t428, t410, t368, qJD(2) * t202 - qJD(3) * t282 - t522, qJD(2) * t201 + qJD(3) * t281 + t523, t81, t52, t87, -t634, t368, qJD(2) * t39 + qJD(3) * t131 + qJD(4) * t65 - t576, qJD(2) * t40 - qJD(3) * t132 + qJD(4) * t67 + t575, qJD(2) * t19 + qJD(3) * t112 + qJD(4) * t50 - t581, qJD(2) * t22 - qJD(3) * t113 + qJD(4) * t51 + t580, t570 + t6 * qJD(2) + (t373 * t300 - t303 * t594) * qJD(3) + t118 * qJD(4), t568 + t2 * qJD(2) + (t112 * t373 + t113 * t594) * qJD(3) + t9 * qJD(4) + t114 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t81, t52, t87, -t634, t368, qJD(2) * t57 + qJD(3) * t65 - qJD(4) * t123 - t573, qJD(2) * t56 + qJD(3) * t67 + qJD(4) * t122 + t574, qJD(2) * t25 + qJD(3) * t50 - t513 - t578, qJD(2) * t27 + qJD(3) * t51 + qJD(4) * t108 + t579, qJD(2) * t7 + qJD(3) * t118 + t300 * t585 + t584, -pkin(4) * t513 + qJD(2) * t4 + qJD(3) * t9 + t583; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t134, t133, t425, qJD(2) * t18 + qJD(3) * t114 + t582; 0, 0, 0, -t471, -t502, 0, 0, 0, t492, t491, -t381 * t471 - t309, 0.2e1 * t384 * t410, -t474 + t503, t475 - t504, t324, qJD(3) * t252 + t509, qJD(3) * t251 - t508, -t305 * t521 + t531, -t510 + t588, -t199 * t497 + t524, -t198 * t497 + t525, t296, -qJD(3) * t38 - qJD(4) * t54 + t550, -qJD(3) * t37 - qJD(4) * t55 - t549, qJD(3) * t20 - qJD(4) * t24 - qJD(5) * t197 + t565, -qJD(3) * t21 - qJD(4) * t26 + qJD(5) * t200 - t559, -qJD(3) * t5 + qJD(4) * t8 + t128 - t571, -qJD(3) * t1 - qJD(4) * t3 - qJD(5) * t17 - t569; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t473, t359 * qJD(3), 0, 0, 0, -pkin(2) * t516, -pkin(2) * t515, -t327 * t456, t497 * t182, 0, 0, 0, qJD(3) * t193 + t374 * t511, qJD(3) * t194 - t313 * t374, qJD(3) * t126 - qJD(4) * t135, qJD(3) * t127 - qJD(4) * t136, qJD(5) * t255, qJD(3) * t34 + qJD(4) * t41 + qJD(5) * t78; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t408, t633, -t452 * t387, t452 * t384, t370, -pkin(7) * t515 - t417, pkin(7) * t516 - t418, -t99, t62, t120, t121, t370, -qJD(3) * t268 + t186 * qJD(4) + t431, t430 + t638, -qJD(3) * t181 + qJD(4) * t151 - t435, -t434 + t641, (t373 * t327 - t331 * t594) * qJD(3) + t152 * qJD(4) - t439, (-t181 * t373 - t594 * t639) * qJD(3) + t29 * qJD(4) + t145 * qJD(5) + t442; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t99, t62, t120, t121, t370, qJD(3) * t186 - qJD(4) * t268 - t411, -t412 + t638, qJD(3) * t151 - t433 - t512, -t432 + t641, pkin(4) * t313 + qJD(3) * t152 + t440, -pkin(4) * t512 + qJD(3) * t29 + t441; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t507, t506, t424, qJD(3) * t145 + t436; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t403, t402, (-t384 * t501 + t517) * t388, (-t478 - t518) * t388, t368, -qJD(2) * t252 + t522, -qJD(2) * t251 - t523, -t81, -t52, t133, t134, t368, qJD(2) * t38 + t576 + t58, qJD(2) * t37 - t575 + t59, -qJD(2) * t20 - t293 + t58 + t581, qJD(2) * t21 + t505 - t580 + t59, qJD(2) * t5 + qJD(4) * t119 - t570, qJD(2) * t1 + qJD(4) * t10 + qJD(5) * t115 - t568; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t408, -t633, t387 * t499, -t384 * t499, t369, t417, t418, t99, -t62, t190, t189, t369, t249 - t431, -t430, t249 - t315 + t435, t312 + t434, qJD(4) * t153 + t439, qJD(4) * t30 + qJD(5) * t146 - t442; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t490, -t489, -t490, -t489, 0, t306 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t42, t43, t42, t43, t426, -pkin(4) * t490 - t400; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t208, -t207, 0, t427; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t81, -t52, t133, t134, t368, qJD(2) * t54 + t573 - t60, qJD(2) * t55 - t574 - t61, qJD(2) * t24 - t293 + t578 - t60, qJD(2) * t26 + t505 - t579 - t61, -qJD(2) * t8 - qJD(3) * t119 - t584, -pkin(4) * t293 + qJD(2) * t3 - qJD(3) * t10 - t583; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t99, -t62, t190, t189, t369, -t250 + t411, t412, -t250 - t315 + t433, t312 + t432, -qJD(3) * t153 - t440, -pkin(4) * t315 - qJD(3) * t30 - t441; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t48, t49, t48, t49, -t426, t400; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t208, -t207, 0, -t192; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t634, t87, -t425, qJD(2) * t17 - qJD(3) * t115 + t303 * t585 - t582; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t507 + t456, -t506 + t526, -t424, pkin(4) * t511 - qJD(3) * t146 - t436; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t208, t207, 0, -t427; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t208, t207, 0, t192; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t32;
