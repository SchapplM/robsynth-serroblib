% Calculate vector of inverse dynamics joint torques for
% S5RRRRP10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,d1,d2,d3,d4]';
% MDP [28x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S5RRRRP10_convert_par2_MPV_fixb.m
% 
% Output:
% tau [5x1]
%   joint torques of inverse dynamics (contains inertial, gravitational Coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2021-01-16 00:37
% Revision: 24b2e7d74a0c1a3b64fa2f8f5ad758691ad61af3 (2021-01-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S5RRRRP10_invdynJ_fixb_mdp_slag_vp(qJ, qJD, qJDD, g, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1),zeros(28,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRP10_invdynJ_fixb_mdp_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRP10_invdynJ_fixb_mdp_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRRP10_invdynJ_fixb_mdp_slag_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRRP10_invdynJ_fixb_mdp_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRRRP10_invdynJ_fixb_mdp_slag_vp: pkin has to be [9x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [28 1]), ...
  'S5RRRRP10_invdynJ_fixb_mdp_slag_vp: MDP has to be [28x1] (double)'); 

%% Symbolic Calculation
% From invdyn_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2021-01-16 00:36:24
% EndTime: 2021-01-16 00:36:53
% DurationCPUTime: 13.70s
% Computational Cost: add. (7435->668), mult. (18378->897), div. (0->0), fcn. (14292->10), ass. (0->276)
t639 = cos(qJ(2));
t630 = sin(pkin(5));
t742 = qJD(1) * t630;
t614 = t639 * t742;
t681 = t614 - qJD(3);
t635 = sin(qJ(2));
t631 = cos(pkin(5));
t741 = qJD(1) * t631;
t724 = pkin(1) * t741;
t564 = pkin(7) * t614 + t635 * t724;
t634 = sin(qJ(3));
t638 = cos(qJ(3));
t817 = t564 + t681 * (pkin(3) * t634 - pkin(9) * t638);
t633 = sin(qJ(4));
t637 = cos(qJ(4));
t692 = t638 * t614;
t716 = t635 * t742;
t533 = t633 * t692 - t637 * t716;
t736 = qJD(3) * t638;
t683 = t633 * t736 - t533;
t768 = t634 * t635;
t774 = t630 * t638;
t571 = t631 * t768 + t774;
t572 = t630 * t768 - t631 * t638;
t636 = sin(qJ(1));
t640 = cos(qJ(1));
t759 = t640 * t639;
t684 = g(3) * t572 + g(1) * (-t571 * t636 + t634 * t759);
t697 = qJD(2) + t741;
t677 = qJD(3) * t697;
t731 = qJDD(1) * t631;
t691 = qJDD(2) + t731;
t739 = qJD(2) * t639;
t714 = t634 * t739;
t730 = qJDD(1) * t635;
t465 = t630 * (qJD(1) * (t635 * t736 + t714) + t634 * t730) + t634 * t677 - t638 * t691;
t732 = qJD(1) * qJD(2);
t709 = t635 * t732;
t690 = t630 * t709;
t728 = qJDD(1) * t639;
t613 = t630 * t728;
t727 = qJDD(3) - t613;
t655 = t690 + t727;
t816 = pkin(8) * t655;
t763 = t636 * t639;
t814 = g(2) * (t571 * t640 + t634 * t763);
t813 = g(3) * t630;
t696 = qJD(2) * t724;
t722 = pkin(1) * t731;
t717 = pkin(7) * t613 + t635 * t722 + t639 * t696;
t650 = -pkin(7) * t690 + t717;
t487 = pkin(8) * t691 + t650;
t688 = pkin(2) * t635 - pkin(8) * t639;
t664 = t688 * qJD(2);
t678 = -pkin(2) * t639 - pkin(8) * t635 - pkin(1);
t490 = (qJD(1) * t664 + qJDD(1) * t678) * t630;
t529 = pkin(8) * t697 + t564;
t559 = t678 * t630;
t535 = qJD(1) * t559;
t738 = qJD(3) * t634;
t695 = t634 * t487 - t638 * t490 + t529 * t736 + t535 * t738;
t422 = -pkin(3) * t655 + t695;
t545 = t634 * t697 + t638 * t716;
t502 = t637 * t545 - t633 * t681;
t673 = t634 * t691;
t713 = t638 * t739;
t729 = qJDD(1) * t638;
t643 = (t635 * t729 + (-t635 * t738 + t713) * qJD(1)) * t630 + t638 * t677 + t673;
t436 = qJD(4) * t502 + t633 * t643 - t637 * t655;
t416 = t436 * pkin(4) + qJDD(5) + t422;
t812 = -t416 + t684;
t701 = t637 * t681;
t735 = qJD(4) * t633;
t435 = qJD(4) * t701 + t545 * t735 - t633 * t655 - t637 * t643;
t500 = t545 * t633 + t701;
t543 = t634 * t716 - t638 * t697;
t536 = qJD(4) + t543;
t781 = t500 * t536;
t811 = -t435 - t781;
t780 = t502 * t536;
t810 = t436 + t780;
t775 = t630 * t635;
t615 = pkin(7) * t775;
t799 = pkin(1) * t639;
t557 = t615 + (-pkin(2) - t799) * t631;
t765 = t635 * t638;
t573 = t630 * t765 + t631 * t634;
t469 = pkin(3) * t572 - pkin(9) * t573 + t557;
t772 = t631 * t635;
t773 = t630 * t639;
t745 = pkin(1) * t772 + pkin(7) * t773;
t558 = pkin(8) * t631 + t745;
t752 = t638 * t558 + t634 * t559;
t471 = -pkin(9) * t773 + t752;
t754 = t633 * t469 + t637 * t471;
t723 = pkin(8) * t738;
t809 = t633 * t723 - t817 * t637;
t808 = t631 * t799 - t615;
t764 = t635 * t640;
t579 = t631 * t763 + t764;
t766 = t635 * t636;
t578 = -t631 * t759 + t766;
t676 = g(2) * t578 - g(3) * t773;
t652 = g(1) * t579 + t676;
t807 = t692 - t736;
t561 = -pkin(7) * t716 + t639 * t724;
t562 = t688 * t742;
t750 = t638 * t561 + t634 * t562;
t473 = pkin(9) * t716 + t750;
t596 = -pkin(3) * t638 - pkin(9) * t634 - pkin(2);
t734 = qJD(4) * t637;
t806 = t637 * t473 - t596 * t734 + t817 * t633;
t577 = -t631 * t764 - t763;
t522 = -t577 * t634 + t640 * t774;
t576 = t631 * t766 - t759;
t805 = g(2) * (t576 * t634 + t636 * t774) + g(1) * t522;
t769 = t634 * t630;
t523 = -t576 * t638 + t636 * t769;
t803 = g(2) * (t577 * t638 + t640 * t769) - g(3) * t573 - g(1) * t523;
t802 = t502 ^ 2;
t641 = qJD(1) ^ 2;
t801 = qJD(2) ^ 2;
t627 = t630 ^ 2;
t800 = pkin(1) * t627;
t460 = qJDD(4) + t465;
t798 = pkin(4) * t460;
t794 = t637 * t814;
t790 = t500 * pkin(4);
t632 = qJ(5) + pkin(9);
t789 = qJ(5) * t435;
t788 = qJ(5) * t436;
t787 = t416 * t633;
t528 = -pkin(2) * t697 - t561;
t453 = t543 * pkin(3) - t545 * pkin(9) + t528;
t464 = t638 * t529 + t634 * t535;
t456 = -pkin(9) * t681 + t464;
t430 = t453 * t633 + t456 * t637;
t419 = -qJ(5) * t500 + t430;
t786 = t419 * t536;
t785 = t422 * t633;
t784 = t435 * t633;
t783 = t460 * t633;
t782 = t460 * t637;
t779 = t502 * t633;
t778 = t543 * t633;
t777 = t543 * t637;
t776 = t627 * t641;
t771 = t633 * t634;
t770 = t633 * t639;
t767 = t634 * t637;
t762 = t637 * t638;
t761 = t637 * t639;
t760 = t638 * t639;
t429 = t637 * t453 - t456 * t633;
t418 = -qJ(5) * t502 + t429;
t417 = pkin(4) * t536 + t418;
t758 = -t418 + t417;
t666 = t633 * t635 + t637 * t760;
t547 = t666 * t630;
t534 = qJD(1) * t547;
t619 = pkin(8) * t762;
t693 = t634 * t614;
t733 = qJD(5) * t637;
t757 = -pkin(4) * t693 + qJ(5) * t534 + t473 * t633 - t634 * t733 + (pkin(4) * t634 - qJ(5) * t762) * qJD(3) + (-t619 + (qJ(5) * t634 - t596) * t633) * qJD(4) + t809;
t756 = qJ(5) * t533 + (-pkin(8) * qJD(3) - qJ(5) * qJD(4)) * t767 + (-qJD(5) * t634 + (-pkin(8) * qJD(4) - qJ(5) * qJD(3)) * t638) * t633 - t806;
t463 = -t634 * t529 + t638 * t535;
t489 = pkin(3) * t545 + pkin(9) * t543;
t755 = t637 * t463 + t633 * t489;
t549 = t634 * t561;
t472 = -pkin(3) * t716 - t562 * t638 + t549;
t751 = pkin(8) * t736 - t472 + (t634 * t734 + t683) * pkin(4);
t705 = qJD(4) * t632;
t749 = -qJ(5) * t778 - t633 * t705 + t733 - t755;
t484 = t637 * t489;
t748 = -pkin(4) * t545 - qJ(5) * t777 - t637 * t705 - t484 + (-qJD(5) + t463) * t633;
t744 = t633 * t596 + t619;
t628 = t635 ^ 2;
t743 = -t639 ^ 2 + t628;
t740 = qJD(2) * t635;
t737 = qJD(3) * t637;
t721 = t639 * t776;
t720 = t630 * t761;
t719 = t630 * t770;
t718 = t633 * t765;
t625 = pkin(4) * t633 + pkin(8);
t715 = t630 * t740;
t711 = t536 * t735;
t710 = t630 * t631 * t641;
t708 = t639 * t732;
t707 = t630 * t730;
t704 = qJD(5) + t790;
t703 = t637 * t469 - t471 * t633;
t702 = -t634 * t558 + t559 * t638;
t626 = pkin(4) * t637 + pkin(3);
t575 = -t626 * t634 + t632 * t638;
t700 = t639 * t681;
t699 = t536 * t637;
t698 = qJD(3) * t681;
t660 = -t638 * t487 - t634 * t490 + t529 * t738 - t535 * t736;
t421 = pkin(9) * t655 - t660;
t689 = t630 * t708;
t694 = t635 * t696 - t639 * t722 + (t689 + t707) * pkin(7);
t488 = -pkin(2) * t691 + t694;
t426 = t465 * pkin(3) - pkin(9) * t643 + t488;
t412 = t637 * t421 + t633 * t426 + t453 * t734 - t456 * t735;
t574 = t631 * t765 - t769;
t519 = t574 * t633 + t631 * t761;
t581 = t633 * t760 - t635 * t637;
t474 = t519 * t640 + t581 * t636;
t686 = -g(1) * t474 - g(2) * (t519 * t636 - t640 * t581);
t653 = t640 * t666;
t669 = -t574 * t637 + t631 * t770;
t476 = -t636 * t669 - t653;
t521 = -t574 * t640 - t636 * t760;
t685 = -g(1) * (t521 * t637 - t578 * t633) + g(2) * t476;
t470 = pkin(3) * t773 - t702;
t682 = t637 * t736 - t534;
t679 = t626 * t638 + t632 * t634;
t570 = pkin(2) + t679;
t680 = t570 * t639 + t625 * t635;
t512 = -t570 * t635 + t625 * t639;
t675 = (-t814 - t684) * t633;
t563 = t630 * t664;
t565 = t808 * qJD(2);
t674 = -t558 * t736 - t559 * t738 + t563 * t638 - t634 * t565;
t672 = t691 * MDP(8);
t517 = t573 * t633 + t720;
t665 = t718 + t761;
t663 = -t536 * t734 - t783;
t455 = pkin(3) * t681 - t463;
t662 = -pkin(9) * t460 + t455 * t536;
t661 = t708 + t730;
t659 = -t558 * t738 + t559 * t736 + t634 * t563 + t638 * t565;
t439 = pkin(9) * t715 + t659;
t515 = qJD(3) * t573 + t630 * t714;
t516 = -qJD(3) * t572 + t630 * t713;
t566 = t745 * qJD(2);
t445 = pkin(3) * t515 - pkin(9) * t516 + t566;
t658 = t637 * t439 + t633 * t445 + t469 * t734 - t471 * t735;
t548 = t581 * t631;
t657 = -g(1) * (t548 * t636 + t640 * t665) - g(2) * (-t548 * t640 + t636 * t665) + t581 * t813;
t555 = t579 * t638;
t656 = -g(1) * (-t555 * t637 - t576 * t633) - g(2) * (t636 * (-t635 * t762 + t770) + t631 * t653) - g(3) * t547;
t649 = -0.2e1 * t709 + 0.2e1 * t728;
t440 = -pkin(3) * t715 - t674;
t518 = t573 * t637 - t719;
t648 = -g(1) * t476 - g(2) * (-t636 * t666 + t640 * t669) + g(3) * t518 - t412;
t413 = -qJD(4) * t430 - t421 * t633 + t637 * t426;
t647 = -qJD(4) * t754 - t439 * t633 + t637 * t445;
t644 = -g(1) * (-(-t574 * t636 + t638 * t759) * t633 + t579 * t637) + g(2) * t474 + g(3) * t517 + t413;
t601 = t632 * t637;
t600 = t632 * t633;
t590 = t625 * t634;
t587 = t637 * t596;
t569 = t581 * pkin(4);
t526 = -qJ(5) * t771 + t744;
t511 = pkin(1) + t680;
t509 = -qJ(5) * t767 + t587 + (-pkin(8) * t633 - pkin(4)) * t638;
t508 = (t631 * t665 - t633 * t769) * pkin(4);
t504 = t680 * t631;
t499 = t500 ^ 2;
t497 = t575 * t772 - t630 * t679;
t467 = -t630 * (-pkin(7) + t575) + t512 * t631;
t451 = -qJD(4) * t517 + t516 * t637 + t633 * t715;
t450 = -qJD(4) * t719 + t516 * t633 + t573 * t734 - t637 * t715;
t442 = -pkin(4) * t778 + t464;
t441 = pkin(4) * t517 + t470;
t437 = t455 + t704;
t431 = -qJ(5) * t517 + t754;
t427 = pkin(4) * t572 - qJ(5) * t518 + t703;
t423 = pkin(4) * t450 + t440;
t415 = -qJ(5) * t450 - qJD(5) * t517 + t658;
t414 = pkin(4) * t515 - qJ(5) * t451 - qJD(5) * t518 + t647;
t411 = -qJD(5) * t500 + t412 - t788;
t410 = -qJD(5) * t502 + t413 + t789 + t798;
t1 = [(0.2e1 * (t635 * t728 - t732 * t743) * MDP(5) + (qJDD(1) * t628 + 0.2e1 * t635 * t708) * MDP(4)) * t627 + (-t464 * t715 + t488 * t573 + t528 * t516 + t566 * t545 + t557 * t643 - t655 * t752 + t659 * t681 - t660 * t773 - t805) * MDP(17) + (-t410 * t518 - t411 * t517 - t414 * t502 - t415 * t500 - t417 * t451 - t419 * t450 + t427 * t435 - t431 * t436 + t805) * MDP(27) + (-t516 * t681 + t573 * t727) * MDP(13) + (t515 * t681 - t572 * t727) * MDP(14) + ((-t727 * t639 + (-t614 - t681) * t740) * MDP(15) + (qJDD(2) * t639 + t631 * t649 - t635 * t801) * MDP(7) + (t635 * qJDD(2) + 0.2e1 * t631 * t661 + t639 * t801) * MDP(6) + ((-t673 + (-t677 - t689) * t638) * t639 + (-(-qJD(1) * t738 + t729) * t773 + (qJD(1) * t573 + t545) * qJD(2)) * t635) * MDP(13) + (t465 * t639 + (-qJD(1) * t572 - t543) * t740) * MDP(14)) * t630 + (-g(1) * t578 + g(2) * t579 - t565 * t697 - t631 * t650 - 0.2e1 * t661 * t800 - t691 * t745) * MDP(10) + (t410 * t572 + t414 * t536 + t416 * t517 + t417 * t515 + t423 * t500 + t427 * t460 + t436 * t441 + t437 * t450 + t685) * MDP(25) + (-t411 * t572 - t415 * t536 + t416 * t518 - t419 * t515 + t423 * t502 - t431 * t460 - t435 * t441 + t437 * t451 + t686) * MDP(26) + qJDD(1) * MDP(1) + (-g(1) * t521 - g(2) * t523 + t463 * t715 + t557 * t465 + t488 * t572 + t528 * t515 + t566 * t543 + t655 * t702 - t674 * t681 + t695 * t773) * MDP(16) + (-t412 * t572 + t422 * t518 - t430 * t515 - t470 * t435 + t440 * t502 + t455 * t451 - t460 * t754 - t536 * t658 + t686) * MDP(24) + (g(1) * t636 - g(2) * t640) * MDP(2) + (g(1) * t640 + g(2) * t636) * MDP(3) + (t411 * t431 + t419 * t415 + t410 * t427 + t417 * t414 + t416 * t441 + t437 * t423 - g(1) * (t467 * t640 - t511 * t636) - g(2) * (t467 * t636 + t511 * t640)) * MDP(28) + t631 * t672 + (t545 * t516 + t573 * t643) * MDP(11) + (-t573 * t465 - t545 * t515 - t516 * t543 - t572 * t643) * MDP(12) + (-g(1) * t577 + g(2) * t576 - t566 * t697 - t694 * t631 + t649 * t800 + t691 * t808) * MDP(9) + (-t435 * t518 + t451 * t502) * MDP(18) + (t435 * t517 - t436 * t518 - t450 * t502 - t451 * t500) * MDP(19) + (t460 * t572 + t515 * t536) * MDP(22) + (-t436 * t572 - t450 * t536 - t460 * t517 - t500 * t515) * MDP(21) + (-t435 * t572 + t451 * t536 + t460 * t518 + t502 * t515) * MDP(20) + (t413 * t572 + t422 * t517 + t429 * t515 + t470 * t436 + t440 * t500 + t455 * t450 + t460 * t703 + t536 * t647 + t685) * MDP(23); t681 * MDP(15) * t716 - t635 * MDP(4) * t721 + (-t638 * t698 + t634 * t727 + (t638 * t700 + (qJD(2) * t634 - t545) * t635) * t742) * MDP(13) + t672 + (t436 * t638 - t683 * t536 + (t500 * t681 + t663) * t634) * MDP(21) + (t634 * t698 + t638 * t727 + (-t634 * t700 + (qJD(2) * t638 + t543) * t635) * t742) * MDP(14) + (-t536 * t634 * t681 - t460 * t638) * MDP(22) + (-t410 * t638 + t436 * t590 + t460 * t509 + t757 * t536 + t751 * t500 + t683 * t437 + (-t417 * t681 + t437 * t734 + t787) * t634 + t656) * MDP(25) + (t435 * t638 + t682 * t536 + (-t502 * t681 - t711 + t782) * t634) * MDP(20) + (t500 * t534 + t502 * t533 + (-t500 * t637 - t779) * t736 + (t784 - t436 * t637 + (t500 * t633 - t502 * t637) * qJD(4)) * t634) * MDP(19) + (pkin(1) * t635 * t776 + t564 * t697 + t652 - t694) * MDP(9) + (pkin(1) * t721 + t561 * t697 - g(1) * t576 - g(2) * t577 + (pkin(7) * t732 + g(3)) * t775 - t717) * MDP(10) + (-t435 * t767 + (-t634 * t735 + t682) * t502) * MDP(18) + (t411 * t638 - t435 * t590 - t460 * t526 - t756 * t536 + t751 * t502 + t682 * t437 + (t416 * t637 + t419 * t681 - t437 * t735) * t634 + t657) * MDP(26) + (t417 * t534 + t419 * t533 + t435 * t509 - t436 * t526 - t757 * t502 - t756 * t500 + (-t417 * t637 - t419 * t633) * t736 + (-t410 * t637 - t411 * t633 + (t417 * t633 - t419 * t637) * qJD(4) + t652) * t634) * MDP(27) + ((-qJD(3) * t716 + t691) * t634 ^ 2 + ((t630 * t661 + t677) * t634 - t681 * t545) * t638) * MDP(11) + (-t639 * t710 + t707) * MDP(6) + (t635 * t710 + t613) * MDP(7) + (-t744 * t460 - t472 * t502 - t455 * t534 + t806 * t536 + (t455 * t737 + t412 + (qJD(3) * t502 + t711) * pkin(8)) * t638 + (-t455 * t735 + t422 * t637 + t681 * t430 + (t536 * t737 - t435) * pkin(8)) * t634 + t657) * MDP(24) + (-t634 * t465 + t638 * t643 + (t693 - t738) * t545 + t807 * t543) * MDP(12) + (-t455 * t533 + t587 * t460 - t472 * t500 + ((-qJD(4) * t596 + t473) * t633 + t809) * t536 + (t455 * t633 * qJD(3) - t413 + (qJD(3) * t500 + t663) * pkin(8)) * t638 + (pkin(8) * t436 - t429 * t681 + t455 * t734 + t785) * t634 + t656) * MDP(23) + t743 * MDP(5) * t776 + (t411 * t526 + t410 * t509 + t416 * t590 - g(1) * (-t504 * t636 + t512 * t640) - g(2) * (t504 * t640 + t512 * t636) - t680 * t813 + t751 * t437 + t756 * t419 + t757 * t417) * MDP(28) + (-t638 * t816 - pkin(2) * t643 + t464 * t716 - t564 * t545 + (-t723 - t750) * t681 - t807 * t528 + (t488 - t652) * t634) * MDP(17) + (-pkin(2) * t465 - t549 * t681 - t463 * t716 - t564 * t543 + g(1) * t555 + (-t528 * t681 - t816) * t634 + (pkin(8) * t698 + t562 * t681 - t488 + t676) * t638) * MDP(16); -t543 ^ 2 * MDP(12) + (-t543 * t681 + t643) * MDP(13) - t465 * MDP(14) + t655 * MDP(15) + (g(2) * t522 - t464 * t681 + t684 - t695) * MDP(16) + (-t463 * t681 + t528 * t543 + t660 - t803) * MDP(17) + (t502 * t699 - t784) * MDP(18) + (-t633 * t810 + t637 * t811) * MDP(19) + (t536 * t699 + t783) * MDP(20) + (-t536 ^ 2 * t633 + t782) * MDP(21) + (-pkin(3) * t436 + t794 - t464 * t500 - t484 * t536 + (t463 * t536 + t662) * t633 + (-pkin(9) * qJD(4) * t536 - t422 + t684) * t637) * MDP(23) + (pkin(3) * t435 + t785 - t464 * t502 + (pkin(9) * t735 + t755) * t536 + t662 * t637 + t675) * MDP(24) + (t794 - t436 * t626 - t442 * t500 - t460 * t600 + t748 * t536 + t812 * t637 + (t437 * t543 + (t437 + t790) * qJD(4)) * t633) * MDP(25) + (t437 * t777 + t787 + t435 * t626 - t442 * t502 - t460 * t601 - t749 * t536 + (pkin(4) * t779 + t437 * t637) * qJD(4) + t675) * MDP(26) + (-t601 * t436 - t600 * t435 - t748 * t502 - t749 * t500 + (-t417 * t536 + t411) * t637 + (-t410 - t786) * t633 + t803) * MDP(27) + (t411 * t601 - t410 * t600 - t416 * t626 - g(1) * (-t497 * t636 + t575 * t759) - g(2) * (t497 * t640 + t575 * t763) - g(3) * (t575 * t775 + t631 * t679) + (pkin(4) * t735 - t442) * t437 + t749 * t419 + t748 * t417) * MDP(28) + (MDP(11) * t543 + t545 * MDP(12) - t681 * MDP(14) - t528 * MDP(16) - t502 * MDP(20) + t500 * MDP(21) - t536 * MDP(22) - t429 * MDP(23) + t430 * MDP(24) - t417 * MDP(25) + t419 * MDP(26)) * t545; t502 * t500 * MDP(18) + (-t499 + t802) * MDP(19) + (-t435 + t781) * MDP(20) + (-t436 + t780) * MDP(21) + t460 * MDP(22) + (t430 * t536 - t455 * t502 + t644) * MDP(23) + (t429 * t536 + t455 * t500 + t648) * MDP(24) + (0.2e1 * t798 + t789 + t786 + (-t437 - t704) * t502 + t644) * MDP(25) + (-pkin(4) * t802 + t788 + t418 * t536 + (qJD(5) + t437) * t500 + t648) * MDP(26) + (pkin(4) * t435 - t500 * t758) * MDP(27) + (-g(1) * (t508 * t636 - t569 * t640) - g(2) * (-t508 * t640 - t569 * t636) + t758 * t419 + (t410 - t437 * t502 - g(3) * (-t630 * t718 - t631 * t771 - t720)) * pkin(4)) * MDP(28); t810 * MDP(25) + t811 * MDP(26) + (-t499 - t802) * MDP(27) + (t417 * t502 + t419 * t500 - t812 - t814) * MDP(28);];
tau = t1;
