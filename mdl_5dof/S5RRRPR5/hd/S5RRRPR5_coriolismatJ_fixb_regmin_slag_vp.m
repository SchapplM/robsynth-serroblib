% Calculate minimal parameter regressor of coriolis matrix for
% S5RRRPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d5,theta4]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x28]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2021-01-15 23:12
% Revision: 24b2e7d74a0c1a3b64fa2f8f5ad758691ad61af3 (2021-01-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRPR5_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPR5_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPR5_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRRPR5_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2021-01-15 23:10:49
% EndTime: 2021-01-15 23:11:09
% DurationCPUTime: 5.57s
% Computational Cost: add. (6836->316), mult. (13627->460), div. (0->0), fcn. (15685->8), ass. (0->285)
t329 = qJD(2) + qJD(3);
t253 = sin(qJ(2));
t424 = pkin(6) + pkin(7);
t234 = t424 * t253;
t255 = cos(qJ(2));
t235 = t424 * t255;
t252 = sin(qJ(3));
t410 = cos(qJ(3));
t164 = t252 * t234 - t410 * t235;
t227 = t252 * t253 - t410 * t255;
t161 = -t227 * qJ(4) - t164;
t250 = sin(pkin(9));
t389 = cos(pkin(9));
t229 = -t252 * t255 - t410 * t253;
t279 = -t410 * t234 - t252 * t235;
t430 = t229 * qJ(4) + t279;
t439 = -t250 * t161 + t389 * t430;
t458 = t329 * t439;
t300 = t389 * t252;
t220 = (t410 * t250 + t300) * pkin(2);
t457 = t220 / 0.2e1;
t251 = sin(qJ(5));
t156 = t389 * t161;
t433 = t250 * t430;
t449 = t156 + t433;
t451 = t449 * t251;
t254 = cos(qJ(5));
t450 = t449 * t254;
t218 = t389 * t229;
t371 = t250 * t227;
t431 = -t218 - t371;
t391 = t449 * t431;
t195 = -t389 * t227 + t250 * t229;
t246 = -t255 * pkin(2) - pkin(1);
t204 = t227 * pkin(3) + t246;
t262 = -pkin(4) * t195 - pkin(8) * t431 + t204;
t34 = -t254 * t262 + t451;
t453 = t251 * t391 - t34 * t431;
t35 = t251 * t262 + t450;
t452 = t254 * t391 - t35 * t431;
t438 = t431 * qJD(1);
t316 = t195 * t438;
t334 = t195 * qJD(1);
t448 = -qJD(5) + t334;
t392 = t439 * t254;
t412 = -t254 / 0.2e1;
t446 = t412 * t439 - t392 / 0.2e1;
t393 = t439 * t251;
t413 = -t251 / 0.2e1;
t445 = t413 * t439 - t393 / 0.2e1;
t442 = t431 ^ 2;
t435 = 0.2e1 * t431;
t423 = -t156 / 0.2e1;
t441 = -t195 / 0.2e1;
t436 = t329 * t279;
t369 = t251 * t254;
t434 = t369 * t435;
t409 = pkin(2) * t252;
t239 = t250 * t409;
t326 = t410 * pkin(2);
t221 = t389 * t326 - t239;
t417 = -t221 / 0.2e1;
t281 = -t195 * t417 + t431 * t457;
t245 = t326 + pkin(3);
t213 = t389 * t245 - t239;
t209 = -pkin(4) - t213;
t381 = t195 * t209;
t240 = t250 * pkin(3) + pkin(8);
t384 = t431 * t240;
t214 = pkin(2) * t300 + t250 * t245;
t210 = pkin(8) + t214;
t385 = t431 * t210;
t429 = -t384 / 0.2e1 - t385 / 0.2e1 + t381 / 0.2e1 + t281;
t428 = t329 * t164;
t314 = qJD(1) * t369;
t249 = t254 ^ 2;
t426 = t251 ^ 2;
t99 = (t426 / 0.2e1 - t249 / 0.2e1) * t431;
t427 = t314 * t442 + t329 * t99;
t327 = -t249 + t426;
t112 = t314 * t435 + t327 * t329;
t420 = -t209 / 0.2e1;
t419 = t213 / 0.2e1;
t418 = -t214 / 0.2e1;
t416 = t240 / 0.2e1;
t241 = -t389 * pkin(3) - pkin(4);
t415 = -t241 / 0.2e1;
t414 = t250 / 0.2e1;
t411 = t254 / 0.2e1;
t408 = t229 * pkin(3);
t248 = t253 * pkin(2);
t407 = pkin(3) * qJD(3);
t368 = t254 * t195;
t87 = pkin(4) * t431 - t195 * pkin(8) - t408;
t80 = t248 + t87;
t1 = -t80 * t368 + t453;
t406 = t1 * qJD(1);
t370 = t251 * t195;
t2 = t80 * t370 + t452;
t405 = t2 * qJD(1);
t3 = -t87 * t368 + t453;
t404 = t3 * qJD(1);
t4 = t87 * t370 + t452;
t401 = t4 * qJD(1);
t256 = (t209 / 0.2e1 + t415) * t195 + (-t210 / 0.2e1 + t416) * t431 + t281;
t9 = t256 * t251;
t390 = t9 * qJD(1);
t208 = t248 - t408;
t13 = t204 * t208;
t388 = t13 * qJD(1);
t14 = t204 * t408;
t387 = t14 * qJD(1);
t383 = t431 * t250;
t382 = t195 ^ 2;
t380 = t209 * t251;
t379 = t213 * t195;
t378 = t214 * t431;
t23 = -t195 * t34 + t393 * t431;
t377 = t23 * qJD(1);
t24 = t195 * t35 - t392 * t431;
t376 = t24 * qJD(1);
t375 = t241 * t251;
t259 = -t379 / 0.2e1 - t378 / 0.2e1 + t281;
t301 = t389 * t195;
t265 = (-t383 / 0.2e1 - t301 / 0.2e1) * pkin(3);
t27 = t265 - t259;
t367 = t27 * qJD(1);
t30 = t195 * t449 - t431 * t439;
t366 = t30 * qJD(1);
t289 = -t382 + t442;
t41 = t289 * t251;
t365 = t41 * qJD(1);
t45 = t382 + t442;
t42 = t45 * t251;
t364 = t42 * qJD(1);
t43 = t289 * t254;
t363 = t43 * qJD(1);
t44 = t45 * t254;
t362 = t44 * qJD(1);
t361 = t45 * qJD(1);
t283 = t195 * t418 + t419 * t431;
t219 = -t408 / 0.2e1;
t328 = t219 + t248 / 0.2e1;
t46 = t283 + t328;
t360 = t46 * qJD(1);
t122 = t204 * t431;
t49 = -t195 * t208 + t122;
t359 = t49 * qJD(1);
t123 = t204 * t195;
t50 = t208 * t431 + t123;
t358 = t50 * qJD(1);
t57 = -t195 * t408 - t122;
t357 = t57 * qJD(1);
t58 = t408 * t431 - t123;
t356 = t58 * qJD(1);
t317 = -t389 / 0.2e1;
t271 = t195 * t414 + t317 * t431;
t76 = (t229 / 0.2e1 + t271) * pkin(3);
t355 = t76 * qJD(1);
t354 = t99 * qJD(1);
t347 = qJD(3) * t254;
t349 = qJD(2) * t254;
t353 = (t347 + t349) * t431;
t351 = qJD(1) * t246;
t350 = qJD(1) * t255;
t348 = qJD(3) * t246;
t346 = qJD(5) * t251;
t345 = qJD(5) * t254;
t101 = t251 * t431;
t344 = t101 * qJD(1);
t306 = 0.2e1 * t441;
t102 = t306 * t251;
t97 = t102 * qJD(1);
t105 = t306 * t254;
t98 = t105 * qJD(1);
t177 = t195 * t411;
t106 = t368 / 0.2e1 + t177;
t343 = t106 * qJD(1);
t110 = t327 * t442;
t342 = t110 * qJD(1);
t162 = t227 ^ 2 - t229 ^ 2;
t341 = t162 * qJD(1);
t183 = t227 * t248 - t246 * t229;
t338 = t183 * qJD(1);
t184 = -t246 * t227 - t229 * t248;
t337 = t184 * qJD(1);
t191 = -t371 / 0.2e1 - t218 / 0.2e1;
t336 = t191 * qJD(1);
t186 = t431 * qJD(4);
t333 = t220 * qJD(2);
t215 = t220 * qJD(3);
t237 = -t253 ^ 2 + t255 ^ 2;
t332 = t237 * qJD(1);
t331 = t253 * qJD(2);
t330 = t255 * qJD(2);
t325 = pkin(1) * t253 * qJD(1);
t324 = pkin(1) * t350;
t315 = t249 * t438;
t313 = qJD(5) * t195 * t431;
t312 = t227 * t351;
t311 = t229 * t351;
t238 = t251 * t345;
t310 = t253 * t350;
t309 = t254 * t186;
t307 = t375 / 0.2e1;
t305 = t410 * qJD(2);
t304 = t410 * qJD(3);
t299 = t329 * t254;
t298 = t329 * t431;
t297 = t329 * t195;
t198 = t329 * t229;
t296 = t329 * t251;
t293 = t417 + t415 + t420;
t292 = t251 * t299;
t291 = t254 * t296;
t111 = -t213 * t220 + t214 * t221;
t260 = (t417 + t419) * t449 + (t418 + t457) * t439;
t267 = (t317 * t449 + t414 * t439) * pkin(3);
t5 = t267 + t260;
t290 = t5 * qJD(1) - t111 * qJD(2);
t288 = t381 - t385;
t287 = t195 * t241 - t384;
t36 = t423 + t156 / 0.2e1;
t286 = -t36 * qJD(1) + t333;
t285 = t221 * qJD(2);
t284 = t431 * t448;
t282 = t210 * t441 + t420 * t431;
t280 = -t195 * t416 + t415 * t431;
t12 = t256 * t254;
t278 = -t12 * qJD(1) - t251 * t333;
t269 = t80 / 0.2e1 + t282;
t15 = t269 * t251;
t277 = -t15 * qJD(1) - t209 * t349;
t17 = t269 * t254;
t276 = t17 * qJD(1) - qJD(2) * t380;
t53 = t191 * qJD(5) - t316;
t272 = t292 * t435;
t268 = t87 / 0.2e1 + t280;
t132 = t293 * t251;
t21 = t268 * t254;
t264 = t21 * qJD(1) + t132 * qJD(2) - qJD(3) * t375;
t133 = t293 * t254;
t19 = t268 * t251;
t263 = -t19 * qJD(1) + t133 * qJD(2) - t241 * t347;
t233 = t327 * qJD(5);
t216 = t221 * qJD(3);
t207 = t251 * t215;
t199 = t229 * t227 * qJD(1);
t197 = t329 * t227;
t189 = t195 * qJD(4);
t180 = t254 * t438;
t135 = t221 * t412 + (t209 + t241) * t411;
t134 = t307 + t380 / 0.2e1 + t221 * t413;
t108 = t329 * t191;
t107 = (t195 / 0.2e1 + t441) * t254;
t104 = -t368 / 0.2e1 + t177;
t103 = t370 / 0.2e1 + t195 * t413;
t96 = t103 * qJD(5);
t95 = t102 * qJD(5);
t92 = t101 * qJD(4);
t90 = t99 * qJD(5);
t89 = t98 + t345;
t88 = -t97 - t346;
t77 = pkin(3) * t271 + t219;
t75 = t291 - t354;
t74 = -t292 + t354;
t48 = t448 * t434;
t47 = -t283 + t328;
t40 = -t195 * t315 - t90;
t37 = -t433 + 0.2e1 * t423;
t33 = t105 * qJD(5) - t363;
t32 = -t95 + t365;
t31 = -t90 + (t291 + t315) * t195;
t29 = (-qJD(5) - t334) * t434 - t327 * t297;
t28 = t265 + t259;
t26 = t104 * qJD(5) + t296 * t431 + t363;
t25 = t353 + t96 - t365;
t22 = -t280 * t254 + t87 * t411 + t445;
t20 = t280 * t251 + t87 * t413 + t446;
t18 = -t282 * t254 + t80 * t411 + t445;
t16 = t282 * t251 + t80 * t413 + t446;
t11 = t241 * t177 + t429 * t254 + t451;
t10 = t195 * t307 + t429 * t251 - t450;
t6 = t267 - t260;
t7 = [0, 0, 0, t253 * t330, t237 * qJD(2), 0, 0, 0, -pkin(1) * t331, -pkin(1) * t330, t227 * t198, t329 * t162, 0, 0, 0, t183 * qJD(2) - t229 * t348, t184 * qJD(2) - t227 * t348, t49 * qJD(2) - t57 * qJD(3), t50 * qJD(2) - t58 * qJD(3), t45 * qJD(4), t13 * qJD(2) - t14 * qJD(3) + t30 * qJD(4), t249 * t297 * t431 - t238 * t442, t110 * qJD(5) - t195 * t272, t251 * t313 + t329 * t43, t254 * t313 - t329 * t41, -t195 * t298, t1 * qJD(2) + t3 * qJD(3) + t42 * qJD(4) + t24 * qJD(5), t2 * qJD(2) + t4 * qJD(3) + t44 * qJD(4) + t23 * qJD(5); 0, 0, 0, t310, t332, t330, -t331, 0, -pkin(6) * t330 - t325, pkin(6) * t331 - t324, t199, t341, -t197, t198, 0, t338 + t428, t337 - t436, -qJD(2) * t449 + t37 * qJD(3) + t359, t358 - t458, (-t378 - t379) * qJD(2) + t28 * qJD(3), t388 + (-t213 * t449 + t214 * t439) * qJD(2) + t6 * qJD(3) + t47 * qJD(4), t31, t29, t26, t25, t53, t406 + (t251 * t288 - t450) * qJD(2) + t10 * qJD(3) + t18 * qJD(5), t405 + (t254 * t288 + t451) * qJD(2) + t11 * qJD(3) + t16 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t199, t341, -t197, t198, 0, -t311 + t428, -t312 - t436, t37 * qJD(2) - qJD(3) * t449 - t357, -t356 - t458, t28 * qJD(2) + (-t301 - t383) * t407, -t387 + t6 * qJD(2) + (t250 * t439 - t389 * t449) * t407 + t77 * qJD(4), t31, t29, t26, t25, t53, t404 + t10 * qJD(2) + (t251 * t287 - t450) * qJD(3) + t22 * qJD(5), t401 + t11 * qJD(2) + (t254 * t287 + t451) * qJD(3) + t20 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t361, t47 * qJD(2) + t77 * qJD(3) + t366, 0, 0, 0, 0, 0, t96 + t364, t107 * qJD(5) + t362; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t427, -t272 + t342, t104 * t329 + t251 * t284, t103 * t329 + t254 * t284, t108, t18 * qJD(2) + t22 * qJD(3) + t103 * qJD(4) - t35 * qJD(5) + t376, t16 * qJD(2) + t20 * qJD(3) + t107 * qJD(4) + t34 * qJD(5) + t377; 0, 0, 0, -t310, -t332, 0, 0, 0, t325, t324, -t199, -t341, 0, 0, 0, -t338, -t337, t36 * qJD(3) - t186 - t359, -t189 - t358, -t27 * qJD(3), -t5 * qJD(3) - t46 * qJD(4) - t388, t40, t48, t33, t32, -t53, t9 * qJD(3) - t17 * qJD(5) - t309 - t406, t12 * qJD(3) + t15 * qJD(5) - t405 + t92; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t409, -pkin(2) * t304, -t215, -t216, 0, t111 * qJD(3), t238, -t233, 0, 0, 0, t209 * t346 - t215 * t254, t209 * t345 + t207; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t329 * t409, (-t305 - t304) * pkin(2), -t215 - t286, -t216 - t285, -t367, (-t389 * t220 + t221 * t250) * t407 - t290, t238, -t233, 0, 0, 0, t134 * qJD(5) - t220 * t299 + t390, t135 * qJD(5) + t207 - t278; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t438, -t334, 0, -t360, 0, 0, 0, 0, 0, -t180, t344; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t75, -t112, t89, t88, -t336, t134 * qJD(3) - t210 * t345 - t276, t135 * qJD(3) + t210 * t346 - t277; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t199, -t341, 0, 0, 0, t311, t312, -t36 * qJD(2) - t186 + t357, -t189 + t356, t27 * qJD(2), t5 * qJD(2) + t76 * qJD(4) + t387, t40, t48, t33, t32, -t53, -t9 * qJD(2) - t21 * qJD(5) - t309 - t404, -t12 * qJD(2) + t19 * qJD(5) - t401 + t92; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t409, pkin(2) * t305, t286, t285, t367, t290, t238, -t233, 0, 0, 0, -t132 * qJD(5) + t254 * t333 - t390, -t133 * qJD(5) + t278; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t238, -t233, 0, 0, 0, t241 * t346, t241 * t345; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t438, -t334, 0, t355, 0, 0, 0, 0, 0, -t180, t344; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t75, -t112, t89, t88, -t336, -t240 * t345 - t264, t240 * t346 - t263; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t298, t297, -t361, t46 * qJD(2) - t76 * qJD(3) - t366, 0, 0, 0, 0, 0, t353 - t95 - t364, t106 * qJD(5) - t101 * t329 - t362; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t438, t334, 0, t360, 0, 0, 0, 0, 0, t180, -t344; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t438, t334, 0, -t355, 0, 0, 0, 0, 0, t180, -t344; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t88, t343 - t345; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t427, t291 * t435 - t342, -t105 * t329 - t251 * t316, t102 * t329 - t254 * t316, t108, t17 * qJD(2) + t21 * qJD(3) + t102 * qJD(4) - t376, -t15 * qJD(2) - t19 * qJD(3) - t106 * qJD(4) - t377; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t74, t112, -t98, t97, t336, t132 * qJD(3) + t276, t133 * qJD(3) + t277; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t74, t112, -t98, t97, t336, t264, t263; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t97, -t343; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t7;
