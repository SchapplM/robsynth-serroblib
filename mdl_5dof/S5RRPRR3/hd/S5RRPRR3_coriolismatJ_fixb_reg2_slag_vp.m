% Calculate inertial parameters regressor of coriolis matrix for
% S5RRPRR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4,d5,theta3]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2022-01-20 10:34
% Revision: fd3771346c4aea32fdeb66112c511235427c26a7 (2022-01-20)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRPRR3_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRR3_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRR3_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRPRR3_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2022-01-20 10:34:26
% EndTime: 2022-01-20 10:34:29
% DurationCPUTime: 2.10s
% Computational Cost: add. (2630->216), mult. (5431->282), div. (0->0), fcn. (4608->8), ass. (0->168)
t126 = sin(qJ(5));
t124 = t126 ^ 2;
t128 = cos(qJ(5));
t125 = t128 ^ 2;
t184 = t124 + t125;
t197 = sin(pkin(9));
t204 = sin(qJ(2));
t120 = t197 * t204 * pkin(1);
t206 = cos(qJ(2));
t174 = t206 * pkin(1);
t198 = cos(pkin(9));
t142 = t198 * t174;
t111 = t142 - t120;
t205 = cos(qJ(4));
t164 = t205 * t111;
t146 = t198 * t204;
t110 = (t197 * t206 + t146) * pkin(1);
t127 = sin(qJ(4));
t194 = t127 * t110;
t78 = t164 - t194;
t31 = t184 * t78;
t118 = t125 - t124;
t175 = -qJD(2) - qJD(4);
t157 = qJD(1) - t175;
t221 = t157 * t118;
t220 = t31 / 0.2e1;
t219 = pkin(4) / 0.2e1;
t156 = t174 + pkin(2);
t106 = pkin(1) * t146 + t197 * t156;
t131 = t198 * t156 - t120;
t129 = pkin(3) + t131;
t95 = t205 * t129;
t64 = t127 * t106 - t95;
t60 = -pkin(4) + t64;
t218 = -t60 / 0.2e1;
t217 = -t64 / 0.2e1;
t165 = t205 * t106;
t65 = t127 * t129 + t165;
t216 = t65 / 0.2e1;
t215 = -t78 / 0.2e1;
t102 = t205 * t110;
t193 = t127 * t111;
t77 = t102 + t193;
t213 = t77 * pkin(4);
t153 = t198 * pkin(2) + pkin(3);
t114 = t205 * t153;
t163 = t197 * pkin(2);
t105 = t127 * t163 - t114;
t103 = -pkin(4) + t105;
t212 = -t103 / 0.2e1;
t211 = -t105 / 0.2e1;
t147 = t205 * t197;
t107 = pkin(2) * t147 + t127 * t153;
t210 = t107 / 0.2e1;
t209 = -t126 / 0.2e1;
t208 = t126 / 0.2e1;
t207 = t128 / 0.2e1;
t203 = pkin(4) * t128;
t58 = t65 * qJD(4);
t75 = t77 * qJD(2);
t202 = -t75 - t58;
t29 = t184 * t64;
t61 = pkin(8) + t65;
t3 = -t61 * t29 + t60 * t65;
t201 = t3 * qJD(1);
t4 = t61 * t31 + t60 * t77;
t200 = t4 * qJD(1);
t199 = t77 * t128;
t10 = t64 * t77 + t65 * t78;
t196 = t10 * qJD(1);
t195 = t103 * t128;
t167 = t210 + t216;
t150 = -t77 / 0.2e1 + t167;
t18 = t150 * t128;
t192 = t18 * qJD(1);
t191 = t29 * qJD(1);
t190 = t31 * qJD(1);
t33 = t106 * t111 - t131 * t110;
t189 = t33 * qJD(1);
t188 = t64 * qJD(1);
t187 = t65 * qJD(1);
t186 = t77 * qJD(1);
t185 = t78 * qJD(1);
t183 = qJD(1) * t126;
t182 = qJD(1) * t128;
t181 = qJD(2) * t126;
t180 = qJD(4) * t126;
t179 = t107 * qJD(2);
t101 = t107 * qJD(4);
t178 = t110 * qJD(1);
t177 = t111 * qJD(1);
t176 = t126 * qJD(5);
t123 = t128 * qJD(5);
t173 = t60 * t183;
t172 = t60 * t182;
t171 = t65 * t183;
t170 = t77 * t183;
t166 = -t114 / 0.2e1 - t95 / 0.2e1;
t162 = -t125 / 0.2e1 - t124 / 0.2e1;
t161 = t206 * qJD(1);
t160 = t206 * qJD(2);
t159 = t204 * qJD(1);
t158 = t204 * qJD(2);
t73 = t184 * t105;
t155 = t64 / 0.2e1 + t219 + t218;
t154 = -t165 / 0.2e1;
t151 = t105 / 0.2e1 + t219 + t212;
t149 = t215 + t212 + t218;
t148 = t162 * t64;
t145 = t162 * t105;
t104 = pkin(8) + t107;
t11 = t103 * t107 - t104 * t73;
t137 = t103 * t216 + t60 * t210;
t2 = t213 / 0.2e1 + t137 + t184 * (pkin(8) * t215 + t104 * t217 + t61 * t211);
t144 = -t2 * qJD(1) - t11 * qJD(2);
t8 = t184 * (t211 + t217 + t215);
t143 = -t8 * qJD(1) + t73 * qJD(2);
t138 = t163 / 0.2e1 + t106 / 0.2e1;
t20 = t164 / 0.2e1 + (-t110 / 0.2e1 + t138) * t127 + t166;
t141 = -t20 * qJD(1) - t105 * qJD(2);
t139 = -t147 / 0.2e1;
t22 = pkin(2) * t139 + t154 + t102 / 0.2e1 + (t120 / 0.2e1 - t142 / 0.2e1 + t111 / 0.2e1 - t153) * t127;
t140 = -t22 * qJD(1) + t179;
t12 = t149 * t126;
t136 = t12 * qJD(1) - t103 * t181;
t13 = t149 * t128;
t135 = t13 * qJD(1) - qJD(2) * t195;
t17 = t150 * t126;
t134 = -t17 * qJD(1) - t126 * t179;
t24 = t155 * t126;
t44 = t151 * t126;
t133 = pkin(4) * t180 + t24 * qJD(1) + t44 * qJD(2);
t25 = t155 * t128;
t45 = t151 * t128;
t132 = t25 * qJD(1) + t45 * qJD(2) + qJD(4) * t203;
t122 = -t203 / 0.2e1;
t121 = pkin(4) * t209;
t119 = t126 * t123;
t115 = t118 * qJD(5);
t109 = t111 * qJD(2);
t108 = t110 * qJD(2);
t100 = t105 * qJD(4);
t94 = t126 * t101;
t85 = t157 * t128 * t126;
t84 = t195 / 0.2e1;
t83 = t103 * t208;
t76 = t78 * qJD(2);
t72 = t77 * t181;
t59 = t73 * qJD(4);
t57 = t64 * qJD(4);
t56 = t65 * t180;
t49 = t60 * t207;
t48 = t60 * t208;
t47 = t105 * t207 + t122 + t84;
t46 = t105 * t208 + t121 + t83;
t30 = t31 * qJD(2);
t28 = t29 * qJD(4);
t27 = t64 * t207 + t122 + t49;
t26 = t64 * t208 + t121 + t48;
t23 = t154 - t193 - t102 / 0.2e1 - t127 * pkin(3) + (-t127 * t198 + t139) * pkin(2);
t21 = -t164 / 0.2e1 + t194 / 0.2e1 + t138 * t127 + t166;
t19 = -t199 / 0.2e1 - t167 * t128;
t16 = t167 * t126 + t77 * t208;
t15 = t128 * t215 + t49 + t84;
t14 = t78 * t209 + t48 + t83;
t7 = t148 + t145 + t220;
t1 = -t213 / 0.2e1 + t61 * t145 + t104 * t148 + t137 + t220 * pkin(8);
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -pkin(1) * t158, -pkin(1) * t160, 0, 0, 0, 0, 0, 0, 0, 0, -t108, -t109, 0, t33 * qJD(2), 0, 0, 0, 0, 0, 0, t202, -t76 + t57, 0, t10 * qJD(2), t119, t115, 0, -t119, 0, 0, t202 * t128 + t60 * t176, t60 * t123 + t56 + t72, t30 - t28, t4 * qJD(2) + t3 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (-t159 - t158) * pkin(1), (-t161 - t160) * pkin(1), 0, 0, 0, 0, 0, 0, 0, 0, -t108 - t178, -t109 - t177, 0, t189 + (-t198 * t110 + t197 * t111) * qJD(2) * pkin(2), 0, 0, 0, 0, 0, 0, t23 * qJD(4) - t186 - t75, t21 * qJD(4) - t185 - t76, 0, t196 + (t77 * t105 + t78 * t107) * qJD(2), t119, t115, 0, -t119, 0, 0, t19 * qJD(4) + t14 * qJD(5) + (-qJD(1) - qJD(2)) * t199, t16 * qJD(4) + t15 * qJD(5) + t170 + t72, t7 * qJD(4) + t190 + t30, t200 + (t77 * t103 + t104 * t31) * qJD(2) + t1 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t23 * qJD(2) - t187 - t58, t21 * qJD(2) + t188 + t57, 0, 0, t119, t115, 0, -t119, 0, 0, t19 * qJD(2) + t26 * qJD(5) + (-qJD(1) - qJD(4)) * t65 * t128, t16 * qJD(2) + t27 * qJD(5) + t171 + t56, t7 * qJD(2) - t191 - t28, t201 + t1 * qJD(2) + (-t65 * pkin(4) - pkin(8) * t29) * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t85, t221, t123, -t85, -t176, 0, t14 * qJD(2) + t26 * qJD(4) - t61 * t123 + t173, t15 * qJD(2) + t27 * qJD(4) + t61 * t176 + t172, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, pkin(1) * t159, pkin(1) * t161, 0, 0, 0, 0, 0, 0, 0, 0, t178, t177, 0, -t189, 0, 0, 0, 0, 0, 0, t22 * qJD(4) + t186, t20 * qJD(4) + t185, 0, -t196, t119, t115, 0, -t119, 0, 0, -t18 * qJD(4) - t12 * qJD(5) + t77 * t182, t17 * qJD(4) - t13 * qJD(5) - t170, t8 * qJD(4) - t190, t2 * qJD(4) - t200; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t101, t100, 0, 0, t119, t115, 0, -t119, 0, 0, -t128 * t101 + t103 * t176, t103 * t123 + t94, -t59, t11 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t101 - t140, t100 - t141, 0, 0, t119, t115, 0, -t119, 0, 0, t175 * t128 * t107 + t46 * qJD(5) - t192, t47 * qJD(5) - t134 + t94, -t143 - t59, (-t107 * pkin(4) - pkin(8) * t73) * qJD(4) - t144; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t85, t221, t123, -t85, -t176, 0, t46 * qJD(4) - t104 * t123 - t136, t47 * qJD(4) + t104 * t176 - t135, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t176, -t123, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t22 * qJD(2) + t187, -t20 * qJD(2) - t188, 0, 0, t119, t115, 0, -t119, 0, 0, t18 * qJD(2) - t24 * qJD(5) + t65 * t182, -t17 * qJD(2) - t25 * qJD(5) - t171, -t8 * qJD(2) + t191, -t2 * qJD(2) - t201; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t140, t141, 0, 0, t119, t115, 0, -t119, 0, 0, -t44 * qJD(5) + t128 * t179 + t192, -t45 * qJD(5) + t134, t143, t144; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t119, t115, 0, -t119, 0, 0, -pkin(4) * t176, -pkin(4) * t123, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t85, t221, t123, -t85, -t176, 0, -pkin(8) * t123 - t133, pkin(8) * t176 - t132, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t85, -t221, 0, t85, 0, 0, t12 * qJD(2) + t24 * qJD(4) - t173, t13 * qJD(2) + t25 * qJD(4) - t172, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t85, -t221, 0, t85, 0, 0, t44 * qJD(4) + t136, t45 * qJD(4) + t135, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t85, -t221, 0, t85, 0, 0, t133, t132, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t5;
