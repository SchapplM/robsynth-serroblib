% Calculate minimal parameter regressor of coriolis matrix for
% S5RPRRP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4,theta2]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x22]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2021-01-15 18:09
% Revision: 24b2e7d74a0c1a3b64fa2f8f5ad758691ad61af3 (2021-01-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPRRP6_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRP6_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRP6_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPRRP6_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2021-01-15 18:08:32
% EndTime: 2021-01-15 18:08:39
% DurationCPUTime: 2.07s
% Computational Cost: add. (2162->263), mult. (4299->391), div. (0->0), fcn. (3623->6), ass. (0->220)
t149 = sin(qJ(4));
t279 = 0.2e1 * t149;
t136 = sin(pkin(8)) * pkin(1) + pkin(6);
t152 = cos(qJ(3));
t150 = sin(qJ(3));
t151 = cos(qJ(4));
t238 = t151 * qJ(5);
t205 = t150 * t238;
t137 = -cos(pkin(8)) * pkin(1) - pkin(2);
t175 = -t152 * pkin(3) - t150 * pkin(7);
t154 = t175 + t137;
t74 = t151 * t154;
t46 = -t205 + t74 + (-t136 * t149 - pkin(4)) * t152;
t235 = t152 * t136;
t207 = t149 * t235;
t58 = -t74 + t207;
t52 = t58 + t205;
t278 = t46 + t52;
t264 = t152 * pkin(7);
t267 = t150 * pkin(3);
t174 = -t264 + t267;
t111 = t151 * t174;
t240 = t150 * t136;
t113 = t149 * t240;
t143 = t150 * pkin(4);
t236 = t152 * qJ(5);
t54 = -t151 * t236 + t111 + t113 + t143;
t277 = t54 / 0.2e1;
t180 = t149 * pkin(4) + t136;
t77 = t180 * t150;
t276 = t77 / 0.2e1;
t110 = t149 * t174;
t275 = t110 / 0.2e1;
t274 = -t111 / 0.2e1;
t266 = t151 * pkin(4);
t141 = -pkin(3) - t266;
t272 = -t141 / 0.2e1;
t145 = t149 ^ 2;
t271 = t145 / 0.2e1;
t147 = t151 ^ 2;
t270 = -t147 / 0.2e1;
t269 = -t149 / 0.2e1;
t268 = t151 / 0.2e1;
t265 = t152 * pkin(4);
t263 = pkin(7) + qJ(5);
t209 = t52 / 0.2e1 + t46 / 0.2e1;
t5 = (t265 / 0.2e1 - t209) * t151;
t262 = t5 * qJD(1);
t243 = t149 * t150;
t204 = t151 * t235;
t59 = t149 * t154 + t204;
t53 = -qJ(5) * t243 + t59;
t261 = t53 * t152;
t210 = -t265 / 0.2e1;
t176 = -t46 / 0.2e1 + t210;
t239 = t150 * t151;
t7 = (-t52 / 0.2e1 + t176) * t239;
t260 = t7 * qJD(1);
t259 = t77 * t149;
t258 = t77 * t151;
t78 = t180 * t152;
t257 = t78 * t151;
t146 = t150 ^ 2;
t244 = t149 * t146;
t33 = -t136 * t244 - t58 * t152;
t256 = qJD(1) * t33;
t237 = t151 * t146;
t34 = -t136 * t237 - t59 * t152;
t255 = qJD(1) * t34;
t254 = qJD(4) * t53;
t10 = t278 * t243;
t253 = t10 * qJD(1);
t206 = t136 * t239;
t57 = -t149 * t236 + t110 - t206;
t11 = (t54 * t150 + t46 * t152) * t151 + (t57 * t150 + t261) * t149;
t252 = t11 * qJD(1);
t116 = t263 * t149;
t251 = t116 * t150;
t250 = t116 * t152;
t117 = t263 * t151;
t249 = t117 * t152;
t14 = t46 * t150 - t54 * t152 + (t150 * t78 + t152 * t77) * t149;
t248 = t14 * qJD(1);
t247 = t141 * t149;
t246 = t141 * t151;
t245 = t145 * t152;
t242 = t149 * t152;
t15 = (t57 + t258) * t152 + (-t53 + t257) * t150;
t241 = t15 * qJD(1);
t18 = (t53 * t149 + t46 * t151) * t150;
t234 = t18 * qJD(1);
t21 = t58 * t150 + (-t113 + t111) * t152;
t233 = t21 * qJD(1);
t22 = t110 * t152 + (-t59 + t204) * t150;
t232 = t22 * qJD(1);
t23 = t261 + (pkin(4) * t244 + t77 * t150) * t151;
t231 = t23 * qJD(1);
t24 = t147 * t146 * pkin(4) - t52 * t152 - t77 * t243;
t230 = t24 * qJD(1);
t130 = t147 - t145;
t129 = t147 + t145;
t148 = t152 ^ 2;
t131 = t148 - t146;
t229 = qJD(4) * t149;
t142 = qJD(4) * t151;
t228 = qJD(4) * t152;
t106 = t129 * t146;
t227 = t106 * qJD(1);
t108 = t131 * t149;
t226 = t108 * qJD(1);
t109 = t151 * t148 - t237;
t225 = t109 * qJD(1);
t224 = t117 * qJD(4);
t223 = t129 * qJD(3);
t222 = t131 * qJD(1);
t221 = t149 * qJD(3);
t220 = t149 * qJD(5);
t219 = t150 * qJD(1);
t218 = t150 * qJD(3);
t217 = t150 * qJD(4);
t216 = t151 * qJD(3);
t215 = t151 * qJD(5);
t214 = t152 * qJD(1);
t213 = t152 * qJD(3);
t212 = t152 * qJD(5);
t211 = -t113 / 0.2e1 - t143;
t208 = t117 * t243;
t203 = t46 * t269;
t202 = t259 / 0.2e1;
t201 = t149 * t217;
t200 = t149 * t228;
t199 = t151 * t217;
t198 = t151 * t228;
t197 = t137 * t219;
t196 = t137 * t214;
t195 = t149 * t142;
t194 = t149 * t216;
t193 = t149 * t212;
t192 = t150 * t213;
t191 = t150 * t214;
t190 = t150 * t216;
t189 = t151 * t219;
t188 = t150 * t215;
t187 = t151 * t214;
t186 = t151 * t212;
t185 = -t250 / 0.2e1;
t184 = t242 / 0.2e1;
t183 = t239 / 0.2e1;
t182 = -t236 / 0.2e1;
t181 = t271 + t270;
t179 = pkin(4) * t199;
t178 = -qJD(4) + t214;
t177 = t149 * t190;
t4 = (t53 * t268 + t203 - t78 / 0.2e1) * t152 + (t57 * t268 + t54 * t269 + t276) * t150;
t8 = t46 * t54 + t53 * t57 + t77 * t78;
t173 = t8 * qJD(1) + t4 * qJD(2);
t9 = t77 * pkin(4) * t239 - t278 * t53;
t172 = t9 * qJD(1) + t7 * qJD(2);
t64 = (-0.1e1 + t129) * t152 * t150;
t171 = t4 * qJD(1) + t64 * qJD(2);
t2 = t209 * t117 + (t277 + t239 * t272 - t259 / 0.2e1) * pkin(4);
t26 = pkin(4) * t247;
t170 = -t2 * qJD(1) + t26 * qJD(3);
t153 = (t246 / 0.2e1 + t181 * pkin(4)) * t150 + t202;
t17 = t274 + (t117 / 0.2e1 + t238 / 0.2e1) * t152 + t153 + t211;
t84 = t149 * t266 - t247;
t169 = t17 * qJD(1) - t84 * qJD(3);
t167 = (t266 + t272) * t150;
t20 = t185 + t275 + (t276 - t240 / 0.2e1) * t151 + (t182 + t167) * t149;
t95 = t145 * pkin(4) + t246;
t168 = t20 * qJD(1) + t95 * qJD(3);
t63 = t116 * t149 + t117 * t151;
t166 = t178 * t150;
t165 = t264 / 0.2e1 - t267 / 0.2e1;
t160 = t165 * t151;
t61 = t274 + t160;
t164 = pkin(3) * t221 - t61 * qJD(1);
t161 = t165 * t149;
t60 = t275 - t161;
t163 = pkin(3) * t216 - t60 * qJD(1);
t94 = t181 * t150;
t162 = -t94 * qJD(1) + t194;
t73 = t151 * t166;
t105 = t189 + t221;
t104 = t149 * t219 - t216;
t159 = t149 * qJD(1) * t237 + t94 * qJD(3);
t107 = t130 * t146;
t158 = t107 * qJD(1) + 0.2e1 * t177;
t157 = -t130 * qJD(3) + t189 * t279;
t82 = -t208 / 0.2e1;
t156 = t82 + (t53 / 0.2e1 + t251 / 0.2e1) * t151;
t13 = -t235 / 0.2e1 + t176 * t149 + t156;
t75 = (-t145 / 0.2e1 + 0.1e1 / 0.2e1 + t270) * t150;
t155 = t13 * qJD(1) - t75 * qJD(2) + t63 * qJD(3);
t139 = t147 * t152;
t138 = t218 / 0.2e1;
t134 = t149 * t218;
t99 = (t214 - qJD(4) / 0.2e1) * t150;
t98 = t111 / 0.2e1;
t97 = -t110 / 0.2e1;
t91 = t105 * pkin(4);
t89 = t134 - t198;
t88 = -t149 * t213 - t199;
t87 = -t190 - t200;
t86 = -t151 * t213 + t201;
t85 = t94 * qJD(4);
t76 = (t147 / 0.2e1 + t271 + 0.1e1 / 0.2e1) * t150;
t72 = t105 * t152;
t71 = t104 * t152;
t70 = t149 * t166;
t49 = -pkin(4) * t242 + t208 / 0.2e1 + t82;
t48 = t113 + t98 + t160;
t47 = -t161 + t97 + t206;
t19 = t258 / 0.2e1 + t185 + t136 * t183 + t97 + qJ(5) * t184 + t149 * t167;
t16 = t249 / 0.2e1 + t98 + t151 * t182 + t153 - t211;
t12 = t203 + t235 / 0.2e1 + pkin(4) * t184 + t156;
t6 = (-t209 + t210) * t151;
t3 = -t278 * t117 / 0.2e1 + (t141 * t183 + t202 + t277) * pkin(4);
t1 = qJD(3) * t4 + qJD(4) * t7;
t25 = [0, 0, 0, 0, t192, t131 * qJD(3), 0, 0, 0, t137 * t218, t137 * t213, -t146 * t195 + t147 * t192, -t107 * qJD(4) - 0.2e1 * t152 * t177, -t109 * qJD(3) + t150 * t200, t108 * qJD(3) + t150 * t198, -t192, -qJD(3) * t21 - qJD(4) * t34, qJD(3) * t22 + qJD(4) * t33, t14 * qJD(3) + t23 * qJD(4) + t150 * t186, t15 * qJD(3) + t24 * qJD(4) - t150 * t193, -t11 * qJD(3) + t10 * qJD(4) + t106 * qJD(5), qJD(3) * t8 + qJD(4) * t9 - qJD(5) * t18; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, t191, t222, t213, -t218, 0, -t136 * t213 + t197, t136 * t218 + t196, -t85 + (t147 * t219 + t194) * t152, (t139 - t245) * qJD(3) + (-qJD(4) - t214) * t239 * t279, t134 - t225, t190 + t226, -t99, -t233 + (t149 * t175 - t204) * qJD(3) + t48 * qJD(4), t232 + (t151 * t175 + t207) * qJD(3) + t47 * qJD(4), t248 + (t141 * t242 - t251 - t257) * qJD(3) + t16 * qJD(4) + t193, t241 + (-t117 * t150 + t78 * t149 + t152 * t246) * qJD(3) + t19 * qJD(4) + t186, -t252 + ((t57 + t250) * t151 + (-t54 - t249) * t149) * qJD(3) + t6 * qJD(4), (-t54 * t116 + t57 * t117 + t78 * t141) * qJD(3) + t3 * qJD(4) + t12 * qJD(5) + t173; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t159, -t158, t70, t73, t138, qJD(3) * t48 - qJD(4) * t59 - t255, qJD(3) * t47 + qJD(4) * t58 + t256, qJD(3) * t16 + t231 - t254, qJD(3) * t19 + qJD(4) * t52 + t230, pkin(4) * t201 + t6 * qJD(3) + t253, -pkin(4) * t254 + qJD(3) * t3 + t172; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t72, -t71, t227, qJD(3) * t12 - t234; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t64 * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, -t218, -t213, 0, 0, 0, 0, 0, t87, t89, t87, t89, (t139 + t245) * qJD(3), (t150 * t141 + t152 * t63) * qJD(3) + t49 * qJD(4) + t76 * qJD(5) + t171; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t88, t86, t88, t86, 0, t49 * qJD(3) - t179 + t260; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t76 * qJD(3); 0, 0, 0, 0, -t191, -t222, 0, 0, 0, -t197, -t196, -t147 * t191 - t85, t73 * t279, -t198 + t225, t200 - t226, t99, qJD(4) * t61 + t233, qJD(4) * t60 - t232, qJD(4) * t17 - t248, qJD(4) * t20 - t241, qJD(4) * t5 + t252, -qJD(4) * t2 + qJD(5) * t13 - t173; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(5) * t75 - t171; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t195, t130 * qJD(4), 0, 0, 0, -pkin(3) * t229, -pkin(3) * t142, -t84 * qJD(4), t95 * qJD(4), t129 * qJD(5), qJD(4) * t26 + qJD(5) * t63; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t162, -t157, t142 - t187, t178 * t149, -t219 / 0.2e1, -pkin(7) * t142 - t164, pkin(7) * t229 - t163, t169 - t224, t116 * qJD(4) + t168, -pkin(4) * t142 + t262, -pkin(4) * t224 + t170; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t223, t155; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t159, t158, -t71, -t72, t138, -qJD(3) * t61 + t255, -qJD(3) * t60 - t256, -t17 * qJD(3) - t188 - t231, -t20 * qJD(3) + t150 * t220 - t230, -qJD(3) * t5 - t253, -pkin(4) * t188 + t2 * qJD(3) - t172; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t260; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t162, t157, t187, -t149 * t214, t219 / 0.2e1, t164, t163, -t169 - t220, -t168 - t215, -t262, -pkin(4) * t220 - t170; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t105, t104, 0, -t91; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t73, t70, -t227, -t13 * qJD(3) + t179 + t234; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t75 * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t229, t142, -t223, pkin(4) * t229 - t155; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t105, -t104, 0, t91; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t25;
