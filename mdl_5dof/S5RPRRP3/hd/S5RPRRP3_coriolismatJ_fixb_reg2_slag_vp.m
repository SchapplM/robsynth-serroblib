% Calculate inertial parameters regressor of coriolis matrix for
% S5RPRRP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4,theta2]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2022-01-23 09:30
% Revision: fd3771346c4aea32fdeb66112c511235427c26a7 (2022-01-20)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPRRP3_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRP3_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRP3_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPRRP3_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2022-01-23 09:30:23
% EndTime: 2022-01-23 09:30:26
% DurationCPUTime: 2.12s
% Computational Cost: add. (3032->157), mult. (5583->185), div. (0->0), fcn. (5781->6), ass. (0->130)
t180 = qJD(3) + qJD(4);
t152 = sin(qJ(4));
t153 = sin(qJ(3));
t154 = cos(qJ(3));
t224 = cos(qJ(4));
t141 = t152 * t154 + t153 * t224;
t146 = sin(pkin(8)) * pkin(1) + pkin(6);
t219 = pkin(7) + t146;
t136 = t219 * t153;
t137 = t219 * t154;
t231 = t136 * t224 + t137 * t152;
t69 = -qJ(5) * t141 - t231;
t236 = t180 * t69;
t179 = t224 * pkin(3);
t162 = t179 / 0.2e1;
t139 = t152 * t153 - t154 * t224;
t211 = t139 * qJ(5);
t121 = t224 * t137;
t207 = t152 * t136;
t94 = t121 - t207;
t71 = t94 - t211;
t232 = t180 * t141;
t235 = t139 * t232;
t234 = t180 * t231;
t233 = t180 * t139;
t138 = t139 ^ 2;
t230 = t141 ^ 2;
t229 = pkin(4) / 0.2e1;
t227 = t71 * pkin(4);
t226 = -t121 / 0.2e1;
t149 = t179 + pkin(4);
t225 = -t149 / 0.2e1;
t223 = pkin(3) * t152;
t222 = t139 * pkin(4);
t221 = t141 * pkin(4);
t220 = t153 * pkin(3);
t217 = qJD(3) * pkin(3);
t147 = -cos(pkin(8)) * pkin(1) - pkin(2);
t143 = -pkin(3) * t154 + t147;
t107 = t143 + t222;
t86 = t107 * t141;
t209 = t149 * t139;
t208 = t149 * t141;
t18 = -t71 * t139 - t69 * t141;
t205 = t18 * qJD(1);
t110 = t220 + t221;
t28 = t110 * t139 + t86;
t202 = t28 * qJD(1);
t85 = t107 * t139;
t29 = t110 * t141 - t85;
t201 = t29 * qJD(1);
t32 = -t139 * t221 - t86;
t200 = t32 * qJD(1);
t33 = -pkin(4) * t230 + t85;
t199 = t33 * qJD(1);
t123 = t139 * t223;
t175 = t220 / 0.2e1;
t41 = t175 + t123 / 0.2e1 + (t229 + t149 / 0.2e1) * t141;
t198 = t41 * qJD(1);
t157 = t162 + t229;
t56 = (t225 + t157) * t139;
t197 = t56 * qJD(1);
t196 = t71 * qJD(4);
t78 = t139 * t220 + t141 * t143;
t195 = t78 * qJD(1);
t79 = -t139 * t143 + t141 * t220;
t194 = t79 * qJD(1);
t80 = t138 - t230;
t193 = t80 * qJD(1);
t90 = t226 + t121 / 0.2e1;
t192 = t90 * qJD(1);
t164 = t139 * t179;
t118 = -t164 / 0.2e1;
t95 = t139 * t162 + t118;
t191 = t95 * qJD(1);
t190 = t95 * qJD(3);
t189 = qJD(1) * t154;
t100 = t138 + t230;
t188 = t100 * qJD(1);
t187 = t139 * qJD(1);
t186 = t139 * qJD(4);
t185 = t141 * qJD(1);
t184 = t141 * qJD(4);
t133 = t141 * qJD(5);
t144 = -t153 ^ 2 + t154 ^ 2;
t183 = t144 * qJD(1);
t182 = t153 * qJD(3);
t181 = t154 * qJD(3);
t178 = qJD(4) * t223;
t177 = pkin(4) * t185;
t176 = pkin(4) * t184;
t173 = t139 * t185;
t172 = t143 * t187;
t171 = t143 * t185;
t170 = t147 * t153 * qJD(1);
t169 = t147 * t189;
t168 = t153 * t181;
t167 = t224 * qJD(3);
t166 = t224 * qJD(4);
t163 = pkin(3) * t166;
t9 = t107 * t110;
t160 = t9 * qJD(1);
t10 = pkin(4) * t86;
t159 = t10 * qJD(1);
t16 = t143 * t220;
t158 = t16 * qJD(1);
t122 = (t179 - t149) * t223;
t155 = (t162 + t225) * t71;
t4 = t227 / 0.2e1 + t155;
t109 = -t208 / 0.2e1;
t55 = t141 * t157 + t109;
t156 = -qJD(1) * t4 - qJD(2) * t55 - qJD(3) * t122;
t49 = 0.2e1 * t226 + t207;
t145 = t153 * t189;
t129 = t139 * qJD(5);
t124 = t141 * t223;
t87 = t95 * qJD(4);
t84 = t90 * qJD(3);
t83 = t90 * qJD(4);
t73 = t152 * t217 - t192;
t72 = pkin(3) * t167;
t60 = -t180 * t223 + t192;
t59 = (-t167 - t166) * pkin(3);
t57 = t209 / 0.2e1 + t118 + t222 / 0.2e1;
t54 = t141 * t162 + t109 - t221 / 0.2e1;
t42 = t109 - t123 / 0.2e1 + t175 + t221 / 0.2e1;
t31 = t49 + t211;
t20 = t180 * t80;
t3 = -t227 / 0.2e1 + t155;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t168, t144 * qJD(3), 0, -t168, 0, 0, t147 * t182, t147 * t181, 0, 0, -t235, t20, 0, t235, 0, 0, qJD(3) * t78 + t143 * t184, qJD(3) * t79 - t143 * t186, 0, t16 * qJD(3), -t235, t20, 0, t235, 0, 0, qJD(3) * t28 - qJD(4) * t32, qJD(3) * t29 - qJD(4) * t33, t100 * qJD(5), qJD(3) * t9 + qJD(4) * t10 + qJD(5) * t18; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t145, t183, t181, -t145, -t182, 0, -t146 * t181 + t170, t146 * t182 + t169, 0, 0, -t173, t193, -t233, t173, -t232, 0, -qJD(3) * t94 + qJD(4) * t49 + t195, t194 + t234, (-t124 + t164) * qJD(3) + t87, (-t152 * t231 - t224 * t94) * t217 + t158, -t173, t193, -t233, t173, -t232, 0, -qJD(3) * t71 + qJD(4) * t31 + t202, t201 - t236, (-t124 + t209) * qJD(3) + t57 * qJD(4), (-t71 * t149 + t223 * t69) * qJD(3) + t3 * qJD(4) + t42 * qJD(5) + t160; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t173, t193, -t233, t173, -t232, 0, qJD(3) * t49 - qJD(4) * t94 + t171, -t172 + t234, t190, 0, -t173, t193, -t233, t173, -t232, 0, qJD(3) * t31 - t196 - t200, -t199 - t236, pkin(4) * t186 + qJD(3) * t57, -pkin(4) * t196 + qJD(3) * t3 + t159; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t188, qJD(3) * t42 + t205; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t182, -t181, 0, 0, 0, 0, 0, 0, 0, 0, -t232, t233, 0, (-t141 * t179 - t123) * qJD(3), 0, 0, 0, 0, 0, 0, -t232, t233, 0, (-t123 - t208) * qJD(3) + t54 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t232, t233, 0, 0, 0, 0, 0, 0, 0, 0, -t232, t233, 0, qJD(3) * t54 - t176; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t145, -t183, 0, t145, 0, 0, -t170, -t169, 0, 0, t173, -t193, 0, -t173, 0, 0, t83 - t195, -t194, t87, -t158, t173, -t193, 0, -t173, 0, 0, -t133 + t83 - t202, t129 - t201, -t56 * qJD(4), qJD(4) * t4 - qJD(5) * t41 - t160; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t55 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t178, -t163, 0, 0, 0, 0, 0, 0, 0, 0, -t178, -t163, 0, t122 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t60, t59, t191, 0, 0, 0, 0, 0, 0, 0, t60, t59, -t197, -pkin(4) * t178 - t156; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t185, t187, 0, -t198; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t173, -t193, 0, -t173, 0, 0, -t84 - t171, t172, -t190, 0, t173, -t193, 0, -t173, 0, 0, -t133 - t84 + t200, t129 + t199, t56 * qJD(3), -pkin(4) * t133 - qJD(3) * t4 - t159; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t55 * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t73, t72, -t191, 0, 0, 0, 0, 0, 0, 0, t73, t72, t197, t156; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t185, t187, 0, -t177; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t232, -t233, -t188, qJD(3) * t41 + t176 - t205; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t185, -t187, 0, t198; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t185, -t187, 0, t177; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t1;
