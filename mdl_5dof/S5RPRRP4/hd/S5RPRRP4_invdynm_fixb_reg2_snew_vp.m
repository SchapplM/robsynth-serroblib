% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RPRRP4
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4,theta2]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2022-01-23 09:33
% Revision: fd3771346c4aea32fdeb66112c511235427c26a7 (2022-01-20)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RPRRP4_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRP4_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRP4_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPRRP4_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPRRP4_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPRRP4_invdynm_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2022-01-23 09:33:08
% EndTime: 2022-01-23 09:33:21
% DurationCPUTime: 13.04s
% Computational Cost: add. (50491->610), mult. (124700->758), div. (0->0), fcn. (85705->8), ass. (0->429)
t1047 = cos(pkin(8));
t1112 = t1047 * qJDD(1);
t1034 = -qJDD(3) + t1112;
t1023 = -qJDD(4) + t1034;
t1048 = sin(qJ(4));
t1049 = sin(qJ(3));
t1051 = cos(qJ(4));
t1052 = cos(qJ(3));
t1046 = sin(pkin(8));
t1124 = qJD(1) * t1046;
t989 = (-t1048 * t1052 - t1049 * t1051) * t1124;
t1123 = qJD(1) * t1052;
t1100 = t1046 * t1123;
t1118 = t1046 * t1049;
t1101 = qJD(1) * t1118;
t991 = -t1048 * t1101 + t1051 * t1100;
t1153 = t991 * t989;
t1182 = t1023 - t1153;
t1185 = t1182 * pkin(4);
t1140 = t1048 * t1182;
t1131 = t1051 * t1182;
t1035 = t1047 * qJD(1) - qJD(3);
t1027 = -qJD(4) + t1035;
t1125 = t989 * t1027;
t1044 = t1046 ^ 2;
t1102 = t1035 * t1124;
t1054 = qJD(1) ^ 2;
t1115 = t1052 * t1054;
t1050 = sin(qJ(1));
t1053 = cos(qJ(1));
t1025 = t1053 * g(1) + t1050 * g(2);
t1005 = -t1054 * pkin(1) + qJDD(1) * qJ(2) - t1025;
t1162 = pkin(2) * t1047;
t1086 = -pkin(6) * t1046 - t1162;
t1010 = t1086 * qJD(1);
t1179 = 2 * qJD(2);
t1081 = t1005 + (t1179 + t1010) * qJD(1);
t1161 = t1046 * g(3);
t938 = t1081 * t1047 - t1161;
t1024 = t1050 * g(1) - t1053 * g(2);
t1065 = -t1054 * qJ(2) + qJDD(2) - t1024;
t1083 = -pkin(1) + t1086;
t976 = t1083 * qJDD(1) + t1065;
t962 = t1052 * t976;
t1039 = t1046 * qJDD(1);
t1031 = t1052 * t1039;
t997 = -qJD(3) * t1101 + t1031;
t1058 = -t1034 * pkin(3) - t997 * pkin(7) + t962 + (-pkin(3) * t1044 * t1115 + pkin(7) * t1102 - t938) * t1049;
t1120 = t1044 * t1054;
t1180 = t1049 ^ 2;
t1033 = t1180 * t1120;
t1113 = qJDD(1) * t1049;
t1076 = qJD(3) * t1123 + t1113;
t1063 = t1076 * t1046;
t905 = t1049 * t976 + t1052 * t938;
t994 = -t1035 * pkin(3) - pkin(7) * t1100;
t864 = -pkin(3) * t1033 - pkin(7) * t1063 + t1035 * t994 + t905;
t818 = t1048 * t864 - t1051 * t1058;
t1062 = qJ(5) * t1125 + 0.2e1 * qJD(5) * t991 + t1185 + t818;
t925 = t989 * qJD(4) - t1048 * t1063 + t1051 * t997;
t785 = t925 * qJ(5) + t1062;
t1059 = -t785 - t1185;
t1022 = t1027 ^ 2;
t987 = t989 ^ 2;
t932 = -t1022 - t987;
t869 = t1048 * t932 - t1131;
t868 = pkin(3) * t869;
t1184 = t1059 + t868;
t1183 = t925 - t1125;
t1006 = t1035 * t1101;
t966 = t1006 + t997;
t956 = t1052 * t966;
t1095 = t1048 * t997 + t1051 * t1063;
t885 = (qJD(4) + t1027) * t991 + t1095;
t924 = -t991 * qJD(4) - t1095;
t960 = -t1027 * pkin(4) - t991 * qJ(5);
t1181 = -t924 * pkin(4) - t987 * qJ(5) + t991 * t960 + qJDD(5);
t988 = t991 ^ 2;
t1032 = t1035 ^ 2;
t888 = t1125 + t925;
t847 = -t1048 * t885 - t1051 * t888;
t849 = t1048 * t888 - t1051 * t885;
t795 = -t1049 * t847 + t1052 * t849;
t926 = -t987 - t988;
t781 = t1046 * t795 - t1047 * t926;
t1178 = pkin(1) * t781;
t870 = t1051 * t932 + t1140;
t831 = -t1049 * t869 + t1052 * t870;
t884 = (qJD(4) - t1027) * t991 + t1095;
t801 = t1046 * t831 - t1047 * t884;
t1177 = pkin(1) * t801;
t933 = t1023 + t1153;
t1141 = t1048 * t933;
t954 = -t988 - t1022;
t879 = t1051 * t954 + t1141;
t1132 = t1051 * t933;
t880 = -t1048 * t954 + t1132;
t843 = -t1049 * t879 + t1052 * t880;
t807 = t1046 * t843 - t1047 * t1183;
t1176 = pkin(1) * t807;
t830 = t1049 * t870 + t1052 * t869;
t1175 = pkin(2) * t830;
t841 = t1049 * t880 + t1052 * t879;
t1174 = pkin(2) * t841;
t819 = t1048 * t1058 + t1051 * t864;
t762 = t1048 * t819 - t1051 * t818;
t1173 = pkin(3) * t762;
t782 = t1046 * t926 + t1047 * t795;
t793 = t1049 * t849 + t1052 * t847;
t1172 = pkin(5) * (t1050 * t782 - t1053 * t793);
t802 = t1046 * t884 + t1047 * t831;
t1171 = pkin(5) * (t1050 * t802 - t1053 * t830);
t808 = t1046 * t1183 + t1047 * t843;
t1170 = pkin(5) * (t1050 * t808 - t1053 * t841);
t1169 = pkin(6) * t793;
t1168 = pkin(6) * t830;
t1167 = pkin(6) * t841;
t1166 = pkin(7) * t847;
t1165 = pkin(7) * t869;
t1164 = pkin(7) * t879;
t1163 = pkin(2) * t1046;
t1160 = t1047 * g(3);
t1159 = qJ(2) * t781;
t1158 = qJ(2) * t801;
t1157 = qJ(2) * t807;
t1156 = qJDD(1) * pkin(1);
t1152 = -pkin(1) * t793 + qJ(2) * t782;
t1151 = -pkin(2) * t926 + pkin(6) * t795;
t1150 = -pkin(1) * t830 + qJ(2) * t802;
t1149 = -pkin(1) * t841 + qJ(2) * t808;
t1148 = -pkin(2) * t884 + pkin(6) * t831;
t1147 = -pkin(2) * t1183 + pkin(6) * t843;
t1146 = qJD(5) * t989;
t1144 = t1027 * t991;
t1143 = t1048 * t785;
t1088 = pkin(3) * t1063 - pkin(7) * t1033 + t1160;
t1094 = -t1052 * t994 - t1010;
t876 = (t1005 + (t1179 - t1094) * qJD(1)) * t1046 + t1088;
t1142 = t1048 * t876;
t1139 = t1049 * t762;
t937 = t1081 * t1046 + t1160;
t1138 = t1049 * t937;
t1098 = t1049 * t1115;
t1020 = t1044 * t1098;
t995 = -t1020 + t1034;
t1137 = t1049 * t995;
t996 = -t1020 - t1034;
t1136 = t1049 * t996;
t998 = -t1065 + t1156;
t1135 = t1050 * t998;
t1134 = t1051 * t785;
t1133 = t1051 * t876;
t1130 = t1052 * t762;
t1129 = t1052 * t937;
t1128 = t1052 * t995;
t1127 = t1052 * t996;
t1126 = t1053 * t998;
t1122 = t1027 * t1048;
t1121 = t1027 * t1051;
t1119 = t1046 * t1047;
t1117 = t1046 * t1050;
t1116 = t1046 * t1053;
t1111 = t1050 * qJDD(1);
t1110 = t1053 * qJDD(1);
t878 = pkin(3) * t879;
t1109 = t878 - t819;
t1108 = t1046 * t1153;
t1107 = t1047 * t1153;
t845 = pkin(3) * t847;
t758 = -pkin(2) * t793 - t845;
t1084 = t987 * pkin(4) - t924 * qJ(5) - t1027 * t960 - t819;
t979 = 0.2e1 * t1146;
t788 = t979 - t1084;
t739 = t1048 * t788 - t1134;
t784 = pkin(4) * t785;
t1106 = pkin(3) * t739 - t784;
t1105 = -pkin(3) * t926 + pkin(7) * t849;
t1104 = -pkin(3) * t884 + pkin(7) * t870;
t1103 = -pkin(3) * t1183 + pkin(7) * t880;
t1045 = t1052 ^ 2;
t1099 = t1045 * t1120;
t1097 = t1046 * t1112;
t1096 = t998 + t1156;
t1092 = qJD(1) * t1179 + t1005;
t971 = t1092 * t1046 + t1160;
t972 = t1092 * t1047 - t1161;
t918 = t1046 * t971 + t1047 * t972;
t763 = t1048 * t818 + t1051 * t819;
t904 = t1049 * t938 - t962;
t855 = t1049 * t904 + t1052 * t905;
t1093 = qJD(1) * (qJD(3) - t1035);
t1091 = -t1050 * t1024 - t1053 * t1025;
t1043 = t1046 * t1044;
t1090 = t1043 * t1098;
t1089 = -pkin(2) * t937 + pkin(6) * t855;
t1087 = t818 - t868;
t1019 = -t1050 * t1054 + t1110;
t1085 = -pkin(5) * t1019 - t1050 * g(3);
t916 = t1046 * t972 - t1047 * t971;
t854 = t1049 * t905 - t1052 * t904;
t1082 = t1047 * t1020;
t1080 = t1053 * t1024 - t1050 * t1025;
t1018 = t1053 * t1054 + t1111;
t1079 = pkin(4) * t954 + t1084;
t1077 = t878 + t1079;
t1056 = t1047 ^ 2;
t1009 = (t1044 + t1056) * t1047 * t1054;
t1075 = -t1050 * t1009 + t1047 * t1110;
t1074 = t1053 * t1009 + t1047 * t1111;
t982 = -t1099 - t1032;
t940 = -t1049 * t982 + t1128;
t967 = t1093 * t1118 - t1031;
t1073 = pkin(2) * t967 + pkin(6) * t940 + t1138;
t1001 = -t1033 - t1032;
t953 = t1052 * t1001 - t1136;
t1007 = t1035 * t1100;
t965 = t1007 - t1063;
t1072 = pkin(2) * t965 + pkin(6) * t953 - t1129;
t759 = -pkin(4) * t926 - qJ(5) * t885 + t788;
t767 = (t888 + t925) * qJ(5) + t1062;
t730 = t1048 * t767 + t1051 * t759 + t1105;
t732 = -t1048 * t759 + t1051 * t767 - t1166;
t1071 = t1049 * t732 + t1052 * t730 + t1151;
t746 = t1105 + t763;
t748 = -t762 - t1166;
t1070 = t1049 * t748 + t1052 * t746 + t1151;
t796 = -pkin(4) * t884 + qJ(5) * t932 - 0.2e1 * qJD(2) * t1124 + (t1094 * qJD(1) - t1005) * t1046 - t1088 - t1181;
t755 = qJ(5) * t1140 + t1051 * t796 + t1104;
t765 = qJ(5) * t1131 - t1048 * t796 - t1165;
t1069 = t1049 * t765 + t1052 * t755 + t1148;
t825 = t876 + t1181;
t816 = -qJ(5) * t954 + t825;
t858 = -pkin(4) * t1183 + qJ(5) * t933;
t756 = t1048 * t816 + t1051 * t858 + t1103;
t768 = -t1048 * t858 + t1051 * t816 - t1164;
t1068 = t1049 * t768 + t1052 * t756 + t1147;
t804 = t1104 - t1133;
t833 = t1142 - t1165;
t1067 = t1049 * t833 + t1052 * t804 + t1148;
t811 = t1103 + t1142;
t842 = t1133 - t1164;
t1066 = t1049 * t842 + t1052 * t811 + t1147;
t1003 = t1033 + t1099;
t963 = t1006 - t997;
t964 = t1007 + t1063;
t914 = -t1049 * t963 - t1052 * t964;
t1064 = pkin(2) * t1003 + pkin(6) * t914 + t855;
t740 = t1051 * t788 + t1143;
t753 = -pkin(4) * t825 + qJ(5) * t788;
t715 = -pkin(3) * t825 + pkin(7) * t740 + qJ(5) * t1143 + t1051 * t753;
t718 = -pkin(7) * t739 + qJ(5) * t1134 - t1048 * t753;
t724 = -t1049 * t739 + t1052 * t740;
t1061 = -pkin(2) * t825 + pkin(6) * t724 + t1049 * t718 + t1052 * t715;
t737 = t1052 * t763 - t1139;
t754 = -pkin(3) * t876 + pkin(7) * t763;
t1060 = -pkin(2) * t876 + pkin(6) * t737 - pkin(7) * t1139 + t1052 * t754;
t1041 = t1056 * t1054;
t1040 = t1056 * qJDD(1);
t1038 = t1044 * qJDD(1);
t1030 = t1054 * t1119;
t1026 = 0.2e1 * t1097;
t1016 = -t1041 + t1120;
t1015 = t1041 + t1120;
t1014 = t1047 * t1034;
t1013 = t1040 - t1038;
t1012 = t1040 + t1038;
t1008 = (t1046 * t1056 + t1043) * t1054;
t1004 = -t1033 + t1099;
t1002 = t1032 - t1099;
t1000 = t1033 - t1032;
t999 = -pkin(5) * t1018 + t1053 * g(3);
t986 = t1019 * t1119;
t985 = t1018 * t1119;
t980 = -0.2e1 * t1146;
t978 = t1053 * t1008 + t1046 * t1111;
t977 = t1050 * t1008 - t1046 * t1110;
t975 = (-t1045 - t1180) * t1102;
t969 = -t988 + t1022;
t968 = t987 - t1022;
t958 = -t1045 * t1102 + t1049 * t997;
t957 = (-t1180 * t1035 * qJD(1) - t1052 * t1076) * t1046;
t955 = (t1052 * t1093 + t1113) * t1118;
t952 = t1052 * t1000 + t1137;
t951 = -t1049 * t1002 + t1127;
t950 = t1049 * t1001 + t1127;
t949 = t1049 * t1000 - t1128;
t948 = t1052 * t1002 + t1136;
t944 = -qJ(2) * t1009 + t1096 * t1047;
t943 = qJ(2) * t1008 - t1096 * t1046;
t941 = t988 - t987;
t939 = t1052 * t982 + t1137;
t931 = t1047 * t956 + t1090;
t930 = t1047 * t955 - t1090;
t928 = t1046 * t956 - t1082;
t927 = t1046 * t955 + t1082;
t923 = (-t1048 * t991 - t1051 * t989) * t1027;
t922 = (-t1048 * t989 + t1051 * t991) * t1027;
t915 = -t1049 * t966 + t1052 * t965;
t913 = t1049 * t965 + t956;
t912 = -t1049 * t964 + t1052 * t963;
t911 = -t1046 * t965 + t1047 * t953;
t910 = -t1046 * t964 + t1047 * t952;
t909 = -t1046 * t963 + t1047 * t951;
t908 = t1046 * t953 + t1047 * t965;
t907 = t1046 * t952 + t1047 * t964;
t906 = t1046 * t951 + t1047 * t963;
t902 = -t1046 * t967 + t1047 * t940;
t901 = t1046 * t940 + t1047 * t967;
t900 = pkin(1) * t998 + qJ(2) * t918;
t899 = t1051 * t968 + t1141;
t898 = -t1048 * t969 - t1131;
t897 = t1048 * t968 - t1132;
t896 = t1051 * t969 - t1140;
t895 = pkin(1) * t1015 + qJ(2) * t1012 + t918;
t894 = -pkin(6) * t950 + t1138;
t893 = t1046 * t1004 + t1047 * t915;
t892 = -t1046 * t1003 + t1047 * t914;
t891 = -t1047 * t1004 + t1046 * t915;
t890 = t1047 * t1003 + t1046 * t914;
t881 = pkin(4) * t888;
t875 = -pkin(6) * t939 + t1129;
t874 = t1051 * t925 + t991 * t1122;
t873 = t1048 * t925 - t991 * t1121;
t872 = -t1048 * t924 + t989 * t1121;
t871 = t1051 * t924 + t989 * t1122;
t866 = -pkin(2) * t950 + t904;
t865 = -pkin(2) * t939 + t905;
t863 = -t1049 * t922 + t1052 * t923;
t862 = t1049 * t923 + t1052 * t922;
t857 = -t1046 * t1023 + t1047 * t863;
t856 = t1047 * t1023 + t1046 * t863;
t853 = -t1049 * t897 + t1052 * t899;
t852 = -t1049 * t896 + t1052 * t898;
t851 = t1049 * t899 + t1052 * t897;
t850 = t1049 * t898 + t1052 * t896;
t848 = -t1048 * t1183 - t1051 * t884;
t846 = -t1048 * t884 + t1051 * t1183;
t838 = -pkin(1) * t908 - t1072;
t837 = -t1049 * t873 + t1052 * t874;
t836 = -t1049 * t871 + t1052 * t872;
t835 = t1049 * t874 + t1052 * t873;
t834 = t1049 * t872 + t1052 * t871;
t832 = -pkin(1) * t901 - t1073;
t829 = t1046 * t937 + t1047 * t855;
t828 = t1046 * t855 - t1047 * t937;
t824 = -pkin(6) * t912 - t854;
t823 = t1047 * t837 - t1108;
t822 = t1047 * t836 + t1108;
t821 = t1046 * t837 + t1107;
t820 = t1046 * t836 - t1107;
t815 = -t1046 * t885 + t1047 * t853;
t814 = t1046 * t888 + t1047 * t852;
t813 = t1046 * t853 + t1047 * t885;
t812 = t1046 * t852 - t1047 * t888;
t810 = t1050 * t862 + t1053 * t857;
t809 = t1050 * t857 - t1053 * t862;
t805 = -qJ(2) * t908 - t1046 * t866 + t1047 * t894;
t803 = -qJ(2) * t901 - t1046 * t865 + t1047 * t875;
t799 = -pkin(1) * t950 + qJ(2) * t911 + t1046 * t894 + t1047 * t866;
t798 = -pkin(1) * t890 - t1064;
t797 = -pkin(1) * t939 + qJ(2) * t902 + t1046 * t875 + t1047 * t865;
t794 = -t1049 * t846 + t1052 * t848;
t792 = t1049 * t848 + t1052 * t846;
t789 = -qJ(2) * t890 + t1047 * t824 + t912 * t1163;
t787 = t1046 * t941 + t1047 * t794;
t786 = t1046 * t794 - t1047 * t941;
t783 = -pkin(1) * t828 - t1089;
t779 = t1050 * t835 + t1053 * t823;
t778 = t1050 * t834 + t1053 * t822;
t777 = t1050 * t823 - t1053 * t835;
t776 = t1050 * t822 - t1053 * t834;
t775 = t1050 * t851 + t1053 * t815;
t774 = t1050 * t850 + t1053 * t814;
t773 = t1050 * t815 - t1053 * t851;
t772 = t1050 * t814 - t1053 * t850;
t771 = qJ(2) * t892 + t1046 * t824 + (-pkin(1) - t1162) * t912;
t769 = pkin(5) * (t1050 * t841 + t1053 * t808);
t764 = pkin(5) * (t1050 * t830 + t1053 * t802);
t761 = -t1109 - t1174;
t760 = -qJ(2) * t828 + (-pkin(6) * t1047 + t1163) * t854;
t757 = t1087 - t1175;
t752 = t758 + t881;
t751 = -t1049 * t811 + t1052 * t842 - t1167;
t750 = qJ(2) * t829 + t1083 * t854;
t749 = -t1049 * t804 + t1052 * t833 - t1168;
t747 = -t1077 + t979 - t1174;
t745 = -t1175 - t1184;
t744 = t1050 * t792 + t1053 * t787;
t743 = t1050 * t787 - t1053 * t792;
t741 = pkin(5) * (t1050 * t793 + t1053 * t782);
t738 = -t1066 - t1176;
t736 = t1049 * t763 + t1130;
t735 = -t1067 - t1177;
t734 = t1046 * t876 + t1047 * t737;
t733 = t1046 * t737 - t1047 * t876;
t731 = -t1049 * t756 + t1052 * t768 - t1167;
t729 = -t1049 * t755 + t1052 * t765 - t1168;
t728 = -t1046 * t761 + t1047 * t751 - t1157;
t727 = -pkin(2) * t736 - t1173;
t726 = -t1046 * t757 + t1047 * t749 - t1158;
t725 = -t1068 - t1176;
t723 = t1049 * t740 + t1052 * t739;
t722 = t1046 * t751 + t1047 * t761 + t1149;
t721 = -t1069 - t1177;
t720 = t1046 * t749 + t1047 * t757 + t1150;
t719 = -t1049 * t746 + t1052 * t748 - t1169;
t717 = t1046 * t825 + t1047 * t724;
t716 = t1046 * t724 - t1047 * t825;
t714 = -pkin(6) * t736 - pkin(7) * t1130 - t1049 * t754;
t713 = -t1046 * t747 + t1047 * t731 - t1157;
t712 = -t1070 - t1178;
t711 = -t1046 * t745 + t1047 * t729 - t1158;
t710 = t1046 * t731 + t1047 * t747 + t1149;
t709 = t1046 * t729 + t1047 * t745 + t1150;
t708 = -t1046 * t758 + t1047 * t719 - t1159;
t707 = -pkin(2) * t723 - t1106;
t706 = -t1049 * t730 + t1052 * t732 - t1169;
t705 = t1046 * t719 + t1047 * t758 + t1152;
t704 = -t1071 - t1178;
t703 = -pkin(1) * t733 - t1060;
t702 = -t1046 * t752 + t1047 * t706 - t1159;
t701 = t1046 * t706 + t1047 * t752 + t1152;
t700 = -qJ(2) * t733 - t1046 * t727 + t1047 * t714;
t699 = -pkin(6) * t723 - t1049 * t715 + t1052 * t718;
t698 = -pkin(1) * t736 + qJ(2) * t734 + t1046 * t714 + t1047 * t727;
t697 = -pkin(1) * t716 - t1061;
t696 = -qJ(2) * t716 - t1046 * t707 + t1047 * t699;
t695 = -pkin(1) * t723 + qJ(2) * t717 + t1046 * t699 + t1047 * t707;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1019, 0, -t1018, 0, t1085, -t999, -t1080, -pkin(5) * t1080, t986, t1053 * t1013 + t1050 * t1016, t978, -t986, t1074, 0, -pkin(5) * t1075 - t1050 * t971 - t1116 * t998, -pkin(5) * t977 - t1047 * t1126 - t1050 * t972, -t1053 * t916 - pkin(5) * (t1050 * t1012 + t1053 * t1015), -pkin(5) * (t1050 * t918 + t1126) + (t1050 * pkin(1) - t1053 * qJ(2)) * t916, t1050 * t958 + t1053 * t931, t1050 * t913 + t1053 * t893, t1050 * t948 + t1053 * t909, t1050 * t957 + t1053 * t930, t1050 * t949 + t1053 * t910, -t1034 * t1116 - t1050 * t975, t1053 * t805 - t1050 * t838 - pkin(5) * (t1050 * t911 - t1053 * t950), t1053 * t803 - t1050 * t832 - pkin(5) * (t1050 * t902 - t1053 * t939), t1053 * t789 - t1050 * t798 - pkin(5) * (t1050 * t892 - t1053 * t912), t1053 * t760 - t1050 * t783 - pkin(5) * (t1050 * t829 - t1053 * t854), t779, t744, t774, t778, t775, t810, -t1050 * t735 + t1053 * t726 - t1171, -t1050 * t738 + t1053 * t728 - t1170, -t1050 * t712 + t1053 * t708 - t1172, t1053 * t700 - t1050 * t703 - pkin(5) * (t1050 * t734 - t1053 * t736), t779, t744, t774, t778, t775, t810, -t1050 * t721 + t1053 * t711 - t1171, -t1050 * t725 + t1053 * t713 - t1170, -t1050 * t704 + t1053 * t702 - t1172, t1053 * t696 - t1050 * t697 - pkin(5) * (t1050 * t717 - t1053 * t723); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1018, 0, t1019, 0, t999, t1085, t1091, pkin(5) * t1091, t985, t1050 * t1013 - t1053 * t1016, t977, -t985, -t1075, 0, -pkin(5) * t1074 + t1053 * t971 - t1117 * t998, pkin(5) * t978 - t1047 * t1135 + t1053 * t972, -t1050 * t916 + pkin(5) * (t1053 * t1012 - t1050 * t1015), pkin(5) * (t1053 * t918 - t1135) + (-t1053 * pkin(1) - t1050 * qJ(2)) * t916, t1050 * t931 - t1053 * t958, t1050 * t893 - t1053 * t913, t1050 * t909 - t1053 * t948, t1050 * t930 - t1053 * t957, t1050 * t910 - t1053 * t949, -t1034 * t1117 + t1053 * t975, t1050 * t805 + t1053 * t838 + pkin(5) * (t1050 * t950 + t1053 * t911), t1050 * t803 + t1053 * t832 + pkin(5) * (t1050 * t939 + t1053 * t902), t1050 * t789 + t1053 * t798 + pkin(5) * (t1050 * t912 + t1053 * t892), t1050 * t760 + t1053 * t783 + pkin(5) * (t1050 * t854 + t1053 * t829), t777, t743, t772, t776, t773, t809, t1050 * t726 + t1053 * t735 + t764, t1050 * t728 + t1053 * t738 + t769, t1050 * t708 + t1053 * t712 + t741, t1050 * t700 + t1053 * t703 + pkin(5) * (t1050 * t736 + t1053 * t734), t777, t743, t772, t776, t773, t809, t1050 * t711 + t1053 * t721 + t764, t1050 * t713 + t1053 * t725 + t769, t1050 * t702 + t1053 * t704 + t741, t1050 * t696 + t1053 * t697 + pkin(5) * (t1050 * t723 + t1053 * t717); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1024, t1025, 0, 0, t1038, t1026, 0, t1040, 0, 0, t944, t943, t895, t900, t928, t891, t906, t927, t907, t1014, t799, t797, t771, t750, t821, t786, t812, t820, t813, t856, t720, t722, t705, t698, t821, t786, t812, t820, t813, t856, t709, t710, t701, t695; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1054, 0, 0, -g(3), -t1024, 0, t1097, t1013, t1008, -t1097, t1009, 0, -t1046 * t998, -t1047 * t998, -t916, -qJ(2) * t916, t931, t893, t909, t930, t910, -t1046 * t1034, t805, t803, t789, t760, t823, t787, t814, t822, t815, t857, t726, t728, t708, t700, t823, t787, t814, t822, t815, t857, t711, t713, t702, t696; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1054, 0, qJDD(1), 0, g(3), 0, -t1025, 0, t1030, -t1016, -t1039, -t1030, -t1112, 0, t971, t972, 0, -pkin(1) * t916, -t958, -t913, -t948, -t957, -t949, t975, t838, t832, t798, t783, -t835, -t792, -t850, -t834, -t851, -t862, t735, t738, t712, t703, -t835, -t792, -t850, -t834, -t851, -t862, t721, t725, t704, t697; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1024, t1025, 0, 0, t1038, t1026, 0, t1040, 0, 0, t944, t943, t895, t900, t928, t891, t906, t927, t907, t1014, t799, t797, t771, t750, t821, t786, t812, t820, t813, t856, t720, t722, t705, t698, t821, t786, t812, t820, t813, t856, t709, t710, t701, t695; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1039, t1112, t1030, 0, t1041, 0, 0, -t998, t971, 0, t956, t915, t951, t955, t952, 0, t894, t875, t824, -pkin(6) * t854, t837, t794, t852, t836, t853, t863, t749, t751, t719, t714, t837, t794, t852, t836, t853, t863, t729, t731, t706, t699; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1039, -t1120, t1112, -t1030, 0, t998, 0, t972, 0, -t1020, -t1004, t963, t1020, t964, t1034, t866, t865, -pkin(2) * t912, -pkin(2) * t854, t1153, -t941, -t888, -t1153, t885, t1023, t757, t761, t758, t727, t1153, -t941, -t888, -t1153, t885, t1023, t745, t747, t752, t707; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1030, t1016, t1039, t1030, t1112, 0, -t971, -t972, 0, 0, t958, t913, t948, t957, t949, -t975, t1072, t1073, t1064, t1089, t835, t792, t850, t834, t851, t862, t1067, t1066, t1070, t1060, t835, t792, t850, t834, t851, t862, t1069, t1068, t1071, t1061; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t997, t965, t996, -t1006, t1000, t1006, 0, t937, t904, 0, t874, t848, t898, t872, t899, t923, t833, t842, t748, -pkin(7) * t762, t874, t848, t898, t872, t899, t923, t765, t768, t732, t718; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1007, t966, t1002, -t1063, -t995, t1007, -t937, 0, t905, 0, t873, t846, t896, t871, t897, t922, t804, t811, t746, t754, t873, t846, t896, t871, t897, t922, t755, t756, t730, t715; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1020, t1004, -t963, -t1020, -t964, -t1034, -t904, -t905, 0, 0, -t1153, t941, t888, t1153, -t885, -t1023, -t1087, t1109, t845, t1173, -t1153, t941, t888, t1153, -t885, -t1023, t1184, t980 + t1077, -t881 + t845, t1106; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t925, -t884, -t1182, t1125, t968, -t1125, 0, t876, t818, 0, t925, -t884, -t1182, t1125, t968, -t1125, qJ(5) * t1182, t816, t767, qJ(5) * t785; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1144, t1183, t969, t924, -t933, t1144, -t876, 0, t819, 0, -t1144, t1183, t969, t924, -t933, t1144, t796, t858, t759, t753; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1153, t941, t888, t1153, -t885, -t1023, -t818, -t819, 0, 0, -t1153, t941, t888, t1153, -t885, -t1023, t1059, t980 + t1079, -t881, -t784; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t925, -t884, -t1182, t1125, t968, -t1125, 0, t825, t785, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1144, t1183, t969, t924, -t933, t1144, -t825, 0, t788, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1153, t941, t888, t1153, -t885, -t1023, -t785, -t788, 0, 0;];
m_new_reg = t1;
