% Calculate minimal parameter regressor of coriolis matrix for
% S5RPRRP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4,theta2]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x24]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2022-01-23 09:33
% Revision: fd3771346c4aea32fdeb66112c511235427c26a7 (2022-01-20)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPRRP4_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRP4_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRP4_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPRRP4_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2022-01-23 09:32:54
% EndTime: 2022-01-23 09:32:59
% DurationCPUTime: 2.35s
% Computational Cost: add. (3844->267), mult. (8380->358), div. (0->0), fcn. (8549->6), ass. (0->227)
t188 = cos(pkin(8));
t187 = sin(pkin(8));
t191 = cos(qJ(4));
t192 = cos(qJ(3));
t256 = t192 * t187;
t189 = sin(qJ(4));
t190 = sin(qJ(3));
t261 = t189 * t190;
t154 = -t187 * t261 + t191 * t256;
t232 = t154 * qJD(1);
t136 = t188 * t232;
t226 = qJD(3) + qJD(4);
t209 = t226 * t154;
t76 = t136 - t209;
t290 = t191 * pkin(3);
t182 = pkin(4) + t290;
t297 = -t182 / 0.2e1;
t149 = t154 * qJ(5);
t168 = -t188 * pkin(2) - t187 * pkin(6) - pkin(1);
t162 = t192 * t168;
t224 = pkin(7) * t256;
t275 = qJ(2) * t190;
t114 = -t224 + t162 + (-pkin(3) - t275) * t188;
t101 = t191 * t114;
t137 = -t192 * t188 * qJ(2) - t190 * t168;
t264 = t187 * t190;
t125 = -pkin(7) * t264 - t137;
t262 = t189 * t125;
t67 = -t101 + t262;
t57 = t149 + t67;
t304 = t154 ^ 2;
t258 = t191 * t190;
t260 = t189 * t192;
t167 = t258 + t260;
t151 = t167 * t187;
t267 = t151 * qJ(5);
t122 = t191 * t125;
t203 = t188 * t275 - t162;
t124 = -t203 - t224;
t263 = t189 * t124;
t73 = -t122 - t263;
t60 = t73 + t267;
t303 = t60 * pkin(4);
t302 = -t101 / 0.2e1;
t301 = -t114 / 0.2e1;
t300 = -t122 / 0.2e1;
t257 = t191 * t192;
t166 = t257 - t261;
t299 = t166 / 0.2e1;
t298 = -t167 / 0.2e1;
t296 = t187 / 0.2e1;
t295 = t188 / 0.2e1;
t294 = pkin(3) * t189;
t293 = t151 * pkin(4);
t153 = t167 * t188;
t292 = t153 * pkin(4);
t291 = t154 * pkin(4);
t68 = -t189 * t114 - t122;
t58 = -t68 - t267;
t281 = t58 * t166;
t56 = -t188 * pkin(4) - t57;
t288 = t56 * t298 + t281 / 0.2e1;
t287 = t56 + t57;
t286 = pkin(3) * qJD(3);
t285 = pkin(3) * qJD(4);
t284 = pkin(4) * qJD(4);
t156 = t166 * t188;
t196 = t156 * t294 / 0.2e1 + t153 * t297;
t259 = t191 * t124;
t74 = t259 - t262;
t61 = -t149 + t74;
t3 = (-t61 / 0.2e1 + t56 / 0.2e1) * t167 + (-t58 / 0.2e1 - t60 / 0.2e1) * t166 + t196;
t283 = t3 * qJD(1);
t5 = t287 * t151;
t282 = t5 * qJD(1);
t195 = t57 * t298 - t281 / 0.2e1 + t288;
t7 = t292 / 0.2e1 + t195;
t280 = t7 * qJD(1);
t8 = (-t58 - t60) * t154 + (t56 - t61) * t151;
t279 = t8 * qJD(1);
t240 = pkin(3) * t264 + t187 * qJ(2);
t121 = t240 + t293;
t85 = t121 * t154;
t9 = pkin(4) * t85 - t287 * t58;
t278 = t9 * qJD(1);
t233 = t151 * qJD(5);
t197 = -t257 / 0.2e1 + t261 / 0.2e1;
t103 = (-t166 / 0.2e1 + t197) * t188;
t95 = t103 * qJD(2);
t277 = t233 + t95;
t146 = t154 * qJD(5);
t198 = -t260 / 0.2e1 - t258 / 0.2e1;
t102 = (t298 + t198) * t188;
t93 = t102 * qJD(2);
t276 = t93 - t146;
t225 = pkin(3) * t256;
t126 = t225 + t291;
t10 = t121 * t126 + t56 * t60 + t58 * t61;
t274 = t10 * qJD(1);
t11 = t121 * t187 - t56 * t153 + t58 * t156;
t273 = t11 * qJD(1);
t12 = -t58 * t151 - t56 * t154;
t272 = t12 * qJD(1);
t271 = t121 * t151;
t13 = -t126 * t151 + t60 * t188 - t85;
t270 = t13 * qJD(1);
t14 = t126 * t154 + t61 * t188 - t271;
t269 = t14 * qJD(1);
t15 = t304 * pkin(4) - t57 * t188 - t271;
t268 = t15 * qJD(1);
t16 = -t151 * t291 - t58 * t188 - t85;
t266 = t16 * qJD(1);
t185 = t187 ^ 2;
t265 = t185 * t192;
t220 = pkin(3) * t295;
t205 = t220 + t124 / 0.2e1;
t27 = t300 + t122 / 0.2e1 + (t301 + t205) * t189;
t255 = t27 * qJD(1);
t29 = t205 * t191 + t302;
t254 = t29 * qJD(1);
t123 = t240 * t154;
t38 = -t151 * t225 + t73 * t188 - t123;
t253 = t38 * qJD(1);
t210 = t240 * t151;
t39 = t154 * t225 + t74 * t188 - t210;
t252 = t39 * qJD(1);
t45 = -t67 * t188 - t210;
t251 = t45 * qJD(1);
t46 = t68 * t188 - t123;
t250 = t46 * qJD(1);
t249 = t58 * qJD(4);
t213 = -t189 * t151 / 0.2e1;
t63 = (t297 - pkin(4) / 0.2e1) * t154 + (t213 - t256 / 0.2e1) * pkin(3);
t248 = t63 * qJD(1);
t64 = -t156 * t151 + t153 * t154;
t247 = t64 * qJD(1);
t219 = t290 / 0.2e1;
t204 = t219 + t297;
t200 = pkin(4) / 0.2e1 + t204;
t66 = t200 * t151;
t246 = t66 * qJD(1);
t199 = -t151 * t298 + t154 * t299;
t69 = t296 + t199;
t245 = t69 * qJD(1);
t150 = t151 ^ 2;
t79 = t150 - t304;
t244 = t79 * qJD(1);
t89 = -t187 * t151 - t153 * t188;
t243 = t89 * qJD(1);
t90 = t187 * t154 + t156 * t188;
t242 = t90 * qJD(1);
t91 = t150 + t304;
t241 = t91 * qJD(1);
t178 = t188 ^ 2 + t185;
t239 = qJD(1) * t188;
t238 = qJD(2) * t188;
t237 = qJD(3) * t188;
t94 = t102 * qJD(1);
t96 = t103 * qJD(1);
t106 = t185 * t275 + t203 * t188;
t236 = t106 * qJD(1);
t107 = qJ(2) * t265 - t137 * t188;
t235 = t107 * qJD(1);
t234 = t151 * qJD(1);
t163 = t178 * t190;
t231 = t163 * qJD(1);
t164 = t178 * t192;
t230 = t164 * qJD(1);
t165 = (t190 ^ 2 - t192 ^ 2) * t185;
t229 = t165 * qJD(1);
t169 = t178 * qJ(2);
t228 = t169 * qJD(1);
t227 = t178 * qJD(1);
t223 = t189 * t285;
t222 = t191 * t285;
t221 = pkin(4) * t232;
t218 = t190 * t265;
t217 = t190 * t237;
t216 = t192 * t237;
t215 = t190 * t239;
t214 = t192 * t239;
t211 = pkin(3) * t226;
t208 = t226 * t188;
t207 = -qJD(3) + t239;
t206 = qJD(1) * t218;
t202 = t207 * t190;
t201 = t207 * t192;
t160 = (-t182 + t290) * t294;
t193 = (t58 * t191 / 0.2e1 + (-t57 / 0.2e1 - t56 / 0.2e1) * t189) * pkin(3) + t58 * t297;
t2 = -t303 / 0.2e1 + t193;
t83 = t200 * t167;
t194 = -t2 * qJD(1) - t83 * qJD(2) - t160 * qJD(3);
t30 = t188 * t219 - t259 / 0.2e1 + t262 + t302;
t28 = 0.2e1 * t300 - t263 / 0.2e1 + (t220 + t301) * t189;
t135 = t188 * t234;
t105 = t167 * t295 + t198 * t188;
t104 = t166 * t295 + t197 * t188;
t98 = t105 * qJD(2);
t97 = t104 * qJD(2);
t92 = t151 * t232;
t88 = t90 * qJD(2);
t87 = t89 * qJD(2);
t82 = pkin(4) * t298 + t204 * t167;
t75 = -t226 * t151 + t135;
t72 = -t226 * t167 - t94;
t71 = -t226 * t166 - t96;
t70 = t296 - t199;
t65 = t293 / 0.2e1 - t204 * t151;
t62 = pkin(3) * t213 + t154 * t297 + t225 / 0.2e1 + t291 / 0.2e1;
t43 = -t226 * t103 - t242;
t42 = t226 * t104 + t242;
t41 = t226 * t105 - t243;
t40 = -t226 * t102 + t243;
t26 = t29 * qJD(3);
t25 = t27 * qJD(3);
t24 = t29 * qJD(4);
t23 = t27 * qJD(4);
t22 = t191 * t286 - t254;
t21 = t189 * t286 - t255;
t20 = -t191 * t211 + t254;
t19 = -t189 * t211 + t255;
t18 = t149 + t30;
t17 = t28 + t267;
t6 = -t292 / 0.2e1 + t195;
t4 = t61 * t167 / 0.2e1 + t60 * t299 + t196 + t288;
t1 = t303 / 0.2e1 + t193;
t31 = [0, 0, 0, 0, t178 * qJD(2), t169 * qJD(2), -qJD(3) * t218, t165 * qJD(3), t187 * t217, t187 * t216, 0, t163 * qJD(2) + t107 * qJD(3), t164 * qJD(2) - t106 * qJD(3), -t151 * t209, t226 * t79, t151 * t208, t154 * t208, 0, -t38 * qJD(3) - t46 * qJD(4) - t87, t39 * qJD(3) + t45 * qJD(4) + t88, -t13 * qJD(3) - t16 * qJD(4) + t146 * t188 - t87, t14 * qJD(3) + t15 * qJD(4) - t188 * t233 + t88, t64 * qJD(2) + t8 * qJD(3) + t5 * qJD(4) + t91 * qJD(5), t11 * qJD(2) + t10 * qJD(3) + t9 * qJD(4) + t12 * qJD(5); 0, 0, 0, 0, t227, t228, 0, 0, 0, 0, 0, t231, t230, 0, 0, 0, 0, 0, t41, t42, t41, t42, t247, t273 + (-t153 * t166 + t156 * t167) * qJD(2) + t4 * qJD(3) + t6 * qJD(4) + t70 * qJD(5); 0, 0, 0, 0, 0, 0, -t206, t229, t187 * t202, t187 * t201, 0, t137 * qJD(3) + t235, qJD(3) * t203 - t236, -t92, t244, t75, t76, 0, t73 * qJD(3) + t28 * qJD(4) - t253 + t98, -t74 * qJD(3) + t30 * qJD(4) + t252 + t97, t60 * qJD(3) + t17 * qJD(4) - t270 + t98, -t61 * qJD(3) + t18 * qJD(4) + t269 + t97, t279 + (t182 * t151 - t154 * t294) * qJD(3) + t65 * qJD(4), t274 + t4 * qJD(2) + (t60 * t182 + t61 * t294) * qJD(3) + t1 * qJD(4) + t62 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t92, t244, t75, t76, 0, t28 * qJD(3) + t68 * qJD(4) - t250 + t98, t30 * qJD(3) + t67 * qJD(4) + t251 + t97, t17 * qJD(3) - t249 - t266 + t98, t18 * qJD(3) + t57 * qJD(4) + t268 + t97, t65 * qJD(3) + t151 * t284 + t282, -pkin(4) * t249 + t6 * qJD(2) + t1 * qJD(3) + t278; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t136, -t135, t241, t70 * qJD(2) + t62 * qJD(3) + t272; 0, 0, 0, 0, -t227, -t228, 0, 0, 0, 0, 0, t217 - t231, t216 - t230, 0, 0, 0, 0, 0, t40, t43, t40, t43, -t247, -t3 * qJD(3) + t7 * qJD(4) - t69 * qJD(5) - t273; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t202, t201, 0, 0, 0, 0, 0, t72, t71, t72, t71, 0, -t283 + (t166 * t294 - t167 * t182) * qJD(3) + t82 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t72, t71, t72, t71, 0, t82 * qJD(3) - t167 * t284 + t280; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t245; 0, 0, 0, 0, 0, 0, t206, -t229, -t187 * t215, -t187 * t214, 0, -t190 * t238 - t235, -t192 * t238 + t236, t92, -t244, -t135, -t136, 0, t23 + t93 + t253, t24 + t95 - t252, t23 + t270 + t276, t24 - t269 + t277, -t66 * qJD(4) - t279, t3 * qJD(2) + t2 * qJD(4) + t63 * qJD(5) - t274; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t215, -t214, 0, 0, 0, 0, 0, t94, t96, t94, t96, 0, t83 * qJD(4) + t283; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t223, -t222, -t223, -t222, 0, t160 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t19, t20, t19, t20, -t246, -pkin(4) * t223 - t194; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t232, t234, 0, t248; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t92, -t244, -t135, -t136, 0, t93 - t25 + t250, t95 - t26 - t251, -t25 + t266 + t276, -t26 - t268 + t277, t66 * qJD(3) - t282, -pkin(4) * t146 - t7 * qJD(2) - t2 * qJD(3) - t278; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t94, t96, t94, t96, 0, -t83 * qJD(3) - t280; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t21, t22, t21, t22, t246, t194; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t232, t234, 0, -t221; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t76, t75, -t241, t69 * qJD(2) - t63 * qJD(3) + t154 * t284 - t272; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t245; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t232, -t234, 0, -t248; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t232, -t234, 0, t221; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t31;
