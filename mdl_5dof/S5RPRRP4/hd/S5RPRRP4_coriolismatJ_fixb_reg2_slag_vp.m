% Calculate inertial parameters regressor of coriolis matrix for
% S5RPRRP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4,theta2]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2022-01-23 09:33
% Revision: fd3771346c4aea32fdeb66112c511235427c26a7 (2022-01-20)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPRRP4_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRP4_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRP4_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPRRP4_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2022-01-23 09:32:56
% EndTime: 2022-01-23 09:33:02
% DurationCPUTime: 3.77s
% Computational Cost: add. (5661->314), mult. (12229->404), div. (0->0), fcn. (12512->6), ass. (0->255)
t234 = cos(pkin(8));
t235 = sin(qJ(3));
t233 = sin(pkin(8));
t358 = pkin(2) * t234;
t253 = -t233 * pkin(6) - pkin(1) - t358;
t237 = cos(qJ(3));
t322 = t237 * qJ(2);
t181 = t234 * t322 + t235 * t253;
t327 = t233 * t235;
t163 = -pkin(7) * t327 + t181;
t236 = cos(qJ(4));
t160 = t236 * t163;
t255 = -pkin(1) + (-pkin(7) - pkin(6)) * t233;
t326 = t235 * qJ(2);
t275 = t234 * t326;
t162 = -t275 + (t255 - t358) * t237;
t359 = sin(qJ(4));
t274 = t359 * t162;
t101 = -t274 - t160;
t241 = t255 * t237 + (-t237 * pkin(2) - pkin(3) - t326) * t234;
t239 = t359 * t241;
t95 = t239 + t160;
t373 = t101 + t95;
t273 = t359 * t163;
t325 = t236 * t162;
t102 = -t273 + t325;
t139 = t236 * t241;
t94 = t273 - t139;
t372 = t102 + t94;
t272 = t359 * t235;
t323 = t236 * t237;
t212 = -t272 + t323;
t366 = t212 / 0.2e1;
t271 = t359 * t237;
t324 = t236 * t235;
t248 = -t271 - t324;
t364 = -t248 / 0.2e1;
t195 = t248 * t233;
t321 = t237 * t233;
t198 = -t233 * t272 + t236 * t321;
t285 = qJD(3) + qJD(4);
t370 = t285 * t198;
t371 = t195 * t370;
t291 = t198 * qJD(1);
t178 = t234 * t291;
t104 = t178 - t370;
t193 = t198 * qJ(5);
t72 = t193 + t94;
t71 = -t234 * pkin(4) - t72;
t351 = t71 + t72;
t369 = t198 ^ 2;
t332 = t195 * qJ(5);
t76 = t101 - t332;
t368 = t76 * pkin(4);
t367 = -t139 / 0.2e1;
t152 = -t160 / 0.2e1;
t365 = t248 / 0.2e1;
t354 = t236 * pkin(3);
t228 = pkin(4) + t354;
t363 = -t228 / 0.2e1;
t362 = t233 / 0.2e1;
t361 = t234 / 0.2e1;
t360 = t236 / 0.2e1;
t357 = t195 * pkin(4);
t197 = t248 * t234;
t356 = t197 * pkin(4);
t355 = t198 * pkin(4);
t73 = t95 + t332;
t344 = t73 * t212;
t352 = t71 * t365 + t344 / 0.2e1;
t349 = pkin(3) * qJD(3);
t348 = pkin(4) * qJD(4);
t200 = t212 * t234;
t282 = t359 / 0.2e1;
t257 = t200 * t282;
t243 = pkin(3) * t257 + t197 * t228 / 0.2e1;
t77 = -t193 + t102;
t3 = -(-t77 / 0.2e1 + t71 / 0.2e1) * t248 + (-t73 / 0.2e1 - t76 / 0.2e1) * t212 + t243;
t347 = t3 * qJD(1);
t5 = t351 * t195;
t346 = t5 * qJD(1);
t245 = t72 * t365 - t344 / 0.2e1 + t352;
t7 = -t356 / 0.2e1 + t245;
t345 = t7 * qJD(1);
t8 = (-t73 - t76) * t198 - (t71 - t77) * t195;
t343 = t8 * qJD(1);
t211 = pkin(3) * t327 + t233 * qJ(2);
t159 = t211 - t357;
t117 = t159 * t198;
t9 = pkin(4) * t117 - t351 * t73;
t342 = t9 * qJD(1);
t284 = pkin(3) * t321;
t164 = t284 + t355;
t10 = t159 * t164 + t71 * t76 + t73 * t77;
t339 = t10 * qJD(1);
t242 = (t197 * t360 + t257) * pkin(3);
t11 = -(-t102 / 0.2e1 - t94 / 0.2e1) * t248 + (-t95 / 0.2e1 - t101 / 0.2e1) * t212 + t242;
t338 = t11 * qJD(1);
t14 = t372 * t195 - t373 * t198;
t337 = t14 * qJD(1);
t336 = t159 * t195;
t19 = -t94 * t101 + t95 * t102 + t211 * t284;
t333 = t19 * qJD(1);
t21 = t159 * t233 + t71 * t197 + t73 * t200;
t331 = t21 * qJD(1);
t330 = t211 * t195;
t22 = t73 * t195 - t71 * t198;
t329 = t22 * qJD(1);
t23 = -t94 * t197 + t95 * t200 + t211 * t233;
t328 = t23 * qJD(1);
t24 = t164 * t195 + t76 * t234 - t117;
t320 = t24 * qJD(1);
t25 = t164 * t198 + t77 * t234 + t336;
t319 = t25 * qJD(1);
t26 = t369 * pkin(4) - t72 * t234 + t336;
t318 = t26 * qJD(1);
t27 = t195 * t355 - t73 * t234 - t117;
t317 = t27 * qJD(1);
t278 = pkin(3) * t361;
t238 = t152 - t239 / 0.2e1 + t359 * t278;
t40 = t274 / 0.2e1 + t160 / 0.2e1 + t238;
t316 = t40 * qJD(1);
t42 = t367 + (t278 + t162 / 0.2e1) * t236;
t315 = t42 * qJD(1);
t161 = t211 * t198;
t51 = t101 * t234 + t195 * t284 - t161;
t314 = t51 * qJD(1);
t52 = t102 * t234 + t198 * t284 + t330;
t313 = t52 * qJD(1);
t60 = -t94 * t234 + t330;
t312 = t60 * qJD(1);
t61 = -t95 * t234 - t161;
t311 = t61 * qJD(1);
t310 = t73 * qJD(4);
t256 = t195 * t282;
t87 = (t363 - pkin(4) / 0.2e1) * t198 + (t256 - t321 / 0.2e1) * pkin(3);
t309 = t87 * qJD(1);
t89 = t200 * t195 - t197 * t198;
t308 = t89 * qJD(1);
t277 = t354 / 0.2e1;
t254 = t277 + t363;
t250 = pkin(4) / 0.2e1 + t254;
t93 = t250 * t195;
t307 = t93 * qJD(1);
t249 = t195 * t365 + t198 * t366;
t96 = t362 + t249;
t306 = t96 * qJD(1);
t246 = -t271 / 0.2e1 - t324 / 0.2e1;
t140 = (t365 + t246) * t234;
t130 = t140 * qJD(2);
t190 = t198 * qJD(5);
t305 = t130 - t190;
t247 = -t323 / 0.2e1 + t272 / 0.2e1;
t141 = (-t212 / 0.2e1 + t247) * t234;
t132 = t141 * qJD(2);
t292 = t195 * qJD(5);
t304 = t132 - t292;
t231 = t233 ^ 2;
t224 = t234 ^ 2 + t231;
t303 = qJD(1) * t234;
t302 = qJD(2) * t234;
t301 = qJD(3) * t234;
t180 = -t237 * t253 + t275;
t105 = t231 * qJ(2) + (t180 * t235 + t181 * t237) * t234;
t300 = t105 * qJD(1);
t194 = t195 ^ 2;
t109 = t194 - t369;
t299 = t109 * qJD(1);
t125 = t233 * t195 + t197 * t234;
t298 = t125 * qJD(1);
t126 = t233 * t198 + t200 * t234;
t297 = t126 * qJD(1);
t127 = t194 + t369;
t296 = t127 * qJD(1);
t131 = t140 * qJD(1);
t133 = t141 * qJD(1);
t145 = t180 * t234 + t231 * t326;
t295 = t145 * qJD(1);
t146 = t181 * t234 + t231 * t322;
t294 = t146 * qJD(1);
t293 = t195 * qJD(1);
t208 = t224 * t235;
t290 = t208 * qJD(1);
t209 = t224 * t237;
t289 = t209 * qJD(1);
t210 = (t235 ^ 2 - t237 ^ 2) * t231;
t288 = t210 * qJD(1);
t214 = t224 * qJ(2);
t287 = t214 * qJD(1);
t286 = t224 * qJD(1);
t281 = t359 * pkin(3);
t280 = qJD(4) * t354;
t279 = pkin(4) * t291;
t276 = t231 * t235 * t237;
t270 = t235 * t301;
t269 = t237 * t301;
t268 = t195 * t291;
t267 = t235 * t303;
t266 = t237 * t303;
t265 = t359 * qJD(3);
t264 = t359 * qJD(4);
t261 = t285 * t234;
t260 = -qJD(3) + t303;
t259 = pkin(3) * t264;
t258 = qJD(3) * t276;
t252 = t260 * t235;
t251 = t260 * t237;
t115 = t250 * t248;
t240 = (t73 * t360 - t351 * t359 / 0.2e1) * pkin(3) + t73 * t363;
t2 = -t368 / 0.2e1 + t240;
t205 = (-t359 * t228 + t236 * t281) * pkin(3);
t244 = t2 * qJD(1) - t115 * qJD(2) + t205 * qJD(3);
t43 = t234 * t277 + t273 - t325 / 0.2e1 + t367;
t41 = -t274 / 0.2e1 + t152 + t238;
t219 = qJD(1) * t276;
t206 = t212 * t281;
t179 = t198 * t281;
t177 = t234 * t293;
t143 = t246 * t234 - t248 * t361;
t142 = t212 * t361 + t247 * t234;
t135 = t143 * qJD(2);
t134 = t142 * qJD(2);
t124 = t126 * qJD(2);
t123 = t125 * qJD(2);
t120 = t198 * t261;
t119 = t195 * t261;
t114 = pkin(4) * t365 - t248 * t254;
t103 = t285 * t195 - t177;
t100 = (t197 * t212 - t200 * t248) * qJD(2);
t99 = t248 * t285 - t131;
t98 = -t285 * t212 - t133;
t97 = t362 - t249;
t92 = -t357 / 0.2e1 + t254 * t195;
t88 = t89 * qJD(2);
t86 = pkin(3) * t256 + t198 * t363 + t284 / 0.2e1 + t355 / 0.2e1;
t57 = t285 * t109;
t56 = -t285 * t141 - t297;
t55 = t285 * t142 + t297;
t54 = t285 * t143 - t298;
t53 = -t285 * t140 + t298;
t39 = t42 * qJD(3);
t38 = t40 * qJD(3);
t37 = t42 * qJD(4);
t36 = t40 * qJD(4);
t33 = t236 * t349 - t315;
t32 = pkin(3) * t265 - t316;
t31 = -t285 * t354 + t315;
t30 = t316 + (-t265 - t264) * pkin(3);
t29 = t193 + t43;
t28 = t41 - t332;
t12 = t372 * t364 + t373 * t366 + t242;
t6 = t356 / 0.2e1 + t245;
t4 = t77 * t364 + t76 * t366 + t243 + t352;
t1 = t368 / 0.2e1 + t240;
t13 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t224 * qJD(2), t214 * qJD(2), -t258, t210 * qJD(3), t233 * t270, t258, t233 * t269, 0, t208 * qJD(2) + t146 * qJD(3), t209 * qJD(2) - t145 * qJD(3), 0, t105 * qJD(2), t371, t57, -t119, -t371, t120, 0, -t51 * qJD(3) - t61 * qJD(4) - t123, t52 * qJD(3) + t60 * qJD(4) + t124, t14 * qJD(3) + t88, t23 * qJD(2) + t19 * qJD(3), t371, t57, -t119, -t371, t120, 0, -t24 * qJD(3) - t27 * qJD(4) + t190 * t234 - t123, t25 * qJD(3) + t26 * qJD(4) + t234 * t292 + t124, t8 * qJD(3) - t5 * qJD(4) + t127 * qJD(5) + t88, t21 * qJD(2) + t10 * qJD(3) + t9 * qJD(4) + t22 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t286, t287, 0, 0, 0, 0, 0, 0, t290, t289, 0, t300, 0, 0, 0, 0, 0, 0, t54, t55, t308, t12 * qJD(3) + t100 + t328, 0, 0, 0, 0, 0, 0, t54, t55, t308, t4 * qJD(3) + t6 * qJD(4) + t97 * qJD(5) + t100 + t331; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t219, t288, t233 * t252, t219, t233 * t251, 0, -t181 * qJD(3) + t294, t180 * qJD(3) - t295, 0, 0, t268, t299, t103, -t268, t104, 0, t101 * qJD(3) + t41 * qJD(4) + t135 - t314, -t102 * qJD(3) + t43 * qJD(4) + t134 + t313, t337 + (-t195 * t354 - t179) * qJD(3), t333 + t12 * qJD(2) + (t101 * t236 + t359 * t102) * t349, t268, t299, t103, -t268, t104, 0, qJD(3) * t76 + qJD(4) * t28 + t135 - t320, -qJD(3) * t77 + qJD(4) * t29 + t134 + t319, t343 + (-t228 * t195 - t179) * qJD(3) + t92 * qJD(4), t339 + t4 * qJD(2) + (t228 * t76 + t281 * t77) * qJD(3) + t1 * qJD(4) + t86 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t268, t299, t103, -t268, t104, 0, qJD(3) * t41 - qJD(4) * t95 + t135 - t311, qJD(3) * t43 + qJD(4) * t94 + t134 + t312, 0, 0, t268, t299, t103, -t268, t104, 0, qJD(3) * t28 + t135 - t310 - t317, qJD(3) * t29 + qJD(4) * t72 + t134 + t318, qJD(3) * t92 - t195 * t348 - t346, -pkin(4) * t310 + qJD(2) * t6 + qJD(3) * t1 + t342; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t178, t177, t296, qJD(2) * t97 + qJD(3) * t86 + t329; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t286, -t287, 0, 0, 0, 0, 0, 0, t270 - t290, t269 - t289, 0, -t300, 0, 0, 0, 0, 0, 0, t53, t56, -t308, -qJD(3) * t11 - t328, 0, 0, 0, 0, 0, 0, t53, t56, -t308, -qJD(3) * t3 + qJD(4) * t7 - qJD(5) * t96 - t331; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t252, t251, 0, 0, 0, 0, 0, 0, 0, 0, t99, t98, 0, -t338 + (t248 * t354 + t206) * qJD(3), 0, 0, 0, 0, 0, 0, t99, t98, 0, -t347 + (t228 * t248 + t206) * qJD(3) + t114 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t99, t98, 0, 0, 0, 0, 0, 0, 0, 0, t99, t98, 0, qJD(3) * t114 + t248 * t348 + t345; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t306; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t219, -t288, -t233 * t267, -t219, -t233 * t266, 0, -t235 * t302 - t294, -t237 * t302 + t295, 0, 0, -t268, -t299, t177, t268, -t178, 0, t130 + t36 + t314, t132 + t37 - t313, -t337, qJD(2) * t11 - t333, -t268, -t299, t177, t268, -t178, 0, t305 + t36 + t320, t304 + t37 - t319, qJD(4) * t93 - t343, qJD(2) * t3 + qJD(4) * t2 + qJD(5) * t87 - t339; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t267, -t266, 0, 0, 0, 0, 0, 0, 0, 0, t131, t133, 0, t338, 0, 0, 0, 0, 0, 0, t131, t133, 0, -qJD(4) * t115 + t347; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t259, -t280, 0, 0, 0, 0, 0, 0, 0, 0, -t259, -t280, 0, t205 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t30, t31, 0, 0, 0, 0, 0, 0, 0, 0, t30, t31, t307, -pkin(4) * t259 + t244; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t291, -t293, 0, t309; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t268, -t299, t177, t268, -t178, 0, t130 - t38 + t311, t132 - t39 - t312, 0, 0, -t268, -t299, t177, t268, -t178, 0, t305 - t38 + t317, t304 - t39 - t318, -qJD(3) * t93 + t346, -pkin(4) * t190 - qJD(2) * t7 - qJD(3) * t2 - t342; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t131, t133, 0, 0, 0, 0, 0, 0, 0, 0, t131, t133, 0, qJD(3) * t115 - t345; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t32, t33, 0, 0, 0, 0, 0, 0, 0, 0, t32, t33, -t307, -t244; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t291, -t293, 0, -t279; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t104, t103, -t296, qJD(2) * t96 - qJD(3) * t87 + t198 * t348 - t329; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t306; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t291, t293, 0, -t309; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t291, t293, 0, t279; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t13;
