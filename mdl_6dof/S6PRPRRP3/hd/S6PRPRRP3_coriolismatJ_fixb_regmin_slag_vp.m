% Calculate minimal parameter regressor of coriolis matrix for
% S6PRPRRP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d5,theta1,theta3]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x25]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2021-01-16 01:40
% Revision: 24b2e7d74a0c1a3b64fa2f8f5ad758691ad61af3 (2021-01-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRPRRP3_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRP3_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRRP3_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRPRRP3_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2021-01-16 01:38:36
% EndTime: 2021-01-16 01:38:57
% DurationCPUTime: 7.12s
% Computational Cost: add. (7499->460), mult. (17126->631), div. (0->0), fcn. (19617->10), ass. (0->382)
t338 = sin(pkin(11));
t550 = cos(qJ(4));
t438 = t550 * t338;
t340 = cos(pkin(11));
t342 = sin(qJ(4));
t498 = t342 * t340;
t310 = t438 + t498;
t339 = sin(pkin(6));
t345 = cos(qJ(2));
t505 = t339 * t345;
t417 = t505 / 0.2e1;
t478 = t310 * t417;
t341 = sin(qJ(5));
t344 = cos(qJ(5));
t500 = t341 * t344;
t443 = t310 * t500;
t407 = 0.2e1 * t443;
t331 = -t340 * pkin(3) - pkin(2);
t437 = t550 * t340;
t499 = t342 * t338;
t370 = t437 - t499;
t399 = -pkin(4) * t370 - t310 * pkin(9);
t360 = t331 + t399;
t544 = qJ(3) + pkin(8);
t410 = t544 * t338;
t400 = t342 * t410;
t320 = t544 * t340;
t439 = t550 * t320;
t241 = t439 - t400;
t502 = t341 * t241;
t135 = -t344 * t360 + t502;
t497 = t344 * qJ(6);
t119 = t310 * t497 + t135;
t548 = t370 * pkin(5);
t97 = -t119 - t548;
t565 = t119 + t97;
t455 = t310 * qJD(2);
t290 = t344 * t455;
t450 = t341 * qJD(4);
t261 = t290 + t450;
t305 = t370 ^ 2;
t306 = t310 ^ 2;
t564 = -t306 - t305;
t446 = t306 - t305;
t301 = t438 / 0.2e1 + t498 / 0.2e1;
t334 = t338 ^ 2;
t218 = t344 * t370;
t546 = t310 * pkin(4);
t547 = t370 * pkin(9);
t234 = t546 - t547;
t226 = t344 * t234;
t300 = t310 * pkin(5);
t240 = t342 * t320 + t550 * t410;
t517 = t240 * t341;
t103 = -qJ(6) * t218 + t226 + t300 + t517;
t563 = t103 / 0.2e1;
t343 = sin(qJ(2));
t506 = t339 * t343;
t536 = cos(pkin(6));
t361 = -t338 * t506 + t340 * t536;
t356 = t342 * t361;
t409 = t536 * t338;
t294 = t340 * t506 + t409;
t440 = t550 * t294;
t196 = t440 + t356;
t503 = t341 * t196;
t161 = t344 * t505 + t503;
t562 = -t161 / 0.2e1;
t496 = t344 * t196;
t162 = -t341 * t505 + t496;
t561 = -t162 / 0.2e1;
t215 = t341 * t310;
t187 = pkin(5) * t215 + t240;
t560 = t187 / 0.2e1;
t256 = t370 * t505;
t501 = t341 * t256;
t199 = t344 * t506 - t501;
t559 = t199 / 0.2e1;
t558 = -t226 / 0.2e1;
t233 = t240 * t344;
t228 = t233 / 0.2e1;
t255 = t310 * t505;
t557 = -t255 / 0.2e1;
t545 = pkin(9) + qJ(6);
t321 = t545 * t341;
t556 = t321 / 0.2e1;
t322 = t545 * t344;
t555 = -t322 / 0.2e1;
t337 = t344 ^ 2;
t554 = -t337 / 0.2e1;
t553 = -t341 / 0.2e1;
t552 = t341 / 0.2e1;
t551 = -t344 / 0.2e1;
t549 = pkin(5) * t306;
t543 = t97 * t341;
t542 = t97 * t344;
t495 = t344 * t241;
t136 = t341 * t360 + t495;
t120 = -qJ(6) * t215 + t136;
t533 = t120 * t344;
t541 = t533 / 0.2e1 - t543 / 0.2e1;
t377 = (t561 + t496 / 0.2e1) * t310;
t516 = t255 * t341;
t42 = -t516 / 0.2e1 + t377;
t492 = t42 * qJD(1);
t539 = t215 * qJD(3) - t492;
t213 = t341 * t370;
t418 = t506 / 0.2e1;
t195 = t342 * t294 - t550 * t361;
t521 = t195 * t310;
t371 = t418 - t521 / 0.2e1;
t415 = -t501 / 0.2e1;
t528 = t162 * t370;
t66 = t415 - t528 / 0.2e1 + t371 * t344;
t485 = t66 * qJD(1);
t537 = -t213 * qJD(3) + t485;
t441 = t119 / 0.2e1 + t97 / 0.2e1;
t444 = -t548 / 0.2e1;
t381 = t444 + t441;
t10 = t381 * t344;
t535 = t10 * qJD(2);
t534 = t103 * t344;
t225 = t341 * t234;
t479 = t233 - t225;
t125 = -qJ(6) * t213 - t479;
t532 = t125 * t341;
t15 = t565 * t215;
t531 = t15 * qJD(2);
t530 = t161 * t370;
t529 = t161 * t341;
t527 = t162 * t344;
t526 = t187 * t310;
t525 = t187 * t341;
t524 = t187 * t344;
t188 = pkin(5) * t213 + t241;
t523 = t188 * t341;
t522 = t188 * t344;
t117 = t195 * t341;
t520 = t199 * t344;
t442 = t341 * t506;
t494 = t344 * t256;
t200 = t442 + t494;
t519 = t200 * t341;
t23 = (t97 + t523) * t310 - (t103 - t525) * t370;
t518 = t23 * qJD(2);
t515 = t255 * t344;
t26 = (-t120 + t522) * t310 - (-t125 - t524) * t370;
t514 = t26 * qJD(2);
t513 = t310 * t344;
t512 = t321 * t341;
t511 = t321 * t344;
t510 = t322 * t341;
t509 = t322 * t344;
t332 = -t344 * pkin(5) - pkin(4);
t508 = t332 * t341;
t507 = t332 * t344;
t34 = (t196 - t527 - t529) * t195;
t504 = t34 * qJD(1);
t378 = (t562 + t503 / 0.2e1) * t310;
t39 = t515 / 0.2e1 + t378;
t493 = t39 * qJD(1);
t422 = t310 * t332 / 0.2e1;
t350 = -(-t509 / 0.2e1 - t512 / 0.2e1) * t370 + t422;
t376 = t534 / 0.2e1 + t532 / 0.2e1;
t43 = t350 - t376;
t491 = t43 * qJD(2);
t47 = -t226 * t370 + (-t135 + t502) * t310;
t490 = t47 * qJD(2);
t48 = (-t136 + t495) * t310 - (t479 - t233) * t370;
t489 = t48 * qJD(2);
t49 = -t161 * t199 + t162 * t200 + t195 * t255;
t488 = t49 * qJD(1);
t58 = t120 * t370 + (t341 * t549 + t526) * t344;
t487 = t58 * qJD(2);
t59 = -t119 * t370 - t187 * t215 + t337 * t549;
t486 = t59 * qJD(2);
t413 = -t494 / 0.2e1;
t67 = t413 + t530 / 0.2e1 - t371 * t341;
t484 = t67 * qJD(1);
t86 = -t135 * t370 - t215 * t240;
t483 = t86 * qJD(2);
t87 = t136 * t370 + t240 * t513;
t482 = t87 * qJD(2);
t157 = t527 / 0.2e1;
t424 = -t527 / 0.2e1;
t92 = t157 + t424;
t481 = t92 * qJD(3);
t480 = -t225 / 0.2e1 + t228;
t324 = t340 ^ 2 + t334;
t336 = t341 ^ 2;
t328 = t336 + t337;
t329 = t337 - t336;
t476 = qJD(2) * t339;
t475 = qJD(3) * t344;
t474 = qJD(5) * t341;
t333 = qJD(5) * t344;
t473 = t120 * qJD(5);
t145 = ((-0.1e1 + t334) * t506 + (-t409 + t294) * t340) * t505;
t472 = t145 * qJD(1);
t471 = t162 * qJD(5);
t401 = (-t336 / 0.2e1 + t554) * t310;
t170 = t401 - t301;
t470 = t170 * qJD(2);
t174 = t446 * t341;
t469 = t174 * qJD(2);
t175 = t564 * t341;
t468 = t175 * qJD(2);
t176 = t446 * t344;
t467 = t176 * qJD(2);
t365 = -t437 / 0.2e1 + t499 / 0.2e1;
t178 = (t370 / 0.2e1 + t365) * t505;
t465 = t178 * qJD(1);
t464 = t446 * qJD(2);
t463 = t195 * qJD(4);
t462 = t213 * qJD(2);
t461 = t215 * qJD(2);
t460 = t218 * qJD(2);
t295 = t336 * t370;
t296 = t337 * t370;
t221 = -t295 - t296;
t459 = t221 * qJD(2);
t222 = t328 * t306;
t458 = t222 * qJD(2);
t224 = t564 * t344;
t126 = t224 * qJD(2);
t457 = t301 * qJD(2);
t456 = t370 * qJD(2);
t297 = t370 * qJD(4);
t454 = t310 * qJD(4);
t453 = t322 * qJD(5);
t452 = t324 * qJD(2);
t451 = t328 * qJD(4);
t449 = t341 * qJD(6);
t448 = t344 * qJD(4);
t447 = t344 * qJD(6);
t445 = pkin(5) * t474;
t436 = t310 * t474;
t435 = t310 * t333;
t434 = t370 * t455;
t433 = t370 * t454;
t432 = t343 * t476;
t431 = t341 * t333;
t430 = t341 * t455;
t429 = t310 * t449;
t428 = t341 * t448;
t427 = t344 * t456;
t426 = t310 * t447;
t425 = -t533 / 0.2e1;
t423 = t525 / 0.2e1;
t227 = t517 / 0.2e1;
t421 = -t513 / 0.2e1;
t420 = t513 / 0.2e1;
t419 = t507 / 0.2e1;
t416 = qJ(6) * t553;
t414 = -t215 / 0.2e1;
t412 = -t218 / 0.2e1;
t411 = t336 / 0.2e1 + t554;
t408 = t324 * t345;
t232 = t370 * t290;
t406 = -t213 * qJD(4) - t232;
t405 = t341 * t444;
t404 = qJD(2) * t331 + qJD(3);
t402 = t195 * t420;
t398 = -t370 * t475 + t484;
t397 = -t310 * t475 - t493;
t396 = qJD(4) * t407;
t395 = -t232 + t435;
t346 = (t425 + t543 / 0.2e1 + t188 / 0.2e1) * t195 + t103 * t562 + t162 * t125 / 0.2e1 + t196 * t560;
t355 = t199 * t556 + t200 * t555 + t332 * t557;
t2 = t346 + t355;
t9 = t97 * t103 + t120 * t125 + t187 * t188;
t394 = t2 * qJD(1) + t9 * qJD(2);
t16 = t187 * pkin(5) * t513 - t565 * t120;
t3 = t441 * t162 + (t195 * t421 + t559) * pkin(5);
t393 = -t3 * qJD(1) + t16 * qJD(2);
t392 = t120 * t341 + t542;
t14 = (t532 + t534) * t310 + t392 * t370;
t375 = t161 * t551 + t162 * t552;
t359 = t375 * t370;
t372 = t199 * t552 + t200 * t551;
t54 = -t359 + t372;
t390 = t54 * qJD(1) - t14 * qJD(2);
t19 = t381 * t341;
t389 = -t92 * qJD(1) + t19 * qJD(2);
t31 = t526 - (-t533 + t543) * t370;
t374 = t424 - t529 / 0.2e1;
t351 = -t374 * t370 + t521 / 0.2e1;
t373 = -t520 / 0.2e1 - t519 / 0.2e1;
t33 = t351 + t373;
t388 = t33 * qJD(1) + t31 * qJD(2);
t52 = t392 * t310;
t60 = t310 * t375 + t478;
t387 = -t60 * qJD(1) - t52 * qJD(2);
t164 = pkin(5) * t508;
t5 = t441 * t322 + (t563 + t332 * t421 - t525 / 0.2e1) * pkin(5);
t386 = -t5 * qJD(2) + t164 * qJD(4);
t250 = t509 + t512;
t293 = pkin(5) * t500 - t508;
t354 = (pkin(5) * t411 + t419) * t310;
t51 = -t300 + t558 + (t560 - t240 / 0.2e1) * t341 - (t555 - t497 / 0.2e1) * t370 + t354;
t385 = t51 * qJD(2) - t293 * qJD(4);
t304 = t336 * pkin(5) + t507;
t357 = -pkin(5) * t443 - t524 / 0.2e1 + t341 * t422;
t56 = -(t416 - t321 / 0.2e1) * t370 + t357 + t480;
t384 = -t56 * qJD(2) + t304 * qJD(4);
t349 = t294 * t340 / 0.2e1 - t361 * t338 / 0.2e1;
t167 = t418 - t349;
t317 = t324 * qJ(3);
t383 = t167 * qJD(1) - t317 * qJD(2);
t382 = -t547 / 0.2e1 + t546 / 0.2e1;
t366 = t382 * t344;
t83 = t558 - t366;
t380 = pkin(4) * t450 - t83 * qJD(2);
t352 = t382 * t341 + t228;
t81 = -t233 / 0.2e1 + t225 / 0.2e1 + t352;
t379 = pkin(4) * t448 - t81 * qJD(2);
t369 = (-qJD(5) + t456) * t215;
t212 = t411 * t310;
t368 = -t212 * qJD(2) + t428;
t259 = t430 - t448;
t367 = t301 * qJD(5) - t434;
t364 = qJD(2) * t306 * t500 + t212 * qJD(4);
t223 = t329 * t306;
t363 = t223 * qJD(2) + t396;
t362 = qJD(2) * t407 - t329 * qJD(4);
t348 = -t439 / 0.2e1 + t405 + t400 / 0.2e1;
t353 = (-t510 / 0.2e1 + t511 / 0.2e1) * t310 + t541;
t30 = t348 + t353;
t347 = t356 / 0.2e1 + t440 / 0.2e1;
t71 = t347 + t374;
t358 = -t71 * qJD(1) + t30 * qJD(2) + t250 * qJD(4);
t292 = t301 * qJD(4);
t289 = t310 * t448;
t260 = -t333 + t427;
t251 = t261 * pkin(5);
t220 = t226 / 0.2e1;
t211 = t224 * qJD(3);
t202 = t213 * qJD(5);
t201 = t212 * qJD(5);
t189 = t462 - t474;
t180 = t557 - t478;
t179 = t365 * t505 - t370 * t417;
t171 = t175 * qJD(3);
t169 = t401 + t301;
t168 = t418 + t349;
t118 = t195 * t344;
t110 = -t215 * qJD(4) + t333 * t370 + t126;
t96 = t202 + t289 + t468;
t90 = t92 * qJD(5);
t84 = 0.2e1 * t227 + t220 - t366;
t82 = t352 + t480;
t72 = t157 + t529 / 0.2e1 + t347;
t69 = t528 / 0.2e1 + t402 + t415 + t344 * t418;
t68 = -t530 / 0.2e1 + t195 * t414 + t413 - t442 / 0.2e1;
t61 = t161 * t420 + t162 * t414 + t478;
t57 = -t357 + t480 - (t416 + t556) * t370;
t53 = -t359 - t372;
t50 = qJ(6) * t412 - t370 * t555 + t220 + t227 + t300 + t354 + t423;
t46 = t67 * qJD(2);
t45 = t66 * qJD(2);
t44 = t350 + t376;
t41 = t516 / 0.2e1 + t377;
t40 = -t515 / 0.2e1 + t378;
t32 = t351 - t373;
t29 = -t348 + t353;
t28 = t69 * qJD(2) + t117 * qJD(4) - t471;
t27 = t68 * qJD(2) + t118 * qJD(4) + t161 * qJD(5);
t25 = pkin(5) * t117;
t22 = t39 * qJD(2);
t21 = t42 * qJD(2);
t20 = t119 * t553 + t405 + t425 + t541;
t18 = t41 * qJD(2) + t118 * qJD(5) + t196 * t450;
t17 = t40 * qJD(2) + t117 * qJD(5) - t196 * t448;
t13 = t42 * qJD(4) - t67 * qJD(5);
t12 = t39 * qJD(4) - t66 * qJD(5);
t11 = t119 * t551 - t542 / 0.2e1 + pkin(5) * t412;
t8 = (t200 * t370 + t255 * t513) * qJD(2) + t41 * qJD(4) + t68 * qJD(5);
t7 = (-t199 * t370 + t215 * t255) * qJD(2) + t40 * qJD(4) + t69 * qJD(5);
t6 = t419 * t300 + t565 * t555 + (t423 + t563) * pkin(5);
t4 = t565 * t561 + (t402 + t559) * pkin(5);
t1 = t346 - t355;
t24 = [0, 0, 0, 0, 0, 0, t145 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t49 * qJD(2) + t34 * qJD(4); 0, 0, -t432, -t345 * t476, -t340 * t432, t408 * t476, t472 + t168 * qJD(3) + (-pkin(2) * t343 + qJ(3) * t408) * t476, 0, 0, 0, 0, 0, t180 * qJD(4) - t370 * t432, t179 * qJD(4) + t310 * t432, 0, 0, 0, 0, 0, t7, t8, t7, t8, t53 * qJD(4) + (-t519 - t520) * t455, t488 + (t200 * t120 + t255 * t187 + t199 * t97) * qJD(2) + t32 * qJD(3) + t1 * qJD(4) + t4 * qJD(5) + t61 * qJD(6); 0, 0, 0, 0, 0, 0, t168 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t32 * qJD(2) + t90; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t180 * qJD(2) - t196 * qJD(4), t179 * qJD(2) + t463, 0, 0, 0, 0, 0, t17, t18, t17, t18, t53 * qJD(2) - t328 * t463, t504 + t1 * qJD(2) + (-t195 * t250 + t196 * t332) * qJD(4) + t25 * qJD(5) + t72 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t28, t27, t28, t27, 0, -pkin(5) * t471 + t4 * qJD(2) + t25 * qJD(4) + t481; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t61 * qJD(2) + t72 * qJD(4); 0, 0, 0, 0, 0, 0, -t167 * qJD(3) - t472, 0, 0, 0, 0, 0, 0, -t178 * qJD(4), 0, 0, 0, 0, 0, t12, t13, t12, t13, t54 * qJD(4), t33 * qJD(3) + t2 * qJD(4) - t3 * qJD(5) - t60 * qJD(6) - t488; 0, 0, 0, 0, 0, t324 * qJD(3), t317 * qJD(3), t433, -t446 * qJD(4), 0, 0, 0, t331 * t454, t331 * t297, -t306 * t431 + t337 * t433, -t223 * qJD(5) - t370 * t396, t176 * qJD(4) + t370 * t436, -t174 * qJD(4) + t370 * t435, -t433, t47 * qJD(4) + t87 * qJD(5) - t171, t48 * qJD(4) + t86 * qJD(5) - t211, t23 * qJD(4) + t58 * qJD(5) + t370 * t426 - t171, t26 * qJD(4) + t59 * qJD(5) - t370 * t429 - t211, -t14 * qJD(4) + t15 * qJD(5) + t222 * qJD(6), t31 * qJD(3) + t9 * qJD(4) + t16 * qJD(5) - t52 * qJD(6); 0, 0, 0, 0, 0, t452, -t383, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t468, -t126, -t468, -t126, 0, t44 * qJD(4) + t20 * qJD(5) + t169 * qJD(6) + t388; 0, 0, 0, 0, 0, 0, 0, t434, -t464, t297, -t454, 0, -t241 * qJD(4) + t331 * t455, t240 * qJD(4) + t331 * t456 - t465, -t201 - (-t337 * t455 - t428) * t370, (-t295 + t296) * qJD(4) + (-qJD(5) - t456) * t407, t310 * t450 + t467, t289 - t469, t367, t493 + t490 + (t341 * t399 - t495) * qJD(4) + t84 * qJD(5), t489 + (t344 * t399 + t502) * qJD(4) + t82 * qJD(5) + t492, t493 + t518 + (t213 * t332 - t321 * t310 - t522) * qJD(4) + t50 * qJD(5) + t213 * qJD(6), t514 + (t218 * t332 - t322 * t310 + t523) * qJD(4) + t57 * qJD(5) + t370 * t447 + t492, (-t103 * t341 + t125 * t344 - (t510 - t511) * t370) * qJD(4) + t11 * qJD(5) + t390, t44 * qJD(3) + (-t103 * t321 + t125 * t322 + t188 * t332) * qJD(4) + t6 * qJD(5) + t29 * qJD(6) + t394; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t364, -t363, t369, -t395, t292, t84 * qJD(4) - t136 * qJD(5) + t482 - t485, t82 * qJD(4) + t135 * qJD(5) + t483 - t484, t50 * qJD(4) - t473 - t485 + t487, t57 * qJD(4) + t119 * qJD(5) - t484 + t486, pkin(5) * t436 + t11 * qJD(4) + t531, -pkin(5) * t473 + t20 * qJD(3) + t6 * qJD(4) + t393; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t406, -t259 * t370, t458, t169 * qJD(3) + t29 * qJD(4) + t387; 0, 0, 0, 0, 0, 0, t167 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t33 * qJD(2) + t90; 0, 0, 0, 0, 0, -t452, t383, 0, 0, 0, 0, 0, t454, t297, 0, 0, 0, 0, 0, t96, t110, t96, t110, t221 * qJD(4), -t43 * qJD(4) - t19 * qJD(5) + t170 * qJD(6) - t388; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t455, t456, 0, 0, 0, 0, 0, t290, -t461, t290, -t461, t459, -t491; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t189, t260, t189, t260, 0, -t389 - t445; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t470; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t178 * qJD(2), 0, 0, 0, 0, 0, -t22, -t21, -t22, -t21, -t54 * qJD(2), -t2 * qJD(2) - t71 * qJD(6) - t504; 0, 0, 0, 0, 0, 0, 0, -t434, t464, 0, 0, 0, -t310 * t404, -t370 * t404 + t465, -t337 * t434 - t201, 0.2e1 * t344 * t369, -t218 * qJD(5) - t467, t202 + t469, -t367, t83 * qJD(5) + t397 - t490, t81 * qJD(5) - t489 + t539, t51 * qJD(5) + t397 - t518, -t56 * qJD(5) - t514 + t539, -t221 * qJD(3) - t10 * qJD(5) - t390, t43 * qJD(3) - t5 * qJD(5) + t30 * qJD(6) - t394; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t455, -t456, 0, 0, 0, 0, 0, -t290, t461, -t290, t461, -t459, t491; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t431, t329 * qJD(5), 0, 0, 0, -pkin(4) * t474, -pkin(4) * t333, -t293 * qJD(5), t304 * qJD(5), t328 * qJD(6), t164 * qJD(5) + t250 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t368, -t362, t333 - t460, t189, -t457, -pkin(9) * t333 - t380, pkin(9) * t474 - t379, t385 - t453, t321 * qJD(5) + t384, -pkin(5) * t333 - t535, -pkin(5) * t453 + t386; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t451, t358; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t45, t46, t45, t46, 0, t3 * qJD(2) - t481; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t364, t363, t218 * qJD(4) - t370 * t430, t406, t292, -t83 * qJD(4) - t482 + t537, -t81 * qJD(4) + t398 - t483, -t51 * qJD(4) - t426 - t487 + t537, t56 * qJD(4) + t398 + t429 - t486, t10 * qJD(4) - t531, -pkin(5) * t426 + t19 * qJD(3) + t5 * qJD(4) - t393; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t462, -t427, -t462, -t427, 0, t389; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t368, t362, t460, -t462, t457, t380, t379, -t385 - t449, -t384 - t447, t535, -pkin(5) * t449 - t386; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t261, t259, 0, -t251; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t60 * qJD(2) + t71 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t395, t369, -t458, pkin(5) * t435 - t170 * qJD(3) - t30 * qJD(4) - t387; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t470; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t474, t333, -t451, -t358 + t445; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t261, -t259, 0, t251; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t24;
