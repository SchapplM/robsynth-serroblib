% Calculate inertial parameters regressor of joint inertia matrix for
% S6PRPRRP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d5,theta1,theta3]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 20:08
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6PRPRRP3_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRP3_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRPRRP3_inertiaJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-04 23:44:44
% EndTime: 2019-05-04 23:44:48
% DurationCPUTime: 1.28s
% Computational Cost: add. (868->119), mult. (1895->207), div. (0->0), fcn. (2301->10), ass. (0->87)
t59 = sin(pkin(11));
t61 = cos(pkin(11));
t64 = sin(qJ(4));
t91 = cos(qJ(4));
t43 = t91 * t59 + t64 * t61;
t98 = -0.2e1 * t43;
t62 = cos(pkin(6));
t60 = sin(pkin(6));
t65 = sin(qJ(2));
t88 = t60 * t65;
t30 = -t59 * t88 + t62 * t61;
t31 = t62 * t59 + t61 * t88;
t15 = -t91 * t30 + t64 * t31;
t97 = t15 ^ 2;
t82 = pkin(8) + qJ(3);
t44 = t82 * t61;
t77 = t82 * t59;
t24 = t64 * t44 + t91 * t77;
t96 = t24 ^ 2;
t41 = t64 * t59 - t91 * t61;
t38 = t41 ^ 2;
t52 = -t61 * pkin(3) - pkin(2);
t95 = 0.2e1 * t52;
t94 = 0.2e1 * t61;
t93 = t41 * pkin(5);
t66 = cos(qJ(5));
t92 = t66 * pkin(5);
t90 = t15 * t24;
t89 = t15 * t66;
t67 = cos(qJ(2));
t87 = t60 * t67;
t63 = sin(qJ(5));
t86 = t63 * t41;
t85 = t63 * t43;
t84 = t63 * t66;
t26 = t91 * t44 - t64 * t77;
t83 = t66 * t26;
t37 = t66 * t43;
t81 = -qJ(6) - pkin(9);
t54 = t59 ^ 2;
t56 = t61 ^ 2;
t80 = t54 + t56;
t57 = t63 ^ 2;
t58 = t66 ^ 2;
t48 = t57 + t58;
t79 = qJ(6) * t43;
t78 = t41 * t98;
t19 = t41 * pkin(4) - t43 * pkin(9) + t52;
t9 = t66 * t19 - t63 * t26;
t76 = -pkin(4) * t43 - pkin(9) * t41;
t70 = -t66 * t79 + t9;
t7 = t70 + t93;
t8 = t83 + (t19 - t79) * t63;
t75 = t8 * t63 + t7 * t66;
t10 = t63 * t19 + t83;
t74 = t10 * t66 - t9 * t63;
t73 = t10 * t63 + t9 * t66;
t17 = t64 * t30 + t91 * t31;
t11 = -t63 * t17 - t66 * t87;
t12 = t66 * t17 - t63 * t87;
t5 = t11 * t66 + t12 * t63;
t6 = -t11 * t63 + t12 * t66;
t72 = -t30 * t59 + t31 * t61;
t45 = t81 * t63;
t46 = t81 * t66;
t71 = t66 * t45 - t63 * t46;
t55 = t60 ^ 2;
t53 = -pkin(4) - t92;
t50 = t55 * t67 ^ 2;
t49 = 0.2e1 * t84;
t39 = t43 ^ 2;
t36 = t66 * t41;
t35 = t58 * t39;
t32 = t57 * t39;
t29 = t63 * t37;
t27 = -0.2e1 * t39 * t84;
t23 = 0.2e1 * t41 * t37;
t22 = t63 * t78;
t21 = t48 * t43;
t20 = (-t57 + t58) * t43;
t14 = t15 * t63;
t13 = pkin(5) * t85 + t24;
t4 = -t12 * t41 + t15 * t37;
t3 = t11 * t41 + t15 * t85;
t2 = t5 * t43;
t1 = t11 ^ 2 + t12 ^ 2 + t97;
t16 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t55 * t65 ^ 2 + t62 ^ 2 + t50, 0, 0, 0, 0, 0, 0, 0, 0, 0, t30 ^ 2 + t31 ^ 2 + t50, 0, 0, 0, 0, 0, 0, 0, 0, 0, t17 ^ 2 + t50 + t97, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t87, -t88, 0, 0, 0, 0, 0, 0, 0, 0, t61 * t87, -t59 * t87, t72, pkin(2) * t87 + qJ(3) * t72, 0, 0, 0, 0, 0, 0, -t41 * t87, -t43 * t87, t15 * t43 - t17 * t41, t17 * t26 - t52 * t87 + t90, 0, 0, 0, 0, 0, 0, t3, t4, -t2, t12 * t10 + t11 * t9 + t90, 0, 0, 0, 0, 0, 0, t3, t4, -t2, t11 * t7 + t12 * t8 + t15 * t13; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t54, t59 * t94, 0, t56, 0, 0, pkin(2) * t94, -0.2e1 * pkin(2) * t59, 0.2e1 * t80 * qJ(3), qJ(3) ^ 2 * t80 + pkin(2) ^ 2, t39, t78, 0, t38, 0, 0, t41 * t95, t43 * t95, 0.2e1 * t24 * t43 - 0.2e1 * t26 * t41, t26 ^ 2 + t52 ^ 2 + t96, t35, t27, t23, t32, t22, t38, 0.2e1 * t24 * t85 + 0.2e1 * t9 * t41, -0.2e1 * t10 * t41 + 0.2e1 * t24 * t37, t73 * t98, t10 ^ 2 + t9 ^ 2 + t96, t35, t27, t23, t32, t22, t38, 0.2e1 * t13 * t85 + 0.2e1 * t7 * t41, 0.2e1 * t13 * t37 - 0.2e1 * t8 * t41, t75 * t98, t13 ^ 2 + t7 ^ 2 + t8 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t87, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t87, 0, 0, 0, 0, 0, 0, 0, 0, 0, t5, 0, 0, 0, 0, 0, 0, 0, 0, 0, t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t61, t59, 0, -pkin(2), 0, 0, 0, 0, 0, 0, t41, t43, 0, t52, 0, 0, 0, 0, 0, 0, t36, -t86, -t21, t73, 0, 0, 0, 0, 0, 0, t36, -t86, -t21, t75; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t48, 0, 0, 0, 0, 0, 0, 0, 0, 0, t48; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t15, -t17, 0, 0, 0, 0, 0, 0, 0, 0, -t89, t14, t6, -t15 * pkin(4) + pkin(9) * t6, 0, 0, 0, 0, 0, 0, -t89, t14, t6, t11 * t45 - t12 * t46 + t15 * t53; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t43, 0, -t41, 0, -t24, -t26, 0, 0, t29, t20, t86, -t29, t36, 0, -t24 * t66 + t63 * t76, t24 * t63 + t66 * t76, t74, -t24 * pkin(4) + pkin(9) * t74, t29, t20, t86, -t29, t36, 0, -t13 * t66 + t45 * t41 + t53 * t85, t13 * t63 + t37 * t53 + t46 * t41, -t71 * t43 - t7 * t63 + t8 * t66, t13 * t53 + t7 * t45 - t8 * t46; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t71; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t57, t49, 0, t58, 0, 0, 0.2e1 * pkin(4) * t66, -0.2e1 * pkin(4) * t63, 0.2e1 * t48 * pkin(9), pkin(9) ^ 2 * t48 + pkin(4) ^ 2, t57, t49, 0, t58, 0, 0, -0.2e1 * t53 * t66, 0.2e1 * t53 * t63, -0.2e1 * t45 * t63 - 0.2e1 * t46 * t66, t45 ^ 2 + t46 ^ 2 + t53 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t11, -t12, 0, 0, 0, 0, 0, 0, 0, 0, t11, -t12, 0, t11 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t37, 0, -t85, t41, t9, -t10, 0, 0, 0, 0, t37, 0, -t85, t41, t70 + 0.2e1 * t93, -t8, -pkin(5) * t37, t7 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t66, -t63, 0, 0, 0, 0, 0, 0, 0, 0, t66, -t63, 0, t92; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t63, 0, t66, 0, -t63 * pkin(9), -t66 * pkin(9), 0, 0, 0, 0, t63, 0, t66, 0, t45, t46, -t63 * pkin(5), t45 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * pkin(5), 0, 0, pkin(5) ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t15; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t85, t37, 0, t13; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t66, t63, 0, t53; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1;];
MM_reg  = t16;
