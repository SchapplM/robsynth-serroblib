% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRRRPR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d6,theta5]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 22:37
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRRRPR7_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR7_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRPR7_inertiaJ_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 21:20:22
% EndTime: 2019-05-07 21:20:39
% DurationCPUTime: 3.69s
% Computational Cost: add. (5656->247), mult. (12590->484), div. (0->0), fcn. (14861->12), ass. (0->146)
t104 = sin(qJ(6));
t96 = t104 ^ 2;
t108 = cos(qJ(6));
t98 = t108 ^ 2;
t152 = t96 + t98;
t100 = sin(pkin(12));
t160 = t100 * pkin(4);
t89 = pkin(11) + t160;
t153 = t152 * t89;
t102 = cos(pkin(12));
t105 = sin(qJ(4));
t106 = sin(qJ(3));
t109 = cos(qJ(4));
t110 = cos(qJ(3));
t78 = -t105 * t106 + t109 * t110;
t79 = t105 * t110 + t106 * t109;
t56 = t100 * t78 + t102 * t79;
t174 = -0.2e1 * t56;
t163 = -pkin(10) - pkin(9);
t126 = t163 * t106;
t127 = t163 * t110;
t57 = t105 * t127 + t109 * t126;
t115 = -t79 * qJ(5) + t57;
t58 = t105 * t126 - t109 * t127;
t46 = t78 * qJ(5) + t58;
t31 = t100 * t46 - t102 * t115;
t173 = t31 ^ 2;
t103 = cos(pkin(6));
t101 = sin(pkin(6));
t107 = sin(qJ(2));
t138 = t101 * t107;
t73 = -t103 * t110 + t106 * t138;
t75 = t103 * t106 + t110 * t138;
t47 = -t105 * t75 - t109 * t73;
t48 = -t105 * t73 + t109 * t75;
t34 = t100 * t48 - t102 * t47;
t172 = t34 ^ 2;
t54 = t100 * t79 - t102 * t78;
t171 = t54 ^ 2;
t170 = -0.2e1 * t34;
t93 = -pkin(3) * t110 - pkin(2);
t62 = -pkin(4) * t78 + t93;
t169 = 0.2e1 * t62;
t168 = 0.2e1 * t79;
t167 = 0.2e1 * t101;
t166 = 0.2e1 * t104;
t165 = -0.2e1 * t108;
t164 = 0.2e1 * t110;
t162 = pkin(1) * t107;
t111 = cos(qJ(2));
t161 = pkin(1) * t111;
t159 = t102 * pkin(4);
t158 = t105 * pkin(3);
t36 = t100 * t47 + t102 * t48;
t84 = pkin(8) * t138;
t63 = t84 + (-pkin(2) - t161) * t103;
t50 = t73 * pkin(3) + t63;
t37 = -t47 * pkin(4) + t50;
t10 = t34 * pkin(5) - t36 * pkin(11) + t37;
t137 = t101 * t111;
t130 = pkin(4) * t137;
t131 = pkin(3) * t137;
t128 = pkin(8) * t137;
t64 = t128 + (pkin(9) + t162) * t103;
t65 = (-pkin(2) * t111 - pkin(9) * t107 - pkin(1)) * t101;
t42 = -t106 * t64 + t110 * t65;
t40 = -pkin(10) * t75 - t131 + t42;
t43 = t106 * t65 + t110 * t64;
t41 = -pkin(10) * t73 + t43;
t19 = -t105 * t41 + t109 * t40;
t14 = -qJ(5) * t48 - t130 + t19;
t144 = t109 * t41;
t20 = t105 * t40 + t144;
t18 = qJ(5) * t47 + t20;
t8 = t100 * t14 + t102 * t18;
t6 = -pkin(11) * t137 + t8;
t3 = t10 * t104 + t108 * t6;
t1 = t3 * t108;
t157 = t34 * t54;
t123 = t100 * t18 - t102 * t14;
t5 = pkin(5) * t137 + t123;
t156 = t5 * t108;
t129 = t102 * t158;
t94 = t109 * pkin(3);
t92 = t94 + pkin(4);
t71 = t100 * t92 + t129;
t69 = pkin(11) + t71;
t155 = t152 * t69;
t122 = t100 * t158 - t102 * t92;
t68 = -pkin(5) + t122;
t90 = -pkin(5) - t159;
t154 = t68 + t90;
t97 = t106 ^ 2;
t99 = t110 ^ 2;
t151 = t97 + t99;
t28 = t104 * t34;
t51 = t104 * t54;
t150 = t104 * t56;
t149 = t104 * t69;
t148 = t104 * t89;
t147 = t108 * t56;
t146 = t108 * t69;
t145 = t108 * t89;
t95 = t101 ^ 2;
t143 = t111 * t95;
t24 = t104 * t36 + t108 * t137;
t22 = t24 * t108;
t26 = -t104 * t137 + t108 * t36;
t23 = t26 * t104;
t142 = t26 * t108;
t27 = t31 * t104;
t141 = t31 * t108;
t140 = t73 * t110;
t139 = t75 * t106;
t136 = t103 * t107;
t135 = t104 * t108;
t134 = t54 * t174;
t133 = -0.2e1 * t137;
t132 = 0.2e1 * t137;
t125 = t106 * t137;
t124 = t110 * t137;
t2 = t10 * t108 - t104 * t6;
t121 = t104 * t3 + t108 * t2;
t120 = -t2 * t104 + t1;
t119 = -t54 * t69 + t56 * t68;
t118 = -t54 * t89 + t56 * t90;
t30 = pkin(5) * t54 - pkin(11) * t56 + t62;
t33 = t100 * t115 + t102 * t46;
t16 = -t104 * t33 + t108 * t30;
t17 = t104 * t30 + t108 * t33;
t117 = t104 * t17 + t108 * t16;
t9 = -t104 * t16 + t108 * t17;
t116 = -t42 * t106 + t43 * t110;
t87 = t95 * t111 ^ 2;
t86 = 0.2e1 * t135;
t77 = pkin(1) * t136 + t128;
t76 = t103 * t161 - t84;
t53 = t56 ^ 2;
t52 = t108 * t54;
t49 = t56 * t135;
t39 = (-t96 + t98) * t56;
t29 = t108 * t34;
t21 = t104 * t24;
t11 = -t21 + t142;
t4 = t5 * t104;
t7 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t95 * t107 ^ 2, 0.2e1 * t107 * t143, t136 * t167, t87, t103 * t132, t103 ^ 2, 0.2e1 * pkin(1) * t143 + 0.2e1 * t103 * t76, -0.2e1 * t103 * t77 - 0.2e1 * t162 * t95 (-t107 * t76 + t111 * t77) * t167, pkin(1) ^ 2 * t95 + t76 ^ 2 + t77 ^ 2, t75 ^ 2, -0.2e1 * t75 * t73, t75 * t133, t73 ^ 2, t73 * t132, t87, -0.2e1 * t137 * t42 + 0.2e1 * t63 * t73, 0.2e1 * t137 * t43 + 0.2e1 * t63 * t75, -0.2e1 * t42 * t75 - 0.2e1 * t43 * t73, t42 ^ 2 + t43 ^ 2 + t63 ^ 2, t48 ^ 2, 0.2e1 * t48 * t47, t48 * t133, t47 ^ 2, t47 * t133, t87, -0.2e1 * t137 * t19 - 0.2e1 * t47 * t50, 0.2e1 * t137 * t20 + 0.2e1 * t48 * t50, -0.2e1 * t19 * t48 + 0.2e1 * t20 * t47, t19 ^ 2 + t20 ^ 2 + t50 ^ 2, t36 ^ 2, t36 * t170, t36 * t133, t172, t34 * t132, t87, 0.2e1 * t123 * t137 + 0.2e1 * t34 * t37, 0.2e1 * t137 * t8 + 0.2e1 * t36 * t37, 0.2e1 * t123 * t36 - 0.2e1 * t34 * t8, t123 ^ 2 + t37 ^ 2 + t8 ^ 2, t26 ^ 2, -0.2e1 * t26 * t24, 0.2e1 * t26 * t34, t24 ^ 2, t24 * t170, t172, 0.2e1 * t2 * t34 + 0.2e1 * t24 * t5, 0.2e1 * t26 * t5 - 0.2e1 * t3 * t34, -0.2e1 * t2 * t26 - 0.2e1 * t24 * t3, t2 ^ 2 + t3 ^ 2 + t5 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t138, 0, t137, t103, t76, -t77, 0, 0, t139, -t106 * t73 + t110 * t75, -t125, -t140, -t124, 0, -pkin(2) * t73 + pkin(9) * t125 - t110 * t63, -pkin(2) * t75 + pkin(9) * t124 + t106 * t63 (t139 - t140) * pkin(9) + t116, -t63 * pkin(2) + pkin(9) * t116, t48 * t79, t47 * t79 + t48 * t78, -t79 * t137, t47 * t78, -t78 * t137, 0, -t137 * t57 - t47 * t93 - t50 * t78, t137 * t58 + t48 * t93 + t50 * t79, -t19 * t79 + t20 * t78 + t47 * t58 - t48 * t57, t19 * t57 + t20 * t58 + t50 * t93, t36 * t56, -t34 * t56 - t36 * t54, -t56 * t137, t157, t54 * t137, 0, t137 * t31 + t34 * t62 + t37 * t54, t137 * t33 + t36 * t62 + t37 * t56, t123 * t56 + t31 * t36 - t33 * t34 - t54 * t8, t123 * t31 + t33 * t8 + t37 * t62, t56 * t142 (-t23 - t22) * t56, t147 * t34 + t26 * t54, t24 * t150, -t150 * t34 - t24 * t54, t157, t150 * t5 + t16 * t34 + t2 * t54 + t24 * t31, t147 * t5 - t17 * t34 + t26 * t31 - t3 * t54, -t121 * t56 - t16 * t26 - t17 * t24, t16 * t2 + t17 * t3 + t31 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t97, t106 * t164, 0, t99, 0, 0, pkin(2) * t164, -0.2e1 * pkin(2) * t106, 0.2e1 * t151 * pkin(9), pkin(9) ^ 2 * t151 + pkin(2) ^ 2, t79 ^ 2, t78 * t168, 0, t78 ^ 2, 0, 0, -0.2e1 * t93 * t78, t93 * t168, -0.2e1 * t57 * t79 + 0.2e1 * t58 * t78, t57 ^ 2 + t58 ^ 2 + t93 ^ 2, t53, t134, 0, t171, 0, 0, t54 * t169, t56 * t169, 0.2e1 * t31 * t56 - 0.2e1 * t33 * t54, t33 ^ 2 + t62 ^ 2 + t173, t98 * t53, -0.2e1 * t53 * t135, 0.2e1 * t54 * t147, t96 * t53, t104 * t134, t171, 0.2e1 * t16 * t54 + 0.2e1 * t27 * t56, 0.2e1 * t141 * t56 - 0.2e1 * t17 * t54, t117 * t174, t16 ^ 2 + t17 ^ 2 + t173; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t75, 0, -t73, -t137, t42, -t43, 0, 0, 0, 0, t48, 0, t47, -t137, -t109 * t131 + t19, -t144 + (-t40 + t131) * t105 (t105 * t47 - t109 * t48) * pkin(3) (t105 * t20 + t109 * t19) * pkin(3), 0, 0, t36, 0, -t34, -t137, t122 * t137 - t123, t137 * t71 - t8, t122 * t36 - t34 * t71, t122 * t123 + t71 * t8, t23, t11, t28, -t22, t29, 0, -t149 * t34 + t24 * t68 - t156, -t146 * t34 + t26 * t68 + t4, -t69 * t22 + t1 + (t26 * t69 - t2) * t104, t120 * t69 + t5 * t68; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t106, 0, t110, 0, -t106 * pkin(9), -t110 * pkin(9), 0, 0, 0, 0, t79, 0, t78, 0, t57, -t58 (t105 * t78 - t109 * t79) * pkin(3) (t105 * t58 + t109 * t57) * pkin(3), 0, 0, t56, 0, -t54, 0, -t31, -t33, t122 * t56 - t54 * t71, t122 * t31 + t33 * t71, t49, t39, t51, -t49, t52, 0, t104 * t119 - t141, t108 * t119 + t27, t9, t31 * t68 + t69 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t94, -0.2e1 * t158, 0 (t105 ^ 2 + t109 ^ 2) * pkin(3) ^ 2, 0, 0, 0, 0, 0, 1, -0.2e1 * t122, -0.2e1 * t71, 0, t122 ^ 2 + t71 ^ 2, t96, t86, 0, t98, 0, 0, t68 * t165, t68 * t166, 0.2e1 * t155, t152 * t69 ^ 2 + t68 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t48, 0, t47, -t137, t19, -t20, 0, 0, 0, 0, t36, 0, -t34, -t137, -t102 * t130 - t123, t100 * t130 - t8 (-t100 * t34 - t102 * t36) * pkin(4) (t100 * t8 - t102 * t123) * pkin(4), t23, t11, t28, -t22, t29, 0, -t148 * t34 + t24 * t90 - t156, -t145 * t34 + t26 * t90 + t4, -t89 * t22 + t1 + (t26 * t89 - t2) * t104, t120 * t89 + t5 * t90; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t79, 0, t78, 0, t57, -t58, 0, 0, 0, 0, t56, 0, -t54, 0, -t31, -t33 (-t100 * t54 - t102 * t56) * pkin(4) (t100 * t33 - t102 * t31) * pkin(4), t49, t39, t51, -t49, t52, 0, t104 * t118 - t141, t108 * t118 + t27, t9, t31 * t90 + t89 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t94, -t158, 0, 0, 0, 0, 0, 0, 0, 1, -t122 + t159, -t129 + (-pkin(4) - t92) * t100, 0 (t100 * t71 - t102 * t122) * pkin(4), t96, t86, 0, t98, 0, 0, -t154 * t108, t154 * t104, t153 + t155, t153 * t69 + t68 * t90; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t159, -0.2e1 * t160, 0 (t100 ^ 2 + t102 ^ 2) * pkin(4) ^ 2, t96, t86, 0, t98, 0, 0, t90 * t165, t90 * t166, 0.2e1 * t153, t152 * t89 ^ 2 + t90 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t34, t36, 0, t37, 0, 0, 0, 0, 0, 0, t29, -t28, -t21 - t142, t121; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t54, t56, 0, t62, 0, 0, 0, 0, 0, 0, t52, -t51, -t152 * t56, t117; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t152; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t26, 0, -t24, t34, t2, -t3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t147, 0, -t150, t54, t16, -t17, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t104, 0, t108, 0, -t149, -t146, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t104, 0, t108, 0, -t148, -t145, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t108, -t104, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t7;
