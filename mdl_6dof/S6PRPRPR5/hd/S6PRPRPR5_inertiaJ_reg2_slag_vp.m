% Calculate inertial parameters regressor of joint inertia matrix for
% S6PRPRPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d6,theta1,theta3]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 19:45
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6PRPRPR5_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRPR5_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRPRPR5_inertiaJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-04 22:59:11
% EndTime: 2019-05-04 22:59:14
% DurationCPUTime: 1.08s
% Computational Cost: add. (685->98), mult. (1426->164), div. (0->0), fcn. (1747->10), ass. (0->78)
t46 = sin(pkin(11));
t48 = cos(pkin(11));
t49 = cos(pkin(6));
t47 = sin(pkin(6));
t52 = sin(qJ(2));
t84 = t47 * t52;
t23 = -t46 * t84 + t49 * t48;
t24 = t49 * t46 + t48 * t84;
t51 = sin(qJ(4));
t87 = cos(qJ(4));
t15 = t51 * t23 + t87 * t24;
t12 = t15 ^ 2;
t13 = -t87 * t23 + t51 * t24;
t41 = t47 ^ 2;
t54 = cos(qJ(2));
t37 = t41 * t54 ^ 2;
t93 = t13 ^ 2 + t12 + t37;
t30 = t51 * t46 - t87 * t48;
t27 = t30 ^ 2;
t32 = t87 * t46 + t51 * t48;
t28 = t32 ^ 2;
t39 = -t48 * pkin(3) - pkin(2);
t59 = -t32 * qJ(5) + t39;
t17 = t30 * pkin(4) + t59;
t92 = -0.2e1 * t17;
t91 = 0.2e1 * t39;
t90 = 0.2e1 * t48;
t89 = 0.2e1 * qJ(5);
t88 = pkin(4) + pkin(9);
t86 = t32 * t30;
t50 = sin(qJ(6));
t43 = t50 ^ 2;
t85 = t43 * t30;
t83 = t47 * t54;
t82 = t50 * t30;
t81 = t50 * t32;
t53 = cos(qJ(6));
t80 = t53 * t30;
t26 = t53 * t32;
t79 = t53 * t50;
t78 = pkin(8) + qJ(3);
t40 = t46 ^ 2;
t42 = t48 ^ 2;
t77 = t40 + t42;
t44 = t53 ^ 2;
t76 = t43 + t44;
t75 = qJ(5) * t30;
t74 = t15 * qJ(5);
t73 = -0.2e1 * t86;
t72 = 0.2e1 * t86;
t70 = t30 * t83;
t69 = t32 * t83;
t68 = t30 * t79;
t35 = t78 * t48;
t66 = t78 * t46;
t18 = t51 * t35 + t87 * t66;
t20 = t87 * t35 - t51 * t66;
t67 = t18 ^ 2 + t20 ^ 2;
t10 = t32 * pkin(5) + t18;
t8 = t88 * t30 + t59;
t3 = t53 * t10 - t50 * t8;
t4 = t50 * t10 + t53 * t8;
t1 = t3 * t53 + t4 * t50;
t65 = -t3 * t50 + t4 * t53;
t5 = t53 * t13 + t50 * t83;
t6 = -t50 * t13 + t53 * t83;
t2 = t5 * t53 - t6 * t50;
t64 = -t5 * t50 - t6 * t53;
t63 = t13 * t18 + t15 * t20;
t62 = t13 * t32 - t15 * t30;
t61 = -t23 * t46 + t24 * t48;
t60 = t32 * t88 + t75;
t58 = 0.2e1 * t18 * t32 - 0.2e1 * t20 * t30;
t56 = qJ(5) ^ 2;
t34 = t76 * t88;
t25 = t44 * t30;
t11 = -t30 * pkin(5) + t20;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t41 * t52 ^ 2 + t49 ^ 2 + t37, 0, 0, 0, 0, 0, 0, 0, 0, 0, t23 ^ 2 + t24 ^ 2 + t37, 0, 0, 0, 0, 0, 0, 0, 0, 0, t93, 0, 0, 0, 0, 0, 0, 0, 0, 0, t93, 0, 0, 0, 0, 0, 0, 0, 0, 0, t5 ^ 2 + t6 ^ 2 + t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83, -t84, 0, 0, 0, 0, 0, 0, 0, 0, t48 * t83, -t46 * t83, t61, pkin(2) * t83 + t61 * qJ(3), 0, 0, 0, 0, 0, 0, -t70, -t69, t62, -t39 * t83 + t63, 0, 0, 0, 0, 0, 0, t62, t70, t69, -t17 * t83 + t63, 0, 0, 0, 0, 0, 0, -t15 * t80 + t5 * t32, t15 * t82 + t6 * t32, t64 * t30, t15 * t11 + t5 * t3 - t6 * t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t40, t46 * t90, 0, t42, 0, 0, pkin(2) * t90, -0.2e1 * pkin(2) * t46, 0.2e1 * t77 * qJ(3), t77 * qJ(3) ^ 2 + pkin(2) ^ 2, t28, t73, 0, t27, 0, 0, t30 * t91, t32 * t91, t58, t39 ^ 2 + t67, 0, 0, 0, t28, t73, t27, t58, t30 * t92, t32 * t92, t17 ^ 2 + t67, t43 * t27, 0.2e1 * t27 * t79, t50 * t72, t44 * t27, t53 * t72, t28, -0.2e1 * t11 * t80 + 0.2e1 * t3 * t32, 0.2e1 * t11 * t82 - 0.2e1 * t4 * t32, 0.2e1 * t65 * t30, t11 ^ 2 + t3 ^ 2 + t4 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t83, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t83, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t83, 0, 0, 0, 0, 0, 0, 0, 0, 0, t64; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t48, t46, 0, -pkin(2), 0, 0, 0, 0, 0, 0, t30, t32, 0, t39, 0, 0, 0, 0, 0, 0, 0, -t30, -t32, t17, 0, 0, 0, 0, 0, 0, -t81, -t26, t25 + t85, t65; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t76; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t13, -t15, 0, 0, 0, 0, 0, 0, 0, 0, 0, t13, t15, -t13 * pkin(4) + t74, 0, 0, 0, 0, 0, 0, t15 * t50, t15 * t53, -t2, -t2 * t88 + t74; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t32, 0, -t30, 0, -t18, -t20, 0, 0, 0, -t32, t30, 0, 0, 0, -pkin(4) * t32 - t75, t18, t20, -t18 * pkin(4) + t20 * qJ(5), t68, t25 - t85, t26, -t68, -t81, 0, t11 * t50 - t60 * t53, t11 * t53 + t60 * t50, -t1, t11 * qJ(5) - t1 * t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, -0.2e1 * pkin(4), t89, pkin(4) ^ 2 + t56, t44, -0.2e1 * t79, 0, t43, 0, 0, t50 * t89, t53 * t89, 0.2e1 * t34, t76 * t88 ^ 2 + t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t13, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t32, 0, 0, t18, 0, 0, 0, 0, 0, 0, t26, -t81, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, -pkin(4), 0, 0, 0, 0, 0, 0, 0, 0, -t76, -t34; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t76; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t5, t6, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t82, 0, t80, t32, t3, -t4, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t50, -t53, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t53, 0, -t50, 0, -t53 * t88, t50 * t88, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t53, -t50, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t7;
