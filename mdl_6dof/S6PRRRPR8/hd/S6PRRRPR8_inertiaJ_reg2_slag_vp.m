% Calculate inertial parameters regressor of joint inertia matrix for
% S6PRRRPR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d4,d6,theta1]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 23:54
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6PRRRPR8_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPR8_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRRPR8_inertiaJ_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 09:10:37
% EndTime: 2019-05-05 09:10:44
% DurationCPUTime: 2.36s
% Computational Cost: add. (1550->206), mult. (3883->369), div. (0->0), fcn. (4507->12), ass. (0->127)
t78 = sin(qJ(4));
t69 = t78 ^ 2;
t82 = cos(qJ(4));
t71 = t82 ^ 2;
t147 = t69 + t71;
t75 = cos(pkin(7));
t84 = cos(qJ(2));
t127 = t75 * t84;
t73 = sin(pkin(7));
t79 = sin(qJ(3));
t131 = t73 * t79;
t74 = sin(pkin(6));
t76 = cos(pkin(6));
t80 = sin(qJ(2));
t83 = cos(qJ(3));
t25 = t76 * t131 + (t79 * t127 + t80 * t83) * t74;
t128 = t74 * t84;
t39 = -t73 * t128 + t75 * t76;
t14 = t25 * t82 + t39 * t78;
t10 = t14 ^ 2;
t12 = t25 * t78 - t39 * t82;
t129 = t74 * t80;
t130 = t73 * t83;
t23 = -t74 * t83 * t127 + t79 * t129 - t76 * t130;
t20 = t23 ^ 2;
t146 = t12 ^ 2 + t10 + t20;
t41 = t78 * t131 - t82 * t75;
t145 = t41 ^ 2;
t43 = t82 * t131 + t75 * t78;
t40 = t43 ^ 2;
t144 = -0.2e1 * t43;
t143 = 0.2e1 * t73;
t142 = -0.2e1 * t78;
t141 = 0.2e1 * t82;
t140 = 2 * qJ(5);
t139 = pkin(4) + pkin(11);
t138 = pkin(2) * t79;
t137 = pkin(2) * t83;
t136 = t23 * t78;
t135 = t23 * t82;
t77 = sin(qJ(6));
t81 = cos(qJ(6));
t26 = t77 * t130 + t41 * t81;
t134 = t26 * t77;
t133 = t41 * t82;
t38 = t43 * t78;
t66 = t73 ^ 2;
t132 = t66 * t83;
t126 = t77 * t43;
t125 = t77 * t78;
t124 = t77 * t82;
t123 = t77 * t139;
t122 = t78 * t82;
t27 = t81 * t130 - t77 * t41;
t121 = t81 * t27;
t120 = t81 * t77;
t119 = t81 * t82;
t118 = t81 * t139;
t110 = pkin(9) * t130;
t34 = t110 + (pkin(10) + t138) * t75;
t35 = (-pkin(3) * t83 - pkin(10) * t79 - pkin(2)) * t73;
t19 = t82 * t34 + t78 * t35;
t117 = t147 * pkin(10) ^ 2;
t68 = t77 ^ 2;
t70 = t81 ^ 2;
t55 = t68 + t70;
t116 = qJ(5) * t82;
t115 = t14 * qJ(5);
t114 = t41 * t144;
t113 = t75 * t143;
t112 = -0.2e1 * t122;
t109 = t43 * t130;
t108 = t41 * t130;
t107 = t77 * t119;
t106 = t78 * t130;
t105 = t82 * t130;
t104 = qJ(5) * t130;
t103 = -t78 * qJ(5) - pkin(3);
t18 = -t78 * t34 + t35 * t82;
t102 = pkin(10) * t106;
t101 = pkin(10) * t105;
t57 = pkin(4) * t130;
t17 = -t18 + t57;
t6 = pkin(5) * t43 + pkin(11) * t130 + t17;
t56 = pkin(9) * t131;
t33 = t56 + (-pkin(3) - t137) * t75;
t88 = -t43 * qJ(5) + t33;
t7 = t139 * t41 + t88;
t2 = t6 * t81 - t7 * t77;
t3 = t6 * t77 + t7 * t81;
t100 = t2 * t81 + t3 * t77;
t4 = t12 * t81 - t23 * t77;
t5 = t12 * t77 + t23 * t81;
t1 = t4 * t81 + t5 * t77;
t99 = -pkin(4) * t78 + t116;
t98 = t12 * t43 - t14 * t41;
t97 = t12 * t78 + t14 * t82;
t16 = t104 - t19;
t96 = -t16 * t82 + t17 * t78;
t95 = -t18 * t78 + t19 * t82;
t47 = -t139 * t82 + t103;
t63 = t78 * pkin(10);
t53 = pkin(5) * t78 + t63;
t21 = -t47 * t77 + t53 * t81;
t22 = t47 * t81 + t53 * t77;
t9 = t21 * t81 + t22 * t77;
t94 = -t41 * t78 + t43 * t82;
t93 = -t139 * t78 + t116;
t92 = t12 * t130 + t23 * t41;
t91 = t14 * t130 + t23 * t43;
t90 = t97 * pkin(10);
t89 = (t38 - t133) * pkin(10);
t86 = qJ(5) ^ 2;
t65 = t82 * pkin(10);
t61 = t81 * t78;
t59 = t66 * t83 ^ 2;
t58 = 0.2e1 * t122;
t54 = pkin(5) * t82 + t65;
t51 = -pkin(4) * t82 + t103;
t50 = 0.2e1 * t147 * pkin(10);
t48 = t55 * t139;
t46 = t75 * t138 + t110;
t45 = t75 * t137 - t56;
t37 = t81 * t43;
t11 = t41 * pkin(4) + t88;
t8 = -pkin(5) * t41 - t16;
t13 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t76 ^ 2 + (t80 ^ 2 + t84 ^ 2) * t74 ^ 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, t25 ^ 2 + t39 ^ 2 + t20, 0, 0, 0, 0, 0, 0, 0, 0, 0, t146, 0, 0, 0, 0, 0, 0, 0, 0, 0, t146, 0, 0, 0, 0, 0, 0, 0, 0, 0, t4 ^ 2 + t5 ^ 2 + t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t128, -t129, 0, 0, 0, 0, 0, 0, 0, 0, -t39 * t130 - t23 * t75, t39 * t131 - t25 * t75 (t23 * t79 + t25 * t83) * t73, -pkin(2) * t39 * t73 - t23 * t45 + t25 * t46, 0, 0, 0, 0, 0, 0, t92, t91, t98, -t12 * t18 + t14 * t19 + t23 * t33, 0, 0, 0, 0, 0, 0, t98, -t92, -t91, t11 * t23 + t12 * t17 - t14 * t16, 0, 0, 0, 0, 0, 0, -t14 * t26 + t4 * t43, -t14 * t27 - t43 * t5, t26 * t5 + t27 * t4, t14 * t8 + t2 * t4 + t3 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t66 * t79 ^ 2, 0.2e1 * t79 * t132, t79 * t113, t59, t83 * t113, t75 ^ 2, 0.2e1 * pkin(2) * t132 + 0.2e1 * t45 * t75, -0.2e1 * t66 * t138 - 0.2e1 * t46 * t75 (-t45 * t79 + t46 * t83) * t143, pkin(2) ^ 2 * t66 + t45 ^ 2 + t46 ^ 2, t40, t114, -0.2e1 * t109, t145, 0.2e1 * t108, t59, -0.2e1 * t18 * t130 + 0.2e1 * t33 * t41, 0.2e1 * t19 * t130 + 0.2e1 * t33 * t43, -0.2e1 * t18 * t43 - 0.2e1 * t19 * t41, t18 ^ 2 + t19 ^ 2 + t33 ^ 2, t59, 0.2e1 * t109, -0.2e1 * t108, t40, t114, t145, 0.2e1 * t16 * t41 + 0.2e1 * t17 * t43, -0.2e1 * t11 * t41 - 0.2e1 * t17 * t130, -0.2e1 * t11 * t43 + 0.2e1 * t16 * t130, t11 ^ 2 + t16 ^ 2 + t17 ^ 2, t27 ^ 2, -0.2e1 * t27 * t26, t27 * t144, t26 ^ 2, 0.2e1 * t26 * t43, t40, 0.2e1 * t2 * t43 - 0.2e1 * t26 * t8, -0.2e1 * t27 * t8 - 0.2e1 * t3 * t43, 0.2e1 * t2 * t27 + 0.2e1 * t26 * t3, t2 ^ 2 + t3 ^ 2 + t8 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t23, -t25, 0, 0, 0, 0, 0, 0, 0, 0, -t135, t136, t97, -t23 * pkin(3) + t90, 0, 0, 0, 0, 0, 0, t97, t135, -t136, t23 * t51 + t90, 0, 0, 0, 0, 0, 0, t14 * t119 + t4 * t78, -t14 * t124 - t5 * t78 (t4 * t77 - t5 * t81) * t82, t14 * t54 + t21 * t4 + t22 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t131, 0, t130, t75, t45, -t46, 0, 0, t38, t94, -t106, -t133, -t105, 0, -pkin(3) * t41 - t33 * t82 + t102, -pkin(3) * t43 + t33 * t78 + t101, t89 + t95, -t33 * pkin(3) + t95 * pkin(10), 0, t106, t105, t38, t94, -t133, t89 + t96, t11 * t82 - t41 * t51 - t102, -t11 * t78 - t43 * t51 - t101, t96 * pkin(10) + t11 * t51, t27 * t124 (t121 - t134) * t82, -t43 * t124 - t27 * t78, -t26 * t119, -t43 * t119 + t26 * t78, t38, t8 * t119 + t2 * t78 + t21 * t43 - t26 * t54, -t8 * t124 - t22 * t43 - t27 * t54 - t3 * t78, t21 * t27 + t22 * t26 + (t2 * t77 - t3 * t81) * t82, t2 * t21 + t22 * t3 + t54 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t69, t58, 0, t71, 0, 0, pkin(3) * t141, pkin(3) * t142, t50, pkin(3) ^ 2 + t117, 0, 0, 0, t69, t58, t71, t50, t51 * t141, t51 * t142, t51 ^ 2 + t117, t68 * t71, 0.2e1 * t71 * t120, t77 * t112, t70 * t71, t81 * t112, t69, 0.2e1 * t54 * t119 + 0.2e1 * t21 * t78, -0.2e1 * t54 * t124 - 0.2e1 * t22 * t78 (t21 * t77 - t22 * t81) * t141, t21 ^ 2 + t22 ^ 2 + t54 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t12, -t14, 0, 0, 0, 0, 0, 0, 0, 0, 0, t12, t14, -pkin(4) * t12 + t115, 0, 0, 0, 0, 0, 0, t14 * t77, t14 * t81, -t1, -t1 * t139 + t115; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t43, 0, -t41, -t130, t18, -t19, 0, 0, -t130, -t43, t41, 0, 0, 0, -pkin(4) * t43 - qJ(5) * t41, -t18 + 0.2e1 * t57, -0.2e1 * t104 + t19, -pkin(4) * t17 - qJ(5) * t16, -t121, t26 * t81 + t27 * t77, t37, -t134, -t126, 0, -qJ(5) * t26 - t43 * t118 + t77 * t8, -qJ(5) * t27 + t43 * t123 + t8 * t81 (-t139 * t27 - t2) * t81 + (-t139 * t26 - t3) * t77, t8 * qJ(5) - t100 * t139; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t78, 0, t82, 0, -t63, -t65, 0, 0, 0, -t78, -t82, 0, 0, 0, t99, t63, t65, t99 * pkin(10), -t107 (t68 - t70) * t82, t61, t107, -t125, 0, t54 * t77 + t93 * t81, t54 * t81 - t93 * t77, -t9, t54 * qJ(5) - t139 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, -0.2e1 * pkin(4), t140, pkin(4) ^ 2 + t86, t70, -0.2e1 * t120, 0, t68, 0, 0, t77 * t140, t81 * t140, 0.2e1 * t48, t139 ^ 2 * t55 + t86; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t12, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t43, -t130, 0, t17, 0, 0, 0, 0, 0, 0, t37, -t126, t121 + t134, t100; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t78, 0, 0, t63, 0, 0, 0, 0, 0, 0, t61, -t125, 0, t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, -pkin(4), 0, 0, 0, 0, 0, 0, 0, 0, -t55, -t48; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t55; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t4, -t5, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t27, 0, t26, t43, t2, -t3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t124, 0, -t119, t78, t21, -t22, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t81, 0, -t77, 0, -t118, t123, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t81, -t77, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t13;
