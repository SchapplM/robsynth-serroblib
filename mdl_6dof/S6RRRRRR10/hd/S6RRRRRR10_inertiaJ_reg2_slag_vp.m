% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRRRRR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [14x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,alpha4,d1,d2,d3,d4,d5,d6]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 06:28
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRRRRR10_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(14,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR10_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [14 1]), ...
  'S6RRRRRR10_inertiaJ_reg2_slag_vp: pkin has to be [14x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-08 18:43:31
% EndTime: 2019-05-08 18:44:28
% DurationCPUTime: 7.93s
% Computational Cost: add. (18225->465), mult. (50506->952), div. (0->0), fcn. (58718->16), ass. (0->208)
t128 = sin(qJ(4));
t133 = cos(qJ(4));
t120 = sin(pkin(8));
t123 = cos(pkin(8));
t124 = cos(pkin(7));
t134 = cos(qJ(3));
t167 = t124 * t134;
t108 = pkin(2) * t167;
t121 = sin(pkin(7));
t129 = sin(qJ(3));
t174 = t121 * t129;
t214 = pkin(12) * t123;
t72 = t124 * pkin(3) + t108 + (-pkin(11) - t214) * t174;
t215 = pkin(12) * t120;
t81 = (-pkin(3) * t134 - t129 * t215 - pkin(2)) * t121;
t143 = t120 * t81 + t123 * t72;
t168 = t123 * t134;
t150 = t121 * t168;
t173 = t121 * t134;
t219 = pkin(2) * t129;
t98 = pkin(11) * t173 + t124 * t219;
t65 = (t120 * t124 + t150) * pkin(12) + t98;
t37 = -t128 * t65 + t133 * t143;
t122 = sin(pkin(6));
t125 = cos(pkin(6));
t135 = cos(qJ(2));
t166 = t124 * t135;
t138 = t121 * t125 + t122 * t166;
t171 = t122 * t135;
t130 = sin(qJ(2));
t220 = pkin(1) * t130;
t99 = pkin(10) * t171 + t125 * t220;
t66 = pkin(11) * t138 + t99;
t109 = t125 * t135 * pkin(1);
t172 = t122 * t130;
t73 = t125 * pkin(2) + t109 + (-pkin(11) * t124 - pkin(10)) * t172;
t82 = (-pkin(11) * t121 * t130 - pkin(2) * t135 - pkin(1)) * t122;
t38 = -t129 * t66 + t73 * t167 + t82 * t173;
t70 = t125 * t174 + (t129 * t166 + t130 * t134) * t122;
t90 = -t121 * t171 + t125 * t124;
t29 = t90 * pkin(3) - t70 * t214 + t38;
t49 = -t121 * t73 + t124 * t82;
t69 = -t129 * t172 + t134 * t138;
t31 = -t69 * pkin(3) - t70 * t215 + t49;
t145 = t120 * t31 + t123 * t29;
t144 = t120 * t90 + t123 * t69;
t40 = t134 * t66 + (t121 * t82 + t124 * t73) * t129;
t25 = pkin(12) * t144 + t40;
t13 = -t128 * t25 + t133 * t145;
t127 = sin(qJ(5));
t132 = cos(qJ(5));
t44 = t128 * t144 + t70 * t133;
t51 = -t69 * t120 + t90 * t123;
t26 = t44 * t127 - t51 * t132;
t237 = t26 ^ 2;
t169 = t123 * t133;
t175 = t120 * t133;
t42 = t70 * t128 - t69 * t169 - t90 * t175;
t236 = t42 ^ 2;
t176 = t120 * t128;
t71 = t124 * t176 + (t128 * t168 + t129 * t133) * t121;
t89 = -t120 * t173 + t123 * t124;
t52 = t127 * t71 - t132 * t89;
t235 = t52 ^ 2;
t67 = -t124 * t175 + t128 * t174 - t133 * t150;
t234 = t67 ^ 2;
t91 = -t132 * t123 + t127 * t176;
t233 = t91 ^ 2;
t232 = -0.2e1 * t26;
t231 = -0.2e1 * t42;
t230 = -0.2e1 * t52;
t229 = -0.2e1 * t67;
t126 = sin(qJ(6));
t131 = cos(qJ(6));
t93 = t127 * t123 + t132 * t176;
t74 = t126 * t93 + t131 * t175;
t228 = -0.2e1 * t74;
t227 = 0.2e1 * t90;
t226 = -0.2e1 * t93;
t225 = 0.2e1 * t120;
t224 = 0.2e1 * t121;
t223 = 0.2e1 * t122;
t222 = -0.2e1 * t127;
t221 = 0.2e1 * t132;
t218 = pkin(3) * t120;
t217 = pkin(3) * t128;
t216 = pkin(5) * t131;
t117 = t127 ^ 2;
t213 = t117 * pkin(13);
t212 = t127 * pkin(13);
t211 = t26 * t52;
t210 = t26 * t91;
t14 = t128 * t145 + t133 * t25;
t11 = t51 * pkin(13) + t14;
t15 = -t120 * t29 + t123 * t31;
t12 = t42 * pkin(4) - t44 * pkin(13) + t15;
t5 = -t127 * t11 + t132 * t12;
t3 = -t42 * pkin(5) - t5;
t209 = t3 * t126;
t208 = t3 * t131;
t207 = t42 * t67;
t206 = t52 * t91;
t48 = -t120 * t72 + t123 * t81;
t32 = t67 * pkin(4) - t71 * pkin(13) + t48;
t39 = t128 * t143 + t133 * t65;
t34 = t89 * pkin(13) + t39;
t21 = -t127 * t34 + t132 * t32;
t16 = -t67 * pkin(5) - t21;
t205 = t16 * t126;
t204 = t16 * t131;
t28 = t51 * t127 + t44 * t132;
t18 = t28 * t126 - t42 * t131;
t203 = t18 * t131;
t20 = t42 * t126 + t28 * t131;
t202 = t20 * t126;
t201 = t26 * t126;
t200 = t26 * t131;
t199 = t26 * t132;
t198 = t28 * t127;
t197 = t42 * t127;
t196 = t42 * t132;
t54 = t127 * t89 + t132 * t71;
t45 = t126 * t54 - t131 * t67;
t195 = t45 * t131;
t47 = t126 * t67 + t131 * t54;
t194 = t47 * t126;
t193 = t52 * t126;
t192 = t52 * t131;
t191 = t52 * t132;
t190 = t54 * t127;
t155 = pkin(12) * t175;
t87 = t155 + (pkin(13) + t217) * t123;
t88 = (-pkin(4) * t133 - pkin(13) * t128 - pkin(3)) * t120;
t58 = -t127 * t87 + t132 * t88;
t56 = pkin(5) * t175 - t58;
t189 = t56 * t126;
t188 = t56 * t131;
t187 = t67 * t127;
t186 = t67 * t132;
t185 = t74 * t131;
t76 = -t126 * t175 + t131 * t93;
t184 = t76 * t126;
t183 = t91 * t126;
t182 = t91 * t131;
t181 = t91 * t132;
t180 = t93 * t127;
t113 = t120 ^ 2;
t179 = t113 * t133;
t114 = t121 ^ 2;
t178 = t114 * t134;
t115 = t122 ^ 2;
t177 = t115 * t135;
t170 = t123 * t128;
t165 = t126 * t127;
t164 = t126 * t131;
t163 = t131 * t127;
t162 = t132 * t126;
t161 = t132 * t131;
t116 = t126 ^ 2;
t118 = t131 ^ 2;
t160 = t116 + t118;
t159 = 0.2e1 * t175;
t158 = t124 * t224;
t157 = t125 * t223;
t156 = t127 * t221;
t154 = t42 * t175;
t153 = t67 * t175;
t152 = t127 * t175;
t151 = t132 * t175;
t149 = t126 * t163;
t6 = t132 * t11 + t127 * t12;
t4 = t42 * pkin(14) + t6;
t10 = -t51 * pkin(4) - t13;
t7 = t26 * pkin(5) - t28 * pkin(14) + t10;
t1 = -t126 * t4 + t131 * t7;
t2 = t126 * t7 + t131 * t4;
t148 = -t1 * t126 + t2 * t131;
t22 = t127 * t32 + t132 * t34;
t17 = t67 * pkin(14) + t22;
t33 = -t89 * pkin(4) - t37;
t23 = t52 * pkin(5) - t54 * pkin(14) + t33;
t8 = -t126 * t17 + t131 * t23;
t9 = t126 * t23 + t131 * t17;
t147 = -t8 * t126 + t9 * t131;
t146 = -t5 * t127 + t6 * t132;
t107 = pkin(12) * t176;
t86 = t107 + (-pkin(3) * t133 - pkin(4)) * t123;
t55 = t91 * pkin(5) - t93 * pkin(14) + t86;
t59 = t127 * t88 + t132 * t87;
t57 = -pkin(14) * t175 + t59;
t35 = -t126 * t57 + t131 * t55;
t36 = t126 * t55 + t131 * t57;
t142 = -t35 * t126 + t36 * t131;
t101 = -t132 * pkin(5) - t127 * pkin(14) - pkin(4);
t83 = -pkin(13) * t162 + t131 * t101;
t84 = pkin(13) * t161 + t126 * t101;
t141 = -t83 * t126 + t84 * t131;
t140 = -t21 * t127 + t22 * t132;
t139 = -t58 * t127 + t59 * t132;
t137 = pkin(13) ^ 2;
t119 = t132 ^ 2;
t112 = t117 * t137;
t110 = t113 * t133 ^ 2;
t97 = pkin(3) * t170 + t155;
t96 = -pkin(10) * t172 + t109;
t95 = -pkin(11) * t174 + t108;
t94 = pkin(3) * t169 - t107;
t19 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t115 * t130 ^ 2, 0.2e1 * t130 * t177, t130 * t157, t115 * t135 ^ 2, t135 * t157, t125 ^ 2, 0.2e1 * pkin(1) * t177 + 0.2e1 * t96 * t125, -0.2e1 * t115 * t220 - 0.2e1 * t99 * t125 (-t130 * t96 + t135 * t99) * t223, t115 * pkin(1) ^ 2 + t96 ^ 2 + t99 ^ 2, t70 ^ 2, 0.2e1 * t69 * t70, t70 * t227, t69 ^ 2, t69 * t227, t90 ^ 2, 0.2e1 * t38 * t90 - 0.2e1 * t49 * t69, -0.2e1 * t40 * t90 + 0.2e1 * t49 * t70, -0.2e1 * t38 * t70 + 0.2e1 * t40 * t69, t38 ^ 2 + t40 ^ 2 + t49 ^ 2, t44 ^ 2, t44 * t231, 0.2e1 * t51 * t44, t236, t51 * t231, t51 ^ 2, 0.2e1 * t13 * t51 + 0.2e1 * t15 * t42, -0.2e1 * t14 * t51 + 0.2e1 * t15 * t44, -0.2e1 * t13 * t44 - 0.2e1 * t14 * t42, t13 ^ 2 + t14 ^ 2 + t15 ^ 2, t28 ^ 2, t28 * t232, 0.2e1 * t42 * t28, t237, t26 * t231, t236, 0.2e1 * t10 * t26 + 0.2e1 * t5 * t42, 0.2e1 * t10 * t28 - 0.2e1 * t6 * t42, -0.2e1 * t6 * t26 - 0.2e1 * t5 * t28, t10 ^ 2 + t5 ^ 2 + t6 ^ 2, t20 ^ 2, -0.2e1 * t20 * t18, 0.2e1 * t26 * t20, t18 ^ 2, t18 * t232, t237, 0.2e1 * t1 * t26 + 0.2e1 * t3 * t18, -0.2e1 * t2 * t26 + 0.2e1 * t3 * t20, -0.2e1 * t1 * t20 - 0.2e1 * t2 * t18, t1 ^ 2 + t2 ^ 2 + t3 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t172, 0, t171, t125, t96, -t99, 0, 0, t70 * t174 (t129 * t69 + t134 * t70) * t121, t124 * t70 + t174 * t90, t69 * t173, t124 * t69 + t173 * t90, t90 * t124, t38 * t124 + t95 * t90 + (pkin(2) * t69 - t134 * t49) * t121, -t40 * t124 - t98 * t90 + (-pkin(2) * t70 + t129 * t49) * t121, t98 * t69 - t95 * t70 + (-t129 * t38 + t134 * t40) * t121, -t49 * t121 * pkin(2) + t38 * t95 + t40 * t98, t44 * t71, -t42 * t71 - t67 * t44, t89 * t44 + t51 * t71, t207, -t89 * t42 - t51 * t67, t51 * t89, t13 * t89 + t15 * t67 + t37 * t51 + t48 * t42, -t14 * t89 + t15 * t71 - t39 * t51 + t48 * t44, -t13 * t71 - t14 * t67 - t37 * t44 - t39 * t42, t13 * t37 + t14 * t39 + t15 * t48, t28 * t54, -t54 * t26 - t28 * t52, t67 * t28 + t42 * t54, t211, -t67 * t26 - t42 * t52, t207, t10 * t52 + t21 * t42 + t33 * t26 + t5 * t67, t10 * t54 - t22 * t42 + t33 * t28 - t6 * t67, -t21 * t28 - t22 * t26 - t5 * t54 - t6 * t52, t10 * t33 + t5 * t21 + t6 * t22, t20 * t47, -t47 * t18 - t20 * t45, t52 * t20 + t26 * t47, t18 * t45, -t52 * t18 - t26 * t45, t211, t1 * t52 + t16 * t18 + t8 * t26 + t3 * t45, t16 * t20 - t2 * t52 - t9 * t26 + t3 * t47, -t1 * t47 - t9 * t18 - t2 * t45 - t8 * t20, t1 * t8 + t3 * t16 + t2 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t114 * t129 ^ 2, 0.2e1 * t129 * t178, t129 * t158, t114 * t134 ^ 2, t134 * t158, t124 ^ 2, 0.2e1 * pkin(2) * t178 + 0.2e1 * t95 * t124, -0.2e1 * t114 * t219 - 0.2e1 * t98 * t124 (-t129 * t95 + t134 * t98) * t224, t114 * pkin(2) ^ 2 + t95 ^ 2 + t98 ^ 2, t71 ^ 2, t71 * t229, 0.2e1 * t89 * t71, t234, t89 * t229, t89 ^ 2, 0.2e1 * t37 * t89 + 0.2e1 * t48 * t67, -0.2e1 * t39 * t89 + 0.2e1 * t48 * t71, -0.2e1 * t37 * t71 - 0.2e1 * t39 * t67, t37 ^ 2 + t39 ^ 2 + t48 ^ 2, t54 ^ 2, t54 * t230, 0.2e1 * t67 * t54, t235, t52 * t229, t234, 0.2e1 * t21 * t67 + 0.2e1 * t33 * t52, -0.2e1 * t22 * t67 + 0.2e1 * t33 * t54, -0.2e1 * t21 * t54 - 0.2e1 * t22 * t52, t21 ^ 2 + t22 ^ 2 + t33 ^ 2, t47 ^ 2, -0.2e1 * t47 * t45, 0.2e1 * t52 * t47, t45 ^ 2, t45 * t230, t235, 0.2e1 * t16 * t45 + 0.2e1 * t8 * t52, 0.2e1 * t16 * t47 - 0.2e1 * t9 * t52, -0.2e1 * t9 * t45 - 0.2e1 * t8 * t47, t16 ^ 2 + t8 ^ 2 + t9 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t70, 0, t69, t90, t38, -t40, 0, 0, t44 * t176 (-t128 * t42 + t133 * t44) * t120, t123 * t44 + t176 * t51, -t154, -t123 * t42 + t175 * t51, t51 * t123, t13 * t123 + t94 * t51 + (-pkin(3) * t42 - t133 * t15) * t120, -t14 * t123 - t97 * t51 + (-pkin(3) * t44 + t128 * t15) * t120, -t97 * t42 - t94 * t44 + (-t128 * t13 + t133 * t14) * t120, t13 * t94 + t14 * t97 - t15 * t218, t28 * t93, -t93 * t26 - t28 * t91, -t175 * t28 + t42 * t93, t210, t175 * t26 - t42 * t91, -t154, t10 * t91 - t175 * t5 + t86 * t26 + t58 * t42, t10 * t93 + t175 * t6 + t86 * t28 - t59 * t42, -t59 * t26 - t58 * t28 - t5 * t93 - t6 * t91, t10 * t86 + t5 * t58 + t6 * t59, t20 * t76, -t76 * t18 - t20 * t74, t91 * t20 + t26 * t76, t18 * t74, -t91 * t18 - t26 * t74, t210, t1 * t91 + t56 * t18 + t35 * t26 + t3 * t74, -t2 * t91 + t56 * t20 - t36 * t26 + t3 * t76, -t1 * t76 - t36 * t18 - t2 * t74 - t35 * t20, t1 * t35 + t2 * t36 + t3 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t174, 0, t173, t124, t95, -t98, 0, 0, t71 * t176 (-t128 * t67 + t133 * t71) * t120, t123 * t71 + t176 * t89, -t153, -t123 * t67 + t175 * t89, t89 * t123, t37 * t123 + t94 * t89 + (-pkin(3) * t67 - t133 * t48) * t120, -t39 * t123 - t97 * t89 + (-pkin(3) * t71 + t128 * t48) * t120, -t97 * t67 - t94 * t71 + (-t128 * t37 + t133 * t39) * t120, -t218 * t48 + t37 * t94 + t39 * t97, t54 * t93, -t93 * t52 - t54 * t91, -t175 * t54 + t67 * t93, t206, t175 * t52 - t67 * t91, -t153, -t175 * t21 + t33 * t91 + t86 * t52 + t58 * t67, t175 * t22 + t33 * t93 + t86 * t54 - t59 * t67, -t21 * t93 - t22 * t91 - t59 * t52 - t58 * t54, t21 * t58 + t22 * t59 + t33 * t86, t47 * t76, -t76 * t45 - t47 * t74, t91 * t47 + t52 * t76, t45 * t74, -t91 * t45 - t52 * t74, t206, t16 * t74 + t35 * t52 + t56 * t45 + t8 * t91, t16 * t76 - t36 * t52 + t56 * t47 - t9 * t91, -t35 * t47 - t36 * t45 - t9 * t74 - t8 * t76, t16 * t56 + t8 * t35 + t9 * t36; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t113 * t128 ^ 2, 0.2e1 * t128 * t179, t170 * t225, t110, t123 * t159, t123 ^ 2, 0.2e1 * pkin(3) * t179 + 0.2e1 * t94 * t123, -0.2e1 * t113 * t217 - 0.2e1 * t97 * t123 (-t128 * t94 + t133 * t97) * t225, t113 * pkin(3) ^ 2 + t94 ^ 2 + t97 ^ 2, t93 ^ 2, t91 * t226, t175 * t226, t233, t91 * t159, t110, -0.2e1 * t175 * t58 + 0.2e1 * t86 * t91, 0.2e1 * t175 * t59 + 0.2e1 * t86 * t93, -0.2e1 * t58 * t93 - 0.2e1 * t59 * t91, t58 ^ 2 + t59 ^ 2 + t86 ^ 2, t76 ^ 2, t76 * t228, 0.2e1 * t91 * t76, t74 ^ 2, t91 * t228, t233, 0.2e1 * t35 * t91 + 0.2e1 * t56 * t74, -0.2e1 * t36 * t91 + 0.2e1 * t56 * t76, -0.2e1 * t35 * t76 - 0.2e1 * t36 * t74, t35 ^ 2 + t36 ^ 2 + t56 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t44, 0, -t42, t51, t13, -t14, 0, 0, t198, -t127 * t26 + t28 * t132, t197, -t199, t196, 0, -pkin(4) * t26 - pkin(13) * t197 - t10 * t132, -pkin(4) * t28 - pkin(13) * t196 + t10 * t127 (t198 - t199) * pkin(13) + t146, -t10 * pkin(4) + pkin(13) * t146, t20 * t163 (-t202 - t203) * t127, -t132 * t20 + t163 * t26, t18 * t165, t132 * t18 - t165 * t26, -t199, -t1 * t132 + t83 * t26 + (pkin(13) * t18 + t209) * t127, t2 * t132 - t84 * t26 + (pkin(13) * t20 + t208) * t127, -t84 * t18 - t83 * t20 + (-t1 * t131 - t126 * t2) * t127, t1 * t83 + t2 * t84 + t212 * t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t71, 0, -t67, t89, t37, -t39, 0, 0, t190, -t127 * t52 + t54 * t132, t187, -t191, t186, 0, -pkin(4) * t52 - pkin(13) * t187 - t33 * t132, -pkin(4) * t54 - pkin(13) * t186 + t33 * t127 (t190 - t191) * pkin(13) + t140, -t33 * pkin(4) + pkin(13) * t140, t47 * t163 (-t194 - t195) * t127, -t132 * t47 + t163 * t52, t45 * t165, t132 * t45 - t165 * t52, -t191, -t8 * t132 + t83 * t52 + (pkin(13) * t45 + t205) * t127, t9 * t132 - t84 * t52 + (pkin(13) * t47 + t204) * t127, -t84 * t45 - t83 * t47 + (-t126 * t9 - t131 * t8) * t127, t16 * t212 + t8 * t83 + t9 * t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t176, 0, t175, t123, t94, -t97, 0, 0, t180, -t127 * t91 + t93 * t132, -t152, -t181, -t151, 0, -pkin(4) * t91 + pkin(13) * t152 - t86 * t132, -pkin(4) * t93 + pkin(13) * t151 + t86 * t127 (t180 - t181) * pkin(13) + t139, -t86 * pkin(4) + pkin(13) * t139, t76 * t163 (-t184 - t185) * t127, -t132 * t76 + t163 * t91, t74 * t165, t132 * t74 - t165 * t91, -t181, -t35 * t132 + t83 * t91 + (pkin(13) * t74 + t189) * t127, t36 * t132 - t84 * t91 + (pkin(13) * t76 + t188) * t127, -t84 * t74 - t83 * t76 + (-t126 * t36 - t131 * t35) * t127, t212 * t56 + t35 * t83 + t36 * t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t117, t156, 0, t119, 0, 0, pkin(4) * t221, pkin(4) * t222, 0.2e1 * (t117 + t119) * pkin(13), pkin(4) ^ 2 + t119 * t137 + t112, t118 * t117, -0.2e1 * t117 * t164, t161 * t222, t116 * t117, t126 * t156, t119, 0.2e1 * t126 * t213 - 0.2e1 * t83 * t132, 0.2e1 * t131 * t213 + 0.2e1 * t84 * t132, 0.2e1 * (-t126 * t84 - t131 * t83) * t127, t83 ^ 2 + t84 ^ 2 + t112; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t28, 0, -t26, t42, t5, -t6, 0, 0, t202, -t126 * t18 + t20 * t131, t201, -t203, t200, 0, -pkin(5) * t18 - pkin(14) * t201 - t208, -pkin(5) * t20 - pkin(14) * t200 + t209 (t202 - t203) * pkin(14) + t148, -t3 * pkin(5) + pkin(14) * t148; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t54, 0, -t52, t67, t21, -t22, 0, 0, t194, -t126 * t45 + t47 * t131, t193, -t195, t192, 0, -pkin(5) * t45 - pkin(14) * t193 - t204, -pkin(5) * t47 - pkin(14) * t192 + t205 (t194 - t195) * pkin(14) + t147, -t16 * pkin(5) + pkin(14) * t147; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t93, 0, -t91, -t175, t58, -t59, 0, 0, t184, -t126 * t74 + t76 * t131, t183, -t185, t182, 0, -pkin(5) * t74 - pkin(14) * t183 - t188, -pkin(5) * t76 - pkin(14) * t182 + t189 (t184 - t185) * pkin(14) + t142, -t56 * pkin(5) + pkin(14) * t142; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t127, 0, t132, 0, -t212, -t132 * pkin(13), 0, 0, t149 (-t116 + t118) * t127, -t162, -t149, -t161, 0, -pkin(13) * t163 + (-pkin(5) * t127 + pkin(14) * t132) * t126, pkin(14) * t161 + (pkin(13) * t126 - t216) * t127, t141, -pkin(5) * t212 + pkin(14) * t141; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t116, 0.2e1 * t164, 0, t118, 0, 0, 0.2e1 * t216, -0.2e1 * pkin(5) * t126, 0.2e1 * t160 * pkin(14), pkin(14) ^ 2 * t160 + pkin(5) ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t20, 0, -t18, t26, t1, -t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t47, 0, -t45, t52, t8, -t9, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t76, 0, -t74, t91, t35, -t36, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t163, 0, -t165, -t132, t83, -t84, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t126, 0, t131, 0, -t126 * pkin(14), -t131 * pkin(14), 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t19;
