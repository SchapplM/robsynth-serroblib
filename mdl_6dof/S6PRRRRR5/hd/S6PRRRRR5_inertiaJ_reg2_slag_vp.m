% Calculate inertial parameters regressor of joint inertia matrix for
% S6PRRRRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d4,d5,d6,theta1]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 01:13
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6PRRRRR5_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRR5_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PRRRRR5_inertiaJ_reg2_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 12:01:41
% EndTime: 2019-05-05 12:01:49
% DurationCPUTime: 2.78s
% Computational Cost: add. (3004->278), mult. (7490->539), div. (0->0), fcn. (8842->14), ass. (0->133)
t84 = cos(pkin(7));
t95 = cos(qJ(2));
t121 = t84 * t95;
t82 = sin(pkin(7));
t89 = sin(qJ(3));
t126 = t82 * t89;
t83 = sin(pkin(6));
t85 = cos(pkin(6));
t90 = sin(qJ(2));
t94 = cos(qJ(3));
t33 = t85 * t126 + (t89 * t121 + t90 * t94) * t83;
t123 = t83 * t95;
t50 = -t82 * t123 + t85 * t84;
t88 = sin(qJ(4));
t93 = cos(qJ(4));
t20 = t33 * t88 - t50 * t93;
t19 = t20 ^ 2;
t124 = t83 * t90;
t125 = t82 * t94;
t31 = -t83 * t94 * t121 + t89 * t124 - t85 * t125;
t155 = t31 ^ 2;
t52 = t88 * t126 - t93 * t84;
t51 = t52 ^ 2;
t154 = -0.2e1 * t52;
t153 = 0.2e1 * t52;
t54 = t93 * t126 + t88 * t84;
t152 = -0.2e1 * t54;
t92 = cos(qJ(5));
t74 = -t92 * pkin(5) - pkin(4);
t151 = 0.2e1 * t74;
t150 = 0.2e1 * t82;
t149 = -0.2e1 * t88;
t148 = -0.2e1 * t93;
t147 = 0.2e1 * t93;
t146 = -pkin(12) - pkin(11);
t145 = pkin(2) * t89;
t144 = pkin(2) * t94;
t143 = pkin(4) * t92;
t87 = sin(qJ(5));
t142 = pkin(10) * t87;
t141 = t52 * pkin(5);
t79 = t88 ^ 2;
t140 = t79 * pkin(10);
t86 = sin(qJ(6));
t139 = t86 * pkin(5);
t138 = t88 * pkin(10);
t91 = cos(qJ(6));
t137 = t91 * pkin(5);
t34 = t92 * t125 + t87 * t54;
t69 = pkin(9) * t126;
t44 = t69 + (-pkin(3) - t144) * t84;
t23 = t52 * pkin(4) - t54 * pkin(11) + t44;
t107 = pkin(9) * t125;
t45 = t107 + (pkin(10) + t145) * t84;
t46 = (-pkin(3) * t94 - pkin(10) * t89 - pkin(2)) * t82;
t27 = t93 * t45 + t88 * t46;
t25 = -pkin(11) * t125 + t27;
t9 = t87 * t23 + t92 * t25;
t7 = -t34 * pkin(12) + t9;
t136 = t91 * t7;
t135 = t93 * pkin(5);
t134 = t20 * t88;
t26 = -t88 * t45 + t93 * t46;
t24 = pkin(4) * t125 - t26;
t133 = t24 * t87;
t132 = t24 * t92;
t131 = t34 * t92;
t36 = -t87 * t125 + t92 * t54;
t130 = t36 * t87;
t129 = t52 * t93;
t128 = t54 * t88;
t76 = t82 ^ 2;
t127 = t76 * t94;
t122 = t84 * t89;
t120 = t87 * t52;
t119 = t87 * t88;
t118 = t87 * t92;
t117 = t87 * t93;
t116 = t88 * t52;
t112 = t92 * t93;
t108 = pkin(10) * t112;
t63 = -t93 * pkin(4) - t88 * pkin(11) - pkin(3);
t37 = t108 + (-pkin(12) * t88 + t63) * t87;
t115 = t91 * t37;
t114 = t92 * t52;
t113 = t92 * t88;
t78 = t87 ^ 2;
t80 = t92 ^ 2;
t111 = t78 + t80;
t110 = 0.2e1 * t125;
t109 = t88 * t147;
t106 = t88 * t125;
t105 = t87 * t113;
t104 = t93 * t125;
t8 = t92 * t23 - t87 * t25;
t6 = -t36 * pkin(12) + t141 + t8;
t1 = t91 * t6 - t86 * t7;
t57 = t92 * t63;
t30 = -pkin(12) * t113 + t57 + (-pkin(5) - t142) * t93;
t13 = t91 * t30 - t86 * t37;
t103 = -t8 * t87 + t9 * t92;
t22 = t33 * t93 + t50 * t88;
t10 = -t22 * t87 + t31 * t92;
t11 = t22 * t92 + t31 * t87;
t102 = -t10 * t87 + t11 * t92;
t101 = t22 * t93 + t134;
t100 = -t26 * t88 + t27 * t93;
t41 = -pkin(10) * t117 + t57;
t42 = t87 * t63 + t108;
t99 = -t41 * t87 + t42 * t92;
t60 = t86 * t92 + t91 * t87;
t97 = pkin(10) ^ 2;
t81 = t93 ^ 2;
t75 = t79 * t97;
t71 = t76 * t94 ^ 2;
t66 = t146 * t92;
t65 = t146 * t87;
t62 = (pkin(5) * t87 + pkin(10)) * t88;
t58 = t86 * t87 - t91 * t92;
t56 = pkin(2) * t122 + t107;
t55 = t84 * t144 - t69;
t49 = t91 * t113 - t86 * t119;
t47 = t60 * t88;
t39 = t86 * t65 - t91 * t66;
t38 = t91 * t65 + t86 * t66;
t17 = -t86 * t34 + t91 * t36;
t15 = t91 * t34 + t86 * t36;
t14 = t86 * t30 + t115;
t12 = t34 * pkin(5) + t24;
t4 = t86 * t10 + t91 * t11;
t3 = t91 * t10 - t86 * t11;
t2 = t86 * t6 + t136;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t85 ^ 2 + (t90 ^ 2 + t95 ^ 2) * t83 ^ 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, t33 ^ 2 + t50 ^ 2 + t155, 0, 0, 0, 0, 0, 0, 0, 0, 0, t22 ^ 2 + t155 + t19, 0, 0, 0, 0, 0, 0, 0, 0, 0, t10 ^ 2 + t11 ^ 2 + t19, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3 ^ 2 + t4 ^ 2 + t19; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t123, -t124, 0, 0, 0, 0, 0, 0, 0, 0, -t50 * t125 - t31 * t84, t50 * t126 - t33 * t84 (t31 * t89 + t33 * t94) * t82, -t50 * t82 * pkin(2) - t31 * t55 + t33 * t56, 0, 0, 0, 0, 0, 0, t20 * t125 + t31 * t52, t22 * t125 + t31 * t54, t20 * t54 - t22 * t52, -t20 * t26 + t22 * t27 + t31 * t44, 0, 0, 0, 0, 0, 0, t10 * t52 + t20 * t34, -t11 * t52 + t20 * t36, -t10 * t36 - t11 * t34, t10 * t8 + t11 * t9 + t20 * t24, 0, 0, 0, 0, 0, 0, t20 * t15 + t3 * t52, t20 * t17 - t4 * t52, -t4 * t15 - t3 * t17, t3 * t1 + t20 * t12 + t4 * t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t76 * t89 ^ 2, 0.2e1 * t89 * t127, t122 * t150, t71, t84 * t110, t84 ^ 2, 0.2e1 * pkin(2) * t127 + 0.2e1 * t55 * t84, -0.2e1 * t76 * t145 - 0.2e1 * t56 * t84 (-t55 * t89 + t56 * t94) * t150, t76 * pkin(2) ^ 2 + t55 ^ 2 + t56 ^ 2, t54 ^ 2, t52 * t152, t125 * t152, t51, t52 * t110, t71, -0.2e1 * t26 * t125 + 0.2e1 * t44 * t52, 0.2e1 * t27 * t125 + 0.2e1 * t44 * t54, -0.2e1 * t26 * t54 - 0.2e1 * t27 * t52, t26 ^ 2 + t27 ^ 2 + t44 ^ 2, t36 ^ 2, -0.2e1 * t36 * t34, t36 * t153, t34 ^ 2, t34 * t154, t51, 0.2e1 * t24 * t34 + 0.2e1 * t8 * t52, 0.2e1 * t24 * t36 - 0.2e1 * t9 * t52, -0.2e1 * t9 * t34 - 0.2e1 * t8 * t36, t24 ^ 2 + t8 ^ 2 + t9 ^ 2, t17 ^ 2, -0.2e1 * t17 * t15, t17 * t153, t15 ^ 2, t15 * t154, t51, 0.2e1 * t1 * t52 + 0.2e1 * t12 * t15, 0.2e1 * t12 * t17 - 0.2e1 * t2 * t52, -0.2e1 * t1 * t17 - 0.2e1 * t2 * t15, t1 ^ 2 + t12 ^ 2 + t2 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t31, -t33, 0, 0, 0, 0, 0, 0, 0, 0, -t31 * t93, t31 * t88, t101, -t31 * pkin(3) + t101 * pkin(10), 0, 0, 0, 0, 0, 0, -t10 * t93 + t119 * t20, t11 * t93 + t113 * t20 (-t10 * t92 - t11 * t87) * t88, pkin(10) * t134 + t10 * t41 + t11 * t42, 0, 0, 0, 0, 0, 0, t20 * t47 - t3 * t93, t20 * t49 + t4 * t93, -t3 * t49 - t4 * t47, t3 * t13 + t4 * t14 + t20 * t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t126, 0, t125, t84, t55, -t56, 0, 0, t128, t54 * t93 - t116, -t106, -t129, -t104, 0, -pkin(3) * t52 + pkin(10) * t106 - t44 * t93, -pkin(3) * t54 + pkin(10) * t104 + t44 * t88 (t128 - t129) * pkin(10) + t100, -t44 * pkin(3) + t100 * pkin(10), t36 * t113 (-t130 - t131) * t88, t52 * t113 - t36 * t93, t34 * t119, -t116 * t87 + t34 * t93, -t129, t41 * t52 - t8 * t93 + (pkin(10) * t34 + t133) * t88, -t42 * t52 + t9 * t93 + (pkin(10) * t36 + t132) * t88, -t42 * t34 - t41 * t36 + (-t8 * t92 - t87 * t9) * t88, t138 * t24 + t8 * t41 + t9 * t42, t17 * t49, -t49 * t15 - t17 * t47, -t17 * t93 + t49 * t52, t15 * t47, t15 * t93 - t47 * t52, -t129, -t1 * t93 + t12 * t47 + t13 * t52 + t62 * t15, t12 * t49 - t14 * t52 + t62 * t17 + t2 * t93, -t1 * t49 - t13 * t17 - t14 * t15 - t2 * t47, t1 * t13 + t12 * t62 + t2 * t14; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t79, t109, 0, t81, 0, 0, pkin(3) * t147, pkin(3) * t149, 0.2e1 * (t79 + t81) * pkin(10), pkin(3) ^ 2 + t81 * t97 + t75, t80 * t79, -0.2e1 * t79 * t118, t112 * t149, t78 * t79, t87 * t109, t81, 0.2e1 * t140 * t87 - 0.2e1 * t41 * t93, 0.2e1 * t140 * t92 + 0.2e1 * t42 * t93, 0.2e1 * (-t41 * t92 - t42 * t87) * t88, t41 ^ 2 + t42 ^ 2 + t75, t49 ^ 2, -0.2e1 * t49 * t47, t49 * t148, t47 ^ 2, -t47 * t148, t81, -0.2e1 * t13 * t93 + 0.2e1 * t62 * t47, 0.2e1 * t14 * t93 + 0.2e1 * t62 * t49, -0.2e1 * t13 * t49 - 0.2e1 * t14 * t47, t13 ^ 2 + t14 ^ 2 + t62 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t20, -t22, 0, 0, 0, 0, 0, 0, 0, 0, -t20 * t92, t20 * t87, t102, -t20 * pkin(4) + pkin(11) * t102, 0, 0, 0, 0, 0, 0, t20 * t58, t20 * t60, -t3 * t60 - t4 * t58, t20 * t74 + t3 * t38 + t4 * t39; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t54, 0, -t52, -t125, t26, -t27, 0, 0, t130, -t87 * t34 + t36 * t92, t120, -t131, t114, 0, -pkin(4) * t34 - pkin(11) * t120 - t132, -pkin(4) * t36 - pkin(11) * t114 + t133 (t130 - t131) * pkin(11) + t103, -t24 * pkin(4) + pkin(11) * t103, t17 * t60, -t60 * t15 - t17 * t58, t60 * t52, t15 * t58, -t58 * t52, 0, t12 * t58 + t74 * t15 + t38 * t52, t12 * t60 + t74 * t17 - t39 * t52, -t1 * t60 - t39 * t15 - t38 * t17 - t2 * t58, t1 * t38 + t12 * t74 + t2 * t39; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t88, 0, t93, 0, -t138, -t93 * pkin(10), 0, 0, t105 (-t78 + t80) * t88, -t117, -t105, -t112, 0, -pkin(10) * t113 + (-pkin(4) * t88 + pkin(11) * t93) * t87, pkin(11) * t112 + (t142 - t143) * t88, t99, -pkin(4) * t138 + pkin(11) * t99, t49 * t60, -t60 * t47 - t49 * t58, -t60 * t93, t47 * t58, t58 * t93, 0, -t38 * t93 + t74 * t47 + t62 * t58, t39 * t93 + t74 * t49 + t62 * t60, -t13 * t60 - t14 * t58 - t38 * t49 - t39 * t47, t13 * t38 + t14 * t39 + t62 * t74; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t78, 0.2e1 * t118, 0, t80, 0, 0, 0.2e1 * t143, -0.2e1 * pkin(4) * t87, 0.2e1 * t111 * pkin(11), pkin(11) ^ 2 * t111 + pkin(4) ^ 2, t60 ^ 2, -0.2e1 * t60 * t58, 0, t58 ^ 2, 0, 0, t58 * t151, t60 * t151, -0.2e1 * t38 * t60 - 0.2e1 * t39 * t58, t38 ^ 2 + t39 ^ 2 + t74 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t10, -t11, 0, 0, 0, 0, 0, 0, 0, 0, t3, -t4, 0 (t3 * t91 + t4 * t86) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t36, 0, -t34, t52, t8, -t9, 0, 0, 0, 0, t17, 0, -t15, t52, t137 * t52 + t1, -t136 + (-t6 - t141) * t86 (-t15 * t86 - t17 * t91) * pkin(5) (t1 * t91 + t2 * t86) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t113, 0, -t119, -t93, t41, -t42, 0, 0, 0, 0, t49, 0, -t47, -t93, -t135 * t91 + t13, -t115 + (-t30 + t135) * t86 (-t47 * t86 - t49 * t91) * pkin(5) (t13 * t91 + t14 * t86) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t87, 0, t92, 0, -t87 * pkin(11), -t92 * pkin(11), 0, 0, 0, 0, t60, 0, -t58, 0, t38, -t39 (-t58 * t86 - t60 * t91) * pkin(5) (t38 * t91 + t39 * t86) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t137, -0.2e1 * t139, 0 (t86 ^ 2 + t91 ^ 2) * pkin(5) ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3, -t4, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t17, 0, -t15, t52, t1, -t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t49, 0, -t47, -t93, t13, -t14, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t60, 0, -t58, 0, t38, -t39, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t137, -t139, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t5;
