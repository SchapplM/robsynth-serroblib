% Calculate inertial parameters regressor of joint inertia matrix for
% S6RPRRPR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d4,d6,theta2,theta5]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 05:33
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RPRRPR9_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR9_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RPRRPR9_inertiaJ_reg2_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 23:26:52
% EndTime: 2019-05-05 23:27:00
% DurationCPUTime: 2.83s
% Computational Cost: add. (6482->233), mult. (17215->482), div. (0->0), fcn. (20207->14), ass. (0->134)
t101 = cos(qJ(4));
t89 = sin(pkin(13));
t93 = cos(pkin(13));
t98 = sin(qJ(4));
t68 = t89 * t101 + t93 * t98;
t162 = -0.2e1 * t68;
t102 = cos(qJ(3));
t90 = sin(pkin(12));
t92 = sin(pkin(6));
t142 = t90 * t92;
t96 = cos(pkin(6));
t150 = pkin(1) * t96;
t94 = cos(pkin(12));
t75 = t94 * t150;
t95 = cos(pkin(7));
t51 = t96 * pkin(2) + t75 + (-pkin(9) * t95 - qJ(2)) * t142;
t91 = sin(pkin(7));
t56 = (-pkin(9) * t90 * t91 - pkin(2) * t94 - pkin(1)) * t92;
t112 = t51 * t95 + t56 * t91;
t139 = t94 * t95;
t117 = t92 * t139;
t130 = qJ(2) * t92;
t62 = t94 * t130 + t90 * t150;
t46 = (t91 * t96 + t117) * pkin(9) + t62;
t99 = sin(qJ(3));
t28 = t112 * t102 - t99 * t46;
t141 = t91 * t99;
t50 = t96 * t141 + (t102 * t90 + t99 * t139) * t92;
t140 = t92 * t94;
t58 = t91 * t140 - t96 * t95;
t34 = t58 * t101 + t50 * t98;
t36 = t50 * t101 - t58 * t98;
t25 = t93 * t34 + t89 * t36;
t161 = t25 ^ 2;
t63 = t101 * t95 - t98 * t141;
t64 = t101 * t141 + t98 * t95;
t39 = -t93 * t63 + t89 * t64;
t160 = t39 ^ 2;
t121 = t91 * t102;
t48 = -t102 * t117 - t96 * t121 + t99 * t142;
t47 = t48 ^ 2;
t133 = -qJ(5) - pkin(10);
t114 = t133 * t98;
t71 = t133 * t101;
t52 = -t93 * t114 - t89 * t71;
t159 = t52 ^ 2;
t66 = -t93 * t101 + t89 * t98;
t158 = t66 ^ 2;
t157 = -0.2e1 * t25;
t156 = -0.2e1 * t48;
t155 = 0.2e1 * t48;
t154 = -0.2e1 * t50;
t82 = -t101 * pkin(4) - pkin(3);
t153 = 0.2e1 * t82;
t152 = 0.2e1 * t92;
t151 = 0.2e1 * t101;
t149 = t89 * pkin(4);
t148 = t93 * pkin(4);
t32 = -t91 * t51 + t95 * t56;
t21 = t48 * pkin(3) - t50 * pkin(10) + t32;
t29 = t102 * t46 + t112 * t99;
t23 = -t58 * pkin(10) + t29;
t13 = t101 * t21 - t98 * t23;
t10 = t48 * pkin(4) - t36 * qJ(5) + t13;
t14 = t101 * t23 + t98 * t21;
t12 = -t34 * qJ(5) + t14;
t6 = t89 * t10 + t93 * t12;
t100 = cos(qJ(6));
t27 = -t89 * t34 + t93 * t36;
t97 = sin(qJ(6));
t19 = t100 * t27 + t48 * t97;
t147 = t19 * t97;
t146 = t25 * t66;
t145 = t36 * t98;
t144 = t39 * t52;
t84 = t92 ^ 2;
t143 = t84 * t94;
t138 = t97 * t25;
t137 = t97 * t66;
t136 = t97 * t68;
t80 = pkin(11) + t149;
t135 = t97 * t80;
t134 = t98 * t48;
t85 = t97 ^ 2;
t87 = t100 ^ 2;
t132 = t85 + t87;
t86 = t98 ^ 2;
t88 = t101 ^ 2;
t131 = t86 + t88;
t129 = t100 * t68;
t128 = t100 * t80;
t127 = t101 * t48;
t17 = -t48 * t100 + t97 * t27;
t126 = t17 * t100;
t125 = t19 * t100;
t124 = t34 * t101;
t123 = t39 * t100;
t122 = t52 * t100;
t120 = t97 * t100;
t119 = t66 * t162;
t118 = t96 * t152;
t116 = t68 * t120;
t115 = -t93 * t10 + t89 * t12;
t4 = t48 * pkin(11) + t6;
t22 = t58 * pkin(3) - t28;
t15 = t34 * pkin(4) + t22;
t7 = t25 * pkin(5) - t27 * pkin(11) + t15;
t1 = t100 * t7 - t97 * t4;
t2 = t100 * t4 + t97 * t7;
t113 = t1 * t100 + t2 * t97;
t81 = -pkin(5) - t148;
t111 = -t66 * t80 + t68 * t81;
t43 = t66 * pkin(5) - t68 * pkin(11) + t82;
t54 = t89 * t114 - t93 * t71;
t30 = t100 * t43 - t97 * t54;
t31 = t100 * t54 + t97 * t43;
t110 = t31 * t100 - t30 * t97;
t109 = t30 * t100 + t31 * t97;
t41 = t89 * t63 + t93 * t64;
t37 = -t100 * t121 - t97 * t41;
t38 = t100 * t41 - t97 * t121;
t108 = t38 * t100 - t37 * t97;
t107 = t37 * t100 + t38 * t97;
t106 = t14 * t101 - t13 * t98;
t105 = t64 * t101 - t63 * t98;
t83 = t91 ^ 2;
t78 = t83 * t102 ^ 2;
t65 = t68 ^ 2;
t61 = -t90 * t130 + t75;
t60 = t100 * t66;
t24 = t100 * t25;
t16 = t97 * t17;
t3 = -t48 * pkin(5) + t115;
t5 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t84 * t90 ^ 2, 0.2e1 * t90 * t143, t90 * t118, t84 * t94 ^ 2, t94 * t118, t96 ^ 2, 0.2e1 * pkin(1) * t143 + 0.2e1 * t61 * t96, -0.2e1 * t84 * pkin(1) * t90 - 0.2e1 * t62 * t96 (-t61 * t90 + t62 * t94) * t152, t84 * pkin(1) ^ 2 + t61 ^ 2 + t62 ^ 2, t50 ^ 2, t48 * t154, t58 * t154, t47, t58 * t155, t58 ^ 2, -0.2e1 * t28 * t58 + 0.2e1 * t32 * t48, 0.2e1 * t29 * t58 + 0.2e1 * t32 * t50, -0.2e1 * t28 * t50 - 0.2e1 * t29 * t48, t28 ^ 2 + t29 ^ 2 + t32 ^ 2, t36 ^ 2, -0.2e1 * t36 * t34, t36 * t155, t34 ^ 2, t34 * t156, t47, 0.2e1 * t13 * t48 + 0.2e1 * t22 * t34, -0.2e1 * t14 * t48 + 0.2e1 * t22 * t36, -0.2e1 * t13 * t36 - 0.2e1 * t14 * t34, t13 ^ 2 + t14 ^ 2 + t22 ^ 2, t27 ^ 2, t27 * t157, t27 * t155, t161, t25 * t156, t47, -0.2e1 * t115 * t48 + 0.2e1 * t15 * t25, 0.2e1 * t15 * t27 - 0.2e1 * t6 * t48, 0.2e1 * t115 * t27 - 0.2e1 * t6 * t25, t115 ^ 2 + t15 ^ 2 + t6 ^ 2, t19 ^ 2, -0.2e1 * t19 * t17, 0.2e1 * t19 * t25, t17 ^ 2, t17 * t157, t161, 0.2e1 * t1 * t25 + 0.2e1 * t3 * t17, 0.2e1 * t3 * t19 - 0.2e1 * t2 * t25, -0.2e1 * t1 * t19 - 0.2e1 * t2 * t17, t1 ^ 2 + t2 ^ 2 + t3 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t140, t142, 0, -t92 * pkin(1), 0, 0, 0, 0, 0, 0, -t58 * t121 + t95 * t48, t58 * t141 + t95 * t50 (-t102 * t50 - t48 * t99) * t91, t32 * t95 + (t102 * t28 + t29 * t99) * t91, 0, 0, 0, 0, 0, 0, -t34 * t121 + t63 * t48, -t36 * t121 - t64 * t48, -t64 * t34 - t63 * t36, -t22 * t121 + t13 * t63 + t14 * t64, 0, 0, 0, 0, 0, 0, -t121 * t25 - t39 * t48, -t121 * t27 - t41 * t48, -t41 * t25 + t39 * t27, t115 * t39 - t121 * t15 + t6 * t41, 0, 0, 0, 0, 0, 0, t39 * t17 + t37 * t25, t39 * t19 - t38 * t25, -t38 * t17 - t37 * t19, t1 * t37 + t2 * t38 + t3 * t39; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83 * t99 ^ 2 + t95 ^ 2 + t78, 0, 0, 0, 0, 0, 0, 0, 0, 0, t63 ^ 2 + t64 ^ 2 + t78, 0, 0, 0, 0, 0, 0, 0, 0, 0, t41 ^ 2 + t160 + t78, 0, 0, 0, 0, 0, 0, 0, 0, 0, t37 ^ 2 + t38 ^ 2 + t160; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t50, 0, -t48, -t58, t28, -t29, 0, 0, t145, t36 * t101 - t98 * t34, t134, -t124, t127, 0, -pkin(3) * t34 - pkin(10) * t134 - t22 * t101, -pkin(3) * t36 - pkin(10) * t127 + t22 * t98 (-t124 + t145) * pkin(10) + t106, -t22 * pkin(3) + t106 * pkin(10), t27 * t68, -t68 * t25 - t27 * t66, t68 * t48, t146, -t66 * t48, 0, t15 * t66 + t82 * t25 - t52 * t48, t15 * t68 + t82 * t27 - t54 * t48, t115 * t68 - t54 * t25 + t52 * t27 - t6 * t66, t115 * t52 + t15 * t82 + t6 * t54, t68 * t125 (-t126 - t147) * t68, t129 * t25 + t19 * t66, t17 * t136, -t136 * t25 - t17 * t66, t146, t1 * t66 + t136 * t3 + t52 * t17 + t30 * t25, t129 * t3 + t52 * t19 - t2 * t66 - t31 * t25, -t113 * t68 - t31 * t17 - t30 * t19, t1 * t30 + t2 * t31 + t3 * t52; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t121, -t141, 0, 0, 0, 0, 0, 0, 0, 0, t101 * t121, -t98 * t121, t105, pkin(3) * t121 + t105 * pkin(10), 0, 0, 0, 0, 0, 0, -t66 * t121, -t68 * t121, t39 * t68 - t41 * t66, -t121 * t82 + t41 * t54 + t144, 0, 0, 0, 0, 0, 0, t136 * t39 + t37 * t66, t123 * t68 - t38 * t66, -t107 * t68, t37 * t30 + t38 * t31 + t144; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t86, t98 * t151, 0, t88, 0, 0, pkin(3) * t151, -0.2e1 * pkin(3) * t98, 0.2e1 * t131 * pkin(10), t131 * pkin(10) ^ 2 + pkin(3) ^ 2, t65, t119, 0, t158, 0, 0, t66 * t153, t68 * t153, 0.2e1 * t52 * t68 - 0.2e1 * t54 * t66, t54 ^ 2 + t82 ^ 2 + t159, t87 * t65, -0.2e1 * t65 * t120, 0.2e1 * t66 * t129, t85 * t65, t97 * t119, t158, 0.2e1 * t136 * t52 + 0.2e1 * t30 * t66, 0.2e1 * t122 * t68 - 0.2e1 * t31 * t66, t109 * t162, t30 ^ 2 + t31 ^ 2 + t159; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t36, 0, -t34, t48, t13, -t14, 0, 0, 0, 0, t27, 0, -t25, t48, t48 * t148 - t115, -t48 * t149 - t6 (-t25 * t89 - t27 * t93) * pkin(4) (-t115 * t93 + t6 * t89) * pkin(4), t147, -t16 + t125, t138, -t126, t24, 0, -t3 * t100 - t135 * t25 + t81 * t17, -t128 * t25 + t81 * t19 + t3 * t97 (t19 * t80 - t1) * t97 + (-t17 * t80 + t2) * t100, t3 * t81 + (-t1 * t97 + t2 * t100) * t80; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t63, -t64, 0, 0, 0, 0, 0, 0, 0, 0, -t39, -t41, 0 (-t39 * t93 + t41 * t89) * pkin(4), 0, 0, 0, 0, 0, 0, -t123, t39 * t97, t108, t108 * t80 + t39 * t81; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t98, 0, t101, 0, -t98 * pkin(10), -t101 * pkin(10), 0, 0, 0, 0, t68, 0, -t66, 0, -t52, -t54 (-t66 * t89 - t68 * t93) * pkin(4) (-t52 * t93 + t54 * t89) * pkin(4), t116 (-t85 + t87) * t68, t137, -t116, t60, 0, t111 * t97 - t122, t100 * t111 + t52 * t97, t110, t110 * t80 + t52 * t81; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t148, -0.2e1 * t149, 0 (t89 ^ 2 + t93 ^ 2) * pkin(4) ^ 2, t85, 0.2e1 * t120, 0, t87, 0, 0, -0.2e1 * t81 * t100, 0.2e1 * t81 * t97, 0.2e1 * t132 * t80, t132 * t80 ^ 2 + t81 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t25, t27, 0, t15, 0, 0, 0, 0, 0, 0, t24, -t138, -t16 - t125, t113; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t121, 0, 0, 0, 0, 0, 0, 0, 0, 0, t107; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t66, t68, 0, t82, 0, 0, 0, 0, 0, 0, t60, -t137, -t132 * t68, t109; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t132; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t19, 0, -t17, t25, t1, -t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t37, -t38, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t129, 0, -t136, t66, t30, -t31, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t97, 0, t100, 0, -t135, -t128, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t100, -t97, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t5;
