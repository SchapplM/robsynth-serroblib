% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRRRRP12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d4,d5]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 03:26
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRRRRP12_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP12_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRRP12_inertiaJ_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-08 07:44:08
% EndTime: 2019-05-08 07:44:34
% DurationCPUTime: 5.64s
% Computational Cost: add. (7109->377), mult. (18779->691), div. (0->0), fcn. (21451->12), ass. (0->201)
t124 = sin(qJ(5));
t116 = t124 ^ 2;
t128 = cos(qJ(5));
t118 = t128 ^ 2;
t232 = t116 + t118;
t125 = sin(qJ(4));
t120 = sin(pkin(7));
t130 = cos(qJ(3));
t177 = t120 * t130;
t122 = cos(pkin(7));
t129 = cos(qJ(4));
t126 = sin(qJ(3));
t178 = t120 * t126;
t84 = t122 * t125 + t129 * t178;
t64 = t124 * t84 + t128 * t177;
t184 = t64 * t128;
t66 = -t124 * t177 + t128 * t84;
t58 = t66 * t124;
t231 = (t58 + t184) * t125;
t121 = sin(pkin(6));
t123 = cos(pkin(6));
t127 = sin(qJ(2));
t131 = cos(qJ(2));
t173 = t122 * t131;
t61 = t123 * t178 + (t126 * t173 + t127 * t130) * t121;
t175 = t121 * t131;
t80 = -t120 * t175 + t122 * t123;
t46 = t125 * t80 + t129 * t61;
t155 = t121 * t173;
t176 = t121 * t127;
t59 = -t123 * t177 + t126 * t176 - t130 * t155;
t33 = t124 * t46 - t128 * t59;
t188 = t33 * t128;
t35 = t124 * t59 + t128 * t46;
t31 = t35 * t124;
t230 = (t31 + t188) * t125;
t103 = t123 * t131 * pkin(1);
t62 = t123 * pkin(2) + t103 + (-pkin(10) * t122 - pkin(9)) * t176;
t71 = (-pkin(10) * t120 * t127 - pkin(2) * t131 - pkin(1)) * t121;
t143 = t120 * t71 + t122 * t62;
t215 = pkin(1) * t127;
t88 = pkin(9) * t175 + t123 * t215;
t57 = (t120 * t123 + t155) * pkin(10) + t88;
t27 = -t126 * t57 + t130 * t143;
t229 = t33 ^ 2;
t44 = t125 * t61 - t129 * t80;
t42 = t44 ^ 2;
t228 = t59 ^ 2;
t227 = t64 ^ 2;
t82 = -t122 * t129 + t125 * t178;
t81 = t82 ^ 2;
t226 = -0.2e1 * t59;
t225 = -0.2e1 * t84;
t145 = -pkin(5) * t128 - qJ(6) * t124;
t94 = -pkin(4) + t145;
t224 = -0.2e1 * t94;
t223 = 0.2e1 * t120;
t222 = 0.2e1 * t121;
t221 = -0.2e1 * t125;
t220 = 0.2e1 * t125;
t219 = pkin(12) * t35;
t218 = pkin(12) * t66;
t217 = t44 * pkin(5);
t216 = t82 * pkin(5);
t22 = -t80 * pkin(3) - t27;
t13 = t44 * pkin(4) - t46 * pkin(12) + t22;
t37 = -t120 * t62 + t122 * t71;
t19 = pkin(3) * t59 - pkin(11) * t61 + t37;
t28 = t126 * t143 + t130 * t57;
t23 = t80 * pkin(11) + t28;
t10 = t125 * t19 + t129 * t23;
t8 = pkin(12) * t59 + t10;
t4 = t124 * t13 + t128 * t8;
t214 = pkin(2) * t126;
t213 = pkin(2) * t130;
t212 = pkin(4) * t124;
t211 = pkin(4) * t128;
t210 = pkin(11) * t124;
t209 = pkin(11) * t128;
t187 = t44 * qJ(6);
t1 = t187 + t4;
t208 = t1 * t128;
t207 = t124 * pkin(12);
t206 = t125 * pkin(11);
t205 = t128 * pkin(12);
t204 = t33 * t64;
t203 = t35 * t33;
t202 = t4 * t128;
t201 = t44 * t33;
t36 = t44 * t82;
t200 = t66 * t64;
t9 = -t125 * t23 + t129 * t19;
t7 = -pkin(4) * t59 - t9;
t199 = t7 * t124;
t198 = t7 * t128;
t197 = t82 * t64;
t101 = pkin(10) * t178;
t75 = t101 + (-pkin(3) - t213) * t122;
t47 = t82 * pkin(4) - t84 * pkin(12) + t75;
t159 = pkin(10) * t177;
t76 = t159 + (pkin(11) + t214) * t122;
t77 = (-pkin(3) * t130 - pkin(11) * t126 - pkin(2)) * t120;
t51 = t125 * t77 + t129 * t76;
t49 = -pkin(12) * t177 + t51;
t25 = t124 * t47 + t128 * t49;
t38 = t124 * t44;
t50 = -t125 * t76 + t129 * t77;
t48 = pkin(4) * t177 - t50;
t196 = t124 * t48;
t78 = t124 * t82;
t195 = t125 * t59;
t194 = t128 * t44;
t193 = t128 * t48;
t192 = t128 * t82;
t191 = t129 * t59;
t183 = t82 * qJ(6);
t17 = t183 + t25;
t190 = t17 * t128;
t189 = t25 * t128;
t186 = t44 * t129;
t185 = t46 * t125;
t182 = t82 * t129;
t181 = t84 * t125;
t168 = t128 * t129;
t95 = -pkin(4) * t129 - pkin(12) * t125 - pkin(3);
t73 = pkin(11) * t168 + t124 * t95;
t114 = t120 ^ 2;
t180 = t114 * t130;
t115 = t121 ^ 2;
t179 = t115 * t131;
t174 = t122 * t126;
t172 = t124 * t125;
t171 = t124 * t128;
t170 = t124 * t129;
t169 = t125 * t129;
t110 = t128 * t125;
t167 = t129 * qJ(6);
t166 = t232 * pkin(12) ^ 2;
t165 = pkin(12) * t38;
t164 = pkin(12) * t78;
t163 = pkin(12) * t194;
t162 = pkin(12) * t192;
t161 = 0.2e1 * t177;
t160 = t123 * t222;
t158 = t33 * t172;
t157 = t59 * t177;
t156 = t64 * t172;
t154 = t124 * t169;
t153 = t125 * t177;
t117 = t125 ^ 2;
t152 = t117 * t171;
t151 = t129 * t177;
t150 = t124 * t8 - t128 * t13;
t149 = t124 * t49 - t128 * t47;
t148 = t33 * t66 + t35 * t64;
t147 = t33 * t82 + t44 * t64;
t146 = t10 * t129 - t9 * t125;
t144 = -pkin(5) * t124 + qJ(6) * t128;
t141 = t124 * t33 - t128 * t35;
t139 = t124 * t64 - t128 * t66;
t68 = -t167 + t73;
t90 = t128 * t95;
t69 = -t90 + (pkin(5) + t210) * t129;
t138 = t124 * t69 + t128 * t68;
t72 = -pkin(11) * t170 + t90;
t137 = -t124 * t72 + t128 * t73;
t136 = -t50 * t125 + t51 * t129;
t135 = -t129 * t33 + t172 * t44;
t134 = -t129 * t64 + t172 * t82;
t133 = pkin(11) ^ 2;
t119 = t129 ^ 2;
t112 = t117 * t133;
t109 = t118 * t117;
t108 = t116 * t117;
t106 = t114 * t130 ^ 2;
t104 = pkin(12) * t170;
t100 = t124 * t110;
t96 = t168 * t221;
t93 = 0.2e1 * t232 * pkin(12);
t91 = (t116 - t118) * t125;
t87 = pkin(2) * t174 + t159;
t86 = -pkin(9) * t176 + t103;
t85 = t122 * t213 - t101;
t79 = (pkin(11) - t144) * t125;
t63 = t66 ^ 2;
t56 = pkin(12) * t184;
t54 = t66 * t110;
t52 = 0.2e1 * t66 * t82;
t43 = t110 * t82 - t129 * t66;
t32 = t35 ^ 2;
t30 = pkin(12) * t188;
t29 = t35 * t110;
t26 = pkin(5) * t64 - qJ(6) * t66 + t48;
t21 = t35 * t66;
t18 = t149 - t216;
t16 = 0.2e1 * t35 * t44;
t15 = t110 * t44 - t129 * t35;
t14 = t35 * t82 + t44 * t66;
t5 = pkin(5) * t33 - qJ(6) * t35 + t7;
t2 = t150 - t217;
t3 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t115 * t127 ^ 2, 0.2e1 * t127 * t179, t127 * t160, t115 * t131 ^ 2, t131 * t160, t123 ^ 2, 0.2e1 * pkin(1) * t179 + 0.2e1 * t123 * t86, -0.2e1 * t115 * t215 - 0.2e1 * t123 * t88 (-t127 * t86 + t131 * t88) * t222, pkin(1) ^ 2 * t115 + t86 ^ 2 + t88 ^ 2, t61 ^ 2, t61 * t226, 0.2e1 * t61 * t80, t228, t80 * t226, t80 ^ 2, 0.2e1 * t27 * t80 + 0.2e1 * t37 * t59, -0.2e1 * t28 * t80 + 0.2e1 * t37 * t61, -0.2e1 * t27 * t61 - 0.2e1 * t28 * t59, t27 ^ 2 + t28 ^ 2 + t37 ^ 2, t46 ^ 2, -0.2e1 * t46 * t44, 0.2e1 * t46 * t59, t42, t44 * t226, t228, 0.2e1 * t22 * t44 + 0.2e1 * t59 * t9, -0.2e1 * t10 * t59 + 0.2e1 * t22 * t46, -0.2e1 * t10 * t44 - 0.2e1 * t46 * t9, t10 ^ 2 + t22 ^ 2 + t9 ^ 2, t32, -0.2e1 * t203, t16, t229, -0.2e1 * t201, t42, -0.2e1 * t150 * t44 + 0.2e1 * t33 * t7, 0.2e1 * t35 * t7 - 0.2e1 * t4 * t44, 0.2e1 * t150 * t35 - 0.2e1 * t33 * t4, t150 ^ 2 + t4 ^ 2 + t7 ^ 2, t32, t16, 0.2e1 * t203, t42, 0.2e1 * t201, t229, -0.2e1 * t2 * t44 + 0.2e1 * t33 * t5, -0.2e1 * t1 * t33 + 0.2e1 * t2 * t35, 0.2e1 * t1 * t44 - 0.2e1 * t35 * t5, t1 ^ 2 + t2 ^ 2 + t5 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t176, 0, t175, t123, t86, -t88, 0, 0, t61 * t178 (-t126 * t59 + t130 * t61) * t120, t122 * t61 + t178 * t80, -t157, -t122 * t59 + t177 * t80, t80 * t122, t27 * t122 + t85 * t80 + (-pkin(2) * t59 - t130 * t37) * t120, -t28 * t122 - t87 * t80 + (-pkin(2) * t61 + t126 * t37) * t120, -t87 * t59 - t85 * t61 + (-t126 * t27 + t130 * t28) * t120, -pkin(2) * t120 * t37 + t27 * t85 + t28 * t87, t46 * t84, -t44 * t84 - t46 * t82, -t177 * t46 + t59 * t84, t36, t177 * t44 - t59 * t82, -t157, -t177 * t9 + t22 * t82 + t44 * t75 + t50 * t59, t10 * t177 + t22 * t84 + t46 * t75 - t51 * t59, -t10 * t82 - t44 * t51 - t46 * t50 - t84 * t9, t10 * t51 + t22 * t75 + t50 * t9, t21, -t148, t14, t204, -t147, t36, -t149 * t44 - t150 * t82 + t33 * t48 + t64 * t7, -t25 * t44 + t35 * t48 - t4 * t82 + t66 * t7, t149 * t35 + t150 * t66 - t25 * t33 - t4 * t64, t149 * t150 + t25 * t4 + t48 * t7, t21, t14, t148, t36, t147, t204, -t18 * t44 - t2 * t82 + t26 * t33 + t5 * t64, -t1 * t64 - t17 * t33 + t18 * t35 + t2 * t66, t1 * t82 + t17 * t44 - t26 * t35 - t5 * t66, t1 * t17 + t18 * t2 + t26 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t114 * t126 ^ 2, 0.2e1 * t126 * t180, t174 * t223, t106, t122 * t161, t122 ^ 2, 0.2e1 * pkin(2) * t180 + 0.2e1 * t122 * t85, -0.2e1 * t114 * t214 - 0.2e1 * t122 * t87 (-t126 * t85 + t130 * t87) * t223, pkin(2) ^ 2 * t114 + t85 ^ 2 + t87 ^ 2, t84 ^ 2, t82 * t225, t177 * t225, t81, t82 * t161, t106, -0.2e1 * t177 * t50 + 0.2e1 * t75 * t82, 0.2e1 * t177 * t51 + 0.2e1 * t75 * t84, -0.2e1 * t50 * t84 - 0.2e1 * t51 * t82, t50 ^ 2 + t51 ^ 2 + t75 ^ 2, t63, -0.2e1 * t200, t52, t227, -0.2e1 * t197, t81, -0.2e1 * t149 * t82 + 0.2e1 * t48 * t64, -0.2e1 * t25 * t82 + 0.2e1 * t48 * t66, 0.2e1 * t149 * t66 - 0.2e1 * t25 * t64, t149 ^ 2 + t25 ^ 2 + t48 ^ 2, t63, t52, 0.2e1 * t200, t81, 0.2e1 * t197, t227, -0.2e1 * t18 * t82 + 0.2e1 * t26 * t64, -0.2e1 * t17 * t64 + 0.2e1 * t18 * t66, 0.2e1 * t17 * t82 - 0.2e1 * t26 * t66, t17 ^ 2 + t18 ^ 2 + t26 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t61, 0, -t59, t80, t27, -t28, 0, 0, t185, -t125 * t44 + t129 * t46, t195, -t186, t191, 0, -pkin(3) * t44 - pkin(11) * t195 - t129 * t22, -pkin(3) * t46 - pkin(11) * t191 + t125 * t22 (t185 - t186) * pkin(11) + t146, -t22 * pkin(3) + pkin(11) * t146, t29, -t230, t15, t158, -t135, -t186, t150 * t129 + t72 * t44 + (pkin(11) * t33 + t199) * t125, t4 * t129 - t73 * t44 + (pkin(11) * t35 + t198) * t125, -t73 * t33 - t72 * t35 + (-t124 * t4 + t128 * t150) * t125, -t150 * t72 + t206 * t7 + t4 * t73, t29, t15, t230, -t186, t135, t158, t129 * t2 + t172 * t5 + t33 * t79 - t44 * t69, -t68 * t33 + t69 * t35 + (-t1 * t124 + t128 * t2) * t125, -t1 * t129 - t110 * t5 - t35 * t79 + t44 * t68, t1 * t68 + t2 * t69 + t5 * t79; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t178, 0, t177, t122, t85, -t87, 0, 0, t181, -t125 * t82 + t129 * t84, -t153, -t182, -t151, 0, -pkin(3) * t82 + pkin(11) * t153 - t129 * t75, -pkin(3) * t84 + pkin(11) * t151 + t125 * t75 (t181 - t182) * pkin(11) + t136, -t75 * pkin(3) + pkin(11) * t136, t54, -t231, t43, t156, -t134, -t182, t149 * t129 + t72 * t82 + (pkin(11) * t64 + t196) * t125, t25 * t129 - t73 * t82 + (pkin(11) * t66 + t193) * t125, -t73 * t64 - t72 * t66 + (-t124 * t25 + t128 * t149) * t125, -t149 * t72 + t206 * t48 + t25 * t73, t54, t43, t231, -t182, t134, t156, t129 * t18 + t172 * t26 + t64 * t79 - t69 * t82, -t68 * t64 + t69 * t66 + (-t124 * t17 + t128 * t18) * t125, -t110 * t26 - t129 * t17 - t66 * t79 + t68 * t82, t17 * t68 + t18 * t69 + t26 * t79; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t117, 0.2e1 * t169, 0, t119, 0, 0, 0.2e1 * pkin(3) * t129, pkin(3) * t221, 0.2e1 * (t117 + t119) * pkin(11), pkin(3) ^ 2 + t119 * t133 + t112, t109, -0.2e1 * t152, t96, t108, 0.2e1 * t154, t119, 0.2e1 * t117 * t210 - 0.2e1 * t129 * t72, 0.2e1 * t117 * t209 + 0.2e1 * t129 * t73 (-t124 * t73 - t128 * t72) * t220, t72 ^ 2 + t73 ^ 2 + t112, t109, t96, 0.2e1 * t152, t119, -0.2e1 * t154, t108, 0.2e1 * t129 * t69 + 0.2e1 * t172 * t79 (-t124 * t68 + t128 * t69) * t220, -0.2e1 * t110 * t79 - 0.2e1 * t129 * t68, t68 ^ 2 + t69 ^ 2 + t79 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t46, 0, -t44, t59, t9, -t10, 0, 0, t31, -t141, t38, -t188, t194, 0, -pkin(4) * t33 - t165 - t198, -pkin(4) * t35 - t163 + t199, t202 - t30 + (t150 + t219) * t124, -t7 * pkin(4) + (t124 * t150 + t202) * pkin(12), t31, t38, t141, 0, -t194, -t188, -t128 * t5 + t33 * t94 - t165, t208 - t30 + (t2 + t219) * t124, -t124 * t5 - t35 * t94 + t163, t5 * t94 + (t124 * t2 + t208) * pkin(12); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t84, 0, -t82, -t177, t50, -t51, 0, 0, t58, -t139, t78, -t184, t192, 0, -pkin(4) * t64 - t164 - t193, -pkin(4) * t66 - t162 + t196, t189 - t56 + (t149 + t218) * t124, -t48 * pkin(4) + (t124 * t149 + t189) * pkin(12), t58, t78, t139, 0, -t192, -t184, -t128 * t26 + t64 * t94 - t164, t190 - t56 + (t18 + t218) * t124, -t124 * t26 - t66 * t94 + t162, t26 * t94 + (t124 * t18 + t190) * pkin(12); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t125, 0, t129, 0, -t206, -t129 * pkin(11), 0, 0, t100, -t91, -t170, -t100, -t168, 0, t104 + (-t209 - t212) * t125, pkin(12) * t168 + (t210 - t211) * t125, t137, -pkin(4) * t206 + pkin(12) * t137, t100, -t170, t91, 0, t168, -t100, -t128 * t79 + t172 * t94 + t104, t138, -t79 * t124 + (-pkin(12) * t129 - t125 * t94) * t128, pkin(12) * t138 + t79 * t94; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t116, 0.2e1 * t171, 0, t118, 0, 0, 0.2e1 * t211, -0.2e1 * t212, t93, pkin(4) ^ 2 + t166, t116, 0, -0.2e1 * t171, 0, 0, t118, t128 * t224, t93, t124 * t224, t94 ^ 2 + t166; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t35, 0, -t33, t44, -t150, -t4, 0, 0, 0, t35, 0, t44, t33, 0, -t150 + 0.2e1 * t217, -pkin(5) * t35 - qJ(6) * t33, 0.2e1 * t187 + t4, -pkin(5) * t2 + qJ(6) * t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t66, 0, -t64, t82, -t149, -t25, 0, 0, 0, t66, 0, t82, t64, 0, -t149 + 0.2e1 * t216, -pkin(5) * t66 - qJ(6) * t64, 0.2e1 * t183 + t25, -pkin(5) * t18 + qJ(6) * t17; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t110, 0, -t172, -t129, t72, -t73, 0, 0, 0, t110, 0, -t129, t172, 0, t90 + (-0.2e1 * pkin(5) - t210) * t129, t145 * t125, -0.2e1 * t167 + t73, -pkin(5) * t69 + qJ(6) * t68; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t124, 0, t128, 0, -t207, -t205, 0, 0, 0, t124, 0, 0, -t128, 0, -t207, t144, t205, t144 * pkin(12); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0.2e1 * pkin(5), 0, 0.2e1 * qJ(6), pkin(5) ^ 2 + qJ(6) ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t44, t35, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t82, t66, 0, t18; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t129, t110, 0, t69; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t124, 0, t207; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, -pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1;];
MM_reg  = t3;
