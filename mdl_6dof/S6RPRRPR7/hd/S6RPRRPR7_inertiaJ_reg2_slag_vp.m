% Calculate inertial parameters regressor of joint inertia matrix for
% S6RPRRPR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d6,theta5]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 05:21
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RPRRPR7_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR7_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRRPR7_inertiaJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 23:01:48
% EndTime: 2019-05-05 23:01:52
% DurationCPUTime: 1.62s
% Computational Cost: add. (1558->124), mult. (2603->192), div. (0->0), fcn. (3121->8), ass. (0->88)
t63 = sin(qJ(4));
t64 = sin(qJ(3));
t66 = cos(qJ(4));
t67 = cos(qJ(3));
t38 = t63 * t67 + t66 * t64;
t40 = -t63 * t64 + t66 * t67;
t60 = sin(pkin(10));
t61 = cos(pkin(10));
t19 = t60 * t38 - t61 * t40;
t74 = t61 * t38 + t60 * t40;
t126 = (t19 * t61 - t60 * t74) * pkin(4);
t68 = -pkin(1) - pkin(7);
t94 = -pkin(8) + t68;
t82 = t94 * t67;
t83 = t94 * t64;
t26 = t63 * t82 + t66 * t83;
t12 = -t38 * qJ(5) + t26;
t25 = -t63 * t83 + t66 * t82;
t72 = -t40 * qJ(5) + t25;
t7 = t61 * t12 + t60 * t72;
t5 = t60 * t12 - t61 * t72;
t99 = t5 * t19;
t125 = t7 * t74 + t99;
t115 = t74 ^ 2;
t123 = t19 ^ 2;
t124 = t115 + t123;
t54 = t66 * pkin(3);
t52 = t54 + pkin(4);
t95 = t63 * pkin(3);
t80 = -t61 * t52 + t60 * t95;
t31 = -pkin(5) + t80;
t122 = t19 * t31;
t96 = t61 * pkin(4);
t49 = -pkin(5) - t96;
t121 = t19 * t49;
t62 = sin(qJ(6));
t120 = t19 * t62;
t65 = cos(qJ(6));
t119 = t19 * t65;
t97 = t60 * pkin(4);
t48 = pkin(9) + t97;
t55 = t62 ^ 2;
t57 = t65 ^ 2;
t86 = t55 + t57;
t118 = t86 * t48;
t84 = t61 * t95;
t34 = t60 * t52 + t84;
t116 = t19 * t80 + t34 * t74;
t114 = 0.2e1 * t19;
t112 = (t38 * t63 + t40 * t66) * pkin(3);
t14 = t62 * t74;
t15 = t65 * t74;
t105 = t38 ^ 2;
t37 = t40 ^ 2;
t109 = t37 + t105;
t108 = t5 ^ 2;
t50 = t64 * pkin(3) + qJ(2);
t29 = t38 * pkin(4) + t50;
t104 = 0.2e1 * t29;
t103 = 0.2e1 * t50;
t102 = 0.2e1 * t62;
t101 = -0.2e1 * t65;
t100 = 0.2e1 * qJ(2);
t98 = t5 * t65;
t91 = t62 * t65;
t32 = pkin(9) + t34;
t89 = t86 * t32;
t88 = t31 + t49;
t56 = t64 ^ 2;
t58 = t67 ^ 2;
t45 = t56 + t58;
t85 = t74 * t114;
t10 = t86 * t74;
t8 = pkin(5) * t74 + pkin(9) * t19 + t29;
t2 = -t62 * t7 + t65 * t8;
t3 = t62 * t8 + t65 * t7;
t79 = t2 * t65 + t3 * t62;
t1 = -t2 * t62 + t3 * t65;
t77 = -t32 * t74 - t122;
t76 = -t48 * t74 - t121;
t75 = t25 * t40 + t26 * t38;
t69 = qJ(2) ^ 2;
t47 = 0.2e1 * t91;
t41 = t45 * t68;
t13 = t62 * t119;
t9 = (-t55 + t57) * t19;
t4 = t5 * t62;
t6 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, -2 * pkin(1), t100 (pkin(1) ^ 2) + t69, t58, -0.2e1 * t67 * t64, 0, t56, 0, 0, t64 * t100, t67 * t100, -0.2e1 * t41, t45 * t68 ^ 2 + t69, t37, -0.2e1 * t40 * t38, 0, t105, 0, 0, t38 * t103, t40 * t103, -0.2e1 * t75, t25 ^ 2 + t26 ^ 2 + t50 ^ 2, t123, t85, 0, t115, 0, 0, t74 * t104, -t19 * t104, -0.2e1 * t125, t29 ^ 2 + t7 ^ 2 + t108, t57 * t123, -0.2e1 * t123 * t91, -0.2e1 * t74 * t119, t55 * t123, t62 * t85, t115, -0.2e1 * t120 * t5 + 0.2e1 * t2 * t74, -0.2e1 * t119 * t5 - 0.2e1 * t3 * t74, t79 * t114, t2 ^ 2 + t3 ^ 2 + t108; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, -pkin(1), 0, 0, 0, 0, 0, 0, 0, 0, -t45, t41, 0, 0, 0, 0, 0, 0, 0, 0, -t109, t75, 0, 0, 0, 0, 0, 0, 0, 0, -t124, t125, 0, 0, 0, 0, 0, 0, -t124 * t62, -t124 * t65, 0, t1 * t74 + t99; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t45, 0, 0, 0, 0, 0, 0, 0, 0, 0, t109, 0, 0, 0, 0, 0, 0, 0, 0, 0, t124, 0, 0, 0, 0, 0, 0, 0, 0, 0, t115 * t86 + t123; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t67, 0, -t64, 0, t67 * t68, -t64 * t68, 0, 0, 0, 0, t40, 0, -t38, 0, t25, -t26, -t112 (t25 * t66 + t26 * t63) * pkin(3), 0, 0, -t19, 0, -t74, 0, -t5, -t7, -t116, t7 * t34 + t5 * t80, -t13, -t9, t14, t13, t15, 0, t77 * t62 - t98, t77 * t65 + t4, t1, t1 * t32 + t5 * t31; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t67, -t64, 0, 0, 0, 0, 0, 0, 0, 0, t40, -t38, 0, t112, 0, 0, 0, 0, 0, 0, -t19, -t74, 0, t116, 0, 0, 0, 0, 0, 0, -t119, t120, t10, t32 * t10 + t122; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t54, -0.2e1 * t95, 0 (t63 ^ 2 + t66 ^ 2) * pkin(3) ^ 2, 0, 0, 0, 0, 0, 1, -0.2e1 * t80, -0.2e1 * t34, 0, t34 ^ 2 + t80 ^ 2, t55, t47, 0, t57, 0, 0, t31 * t101, t31 * t102, 0.2e1 * t89, t86 * t32 ^ 2 + t31 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t40, 0, -t38, 0, t25, -t26, 0, 0, 0, 0, -t19, 0, -t74, 0, -t5, -t7, t126 (-t5 * t61 + t60 * t7) * pkin(4), -t13, -t9, t14, t13, t15, 0, t76 * t62 - t98, t76 * t65 + t4, t1, t1 * t48 + t5 * t49; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t40, -t38, 0, 0, 0, 0, 0, 0, 0, 0, -t19, -t74, 0, -t126, 0, 0, 0, 0, 0, 0, -t119, t120, t10, t118 * t74 + t121; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t54, -t95, 0, 0, 0, 0, 0, 0, 0, 1, -t80 + t96, -t84 + (-pkin(4) - t52) * t60, 0 (t34 * t60 - t61 * t80) * pkin(4), t55, t47, 0, t57, 0, 0, -t88 * t65, t88 * t62, t118 + t89, t118 * t32 + t31 * t49; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t96, -0.2e1 * t97, 0 (t60 ^ 2 + t61 ^ 2) * pkin(4) ^ 2, t55, t47, 0, t57, 0, 0, t49 * t101, t49 * t102, 0.2e1 * t118, t86 * t48 ^ 2 + t49 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t74, -t19, 0, t29, 0, 0, 0, 0, 0, 0, t15, -t14, t86 * t19, t79; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t86; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t119, 0, t120, t74, t2, -t3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t14, -t15, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t62, 0, t65, 0, -t62 * t32, -t65 * t32, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t62, 0, t65, 0, -t62 * t48, -t65 * t48, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t65, -t62, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t6;
