% Calculate inertial parameters regressor of joint inertia matrix for
% S6RPRRPP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,theta2]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 04:37
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RPRRPP3_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPP3_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPRRPP3_inertiaJ_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 21:27:28
% EndTime: 2019-05-05 21:27:32
% DurationCPUTime: 1.46s
% Computational Cost: add. (551->123), mult. (1036->196), div. (0->0), fcn. (967->6), ass. (0->85)
t58 = sin(qJ(4));
t50 = t58 ^ 2;
t59 = sin(qJ(3));
t37 = t50 * t59;
t60 = cos(qJ(4));
t52 = t60 ^ 2;
t87 = t52 * t59;
t15 = t37 + t87;
t99 = t50 + t52;
t44 = qJ(5) * t60;
t98 = -pkin(4) * t58 + t44;
t56 = pkin(4) + qJ(6);
t77 = t58 * qJ(5);
t97 = -t56 * t60 - t77;
t96 = -0.2e1 * t58;
t95 = 0.2e1 * t59;
t94 = pkin(3) * t60;
t61 = cos(qJ(3));
t92 = pkin(8) * t61;
t54 = sin(pkin(9));
t91 = t54 * pkin(1);
t55 = cos(pkin(9));
t90 = t55 * pkin(1);
t89 = t61 * pkin(3);
t35 = -pkin(2) - t90;
t13 = -pkin(8) * t59 + t35 - t89;
t34 = pkin(7) + t91;
t83 = t61 * t34;
t7 = t13 * t58 + t60 * t83;
t51 = t59 ^ 2;
t88 = t51 * t34;
t38 = t58 * t59;
t85 = t58 * t60;
t21 = t59 * t34;
t84 = t59 * t61;
t41 = t60 * t59;
t42 = t60 * t61;
t82 = -t13 * t60 + t58 * t83;
t81 = t15 * pkin(8);
t28 = t59 * t44;
t80 = -pkin(4) * t38 + t28;
t79 = t99 * pkin(8) ^ 2;
t53 = t61 ^ 2;
t78 = t51 + t53;
t76 = t61 * qJ(5);
t75 = t58 * t84;
t74 = t51 * t85;
t73 = t59 * t42;
t49 = t61 * pkin(4);
t4 = t49 + t82;
t8 = t21 - t80;
t3 = t76 - t7;
t72 = -t3 * t60 + t4 * t58;
t71 = t58 * t82 + t60 * t7;
t69 = -pkin(4) * t60 - t77;
t19 = -pkin(3) + t69;
t70 = -t19 * t59 - t92;
t46 = t58 * pkin(8);
t25 = pkin(5) * t58 + t46;
t48 = t60 * pkin(8);
t26 = pkin(5) * t60 + t48;
t68 = t25 * t58 + t26 * t60;
t67 = -pkin(5) * t38 + t7;
t66 = -pkin(5) * t41 - t4;
t63 = qJ(5) ^ 2;
t62 = 0.2e1 * qJ(5);
t43 = -0.2e1 * t76;
t40 = t52 * t51;
t39 = t58 * t61;
t36 = t50 * t51;
t33 = 0.2e1 * t85;
t32 = t34 ^ 2;
t27 = t58 * t41;
t24 = -0.2e1 * t73;
t23 = -0.2e1 * t74;
t22 = -0.2e1 * t75;
t20 = t51 * t32;
t18 = 0.2e1 * t99 * pkin(8);
t14 = -t37 + t87;
t12 = -pkin(3) + t97;
t11 = t40 + t36 + t53;
t5 = qJ(6) * t38 + t8;
t2 = t67 - t76;
t1 = qJ(6) * t61 - t66;
t6 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t90, -0.2e1 * t91, 0 (t54 ^ 2 + t55 ^ 2) * pkin(1) ^ 2, t51, 0.2e1 * t84, 0, t53, 0, 0, -0.2e1 * t35 * t61, t35 * t95, 0.2e1 * t78 * t34, t32 * t53 + t35 ^ 2 + t20, t40, t23, t24, t36, 0.2e1 * t75, t53, 0.2e1 * t58 * t88 + 0.2e1 * t61 * t82, 0.2e1 * t60 * t88 + 0.2e1 * t61 * t7 (-t58 * t7 + t60 * t82) * t95, t7 ^ 2 + t82 ^ 2 + t20, t53, 0.2e1 * t73, t22, t40, t23, t36 (t3 * t58 + t4 * t60) * t95, -0.2e1 * t38 * t8 - 0.2e1 * t4 * t61, 0.2e1 * t3 * t61 - 0.2e1 * t41 * t8, t3 ^ 2 + t4 ^ 2 + t8 ^ 2, t53, t22, t24, t36, 0.2e1 * t74, t40 (t1 * t60 - t2 * t58) * t95, -0.2e1 * t2 * t61 - 0.2e1 * t41 * t5, 0.2e1 * t1 * t61 + 0.2e1 * t38 * t5, t1 ^ 2 + t2 ^ 2 + t5 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (t71 - t83) * t59, 0, 0, 0, 0, 0, 0, 0, 0, 0, t59 * t72 - t8 * t61, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t5 * t61 + (t1 * t58 + t2 * t60) * t59; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t78, 0, 0, 0, 0, 0, 0, 0, 0, 0, t11, 0, 0, 0, 0, 0, 0, 0, 0, 0, t11, 0, 0, 0, 0, 0, 0, 0, 0, 0, t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t59, 0, t61, 0, -t21, -t83, 0, 0, t27, t14, -t39, -t27, -t42, 0, -t34 * t41 + (-pkin(3) * t59 + t92) * t58, pkin(8) * t42 + (t34 * t58 - t94) * t59, t71, -pkin(3) * t21 + pkin(8) * t71, 0, t39, t42, t27, t14, -t27, t72, t58 * t70 + t8 * t60, -t8 * t58 + t60 * t70, pkin(8) * t72 + t8 * t19, 0, t42, -t39, -t27, -t14, t27 (t25 * t59 + t2) * t60 + (-t26 * t59 + t1) * t58, -t12 * t41 - t26 * t61 - t5 * t58, t12 * t38 + t25 * t61 - t5 * t60, t1 * t25 + t12 * t5 + t2 * t26; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t61, -t59, 0, 0, 0, 0, 0, 0, 0, 0, t42, -t39, t15, t81 + t89, 0, 0, 0, 0, 0, 0, t15, -t42, t39, -t19 * t61 + t81, 0, 0, 0, 0, 0, 0, t15, t39, t42, -t61 * t12 + t59 * t68; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t50, t33, 0, t52, 0, 0, 0.2e1 * t94, pkin(3) * t96, t18, pkin(3) ^ 2 + t79, 0, 0, 0, t50, t33, t52, t18, 0.2e1 * t19 * t60, t19 * t96, t19 ^ 2 + t79, 0, 0, 0, t52, -0.2e1 * t85, t50, 0.2e1 * t68, t12 * t96, -0.2e1 * t12 * t60, t12 ^ 2 + t25 ^ 2 + t26 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t41, 0, -t38, -t61, -t82, -t7, 0, 0, -t61, -t41, t38, 0, 0, 0, t69 * t59, 0.2e1 * t49 + t82, t43 + t7, -pkin(4) * t4 - qJ(5) * t3, -t61, t38, t41, 0, 0, 0, t97 * t59, t43 + t67 (-qJ(6) - t56) * t61 + t66, qJ(5) * t2 - t1 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t38, -t41, 0, 0, 0, 0, 0, 0, 0, 0, 0, t38, t41, t80, 0, 0, 0, 0, 0, 0, 0, t41, -t38, -t38 * t56 + t28; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t58, 0, t60, 0, -t46, -t48, 0, 0, 0, -t58, -t60, 0, 0, 0, t98, t46, t48, t98 * pkin(8), 0, -t60, t58, 0, 0, 0, -t56 * t58 + t44, t26, -t25, qJ(5) * t26 - t25 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, -0.2e1 * pkin(4), t62, pkin(4) ^ 2 + t63, 1, 0, 0, 0, 0, 0, 0, t62, 0.2e1 * t56, t56 ^ 2 + t63; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t41, -t61, 0, t4, 0, 0, 0, 0, 0, 0, t41, 0, t61, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t38, 0, 0, 0, 0, 0, 0, 0, 0, 0, t38; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t58, 0, 0, t46, 0, 0, 0, 0, 0, 0, t58, 0, 0, t25; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, -pkin(4), 0, 0, 0, 0, 0, 0, 0, 0, -1, -t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t38, -t61, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t41; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t60, 0, 0, t26; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, qJ(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1;];
MM_reg  = t6;
