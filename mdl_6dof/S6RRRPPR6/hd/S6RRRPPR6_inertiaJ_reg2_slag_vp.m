% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRRPPR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d6,theta4]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 15:55
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRRPPR6_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPR6_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPPR6_inertiaJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 05:33:31
% EndTime: 2019-05-07 05:33:38
% DurationCPUTime: 2.42s
% Computational Cost: add. (2847->206), mult. (6375->383), div. (0->0), fcn. (7380->10), ass. (0->134)
t81 = sin(pkin(6));
t86 = sin(qJ(2));
t135 = t81 * t86;
t83 = cos(pkin(6));
t85 = sin(qJ(3));
t88 = cos(qJ(3));
t51 = t85 * t135 - t83 * t88;
t53 = t88 * t135 + t83 * t85;
t80 = sin(pkin(11));
t82 = cos(pkin(11));
t33 = t82 * t51 + t80 * t53;
t157 = t33 ^ 2;
t35 = -t80 * t51 + t82 * t53;
t32 = t35 ^ 2;
t58 = t80 * t85 - t82 * t88;
t56 = t58 ^ 2;
t60 = t80 * t88 + t82 * t85;
t57 = t60 ^ 2;
t145 = t80 * pkin(3);
t69 = qJ(5) + t145;
t156 = t69 ^ 2;
t155 = -0.2e1 * t35;
t74 = -t88 * pkin(3) - pkin(2);
t94 = -t60 * qJ(5) + t74;
t38 = t58 * pkin(4) + t94;
t154 = -0.2e1 * t38;
t153 = -0.2e1 * t53;
t152 = 0.2e1 * t69;
t151 = 0.2e1 * t74;
t150 = 0.2e1 * t81;
t149 = 0.2e1 * t88;
t148 = pkin(4) + pkin(10);
t147 = pkin(1) * t86;
t89 = cos(qJ(2));
t146 = pkin(1) * t89;
t144 = t82 * pkin(3);
t134 = t81 * t89;
t84 = sin(qJ(6));
t87 = cos(qJ(6));
t22 = t84 * t134 + t87 * t33;
t143 = t22 * t84;
t142 = t33 * t58;
t21 = t35 * t60;
t141 = t51 * t88;
t140 = t53 * t85;
t139 = t60 * t58;
t138 = t69 * t58;
t75 = t81 ^ 2;
t137 = t75 * t89;
t76 = t84 ^ 2;
t136 = t76 * t58;
t133 = t83 * t86;
t23 = t87 * t134 - t84 * t33;
t132 = t84 * t23;
t131 = t84 * t35;
t130 = t84 * t58;
t129 = t84 * t60;
t73 = -pkin(4) - t144;
t68 = -pkin(10) + t73;
t128 = t84 * t68;
t127 = t87 * t23;
t29 = t87 * t35;
t126 = t87 * t58;
t50 = t87 * t60;
t125 = t87 * t68;
t124 = t87 * t84;
t123 = -qJ(4) - pkin(9);
t115 = pkin(3) * t134;
t114 = pkin(8) * t134;
t46 = t114 + (pkin(9) + t147) * t83;
t47 = (-pkin(2) * t89 - pkin(9) * t86 - pkin(1)) * t81;
t26 = -t85 * t46 + t88 * t47;
t16 = -t53 * qJ(4) - t115 + t26;
t27 = t88 * t46 + t85 * t47;
t19 = -t51 * qJ(4) + t27;
t122 = -t82 * t16 + t80 * t19;
t10 = t80 * t16 + t82 * t19;
t78 = t87 ^ 2;
t121 = t76 + t78;
t77 = t85 ^ 2;
t79 = t88 ^ 2;
t120 = t77 + t79;
t119 = t33 * t155;
t118 = -0.2e1 * t139;
t117 = 0.2e1 * t139;
t116 = 0.2e1 * t134;
t113 = t35 * t134;
t103 = t123 * t85;
t63 = t123 * t88;
t39 = -t82 * t103 - t80 * t63;
t112 = t39 * t134;
t41 = t80 * t103 - t82 * t63;
t111 = t41 * t134;
t110 = t60 * t134;
t109 = t33 * t134;
t108 = t58 * t134;
t107 = t85 * t134;
t106 = t88 * t134;
t105 = t58 * t124;
t8 = pkin(4) * t134 + t122;
t104 = t39 ^ 2 + t41 ^ 2;
t4 = t35 * pkin(5) + pkin(10) * t134 + t8;
t66 = pkin(8) * t135;
t45 = t66 + (-pkin(2) - t146) * t83;
t37 = t51 * pkin(3) + t45;
t92 = -t35 * qJ(5) + t37;
t6 = t148 * t33 + t92;
t1 = t87 * t4 - t84 * t6;
t2 = t84 * t4 + t87 * t6;
t102 = t1 * t87 + t2 * t84;
t101 = -t1 * t84 + t2 * t87;
t25 = t148 * t58 + t94;
t30 = t60 * pkin(5) + t39;
t12 = -t84 * t25 + t87 * t30;
t13 = t87 * t25 + t84 * t30;
t3 = t12 * t87 + t13 * t84;
t100 = -t12 * t84 + t13 * t87;
t99 = t127 + t143;
t98 = -t26 * t85 + t27 * t88;
t97 = -t41 * t33 + t39 * t35;
t96 = -t60 * t33 - t35 * t58;
t95 = -t60 * t68 + t138;
t7 = qJ(5) * t134 - t10;
t93 = 0.2e1 * t39 * t60 - 0.2e1 * t41 * t58;
t71 = t75 * t89 ^ 2;
t55 = pkin(1) * t133 + t114;
t54 = t83 * t146 - t66;
t49 = t78 * t58;
t44 = t121 * t68;
t31 = -t58 * pkin(5) + t41;
t20 = t87 * t22;
t11 = t33 * pkin(4) + t92;
t5 = -t33 * pkin(5) - t7;
t9 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t75 * t86 ^ 2, 0.2e1 * t86 * t137, t133 * t150, t71, t83 * t116, t83 ^ 2, 0.2e1 * pkin(1) * t137 + 0.2e1 * t54 * t83, -0.2e1 * t75 * t147 - 0.2e1 * t55 * t83 (-t54 * t86 + t55 * t89) * t150, t75 * pkin(1) ^ 2 + t54 ^ 2 + t55 ^ 2, t53 ^ 2, t51 * t153, t134 * t153, t51 ^ 2, t51 * t116, t71, -0.2e1 * t26 * t134 + 0.2e1 * t45 * t51, 0.2e1 * t27 * t134 + 0.2e1 * t45 * t53, -0.2e1 * t26 * t53 - 0.2e1 * t27 * t51, t26 ^ 2 + t27 ^ 2 + t45 ^ 2, t32, t119, -0.2e1 * t113, t157, 0.2e1 * t109, t71, 0.2e1 * t122 * t134 + 0.2e1 * t37 * t33, 0.2e1 * t10 * t134 + 0.2e1 * t37 * t35, -0.2e1 * t10 * t33 + 0.2e1 * t122 * t35, t10 ^ 2 + t122 ^ 2 + t37 ^ 2, t71, 0.2e1 * t113, -0.2e1 * t109, t32, t119, t157, 0.2e1 * t7 * t33 + 0.2e1 * t8 * t35, -0.2e1 * t11 * t33 - 0.2e1 * t8 * t134, -0.2e1 * t11 * t35 + 0.2e1 * t7 * t134, t11 ^ 2 + t7 ^ 2 + t8 ^ 2, t23 ^ 2, -0.2e1 * t23 * t22, t23 * t155, t22 ^ 2, 0.2e1 * t22 * t35, t32, 0.2e1 * t1 * t35 - 0.2e1 * t5 * t22, -0.2e1 * t2 * t35 - 0.2e1 * t5 * t23, 0.2e1 * t1 * t23 + 0.2e1 * t2 * t22, t1 ^ 2 + t2 ^ 2 + t5 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t135, 0, t134, t83, t54, -t55, 0, 0, t140, -t85 * t51 + t53 * t88, -t107, -t141, -t106, 0, -pkin(2) * t51 + pkin(9) * t107 - t45 * t88, -pkin(2) * t53 + pkin(9) * t106 + t45 * t85 (t140 - t141) * pkin(9) + t98, -t45 * pkin(2) + t98 * pkin(9), t21, t96, -t110, t142, t108, 0, t74 * t33 + t37 * t58 + t112, t74 * t35 + t37 * t60 + t111, -t10 * t58 + t122 * t60 + t97, t10 * t41 + t122 * t39 + t37 * t74, 0, t110, -t108, t21, t96, t142, t7 * t58 + t8 * t60 + t97, -t11 * t58 - t38 * t33 - t112, -t11 * t60 - t38 * t35 - t111, t11 * t38 + t8 * t39 - t7 * t41, -t23 * t130 (-t127 + t143) * t58, t35 * t130 - t23 * t60, t22 * t126, t35 * t126 + t22 * t60, t21, t1 * t60 + t12 * t35 - t5 * t126 - t31 * t22, -t13 * t35 + t130 * t5 - t2 * t60 - t31 * t23, t101 * t58 + t12 * t23 + t13 * t22, t1 * t12 + t2 * t13 + t5 * t31; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t77, t85 * t149, 0, t79, 0, 0, pkin(2) * t149, -0.2e1 * pkin(2) * t85, 0.2e1 * t120 * pkin(9), t120 * pkin(9) ^ 2 + pkin(2) ^ 2, t57, t118, 0, t56, 0, 0, t58 * t151, t60 * t151, t93, t74 ^ 2 + t104, 0, 0, 0, t57, t118, t56, t93, t58 * t154, t60 * t154, t38 ^ 2 + t104, t76 * t56, 0.2e1 * t56 * t124, t84 * t117, t78 * t56, t87 * t117, t57, 0.2e1 * t12 * t60 - 0.2e1 * t126 * t31, -0.2e1 * t13 * t60 + 0.2e1 * t130 * t31, 0.2e1 * t100 * t58, t12 ^ 2 + t13 ^ 2 + t31 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t53, 0, -t51, -t134, t26, -t27, 0, 0, 0, 0, t35, 0, -t33, -t134, -t82 * t115 - t122, t80 * t115 - t10 (-t33 * t80 - t35 * t82) * pkin(3) (t10 * t80 - t122 * t82) * pkin(3), -t134, -t35, t33, 0, 0, 0, -t69 * t33 + t73 * t35, -t73 * t134 + t8 (-qJ(5) - t69) * t134 + t10, -t7 * t69 + t8 * t73, -t127, t20 + t132, t29, -t143, -t131, 0, t125 * t35 - t69 * t22 + t5 * t84, -t128 * t35 - t69 * t23 + t5 * t87, t68 * t99 - t102, t102 * t68 + t5 * t69; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t85, 0, t88, 0, -t85 * pkin(9), -t88 * pkin(9), 0, 0, 0, 0, t60, 0, -t58, 0, -t39, -t41 (-t58 * t80 - t60 * t82) * pkin(3) (-t39 * t82 + t41 * t80) * pkin(3), 0, -t60, t58, 0, 0, 0, t73 * t60 - t138, t39, t41, t39 * t73 + t41 * t69, t105, t49 - t136, t50, -t105, -t129, 0, t31 * t84 - t87 * t95, t31 * t87 + t84 * t95, -t3, t3 * t68 + t31 * t69; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t144, -0.2e1 * t145, 0 (t80 ^ 2 + t82 ^ 2) * pkin(3) ^ 2, 1, 0, 0, 0, 0, 0, 0, 0.2e1 * t73, t152, t73 ^ 2 + t156, t78, -0.2e1 * t124, 0, t76, 0, 0, t84 * t152, t87 * t152, -0.2e1 * t44, t121 * t68 ^ 2 + t156; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t33, t35, 0, t37, 0, 0, 0, 0, 0, 0, 0, -t33, -t35, t11, 0, 0, 0, 0, 0, 0, -t131, -t29, t20 - t132, t101; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t58, t60, 0, t74, 0, 0, 0, 0, 0, 0, 0, -t58, -t60, t38, 0, 0, 0, 0, 0, 0, -t129, -t50, t49 + t136, t100; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t121; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t35, -t134, 0, t8, 0, 0, 0, 0, 0, 0, t29, -t131, t99, t102; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t60, 0, 0, t39, 0, 0, 0, 0, 0, 0, t50, -t129, 0, t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, t73, 0, 0, 0, 0, 0, 0, 0, 0, -t121, t44; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t121; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t23, 0, t22, t35, t1, -t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t130, 0, t126, t60, t12, -t13, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t87, 0, -t84, 0, t125, -t128, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t84, -t87, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t87, -t84, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t9;
