% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRRPPR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d6,theta4]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 16:20
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRRPPR9_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPR9_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPPR9_inertiaJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 06:38:58
% EndTime: 2019-05-07 06:39:10
% DurationCPUTime: 3.44s
% Computational Cost: add. (2784->266), mult. (6436->494), div. (0->0), fcn. (7223->10), ass. (0->145)
t101 = sin(pkin(11));
t96 = t101 ^ 2;
t103 = cos(pkin(11));
t98 = t103 ^ 2;
t173 = t96 + t98;
t106 = sin(qJ(3));
t102 = sin(pkin(6));
t110 = cos(qJ(2));
t137 = t102 * t110;
t104 = cos(pkin(6));
t109 = cos(qJ(3));
t107 = sin(qJ(2));
t138 = t102 * t107;
t61 = t104 * t106 + t109 * t138;
t36 = t61 * t101 + t103 * t137;
t143 = t36 * t103;
t38 = -t101 * t137 + t61 * t103;
t31 = t38 * t101;
t172 = (t31 + t143) * t106;
t105 = sin(qJ(6));
t108 = cos(qJ(6));
t69 = t108 * t101 - t105 * t103;
t171 = t36 ^ 2;
t59 = -t104 * t109 + t106 * t138;
t170 = t59 ^ 2;
t16 = t36 * t105 + t38 * t108;
t169 = -0.2e1 * t16;
t53 = t69 * t106;
t168 = 0.2e1 * t53;
t167 = 0.2e1 * t59;
t166 = -0.2e1 * t61;
t121 = t101 * qJ(5) + pkin(3);
t160 = pkin(4) + pkin(5);
t62 = t160 * t103 + t121;
t165 = 0.2e1 * t62;
t164 = 0.2e1 * t102;
t163 = -0.2e1 * t103;
t162 = 0.2e1 * t106;
t161 = 0.2e1 * t109;
t159 = pkin(1) * t107;
t158 = pkin(1) * t110;
t157 = pkin(3) * t101;
t156 = pkin(9) * t103;
t155 = t106 * pkin(9);
t154 = t38 * t36;
t153 = t59 * t36;
t82 = pkin(8) * t138;
t48 = t82 + (-pkin(2) - t158) * t104;
t21 = t59 * pkin(3) - t61 * qJ(4) + t48;
t115 = -pkin(2) * t110 - pkin(9) * t107 - pkin(1);
t129 = pkin(8) * t137;
t49 = t129 + (pkin(9) + t159) * t104;
t147 = t109 * t49;
t22 = t147 + (-t110 * qJ(4) + t106 * t115) * t102;
t10 = t101 * t21 + t103 * t22;
t7 = t59 * qJ(5) + t10;
t152 = t7 * t103;
t135 = t103 * t109;
t72 = -t109 * pkin(3) - t106 * qJ(4) - pkin(2);
t47 = pkin(9) * t135 + t101 * t72;
t151 = t173 * qJ(4) ^ 2;
t150 = qJ(4) * t38;
t149 = t10 * t103;
t148 = t103 * t59;
t97 = t102 ^ 2;
t146 = t110 * t97;
t113 = t115 * t102;
t25 = -t106 * t49 + t109 * t113;
t23 = pkin(3) * t137 - t25;
t145 = t23 * t101;
t144 = t23 * t103;
t52 = t59 * t109;
t142 = t61 * t106;
t141 = qJ(4) * t109;
t92 = t101 * qJ(4);
t140 = t101 * t103;
t85 = t101 * t106;
t139 = t101 * t109;
t136 = t103 * qJ(4);
t89 = t103 * t106;
t134 = t104 * t107;
t132 = t106 * t109;
t130 = 0.2e1 * t137;
t128 = t59 * t92;
t127 = t59 * t136;
t99 = t106 ^ 2;
t126 = t99 * t140;
t125 = t36 * t85;
t124 = t101 * t132;
t123 = t106 * t137;
t122 = t109 * t137;
t9 = -t101 * t22 + t103 * t21;
t81 = pkin(9) * t139;
t46 = t103 * t72 - t81;
t43 = -t109 * qJ(5) + t47;
t119 = t101 * t36 - t38 * t103;
t95 = t109 * pkin(4);
t44 = -t46 + t95;
t118 = t44 * t101 + t43 * t103;
t117 = -t46 * t101 + t47 * t103;
t26 = t106 * t113 + t147;
t116 = -t25 * t106 + t26 * t109;
t67 = t105 * t101 + t108 * t103;
t114 = -t109 * t36 + t59 * t85;
t11 = t36 * pkin(4) - t38 * qJ(5) + t23;
t112 = pkin(9) ^ 2;
t100 = t109 ^ 2;
t94 = t99 * t112;
t88 = t98 * t99;
t87 = t97 * t110 ^ 2;
t84 = t96 * t99;
t80 = qJ(5) * t89;
t79 = qJ(4) * t139;
t77 = t101 * t89;
t75 = t132 * t163;
t74 = (-pkin(10) + qJ(4)) * t103;
t73 = -t101 * pkin(10) + t92;
t71 = -t103 * pkin(4) - t121;
t70 = 0.2e1 * t173 * qJ(4);
t66 = (t96 - t98) * t106;
t64 = pkin(1) * t134 + t129;
t63 = t104 * t158 - t82;
t55 = t67 * t106;
t51 = t101 * t59;
t50 = -t80 + (pkin(4) * t101 + pkin(9)) * t106;
t41 = -t80 - (-t160 * t101 - pkin(9)) * t106;
t40 = t105 * t73 + t108 * t74;
t39 = -t105 * t74 + t108 * t73;
t35 = t38 ^ 2;
t30 = pkin(10) * t85 + t43;
t29 = t36 * t136;
t28 = t38 * t89;
t27 = t109 * pkin(5) + t81 + t95 + (-pkin(10) * t106 - t72) * t103;
t24 = t38 * t167;
t20 = -t38 * t109 + t59 * t89;
t14 = t38 * t105 - t36 * t108;
t13 = t105 * t27 + t108 * t30;
t12 = -t105 * t30 + t108 * t27;
t8 = -t59 * pkin(4) - t9;
t5 = t36 * pkin(5) + t11;
t4 = t36 * pkin(10) + t7;
t3 = -t38 * pkin(10) - t160 * t59 - t9;
t2 = t105 * t3 + t108 * t4;
t1 = -t105 * t4 + t108 * t3;
t6 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t97 * t107 ^ 2, 0.2e1 * t107 * t146, t134 * t164, t87, t104 * t130, t104 ^ 2, 0.2e1 * pkin(1) * t146 + 0.2e1 * t63 * t104, -0.2e1 * t64 * t104 - 0.2e1 * t97 * t159 (-t107 * t63 + t110 * t64) * t164, t97 * pkin(1) ^ 2 + t63 ^ 2 + t64 ^ 2, t61 ^ 2, t59 * t166, t137 * t166, t170, t59 * t130, t87, -0.2e1 * t25 * t137 + 0.2e1 * t48 * t59, 0.2e1 * t26 * t137 + 0.2e1 * t48 * t61, -0.2e1 * t25 * t61 - 0.2e1 * t26 * t59, t25 ^ 2 + t26 ^ 2 + t48 ^ 2, t35, -0.2e1 * t154, t24, t171, -0.2e1 * t153, t170, 0.2e1 * t23 * t36 + 0.2e1 * t9 * t59, -0.2e1 * t10 * t59 + 0.2e1 * t23 * t38, -0.2e1 * t10 * t36 - 0.2e1 * t9 * t38, t10 ^ 2 + t23 ^ 2 + t9 ^ 2, t35, t24, 0.2e1 * t154, t170, 0.2e1 * t153, t171, 0.2e1 * t11 * t36 - 0.2e1 * t8 * t59, -0.2e1 * t7 * t36 + 0.2e1 * t8 * t38, -0.2e1 * t11 * t38 + 0.2e1 * t7 * t59, t11 ^ 2 + t7 ^ 2 + t8 ^ 2, t16 ^ 2, t14 * t169, t59 * t169, t14 ^ 2, t14 * t167, t170, -0.2e1 * t1 * t59 - 0.2e1 * t5 * t14, -0.2e1 * t5 * t16 + 0.2e1 * t2 * t59, -0.2e1 * t1 * t16 - 0.2e1 * t2 * t14, t1 ^ 2 + t2 ^ 2 + t5 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t138, 0, t137, t104, t63, -t64, 0, 0, t142, -t106 * t59 + t61 * t109, -t123, -t52, -t122, 0, -pkin(2) * t59 + pkin(9) * t123 - t48 * t109, -pkin(2) * t61 + pkin(9) * t122 + t48 * t106 (t142 - t52) * pkin(9) + t116, -t48 * pkin(2) + t116 * pkin(9), t28, -t172, t20, t125, -t114, -t52, -t9 * t109 + t46 * t59 + (pkin(9) * t36 + t145) * t106, t10 * t109 - t47 * t59 + (pkin(9) * t38 + t144) * t106, -t47 * t36 - t46 * t38 + (-t10 * t101 - t103 * t9) * t106, t10 * t47 + t23 * t155 + t9 * t46, t28, t20, t172, -t52, t114, t125, t8 * t109 + t11 * t85 + t50 * t36 - t44 * t59, -t43 * t36 + t44 * t38 + (-t101 * t7 + t103 * t8) * t106, -t7 * t109 - t11 * t89 - t50 * t38 + t43 * t59, t11 * t50 + t7 * t43 + t8 * t44, t16 * t55, -t55 * t14 + t16 * t53, t16 * t109 - t55 * t59, -t14 * t53, -t14 * t109 - t53 * t59, -t52, t1 * t109 - t12 * t59 - t41 * t14 + t5 * t53, -t2 * t109 + t13 * t59 - t41 * t16 - t5 * t55, -t1 * t55 - t12 * t16 - t13 * t14 + t2 * t53, t1 * t12 + t2 * t13 + t5 * t41; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t99, 0.2e1 * t132, 0, t100, 0, 0, pkin(2) * t161, -0.2e1 * pkin(2) * t106, 0.2e1 * (t100 + t99) * pkin(9), pkin(2) ^ 2 + t100 * t112 + t94, t88, -0.2e1 * t126, t75, t84, 0.2e1 * t124, t100, 0.2e1 * t99 * pkin(9) * t101 - 0.2e1 * t46 * t109, 0.2e1 * t47 * t109 + 0.2e1 * t99 * t156 (-t101 * t47 - t103 * t46) * t162, t46 ^ 2 + t47 ^ 2 + t94, t88, t75, 0.2e1 * t126, t100, -0.2e1 * t124, t84, 0.2e1 * t44 * t109 + 0.2e1 * t50 * t85 (-t101 * t43 + t103 * t44) * t162, -0.2e1 * t43 * t109 - 0.2e1 * t50 * t89, t43 ^ 2 + t44 ^ 2 + t50 ^ 2, t55 ^ 2, t55 * t168, t55 * t161, t53 ^ 2, t109 * t168, t100, 0.2e1 * t12 * t109 + 0.2e1 * t41 * t53, -0.2e1 * t13 * t109 - 0.2e1 * t41 * t55, -0.2e1 * t12 * t55 + 0.2e1 * t13 * t53, t12 ^ 2 + t13 ^ 2 + t41 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t61, 0, -t59, -t137, t25, -t26, 0, 0, t31, -t119, t51, -t143, t148, 0, -pkin(3) * t36 - t128 - t144, -pkin(3) * t38 - t127 + t145, t149 - t29 + (-t9 + t150) * t101, -t23 * pkin(3) + (-t9 * t101 + t149) * qJ(4), t31, t51, t119, 0, -t148, -t143, -t11 * t103 + t71 * t36 - t128, t152 - t29 + (t8 + t150) * t101, -t11 * t101 - t71 * t38 + t127, t11 * t71 + (t8 * t101 + t152) * qJ(4), t16 * t69, -t69 * t14 - t16 * t67, -t69 * t59, t14 * t67, t67 * t59, 0, t62 * t14 - t39 * t59 - t5 * t67, t62 * t16 + t40 * t59 - t5 * t69, -t1 * t69 - t40 * t14 - t39 * t16 - t2 * t67, t1 * t39 + t2 * t40 - t5 * t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t106, 0, t109, 0, -t155, -t109 * pkin(9), 0, 0, t77, -t66, -t139, -t77, -t135, 0, t79 + (-t156 - t157) * t106, pkin(9) * t85 + (-pkin(3) * t106 + t141) * t103, t117, -pkin(3) * t155 + t117 * qJ(4), t77, -t139, t66, 0, t135, -t77, -t50 * t103 + t71 * t85 + t79, t118, -t50 * t101 + (-t106 * t71 - t141) * t103, qJ(4) * t118 + t50 * t71, t55 * t69, t69 * t53 - t55 * t67, t69 * t109, -t53 * t67, -t67 * t109, 0, t39 * t109 - t41 * t67 - t62 * t53, -t40 * t109 - t41 * t69 + t62 * t55, -t12 * t69 - t13 * t67 - t39 * t55 + t40 * t53, t12 * t39 + t13 * t40 - t41 * t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t96, 0.2e1 * t140, 0, t98, 0, 0, 0.2e1 * pkin(3) * t103, -0.2e1 * t157, t70, pkin(3) ^ 2 + t151, t96, 0, -0.2e1 * t140, 0, 0, t98, t71 * t163, t70, -0.2e1 * t71 * t101, t71 ^ 2 + t151, t69 ^ 2, -0.2e1 * t69 * t67, 0, t67 ^ 2, 0, 0, t67 * t165, t69 * t165, -0.2e1 * t39 * t69 - 0.2e1 * t40 * t67, t39 ^ 2 + t40 ^ 2 + t62 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t36, t38, 0, t23, 0, 0, 0, 0, 0, 0, t36, 0, -t38, t11, 0, 0, 0, 0, 0, 0, -t14, -t16, 0, t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t85, t89, 0, t155, 0, 0, 0, 0, 0, 0, t85, 0, -t89, t50, 0, 0, 0, 0, 0, 0, t53, -t55, 0, t41; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t103, t101, 0, -pkin(3), 0, 0, 0, 0, 0, 0, -t103, 0, -t101, t71, 0, 0, 0, 0, 0, 0, -t67, -t69, 0, -t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t59, t38, 0, t8, 0, 0, 0, 0, 0, 0, -t108 * t59, t105 * t59, -t105 * t14 - t108 * t16, t1 * t108 + t2 * t105; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t109, t89, 0, t44, 0, 0, 0, 0, 0, 0, t108 * t109, -t105 * t109, t105 * t53 - t108 * t55, t13 * t105 + t12 * t108; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t101, 0, t92, 0, 0, 0, 0, 0, 0, 0, 0, -t105 * t67 - t108 * t69, t40 * t105 + t39 * t108; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t105 ^ 2 + t108 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t16, 0, -t14, -t59, t1, -t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t55, 0, t53, t109, t12, -t13, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t69, 0, -t67, 0, t39, -t40, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t108, -t105, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t6;
