% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRRRRP10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d5]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 02:31
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRRRRP10_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP10_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRRRP10_inertiaJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-08 06:32:28
% EndTime: 2019-05-08 06:32:44
% DurationCPUTime: 3.81s
% Computational Cost: add. (4005->301), mult. (9170->544), div. (0->0), fcn. (10374->10), ass. (0->157)
t104 = sin(qJ(5));
t108 = cos(qJ(5));
t105 = sin(qJ(4));
t109 = cos(qJ(4));
t102 = sin(pkin(6));
t111 = cos(qJ(2));
t145 = t102 * t111;
t103 = cos(pkin(6));
t106 = sin(qJ(3));
t110 = cos(qJ(3));
t107 = sin(qJ(2));
t146 = t102 * t107;
t69 = t103 * t106 + t110 * t146;
t44 = t105 * t69 + t109 * t145;
t46 = -t105 * t145 + t109 * t69;
t24 = t104 * t46 + t108 * t44;
t188 = t24 ^ 2;
t76 = t104 * t109 + t105 * t108;
t61 = t76 * t106;
t187 = t61 ^ 2;
t67 = -t103 * t110 + t106 * t146;
t66 = t67 ^ 2;
t74 = t104 * t105 - t108 * t109;
t186 = t74 ^ 2;
t185 = -0.2e1 * t44;
t184 = 0.2e1 * t67;
t183 = -0.2e1 * t69;
t93 = -pkin(4) * t109 - pkin(3);
t182 = 0.2e1 * t93;
t181 = 0.2e1 * t102;
t180 = -0.2e1 * t106;
t179 = 0.2e1 * t110;
t178 = -pkin(11) - pkin(10);
t176 = pkin(1) * t111;
t84 = pkin(8) * t146;
t56 = t84 + (-pkin(2) - t176) * t103;
t28 = t67 * pkin(3) - t69 * pkin(10) + t56;
t133 = pkin(8) * t145;
t177 = pkin(1) * t107;
t57 = t133 + (pkin(9) + t177) * t103;
t58 = (-pkin(2) * t111 - pkin(9) * t107 - pkin(1)) * t102;
t33 = t106 * t58 + t110 * t57;
t30 = -pkin(10) * t145 + t33;
t12 = t105 * t28 + t109 * t30;
t10 = -pkin(11) * t44 + t12;
t11 = -t105 * t30 + t109 * t28;
t8 = pkin(4) * t67 - pkin(11) * t46 + t11;
t4 = t10 * t108 + t104 * t8;
t65 = t67 * pkin(5);
t175 = pkin(3) * t109;
t174 = pkin(9) * t105;
t94 = t104 * pkin(4);
t96 = t106 * pkin(9);
t173 = t108 * pkin(4);
t172 = t110 * pkin(5);
t171 = t24 * t61;
t170 = t24 * t74;
t26 = -t104 * t44 + t108 * t46;
t169 = t26 * t24;
t132 = t178 * t105;
t80 = t178 * t109;
t49 = -t104 * t80 - t108 * t132;
t168 = t49 * t67;
t51 = t104 * t132 - t108 * t80;
t167 = t51 * t67;
t166 = t61 * t74;
t140 = t109 * t106;
t143 = t105 * t106;
t63 = -t104 * t143 + t108 * t140;
t165 = t63 * t61;
t164 = t67 * t24;
t163 = t67 * t74;
t162 = t76 * t74;
t79 = -pkin(3) * t110 - pkin(10) * t106 - pkin(2);
t72 = t109 * t79;
t40 = -pkin(11) * t140 + t72 + (-pkin(4) - t174) * t110;
t139 = t109 * t110;
t134 = pkin(9) * t139;
t47 = t134 + (-pkin(11) * t106 + t79) * t105;
t22 = t104 * t40 + t108 * t47;
t78 = pkin(4) * t143 + t96;
t161 = t105 * t67;
t160 = t109 * t67;
t159 = t110 * t61;
t158 = t110 * t74;
t97 = t102 ^ 2;
t157 = t111 * t97;
t32 = -t106 * t57 + t110 * t58;
t29 = pkin(3) * t145 - t32;
t156 = t29 * t105;
t155 = t29 * t109;
t154 = t44 * t109;
t153 = t46 * t105;
t152 = t49 * t110;
t151 = t51 * t110;
t150 = t67 * t110;
t149 = t69 * t106;
t148 = t76 * t110;
t100 = t109 ^ 2;
t98 = t105 ^ 2;
t147 = t100 + t98;
t144 = t103 * t107;
t142 = t105 * t109;
t141 = t105 * t110;
t138 = t110 * qJ(6);
t64 = t67 * qJ(6);
t1 = t64 + t4;
t137 = t49 ^ 2 + t51 ^ 2;
t136 = 0.2e1 * t145;
t135 = t106 * t179;
t131 = t106 * t145;
t130 = t110 * t145;
t129 = t105 * t140;
t128 = t10 * t104 - t108 * t8;
t127 = -t24 * t51 + t26 * t49;
t126 = t49 * t63 - t51 * t61;
t125 = t104 * t47 - t108 * t40;
t2 = t128 - t65;
t124 = t24 * t63 + t26 * t61;
t123 = t24 * t76 + t26 * t74;
t122 = -t61 * t76 - t63 * t74;
t121 = t110 * t24 - t61 * t67;
t120 = -t11 * t105 + t12 * t109;
t54 = -pkin(9) * t141 + t72;
t55 = t105 * t79 + t134;
t119 = -t105 * t54 + t109 * t55;
t118 = -t32 * t106 + t33 * t110;
t117 = 0.2e1 * t49 * t76 - 0.2e1 * t51 * t74;
t15 = pkin(4) * t44 + t29;
t115 = pkin(9) ^ 2;
t113 = 0.2e1 * pkin(5);
t112 = 0.2e1 * qJ(6);
t101 = t110 ^ 2;
t99 = t106 ^ 2;
t95 = t99 * t115;
t91 = pkin(5) + t173;
t89 = t94 + qJ(6);
t87 = t97 * t111 ^ 2;
t73 = t76 ^ 2;
t71 = pkin(1) * t144 + t133;
t70 = t103 * t176 - t84;
t60 = t63 ^ 2;
t53 = -0.2e1 * t63 * t110;
t43 = t76 * t67;
t41 = t63 * t76;
t38 = pkin(5) * t74 - qJ(6) * t76 + t93;
t31 = pkin(5) * t61 - qJ(6) * t63 + t78;
t23 = t26 ^ 2;
t20 = t125 + t172;
t19 = -t138 + t22;
t18 = t26 * t76;
t17 = t26 * t184;
t16 = t26 * t63;
t13 = -t110 * t26 + t63 * t67;
t5 = pkin(5) * t24 - qJ(6) * t26 + t15;
t3 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t97 * t107 ^ 2, 0.2e1 * t107 * t157, t144 * t181, t87, t103 * t136, t103 ^ 2, 0.2e1 * pkin(1) * t157 + 0.2e1 * t103 * t70, -0.2e1 * t103 * t71 - 0.2e1 * t177 * t97 (-t107 * t70 + t111 * t71) * t181, pkin(1) ^ 2 * t97 + t70 ^ 2 + t71 ^ 2, t69 ^ 2, t67 * t183, t145 * t183, t66, t67 * t136, t87, -0.2e1 * t145 * t32 + 0.2e1 * t56 * t67, 0.2e1 * t145 * t33 + 0.2e1 * t56 * t69, -0.2e1 * t32 * t69 - 0.2e1 * t33 * t67, t32 ^ 2 + t33 ^ 2 + t56 ^ 2, t46 ^ 2, t46 * t185, t46 * t184, t44 ^ 2, t67 * t185, t66, 0.2e1 * t11 * t67 + 0.2e1 * t29 * t44, -0.2e1 * t12 * t67 + 0.2e1 * t29 * t46, -0.2e1 * t11 * t46 - 0.2e1 * t12 * t44, t11 ^ 2 + t12 ^ 2 + t29 ^ 2, t23, -0.2e1 * t169, t17, t188, -0.2e1 * t164, t66, -0.2e1 * t128 * t67 + 0.2e1 * t15 * t24, 0.2e1 * t15 * t26 - 0.2e1 * t4 * t67, 0.2e1 * t128 * t26 - 0.2e1 * t24 * t4, t128 ^ 2 + t15 ^ 2 + t4 ^ 2, t23, t17, 0.2e1 * t169, t66, 0.2e1 * t164, t188, -0.2e1 * t2 * t67 + 0.2e1 * t24 * t5, -0.2e1 * t1 * t24 + 0.2e1 * t2 * t26, 0.2e1 * t1 * t67 - 0.2e1 * t26 * t5, t1 ^ 2 + t2 ^ 2 + t5 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t146, 0, t145, t103, t70, -t71, 0, 0, t149, -t106 * t67 + t110 * t69, -t131, -t150, -t130, 0, -pkin(2) * t67 + pkin(9) * t131 - t110 * t56, -pkin(2) * t69 + pkin(9) * t130 + t106 * t56 (t149 - t150) * pkin(9) + t118, -t56 * pkin(2) + pkin(9) * t118, t46 * t140 (-t153 - t154) * t106, -t110 * t46 + t140 * t67, t44 * t143, t110 * t44 - t143 * t67, -t150, -t11 * t110 + t54 * t67 + (pkin(9) * t44 + t156) * t106, t12 * t110 - t55 * t67 + (pkin(9) * t46 + t155) * t106, -t55 * t44 - t54 * t46 + (-t105 * t12 - t109 * t11) * t106, t11 * t54 + t12 * t55 + t29 * t96, t16, -t124, t13, t171, t121, -t150, t110 * t128 - t125 * t67 + t15 * t61 + t24 * t78, t110 * t4 + t15 * t63 - t22 * t67 + t26 * t78, t125 * t26 + t128 * t63 - t22 * t24 - t4 * t61, t125 * t128 + t15 * t78 + t22 * t4, t16, t13, t124, -t150, -t121, t171, t110 * t2 - t20 * t67 + t24 * t31 + t5 * t61, -t1 * t61 - t19 * t24 + t2 * t63 + t20 * t26, -t1 * t110 + t19 * t67 - t26 * t31 - t5 * t63, t1 * t19 + t2 * t20 + t31 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t99, t135, 0, t101, 0, 0, pkin(2) * t179, pkin(2) * t180, 0.2e1 * (t101 + t99) * pkin(9), pkin(2) ^ 2 + t101 * t115 + t95, t100 * t99, -0.2e1 * t99 * t142, t139 * t180, t98 * t99, t105 * t135, t101, -0.2e1 * t110 * t54 + 0.2e1 * t174 * t99, 0.2e1 * pkin(9) * t109 * t99 + 0.2e1 * t110 * t55, 0.2e1 * (-t105 * t55 - t109 * t54) * t106, t54 ^ 2 + t55 ^ 2 + t95, t60, -0.2e1 * t165, t53, t187, 0.2e1 * t159, t101, 0.2e1 * t110 * t125 + 0.2e1 * t61 * t78, 0.2e1 * t110 * t22 + 0.2e1 * t63 * t78, 0.2e1 * t125 * t63 - 0.2e1 * t22 * t61, t125 ^ 2 + t22 ^ 2 + t78 ^ 2, t60, t53, 0.2e1 * t165, t101, -0.2e1 * t159, t187, 0.2e1 * t110 * t20 + 0.2e1 * t31 * t61, -0.2e1 * t19 * t61 + 0.2e1 * t20 * t63, -0.2e1 * t110 * t19 - 0.2e1 * t31 * t63, t19 ^ 2 + t20 ^ 2 + t31 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t69, 0, -t67, -t145, t32, -t33, 0, 0, t153, -t105 * t44 + t109 * t46, t161, -t154, t160, 0, -pkin(3) * t44 - pkin(10) * t161 - t155, -pkin(3) * t46 - pkin(10) * t160 + t156 (t153 - t154) * pkin(10) + t120, -t29 * pkin(3) + pkin(10) * t120, t18, -t123, t43, t170, -t163, 0, t15 * t74 + t24 * t93 - t168, t15 * t76 + t26 * t93 - t167, t128 * t76 - t4 * t74 + t127, t128 * t49 + t15 * t93 + t4 * t51, t18, t43, t123, 0, t163, t170, t24 * t38 + t5 * t74 - t168, -t1 * t74 + t2 * t76 + t127, -t26 * t38 - t5 * t76 + t167, t1 * t51 + t2 * t49 + t38 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t106, 0, t110, 0, -t96, -t110 * pkin(9), 0, 0, t129 (t100 - t98) * t106, -t141, -t129, -t139, 0, -pkin(9) * t140 + (-pkin(3) * t106 + pkin(10) * t110) * t105, pkin(10) * t139 + (t174 - t175) * t106, t119, -pkin(3) * t96 + pkin(10) * t119, t41, t122, -t148, t166, t158, 0, t61 * t93 + t74 * t78 + t152, t63 * t93 + t76 * t78 + t151, t125 * t76 - t22 * t74 + t126, t125 * t49 + t22 * t51 + t78 * t93, t41, -t148, -t122, 0, -t158, t166, t31 * t74 + t38 * t61 + t152, -t19 * t74 + t20 * t76 + t126, -t31 * t76 - t38 * t63 - t151, t19 * t51 + t20 * t49 + t31 * t38; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t98, 0.2e1 * t142, 0, t100, 0, 0, 0.2e1 * t175, -0.2e1 * pkin(3) * t105, 0.2e1 * t147 * pkin(10), pkin(10) ^ 2 * t147 + pkin(3) ^ 2, t73, -0.2e1 * t162, 0, t186, 0, 0, t74 * t182, t76 * t182, t117, t93 ^ 2 + t137, t73, 0, 0.2e1 * t162, 0, 0, t186, 0.2e1 * t38 * t74, t117, -0.2e1 * t38 * t76, t38 ^ 2 + t137; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t46, 0, -t44, t67, t11, -t12, 0, 0, 0, 0, t26, 0, -t24, t67, t173 * t67 - t128, -t67 * t94 - t4 (-t104 * t24 - t108 * t26) * pkin(4) (t104 * t4 - t108 * t128) * pkin(4), 0, t26, 0, t67, t24, 0, t67 * t91 - t2, -t24 * t89 - t26 * t91, t67 * t89 + t1, t1 * t89 - t2 * t91; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t140, 0, -t143, -t110, t54, -t55, 0, 0, 0, 0, t63, 0, -t61, -t110, -t110 * t173 - t125, t110 * t94 - t22 (-t104 * t61 - t108 * t63) * pkin(4) (t104 * t22 - t108 * t125) * pkin(4), 0, t63, 0, -t110, t61, 0 (-pkin(5) - t91) * t110 - t125, -t61 * t89 - t63 * t91 (-qJ(6) - t89) * t110 + t22, t19 * t89 - t20 * t91; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t105, 0, t109, 0, -t105 * pkin(10), -t109 * pkin(10), 0, 0, 0, 0, t76, 0, -t74, 0, -t49, -t51 (-t104 * t74 - t108 * t76) * pkin(4) (t104 * t51 - t108 * t49) * pkin(4), 0, t76, 0, 0, t74, 0, -t49, -t74 * t89 - t76 * t91, t51, -t49 * t91 + t51 * t89; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t173, -0.2e1 * t94, 0 (t104 ^ 2 + t108 ^ 2) * pkin(4) ^ 2, 0, 0, 0, 1, 0, 0, 0.2e1 * t91, 0, 0.2e1 * t89, t89 ^ 2 + t91 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t26, 0, -t24, t67, -t128, -t4, 0, 0, 0, t26, 0, t67, t24, 0, -t2 + t65, -pkin(5) * t26 - qJ(6) * t24, 0.2e1 * t64 + t4, -pkin(5) * t2 + qJ(6) * t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t63, 0, -t61, -t110, -t125, -t22, 0, 0, 0, t63, 0, -t110, t61, 0, -t125 - 0.2e1 * t172, -pkin(5) * t63 - qJ(6) * t61, -0.2e1 * t138 + t22, -pkin(5) * t20 + qJ(6) * t19; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t76, 0, -t74, 0, -t49, -t51, 0, 0, 0, t76, 0, 0, t74, 0, -t49, -pkin(5) * t76 - qJ(6) * t74, t51, -pkin(5) * t49 + qJ(6) * t51; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t173, -t94, 0, 0, 0, 0, 0, 1, 0, 0, t113 + t173, 0, t112 + t94, pkin(5) * t91 + qJ(6) * t89; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, t113, 0, t112, pkin(5) ^ 2 + qJ(6) ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t67, t26, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t110, t63, 0, t20; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t76, 0, t49; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, -t91; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, -pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1;];
MM_reg  = t3;
