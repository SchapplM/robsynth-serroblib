% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRRRRR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d5,d6]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 03:38
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRRRRR2_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR2_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRRRR2_inertiaJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-08 08:27:57
% EndTime: 2019-05-08 08:28:11
% DurationCPUTime: 3.03s
% Computational Cost: add. (3855->210), mult. (7210->366), div. (0->0), fcn. (8688->10), ass. (0->132)
t111 = sin(qJ(5));
t106 = t111 ^ 2;
t116 = cos(qJ(5));
t108 = t116 ^ 2;
t135 = t106 + t108;
t112 = sin(qJ(4));
t117 = cos(qJ(4));
t113 = sin(qJ(3));
t156 = t113 * pkin(2);
t132 = t117 * t156;
t118 = cos(qJ(3));
t104 = t118 * pkin(2);
t97 = t104 + pkin(3);
t73 = t112 * t97 + t132;
t71 = pkin(10) + t73;
t149 = t135 * t71;
t157 = t112 * pkin(3);
t95 = pkin(10) + t157;
t169 = t135 * t95;
t110 = sin(qJ(6));
t115 = cos(qJ(6));
t168 = -t110 * t111 + t115 * t116;
t114 = sin(qJ(2));
t162 = -pkin(8) - pkin(7);
t130 = t162 * t114;
t119 = cos(qJ(2));
t131 = t162 * t119;
t57 = t113 * t131 + t118 * t130;
t83 = t113 * t119 + t118 * t114;
t125 = -t83 * pkin(9) + t57;
t59 = t113 * t130 - t118 * t131;
t81 = -t113 * t114 + t118 * t119;
t36 = t81 * pkin(9) + t59;
t20 = t112 * t36 - t117 * t125;
t167 = t20 ^ 2;
t50 = t112 * t83 - t117 * t81;
t48 = t50 ^ 2;
t166 = 0.2e1 * t50;
t99 = -t119 * pkin(2) - pkin(1);
t66 = -t81 * pkin(3) + t99;
t165 = 0.2e1 * t66;
t164 = 0.2e1 * t83;
t163 = 0.2e1 * t119;
t52 = t112 * t81 + t117 * t83;
t19 = t50 * pkin(4) - t52 * pkin(10) + t66;
t22 = t112 * t125 + t117 * t36;
t10 = -t111 * t22 + t116 * t19;
t145 = t116 * t52;
t160 = t50 * pkin(5);
t7 = -pkin(11) * t145 + t10 + t160;
t146 = t116 * t22;
t8 = t146 + (-pkin(11) * t52 + t19) * t111;
t3 = -t110 * t8 + t115 * t7;
t154 = t115 * t8;
t4 = t110 * t7 + t154;
t82 = t110 * t116 + t115 * t111;
t161 = t168 * t4 - t3 * t82;
t159 = pkin(4) * t111;
t158 = t110 * pkin(5);
t155 = t115 * pkin(5);
t153 = t116 * pkin(10);
t54 = (-pkin(11) - t71) * t111;
t102 = t116 * pkin(11);
t144 = t116 * t71;
t55 = t102 + t144;
t29 = -t110 * t55 + t115 * t54;
t30 = t110 * t54 + t115 * t55;
t152 = t168 * t30 - t29 * t82;
t75 = (-pkin(11) - t95) * t111;
t143 = t116 * t95;
t76 = t102 + t143;
t43 = -t110 * t76 + t115 * t75;
t44 = t110 * t75 + t115 * t76;
t151 = t168 * t44 - t43 * t82;
t85 = (-pkin(11) - pkin(10)) * t111;
t86 = t102 + t153;
t56 = -t110 * t86 + t115 * t85;
t58 = t110 * t85 + t115 * t86;
t150 = t168 * t58 - t56 * t82;
t72 = -t112 * t156 + t117 * t97;
t147 = t111 * t52;
t18 = t20 * t111;
t142 = t20 * t116;
t70 = -pkin(4) - t72;
t141 = t70 * t116;
t103 = t117 * pkin(3);
t96 = -t103 - pkin(4);
t140 = t96 * t116;
t138 = t111 * t116;
t136 = t135 * pkin(10);
t107 = t114 ^ 2;
t109 = t119 ^ 2;
t134 = t107 + t109;
t133 = -0.2e1 * t52 * t50;
t98 = -t116 * pkin(5) - pkin(4);
t128 = -pkin(4) * t52 - pkin(10) * t50;
t127 = -t50 * t71 + t52 * t70;
t126 = -t50 * t95 + t52 * t96;
t11 = t111 * t19 + t146;
t5 = -t10 * t111 + t11 * t116;
t105 = pkin(4) * t116;
t92 = 0.2e1 * t138;
t90 = t96 * t111;
t84 = -t103 + t98;
t78 = t82 ^ 2;
t77 = t168 ^ 2;
t68 = t98 * t82;
t67 = t98 * t168;
t65 = t70 * t111;
t62 = t98 - t72;
t61 = t84 * t82;
t60 = t84 * t168;
t53 = 0.2e1 * t82 * t168;
t49 = t52 ^ 2;
t47 = (t110 * t168 - t115 * t82) * pkin(5);
t46 = t62 * t82;
t45 = t62 * t168;
t42 = t116 * t50;
t41 = t111 * t50;
t40 = t52 * t138;
t34 = t82 * t50;
t33 = t168 * t50;
t26 = (-t106 + t108) * t52;
t25 = t168 * t52;
t23 = t82 * t52;
t17 = t25 * t82;
t16 = t23 * t168;
t14 = pkin(5) * t147 + t20;
t13 = t14 * t82;
t12 = t14 * t168;
t9 = t168 * t25 - t82 * t23;
t1 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t107, t114 * t163, 0, t109, 0, 0, pkin(1) * t163, -0.2e1 * pkin(1) * t114, 0.2e1 * t134 * pkin(7), t134 * pkin(7) ^ 2 + pkin(1) ^ 2, t83 ^ 2, t81 * t164, 0, t81 ^ 2, 0, 0, -0.2e1 * t99 * t81, t99 * t164, -0.2e1 * t57 * t83 + 0.2e1 * t59 * t81, t57 ^ 2 + t59 ^ 2 + t99 ^ 2, t49, t133, 0, t48, 0, 0, t50 * t165, t52 * t165, 0.2e1 * t20 * t52 - 0.2e1 * t22 * t50, t22 ^ 2 + t66 ^ 2 + t167, t108 * t49, -0.2e1 * t49 * t138, t145 * t166, t106 * t49, t111 * t133, t48, 0.2e1 * t10 * t50 + 0.2e1 * t18 * t52, -0.2e1 * t11 * t50 + 0.2e1 * t142 * t52, 0.2e1 * (-t10 * t116 - t11 * t111) * t52, t10 ^ 2 + t11 ^ 2 + t167, t25 ^ 2, -0.2e1 * t25 * t23, t25 * t166, t23 ^ 2, -t23 * t166, t48, 0.2e1 * t14 * t23 + 0.2e1 * t3 * t50, 0.2e1 * t14 * t25 - 0.2e1 * t4 * t50, -0.2e1 * t4 * t23 - 0.2e1 * t3 * t25, t14 ^ 2 + t3 ^ 2 + t4 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t114, 0, t119, 0, -t114 * pkin(7), -t119 * pkin(7), 0, 0, 0, 0, t83, 0, t81, 0, t57, -t59 (t113 * t81 - t118 * t83) * pkin(2) (t113 * t59 + t118 * t57) * pkin(2), 0, 0, t52, 0, -t50, 0, -t20, -t22, -t73 * t50 - t72 * t52, -t20 * t72 + t22 * t73, t40, t26, t41, -t40, t42, 0, t111 * t127 - t142, t127 * t116 + t18, t5, t20 * t70 + t5 * t71, t17, t9, t34, -t16, t33, 0, t62 * t23 + t29 * t50 - t12, t62 * t25 - t30 * t50 + t13, -t30 * t23 - t29 * t25 + t161, t14 * t62 + t3 * t29 + t4 * t30; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t104, -0.2e1 * t156, 0 (t113 ^ 2 + t118 ^ 2) * pkin(2) ^ 2, 0, 0, 0, 0, 0, 1, 0.2e1 * t72, -0.2e1 * t73, 0, t72 ^ 2 + t73 ^ 2, t106, t92, 0, t108, 0, 0, -0.2e1 * t141, 0.2e1 * t65, 0.2e1 * t149, t135 * t71 ^ 2 + t70 ^ 2, t78, t53, 0, t77, 0, 0, -0.2e1 * t45, 0.2e1 * t46, 0.2e1 * t152, t29 ^ 2 + t30 ^ 2 + t62 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83, 0, t81, 0, t57, -t59, 0, 0, 0, 0, t52, 0, -t50, 0, -t20, -t22 (-t112 * t50 - t117 * t52) * pkin(3) (t112 * t22 - t117 * t20) * pkin(3), t40, t26, t41, -t40, t42, 0, t111 * t126 - t142, t126 * t116 + t18, t5, t20 * t96 + t5 * t95, t17, t9, t34, -t16, t33, 0, t84 * t23 + t43 * t50 - t12, t84 * t25 - t44 * t50 + t13, -t44 * t23 - t43 * t25 + t161, t14 * t84 + t3 * t43 + t4 * t44; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t104, -t156, 0, 0, 0, 0, 0, 0, 0, 1, t103 + t72, -t132 + (-pkin(3) - t97) * t112, 0 (t112 * t73 + t117 * t72) * pkin(3), t106, t92, 0, t108, 0, 0 (-t70 - t96) * t116, t90 + t65, t169 + t149, t169 * t71 + t70 * t96, t78, t53, 0, t77, 0, 0, -t60 - t45, t61 + t46, t151 + t152, t29 * t43 + t30 * t44 + t62 * t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t103, -0.2e1 * t157, 0 (t112 ^ 2 + t117 ^ 2) * pkin(3) ^ 2, t106, t92, 0, t108, 0, 0, -0.2e1 * t140, 0.2e1 * t90, 0.2e1 * t169, t135 * t95 ^ 2 + t96 ^ 2, t78, t53, 0, t77, 0, 0, -0.2e1 * t60, 0.2e1 * t61, 0.2e1 * t151, t43 ^ 2 + t44 ^ 2 + t84 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t52, 0, -t50, 0, -t20, -t22, 0, 0, t40, t26, t41, -t40, t42, 0, t111 * t128 - t142, t128 * t116 + t18, t5, -t20 * pkin(4) + pkin(10) * t5, t17, t9, t34, -t16, t33, 0, t98 * t23 + t56 * t50 - t12, t98 * t25 - t58 * t50 + t13, -t58 * t23 - t56 * t25 + t161, t14 * t98 + t3 * t56 + t4 * t58; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t72, -t73, 0, 0, t106, t92, 0, t108, 0, 0, t105 - t141, t65 - t159, t136 + t149, -t70 * pkin(4) + pkin(10) * t149, t78, t53, 0, t77, 0, 0, -t67 - t45, t68 + t46, t150 + t152, t29 * t56 + t30 * t58 + t62 * t98; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t103, -t157, 0, 0, t106, t92, 0, t108, 0, 0, t105 - t140, t90 - t159, t136 + t169, -t96 * pkin(4) + pkin(10) * t169, t78, t53, 0, t77, 0, 0, -t67 - t60, t68 + t61, t150 + t151, t43 * t56 + t44 * t58 + t84 * t98; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t106, t92, 0, t108, 0, 0, 0.2e1 * t105, -0.2e1 * t159, 0.2e1 * t136, pkin(10) ^ 2 * t135 + pkin(4) ^ 2, t78, t53, 0, t77, 0, 0, -0.2e1 * t67, 0.2e1 * t68, 0.2e1 * t150, t56 ^ 2 + t58 ^ 2 + t98 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t145, 0, -t147, t50, t10, -t11, 0, 0, 0, 0, t25, 0, -t23, t50, t50 * t155 + t3, -t154 + (-t7 - t160) * t110 (-t110 * t23 - t115 * t25) * pkin(5) (t110 * t4 + t115 * t3) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t111, 0, t116, 0, -t111 * t71, -t144, 0, 0, 0, 0, t82, 0, t168, 0, t29, -t30, t47 (t110 * t30 + t115 * t29) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t111, 0, t116, 0, -t111 * t95, -t143, 0, 0, 0, 0, t82, 0, t168, 0, t43, -t44, t47 (t110 * t44 + t115 * t43) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t111, 0, t116, 0, -t111 * pkin(10), -t153, 0, 0, 0, 0, t82, 0, t168, 0, t56, -t58, t47 (t110 * t58 + t115 * t56) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t155, -0.2e1 * t158, 0 (t110 ^ 2 + t115 ^ 2) * pkin(5) ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t25, 0, -t23, t50, t3, -t4, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t82, 0, t168, 0, t29, -t30, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t82, 0, t168, 0, t43, -t44, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t82, 0, t168, 0, t56, -t58, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t155, -t158, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t1;
