% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRPRPR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d6,theta5]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 11:23
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRPRPR12_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR12_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRPR12_inertiaJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 16:18:56
% EndTime: 2019-05-06 16:19:05
% DurationCPUTime: 2.48s
% Computational Cost: add. (2588->193), mult. (5542->379), div. (0->0), fcn. (6223->10), ass. (0->128)
t81 = sin(pkin(11));
t83 = cos(pkin(11));
t86 = sin(qJ(4));
t89 = cos(qJ(4));
t49 = -t81 * t86 + t83 * t89;
t153 = -0.2e1 * t49;
t47 = t81 * t89 + t83 * t86;
t152 = (t47 * t81 + t49 * t83) * pkin(4);
t45 = t47 ^ 2;
t46 = t49 ^ 2;
t151 = t45 + t46;
t150 = -2 * pkin(2);
t82 = sin(pkin(6));
t90 = cos(qJ(2));
t130 = t82 * t90;
t84 = cos(pkin(6));
t40 = -t89 * t130 - t84 * t86;
t41 = -t86 * t130 + t84 * t89;
t23 = -t83 * t40 + t81 * t41;
t149 = t23 ^ 2;
t91 = -pkin(2) - pkin(9);
t119 = -qJ(5) + t91;
t104 = t119 * t89;
t52 = t119 * t86;
t29 = -t83 * t104 + t81 * t52;
t148 = t29 ^ 2;
t147 = -0.2e1 * t23;
t71 = t86 * pkin(4) + qJ(3);
t146 = 0.2e1 * t71;
t145 = 0.2e1 * t82;
t144 = 0.2e1 * qJ(3);
t143 = pkin(1) * t90;
t142 = t81 * pkin(4);
t141 = t83 * pkin(4);
t87 = sin(qJ(2));
t67 = t82 * t87;
t116 = pkin(4) * t67;
t108 = -pkin(2) - t143;
t59 = pkin(8) * t67;
t28 = pkin(3) * t67 + t59 + (-pkin(9) + t108) * t84;
t105 = -qJ(3) * t87 - pkin(1);
t33 = (t91 * t90 + t105) * t82;
t15 = t89 * t28 - t86 * t33;
t10 = -t41 * qJ(5) + t116 + t15;
t16 = t86 * t28 + t89 * t33;
t12 = t40 * qJ(5) + t16;
t6 = t81 * t10 + t83 * t12;
t25 = t81 * t40 + t83 * t41;
t85 = sin(qJ(6));
t88 = cos(qJ(6));
t18 = t85 * t25 - t88 * t67;
t140 = t18 * t88;
t20 = t88 * t25 + t85 * t67;
t139 = t20 * t85;
t138 = t20 * t88;
t137 = t23 * t47;
t136 = t25 * t49;
t135 = t29 * t49;
t134 = t40 * t86;
t133 = t41 * t89;
t70 = -pkin(5) - t141;
t132 = t49 * t70;
t74 = t82 ^ 2;
t131 = t74 * t90;
t129 = t84 * t87;
t128 = t84 * t90;
t127 = t85 * t23;
t126 = t85 * t47;
t125 = t85 * t49;
t69 = pkin(10) + t142;
t124 = t85 * t69;
t123 = t85 * t88;
t39 = t88 * t47;
t122 = t88 * t49;
t121 = t88 * t69;
t43 = pkin(1) * t129 + pkin(8) * t130;
t76 = t85 ^ 2;
t78 = t88 ^ 2;
t120 = t76 + t78;
t77 = t86 ^ 2;
t79 = t89 ^ 2;
t58 = t77 + t79;
t118 = t47 * t153;
t117 = 0.2e1 * t67;
t115 = t47 * t67;
t114 = t82 * t129;
t113 = t86 * t67;
t112 = t91 * t67;
t111 = t82 * t128;
t110 = t85 * t122;
t72 = t84 * qJ(3);
t34 = -t72 - t43;
t107 = -t83 * t10 + t81 * t12;
t106 = t120 * t69;
t32 = pkin(3) * t130 - t34;
t4 = pkin(10) * t67 + t6;
t21 = -t40 * pkin(4) + t32;
t7 = t23 * pkin(5) - t25 * pkin(10) + t21;
t1 = -t85 * t4 + t88 * t7;
t2 = t88 * t4 + t85 * t7;
t103 = t1 * t88 + t2 * t85;
t102 = -t1 * t85 + t2 * t88;
t101 = -t107 * t49 + t6 * t47;
t26 = t47 * pkin(5) - t49 * pkin(10) + t71;
t31 = t81 * t104 + t83 * t52;
t13 = t88 * t26 - t85 * t31;
t14 = t85 * t26 + t88 * t31;
t100 = t13 * t88 + t14 * t85;
t99 = -t13 * t85 + t14 * t88;
t98 = t15 * t89 + t16 * t86;
t97 = t139 - t140;
t96 = -t31 * t47 + t135;
t95 = -t47 * t69 + t132;
t92 = qJ(3) ^ 2;
t75 = t84 ^ 2;
t66 = t74 * t90 ^ 2;
t65 = t74 * t87 ^ 2;
t55 = t89 * t67;
t53 = 0.2e1 * t87 * t131;
t51 = t58 * t91;
t42 = pkin(1) * t128 - t59;
t37 = t49 * t67;
t36 = t108 * t84 + t59;
t35 = (-pkin(2) * t90 + t105) * t82;
t22 = t88 * t23;
t17 = t85 * t18;
t3 = -pkin(5) * t67 + t107;
t5 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t65, t53, 0.2e1 * t114, t66, 0.2e1 * t111, t75, 0.2e1 * pkin(1) * t131 + 0.2e1 * t42 * t84, -0.2e1 * t74 * pkin(1) * t87 - 0.2e1 * t43 * t84 (-t42 * t87 + t43 * t90) * t145, t74 * pkin(1) ^ 2 + t42 ^ 2 + t43 ^ 2, t75, -0.2e1 * t114, -0.2e1 * t111, t65, t53, t66 (-t34 * t90 + t36 * t87) * t145, 0.2e1 * t35 * t130 + 0.2e1 * t36 * t84, -0.2e1 * t34 * t84 - 0.2e1 * t35 * t67, t34 ^ 2 + t35 ^ 2 + t36 ^ 2, t41 ^ 2, 0.2e1 * t41 * t40, t41 * t117, t40 ^ 2, t40 * t117, t65, 0.2e1 * t15 * t67 - 0.2e1 * t32 * t40, -0.2e1 * t16 * t67 + 0.2e1 * t32 * t41, -0.2e1 * t15 * t41 + 0.2e1 * t16 * t40, t15 ^ 2 + t16 ^ 2 + t32 ^ 2, t25 ^ 2, t25 * t147, t25 * t117, t149, t67 * t147, t65, -0.2e1 * t107 * t67 + 0.2e1 * t21 * t23, 0.2e1 * t21 * t25 - 0.2e1 * t6 * t67, 0.2e1 * t107 * t25 - 0.2e1 * t6 * t23, t107 ^ 2 + t21 ^ 2 + t6 ^ 2, t20 ^ 2, -0.2e1 * t20 * t18, 0.2e1 * t20 * t23, t18 ^ 2, t18 * t147, t149, 0.2e1 * t1 * t23 + 0.2e1 * t3 * t18, -0.2e1 * t2 * t23 + 0.2e1 * t3 * t20, -0.2e1 * t1 * t20 - 0.2e1 * t2 * t18, t1 ^ 2 + t2 ^ 2 + t3 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t67, 0, t130, t84, t42, -t43, 0, 0, t84, -t67, -t130, 0, 0, 0 (-pkin(2) * t87 + qJ(3) * t90) * t82, t59 + (t150 - t143) * t84, 0.2e1 * t72 + t43, -t36 * pkin(2) - t34 * qJ(3), t133, t89 * t40 - t41 * t86, t55, -t134, -t113, 0, -qJ(3) * t40 + t89 * t112 + t32 * t86, qJ(3) * t41 - t86 * t112 + t32 * t89 (-t41 * t91 - t15) * t89 + (t40 * t91 - t16) * t86, t32 * qJ(3) + t91 * t98, t136, -t49 * t23 - t25 * t47, t37, t137, -t115, 0, t21 * t47 + t71 * t23 - t29 * t67, t21 * t49 + t71 * t25 - t31 * t67, -t31 * t23 + t29 * t25 - t101, t107 * t29 + t21 * t71 + t6 * t31, t20 * t122 (-t139 - t140) * t49, t23 * t122 + t20 * t47, t18 * t125, -t23 * t125 - t18 * t47, t137, t1 * t47 + t3 * t125 + t13 * t23 + t29 * t18, t3 * t122 - t14 * t23 - t2 * t47 + t29 * t20, -t103 * t49 - t13 * t20 - t14 * t18, t1 * t13 + t2 * t14 + t3 * t29; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, t150, t144 (pkin(2) ^ 2) + t92, t79, -0.2e1 * t89 * t86, 0, t77, 0, 0, t86 * t144, t89 * t144, -0.2e1 * t51, t58 * (t91 ^ 2) + t92, t46, t118, 0, t45, 0, 0, t47 * t146, t49 * t146, 0.2e1 * t96, t31 ^ 2 + t71 ^ 2 + t148, t78 * t46, -0.2e1 * t46 * t123, 0.2e1 * t47 * t122, t76 * t46, t85 * t118, t45, 0.2e1 * t29 * t125 + 0.2e1 * t13 * t47, 0.2e1 * t29 * t122 - 0.2e1 * t14 * t47, t100 * t153, t13 ^ 2 + t14 ^ 2 + t148; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t67, t84, 0, t36, 0, 0, 0, 0, 0, 0, t55, -t113, -t133 + t134, t98, 0, 0, 0, 0, 0, 0, t37, -t115, -t136 - t137, t101, 0, 0, 0, 0, 0, 0, -t23 * t126 - t49 * t18, -t49 * t20 - t23 * t39, t97 * t47, t102 * t47 - t3 * t49; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, -pkin(2), 0, 0, 0, 0, 0, 0, 0, 0, -t58, t51, 0, 0, 0, 0, 0, 0, 0, 0, -t151, -t96, 0, 0, 0, 0, 0, 0, -t151 * t85, -t151 * t88, 0, t47 * t99 - t135; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t58, 0, 0, 0, 0, 0, 0, 0, 0, 0, t151, 0, 0, 0, 0, 0, 0, 0, 0, 0, t120 * t45 + t46; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t41, 0, t40, t67, t15, -t16, 0, 0, 0, 0, t25, 0, -t23, t67, t83 * t116 - t107, -t81 * t116 - t6 (-t23 * t81 - t25 * t83) * pkin(4) (-t107 * t83 + t6 * t81) * pkin(4), t139, -t17 + t138, t127, -t140, t22, 0, -t23 * t124 + t70 * t18 - t3 * t88, -t23 * t121 + t70 * t20 + t3 * t85, t69 * t97 + t102, t102 * t69 + t3 * t70; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t89, 0, -t86, 0, t89 * t91, -t86 * t91, 0, 0, 0, 0, t49, 0, -t47, 0, -t29, -t31, -t152 (-t29 * t83 + t31 * t81) * pkin(4), t110 (-t76 + t78) * t49, t126, -t110, t39, 0, -t29 * t88 + t85 * t95, t29 * t85 + t88 * t95, t99, t29 * t70 + t69 * t99; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t89, -t86, 0, 0, 0, 0, 0, 0, 0, 0, t49, -t47, 0, t152, 0, 0, 0, 0, 0, 0, t122, -t125, t120 * t47, t106 * t47 - t132; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t141, -0.2e1 * t142, 0 (t81 ^ 2 + t83 ^ 2) * pkin(4) ^ 2, t76, 0.2e1 * t123, 0, t78, 0, 0, -0.2e1 * t70 * t88, 0.2e1 * t70 * t85, 0.2e1 * t106, t120 * t69 ^ 2 + t70 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t23, t25, 0, t21, 0, 0, 0, 0, 0, 0, t22, -t127, -t17 - t138, t103; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t47, t49, 0, t71, 0, 0, 0, 0, 0, 0, t39, -t126, -t120 * t49, t100; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t120; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t20, 0, -t18, t23, t1, -t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t122, 0, -t125, t47, t13, -t14, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t126, -t39, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t85, 0, t88, 0, -t124, -t121, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t88, -t85, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t5;
