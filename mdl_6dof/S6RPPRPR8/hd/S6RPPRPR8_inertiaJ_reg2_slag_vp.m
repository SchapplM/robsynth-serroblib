% Calculate inertial parameters regressor of joint inertia matrix for
% S6RPPRPR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d6,theta3]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 01:56
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RPPRPR8_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRPR8_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPPRPR8_inertiaJ_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 14:38:34
% EndTime: 2019-05-05 14:38:37
% DurationCPUTime: 1.01s
% Computational Cost: add. (630->77), mult. (1031->115), div. (0->0), fcn. (1196->6), ass. (0->62)
t42 = sin(pkin(9));
t43 = cos(pkin(9));
t47 = cos(qJ(4));
t64 = t47 * t43;
t70 = sin(qJ(4));
t27 = -t70 * t42 + t64;
t76 = t27 ^ 2;
t57 = t70 * t43;
t25 = t47 * t42 + t57;
t77 = t25 ^ 2;
t79 = t77 + t76;
t33 = t42 * pkin(3) + qJ(2);
t55 = -t27 * qJ(5) + t33;
t8 = t25 * pkin(4) + t55;
t78 = -0.2e1 * t8;
t75 = 0.2e1 * t33;
t74 = 0.2e1 * qJ(2);
t73 = 0.2e1 * qJ(5);
t72 = pkin(4) + pkin(8);
t44 = -pkin(1) - qJ(3);
t71 = -pkin(7) + t44;
t69 = t27 * t25;
t45 = sin(qJ(6));
t39 = t45 ^ 2;
t68 = t39 * t25;
t14 = t45 * t25;
t67 = t45 * t27;
t46 = cos(qJ(6));
t16 = t46 * t25;
t66 = t46 * t27;
t65 = t46 * t45;
t36 = t42 ^ 2;
t37 = t43 ^ 2;
t31 = t36 + t37;
t40 = t46 ^ 2;
t63 = t39 + t40;
t62 = qJ(5) * t25;
t61 = -0.2e1 * t69;
t60 = 0.2e1 * t69;
t59 = t25 * t65;
t30 = t71 * t42;
t10 = t70 * t30 - t71 * t64;
t12 = t47 * t30 + t71 * t57;
t58 = t10 ^ 2 + t12 ^ 2;
t9 = t63 * t27;
t5 = t72 * t25 + t55;
t6 = t27 * pkin(5) + t10;
t2 = -t45 * t5 + t46 * t6;
t3 = t45 * t6 + t46 * t5;
t1 = t2 * t46 + t3 * t45;
t56 = -t2 * t45 + t3 * t46;
t54 = pkin(4) * t27 + t62;
t53 = t10 * t27 - t12 * t25;
t52 = t27 * t72 + t62;
t51 = 0.2e1 * t53;
t50 = qJ(2) ^ 2;
t49 = qJ(5) ^ 2;
t29 = t63 * t72;
t24 = t31 * t44;
t15 = t40 * t25;
t7 = -t25 * pkin(5) + t12;
t4 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, -2 * pkin(1), t74 (pkin(1) ^ 2) + t50, t37, -0.2e1 * t43 * t42, 0, t36, 0, 0, t42 * t74, t43 * t74, -0.2e1 * t24, t31 * t44 ^ 2 + t50, t76, t61, 0, t77, 0, 0, t25 * t75, t27 * t75, t51, t33 ^ 2 + t58, 0, 0, 0, t76, t61, t77, t51, t25 * t78, t27 * t78, t8 ^ 2 + t58, t39 * t77, 0.2e1 * t77 * t65, t45 * t60, t40 * t77, t46 * t60, t76, -0.2e1 * t7 * t16 + 0.2e1 * t2 * t27, 0.2e1 * t7 * t14 - 0.2e1 * t3 * t27, 0.2e1 * t56 * t25, t2 ^ 2 + t3 ^ 2 + t7 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, -pkin(1), 0, 0, 0, 0, 0, 0, 0, 0, -t31, t24, 0, 0, 0, 0, 0, 0, 0, 0, -t79, -t53, 0, 0, 0, 0, 0, 0, -t79, 0, 0, -t53, 0, 0, 0, 0, 0, 0, -t79 * t46, t79 * t45, 0, -t1 * t27 + t7 * t25; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t31, 0, 0, 0, 0, 0, 0, 0, 0, 0, t79, 0, 0, 0, 0, 0, 0, 0, 0, 0, t79, 0, 0, 0, 0, 0, 0, 0, 0, 0, t63 * t76 + t77; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t42, t43, 0, qJ(2), 0, 0, 0, 0, 0, 0, t25, t27, 0, t33, 0, 0, 0, 0, 0, 0, 0, -t25, -t27, t8, 0, 0, 0, 0, 0, 0, -t67, -t66, t15 + t68, t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t63; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t27, 0, -t25, 0, -t10, -t12, 0, 0, 0, -t27, t25, 0, 0, 0, -t54, t10, t12, -t10 * pkin(4) + t12 * qJ(5), t59, t15 - t68, t66, -t59, -t67, 0, t7 * t45 - t52 * t46, t52 * t45 + t7 * t46, -t1, t7 * qJ(5) - t1 * t72; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t27, -t25, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t27, t25, t54, 0, 0, 0, 0, 0, 0, t14, t16, t9, t72 * t9 + t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, -0.2e1 * pkin(4), t73, pkin(4) ^ 2 + t49, t40, -0.2e1 * t65, 0, t39, 0, 0, t45 * t73, t46 * t73, 0.2e1 * t29, t63 * t72 ^ 2 + t49; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t27, 0, 0, t10, 0, 0, 0, 0, 0, 0, t66, -t67, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t27, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, -pkin(4), 0, 0, 0, 0, 0, 0, 0, 0, -t63, -t29; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t63; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t14, 0, t16, t27, t2, -t3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t66, t67, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t45, -t46, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t46, 0, -t45, 0, -t46 * t72, t45 * t72, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t46, -t45, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t4;
