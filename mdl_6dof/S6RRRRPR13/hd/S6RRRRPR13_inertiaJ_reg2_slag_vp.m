% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRRRPR13
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d6]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 00:07
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRRRPR13_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR13_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRRPR13_inertiaJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-08 01:35:33
% EndTime: 2019-05-08 01:35:49
% DurationCPUTime: 3.75s
% Computational Cost: add. (3162->295), mult. (7179->533), div. (0->0), fcn. (8023->10), ass. (0->152)
t108 = sin(qJ(4));
t101 = t108 ^ 2;
t112 = cos(qJ(4));
t103 = t112 ^ 2;
t184 = t101 + t103;
t109 = sin(qJ(3));
t105 = sin(pkin(6));
t114 = cos(qJ(2));
t146 = t105 * t114;
t106 = cos(pkin(6));
t113 = cos(qJ(3));
t110 = sin(qJ(2));
t147 = t105 * t110;
t61 = t106 * t109 + t113 * t147;
t34 = t61 * t108 + t112 * t146;
t150 = t34 * t112;
t36 = -t108 * t146 + t61 * t112;
t32 = t36 * t108;
t183 = (t32 + t150) * t109;
t182 = t34 ^ 2;
t59 = -t106 * t113 + t109 * t147;
t181 = t59 ^ 2;
t107 = sin(qJ(6));
t111 = cos(qJ(6));
t15 = t34 * t107 + t36 * t111;
t180 = -0.2e1 * t15;
t139 = t111 * t108;
t93 = t112 * t109;
t53 = t107 * t93 - t109 * t139;
t179 = -0.2e1 * t53;
t178 = 0.2e1 * t59;
t177 = -0.2e1 * t61;
t144 = t108 * qJ(5);
t170 = pkin(4) + pkin(5);
t64 = t170 * t112 + pkin(3) + t144;
t176 = 0.2e1 * t64;
t125 = -t112 * pkin(4) - t144;
t76 = -pkin(3) + t125;
t175 = -0.2e1 * t76;
t174 = 0.2e1 * t105;
t173 = -0.2e1 * t109;
t172 = 0.2e1 * t109;
t171 = 0.2e1 * t113;
t169 = pkin(10) * t36;
t168 = t59 * pkin(4);
t167 = pkin(1) * t110;
t166 = pkin(1) * t114;
t165 = pkin(3) * t108;
t164 = pkin(3) * t112;
t102 = t109 ^ 2;
t163 = t102 * pkin(9);
t162 = t108 * pkin(10);
t161 = t109 * pkin(9);
t160 = t36 * t34;
t159 = t59 * t34;
t56 = t59 * qJ(5);
t83 = pkin(8) * t147;
t47 = t83 + (-pkin(2) - t166) * t106;
t21 = t59 * pkin(3) - t61 * pkin(10) + t47;
t132 = pkin(8) * t146;
t48 = t132 + (pkin(9) + t167) * t106;
t49 = (-pkin(2) * t114 - pkin(9) * t110 - pkin(1)) * t105;
t25 = t109 * t49 + t113 * t48;
t23 = -pkin(10) * t146 + t25;
t9 = t108 * t21 + t112 * t23;
t6 = t56 + t9;
t158 = t6 * t112;
t157 = t9 * t112;
t156 = t108 * t23 - t112 * t21;
t24 = -t109 * t48 + t113 * t49;
t141 = t108 * t113;
t77 = -t113 * pkin(3) - t109 * pkin(10) - pkin(2);
t155 = pkin(9) * t141 - t112 * t77;
t137 = t112 * t113;
t46 = pkin(9) * t137 + t108 * t77;
t154 = t184 * pkin(10) ^ 2;
t50 = t108 * t59;
t153 = t112 * t59;
t22 = pkin(3) * t146 - t24;
t152 = t22 * t108;
t151 = t22 * t112;
t51 = t59 * t113;
t149 = t61 * t109;
t100 = t105 ^ 2;
t148 = t100 * t114;
t145 = t106 * t110;
t143 = t108 * t109;
t142 = t108 * t112;
t140 = t109 * t113;
t138 = t112 * qJ(5);
t136 = t113 * qJ(5);
t135 = pkin(10) * t50;
t134 = pkin(10) * t153;
t133 = 0.2e1 * t146;
t99 = t113 * pkin(4);
t42 = t99 + t155;
t131 = t34 * t143;
t130 = (pkin(10) - pkin(11)) * t108;
t129 = t109 * t146;
t128 = t113 * t146;
t127 = t108 * t140;
t126 = t102 * t142;
t41 = -t136 + t46;
t3 = -t36 * pkin(11) - t170 * t59 + t156;
t4 = t34 * pkin(11) + t6;
t1 = -t107 * t4 + t111 * t3;
t2 = t107 * t3 + t111 * t4;
t124 = -pkin(4) * t108 + t138;
t27 = t113 * pkin(5) - pkin(11) * t93 + t42;
t30 = pkin(11) * t143 + t41;
t11 = -t107 * t30 + t111 * t27;
t12 = t107 * t27 + t111 * t30;
t122 = t108 * t34 - t36 * t112;
t121 = t42 * t108 + t41 * t112;
t120 = t108 * t155 + t46 * t112;
t119 = -t24 * t109 + t25 * t113;
t118 = t36 * qJ(5) - t22;
t67 = t107 * t108 + t111 * t112;
t117 = -t113 * t34 + t59 * t143;
t116 = pkin(9) ^ 2;
t104 = t113 ^ 2;
t98 = t112 * pkin(10);
t96 = t102 * t116;
t92 = t103 * t102;
t91 = t101 * t102;
t88 = t100 * t114 ^ 2;
t86 = pkin(10) * t141;
t82 = t108 * t93;
t79 = -t112 * pkin(11) + t98;
t78 = t137 * t173;
t75 = t111 * qJ(5) - t107 * t170;
t73 = t107 * qJ(5) + t111 * t170;
t72 = 0.2e1 * t184 * pkin(10);
t70 = -t107 * t112 + t139;
t69 = (t101 - t103) * t109;
t63 = pkin(1) * t145 + t132;
t62 = t106 * t166 - t83;
t55 = t67 * t109;
t52 = (pkin(9) - t124) * t109;
t40 = t107 * t130 + t111 * t79;
t38 = t107 * t79 - t111 * t130;
t37 = (-t170 * t108 - pkin(9) + t138) * t109;
t33 = t36 ^ 2;
t29 = pkin(10) * t150;
t28 = t36 * t93;
t26 = t36 * t178;
t20 = -t36 * t113 + t59 * t93;
t13 = t36 * t107 - t34 * t111;
t10 = t34 * pkin(4) - t118;
t7 = t156 - t168;
t5 = -t170 * t34 + t118;
t8 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t100 * t110 ^ 2, 0.2e1 * t110 * t148, t145 * t174, t88, t106 * t133, t106 ^ 2, 0.2e1 * pkin(1) * t148 + 0.2e1 * t62 * t106, -0.2e1 * t100 * t167 - 0.2e1 * t63 * t106 (-t110 * t62 + t114 * t63) * t174, t100 * pkin(1) ^ 2 + t62 ^ 2 + t63 ^ 2, t61 ^ 2, t59 * t177, t146 * t177, t181, t59 * t133, t88, -0.2e1 * t24 * t146 + 0.2e1 * t47 * t59, 0.2e1 * t25 * t146 + 0.2e1 * t47 * t61, -0.2e1 * t24 * t61 - 0.2e1 * t25 * t59, t24 ^ 2 + t25 ^ 2 + t47 ^ 2, t33, -0.2e1 * t160, t26, t182, -0.2e1 * t159, t181, -0.2e1 * t156 * t59 + 0.2e1 * t22 * t34, 0.2e1 * t22 * t36 - 0.2e1 * t9 * t59, 0.2e1 * t156 * t36 - 0.2e1 * t9 * t34, t156 ^ 2 + t22 ^ 2 + t9 ^ 2, t33, t26, 0.2e1 * t160, t181, 0.2e1 * t159, t182, 0.2e1 * t10 * t34 - 0.2e1 * t7 * t59, -0.2e1 * t6 * t34 + 0.2e1 * t7 * t36, -0.2e1 * t10 * t36 + 0.2e1 * t6 * t59, t10 ^ 2 + t6 ^ 2 + t7 ^ 2, t15 ^ 2, t13 * t180, t59 * t180, t13 ^ 2, t13 * t178, t181, -0.2e1 * t1 * t59 + 0.2e1 * t5 * t13, 0.2e1 * t5 * t15 + 0.2e1 * t2 * t59, -0.2e1 * t1 * t15 - 0.2e1 * t2 * t13, t1 ^ 2 + t2 ^ 2 + t5 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t147, 0, t146, t106, t62, -t63, 0, 0, t149, -t109 * t59 + t61 * t113, -t129, -t51, -t128, 0, -pkin(2) * t59 + pkin(9) * t129 - t47 * t113, -pkin(2) * t61 + pkin(9) * t128 + t47 * t109 (t149 - t51) * pkin(9) + t119, -t47 * pkin(2) + t119 * pkin(9), t28, -t183, t20, t131, -t117, -t51, t156 * t113 - t155 * t59 + (pkin(9) * t34 + t152) * t109, t9 * t113 - t46 * t59 + (pkin(9) * t36 + t151) * t109, -t46 * t34 + t155 * t36 + (-t108 * t9 + t112 * t156) * t109, t155 * t156 + t22 * t161 + t9 * t46, t28, t20, t183, -t51, t117, t131, t10 * t143 + t7 * t113 + t52 * t34 - t42 * t59, -t41 * t34 + t42 * t36 + (-t108 * t6 + t112 * t7) * t109, -t10 * t93 - t6 * t113 - t52 * t36 + t41 * t59, t10 * t52 + t6 * t41 + t7 * t42, t15 * t55, -t55 * t13 - t15 * t53, t15 * t113 - t55 * t59, t13 * t53, -t13 * t113 + t53 * t59, -t51, t1 * t113 - t11 * t59 + t37 * t13 + t5 * t53, -t2 * t113 + t12 * t59 + t37 * t15 + t5 * t55, -t1 * t55 - t11 * t15 - t12 * t13 - t2 * t53, t1 * t11 + t2 * t12 + t5 * t37; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t102, 0.2e1 * t140, 0, t104, 0, 0, pkin(2) * t171, pkin(2) * t173, 0.2e1 * (t102 + t104) * pkin(9), pkin(2) ^ 2 + t104 * t116 + t96, t92, -0.2e1 * t126, t78, t91, 0.2e1 * t127, t104, 0.2e1 * t108 * t163 + 0.2e1 * t113 * t155, 0.2e1 * t112 * t163 + 0.2e1 * t46 * t113 (-t108 * t46 + t112 * t155) * t172, t155 ^ 2 + t46 ^ 2 + t96, t92, t78, 0.2e1 * t126, t104, -0.2e1 * t127, t91, 0.2e1 * t42 * t113 + 0.2e1 * t52 * t143 (-t108 * t41 + t112 * t42) * t172, -0.2e1 * t41 * t113 - 0.2e1 * t52 * t93, t41 ^ 2 + t42 ^ 2 + t52 ^ 2, t55 ^ 2, t55 * t179, t55 * t171, t53 ^ 2, t113 * t179, t104, 0.2e1 * t11 * t113 + 0.2e1 * t37 * t53, -0.2e1 * t12 * t113 + 0.2e1 * t37 * t55, -0.2e1 * t11 * t55 - 0.2e1 * t12 * t53, t11 ^ 2 + t12 ^ 2 + t37 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t61, 0, -t59, -t146, t24, -t25, 0, 0, t32, -t122, t50, -t150, t153, 0, -pkin(3) * t34 - t135 - t151, -pkin(3) * t36 - t134 + t152, t157 - t29 + (t156 + t169) * t108, -t22 * pkin(3) + (t108 * t156 + t157) * pkin(10), t32, t50, t122, 0, -t153, -t150, -t10 * t112 + t76 * t34 - t135, t158 - t29 + (t7 + t169) * t108, -t10 * t108 - t76 * t36 + t134, t10 * t76 + (t7 * t108 + t158) * pkin(10), t15 * t70, -t70 * t13 - t15 * t67, -t70 * t59, t13 * t67, t67 * t59, 0, t64 * t13 + t38 * t59 + t5 * t67, t64 * t15 + t40 * t59 + t5 * t70, -t1 * t70 - t40 * t13 + t38 * t15 - t2 * t67, -t1 * t38 + t2 * t40 + t5 * t64; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t109, 0, t113, 0, -t161, -t113 * pkin(9), 0, 0, t82, -t69, -t141, -t82, -t137, 0, t86 + (-pkin(9) * t112 - t165) * t109, pkin(10) * t137 + (pkin(9) * t108 - t164) * t109, t120, -pkin(3) * t161 + t120 * pkin(10), t82, -t141, t69, 0, t137, -t82, -t52 * t112 + t76 * t143 + t86, t121, -t52 * t108 + (-pkin(10) * t113 - t109 * t76) * t112, t121 * pkin(10) + t52 * t76, t55 * t70, -t70 * t53 - t55 * t67, t70 * t113, t53 * t67, -t67 * t113, 0, -t38 * t113 + t37 * t67 + t64 * t53, -t40 * t113 + t37 * t70 + t64 * t55, -t11 * t70 - t12 * t67 + t38 * t55 - t40 * t53, -t11 * t38 + t12 * t40 + t37 * t64; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t101, 0.2e1 * t142, 0, t103, 0, 0, 0.2e1 * t164, -0.2e1 * t165, t72, pkin(3) ^ 2 + t154, t101, 0, -0.2e1 * t142, 0, 0, t103, t112 * t175, t72, t108 * t175, t76 ^ 2 + t154, t70 ^ 2, -0.2e1 * t70 * t67, 0, t67 ^ 2, 0, 0, t67 * t176, t70 * t176, 0.2e1 * t38 * t70 - 0.2e1 * t40 * t67, t38 ^ 2 + t40 ^ 2 + t64 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t36, 0, -t34, t59, -t156, -t9, 0, 0, 0, t36, 0, t59, t34, 0, -t156 + 0.2e1 * t168, -t36 * pkin(4) - t34 * qJ(5), 0.2e1 * t56 + t9, -t7 * pkin(4) + t6 * qJ(5), 0, 0, -t15, 0, t13, t59, t73 * t59 - t1, t75 * t59 + t2, -t75 * t13 + t73 * t15, -t1 * t73 + t2 * t75; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t93, 0, -t143, -t113, -t155, -t46, 0, 0, 0, t93, 0, -t113, t143, 0, -0.2e1 * t99 - t155, t125 * t109, -0.2e1 * t136 + t46, -t42 * pkin(4) + t41 * qJ(5), 0, 0, -t55, 0, t53, -t113, -t73 * t113 - t11, -t75 * t113 + t12, -t75 * t53 + t73 * t55, -t11 * t73 + t12 * t75; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t108, 0, t112, 0, -t162, -t98, 0, 0, 0, t108, 0, 0, -t112, 0, -t162, t124, t98, t124 * pkin(10), 0, 0, -t70, 0, t67, 0, t38, t40, -t75 * t67 + t73 * t70, t38 * t73 + t40 * t75; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0.2e1 * pkin(4), 0, 0.2e1 * qJ(5), pkin(4) ^ 2 + qJ(5) ^ 2, 0, 0, 0, 0, 0, 1, 0.2e1 * t73, 0.2e1 * t75, 0, t73 ^ 2 + t75 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t59, t36, 0, t7, 0, 0, 0, 0, 0, 0, -t111 * t59, t107 * t59, -t107 * t13 - t111 * t15, t1 * t111 + t2 * t107; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t113, t93, 0, t42, 0, 0, 0, 0, 0, 0, t111 * t113, -t107 * t113, -t107 * t53 - t111 * t55, t12 * t107 + t11 * t111; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t108, 0, t162, 0, 0, 0, 0, 0, 0, 0, 0, -t107 * t67 - t111 * t70, t40 * t107 - t38 * t111; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, -pkin(4), 0, 0, 0, 0, 0, 0, -t111, t107, 0, t75 * t107 - t73 * t111; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t107 ^ 2 + t111 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t15, 0, -t13, -t59, t1, -t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t55, 0, -t53, t113, t11, -t12, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t70, 0, -t67, 0, -t38, -t40, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -t73, -t75, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t111, -t107, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t8;
