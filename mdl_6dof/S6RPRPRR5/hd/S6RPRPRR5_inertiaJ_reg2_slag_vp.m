% Calculate inertial parameters regressor of joint inertia matrix for
% S6RPRPRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5,d6,theta2]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 03:50
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RPRPRR5_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRR5_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRPRR5_inertiaJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 18:53:44
% EndTime: 2019-05-05 18:53:49
% DurationCPUTime: 1.31s
% Computational Cost: add. (1293->112), mult. (2341->187), div. (0->0), fcn. (2792->8), ass. (0->82)
t49 = sin(qJ(6));
t43 = t49 ^ 2;
t52 = cos(qJ(6));
t45 = t52 ^ 2;
t69 = t43 + t45;
t96 = t69 * pkin(9);
t50 = sin(qJ(5));
t53 = cos(qJ(5));
t86 = -pkin(3) - pkin(4);
t36 = qJ(4) * t53 + t50 * t86;
t33 = -pkin(9) + t36;
t63 = t69 * t33;
t51 = sin(qJ(3));
t48 = cos(pkin(10));
t71 = pkin(7) + qJ(2);
t64 = t71 * t48;
t47 = sin(pkin(10));
t65 = t71 * t47;
t81 = cos(qJ(3));
t23 = -t51 * t65 + t64 * t81;
t27 = t47 * t51 - t48 * t81;
t11 = t27 * pkin(8) + t23;
t21 = t51 * t64 + t65 * t81;
t29 = t47 * t81 + t48 * t51;
t56 = -t29 * pkin(8) + t21;
t5 = t11 * t50 - t53 * t56;
t95 = t5 ^ 2;
t17 = -t27 * t53 + t29 * t50;
t94 = t17 ^ 2;
t93 = t27 ^ 2;
t92 = 0.2e1 * t17;
t19 = t27 * t50 + t29 * t53;
t91 = 0.2e1 * t19;
t39 = -t48 * pkin(2) - pkin(1);
t90 = 0.2e1 * t39;
t89 = 0.2e1 * t48;
t88 = -0.2e1 * t49;
t87 = 0.2e1 * t52;
t85 = t5 * t49;
t84 = t5 * t52;
t83 = t5 * t53;
t34 = qJ(4) * t50 - t53 * t86;
t32 = pkin(5) + t34;
t82 = pkin(5) + t32;
t80 = t29 * t27;
t79 = t43 * t19;
t78 = t49 * t17;
t77 = t49 * t19;
t76 = t49 * t52;
t75 = t52 * t17;
t74 = t52 * t19;
t73 = t53 * t49;
t72 = t53 * t52;
t41 = t47 ^ 2;
t42 = t48 ^ 2;
t70 = t41 + t42;
t68 = -0.2e1 * t19 * t17;
t67 = -0.2e1 * t76;
t66 = t21 ^ 2 + t23 ^ 2;
t30 = t69 * t50;
t62 = -pkin(5) * t19 - pkin(9) * t17;
t57 = t29 * qJ(4) - t39;
t9 = t27 * t86 + t57;
t4 = t17 * pkin(5) - t19 * pkin(9) + t9;
t7 = t53 * t11 + t50 * t56;
t2 = t4 * t52 - t49 * t7;
t3 = t4 * t49 + t52 * t7;
t61 = -t2 * t52 - t3 * t49;
t1 = -t2 * t49 + t3 * t52;
t60 = -t17 * t33 + t19 * t32;
t59 = -t17 * t50 - t19 * t53;
t58 = 0.2e1 * t21 * t29 - 0.2e1 * t23 * t27;
t46 = t53 ^ 2;
t44 = t50 ^ 2;
t37 = 0.2e1 * t76;
t25 = t29 ^ 2;
t16 = t19 ^ 2;
t15 = pkin(3) * t27 - t57;
t14 = t45 * t19;
t13 = t49 * t74;
t8 = -t14 + t79;
t6 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t41, t47 * t89, 0, t42, 0, 0, pkin(1) * t89, -0.2e1 * pkin(1) * t47, 0.2e1 * t70 * qJ(2), qJ(2) ^ 2 * t70 + pkin(1) ^ 2, t25, -0.2e1 * t80, 0, t93, 0, 0, t27 * t90, t29 * t90, t58, t39 ^ 2 + t66, t25, 0, 0.2e1 * t80, 0, 0, t93, 0.2e1 * t15 * t27, t58, -0.2e1 * t15 * t29, t15 ^ 2 + t66, t16, t68, 0, t94, 0, 0, t9 * t92, t9 * t91, -0.2e1 * t17 * t7 + 0.2e1 * t19 * t5, t7 ^ 2 + t9 ^ 2 + t95, t45 * t16, t16 * t67, t74 * t92, t43 * t16, t49 * t68, t94, 0.2e1 * t17 * t2 + 0.2e1 * t5 * t77, -0.2e1 * t17 * t3 + 0.2e1 * t5 * t74, t61 * t91, t2 ^ 2 + t3 ^ 2 + t95; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t48, t47, 0, -pkin(1), 0, 0, 0, 0, 0, 0, t27, t29, 0, t39, 0, 0, 0, 0, 0, 0, t27, 0, -t29, t15, 0, 0, 0, 0, 0, 0, -t17, -t19, 0, -t9, 0, 0, 0, 0, 0, 0, -t75, t78, t14 + t79, t61; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t69; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t29, 0, -t27, 0, -t21, -t23, 0, 0, 0, t29, 0, 0, t27, 0, -t21, -pkin(3) * t29 - qJ(4) * t27, t23, -pkin(3) * t21 + qJ(4) * t23, 0, 0, -t19, 0, t17, 0, t5, t7, -t17 * t36 + t19 * t34, t34 * t5 + t36 * t7, -t13, t8, -t78, t13, -t75, 0, t49 * t60 + t84, t52 * t60 - t85, -t1, t1 * t33 + t5 * t32; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0.2e1 * pkin(3), 0, 0.2e1 * qJ(4), pkin(3) ^ 2 + qJ(4) ^ 2, 0, 0, 0, 0, 0, 1, 0.2e1 * t34, 0.2e1 * t36, 0, t34 ^ 2 + t36 ^ 2, t43, t37, 0, t45, 0, 0, t32 * t87, t32 * t88, -0.2e1 * t63, t33 ^ 2 * t69 + t32 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t29, 0, t21, 0, 0, 0, 0, 0, 0, 0, 0, t59, t50 * t7 - t83, 0, 0, 0, 0, 0, 0, t59 * t49, t59 * t52, 0, t1 * t50 - t83; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, -pkin(3), 0, 0, 0, 0, 0, 0, -t53, t50, 0, -t34 * t53 + t36 * t50, 0, 0, 0, 0, 0, 0, -t72, t73, -t30, t30 * t33 - t32 * t53; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t44 + t46, 0, 0, 0, 0, 0, 0, 0, 0, 0, t44 * t69 + t46; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t19, 0, -t17, 0, -t5, -t7, 0, 0, t13, -t8, t78, -t13, t75, 0, t49 * t62 - t84, t52 * t62 + t85, t1, -t5 * pkin(5) + pkin(9) * t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -t34, -t36, 0, 0, -t43, t67, 0, -t45, 0, 0, -t82 * t52, t82 * t49, t63 - t96, -t32 * pkin(5) + pkin(9) * t63; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t53, -t50, 0, 0, 0, 0, 0, 0, 0, 0, t72, -t73, t30, t53 * pkin(5) + pkin(9) * t30; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t43, t37, 0, t45, 0, 0, pkin(5) * t87, pkin(5) * t88, 0.2e1 * t96, pkin(9) ^ 2 * t69 + pkin(5) ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t74, 0, -t77, t17, t2, -t3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t52, t49, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t49, 0, -t52, 0, -t49 * t33, -t52 * t33, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t49 * t50, -t52 * t50, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t49, 0, t52, 0, -t49 * pkin(9), -t52 * pkin(9), 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t6;
