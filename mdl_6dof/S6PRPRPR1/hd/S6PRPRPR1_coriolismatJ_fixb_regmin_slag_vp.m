% Calculate minimal parameter regressor of coriolis matrix for
% S6PRPRPR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d6,theta1,theta3,theta5]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x23]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2021-01-16 01:08
% Revision: 24b2e7d74a0c1a3b64fa2f8f5ad758691ad61af3 (2021-01-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRPRPR1_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRPR1_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRPR1_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRPRPR1_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2021-01-16 01:06:24
% EndTime: 2021-01-16 01:06:35
% DurationCPUTime: 3.73s
% Computational Cost: add. (3684->255), mult. (9091->430), div. (0->0), fcn. (10710->12), ass. (0->228)
t220 = sin(qJ(6));
t218 = sin(pkin(12));
t221 = sin(qJ(4));
t331 = sin(pkin(11));
t211 = t331 * pkin(2) + pkin(8);
t364 = qJ(5) + t211;
t266 = t364 * t221;
t223 = cos(qJ(4));
t315 = t364 * t223;
t333 = cos(pkin(12));
t360 = -t218 * t266 + t333 * t315;
t328 = t360 * t220;
t222 = cos(qJ(6));
t327 = t360 * t222;
t268 = t333 * t223;
t324 = t218 * t221;
t194 = -t268 + t324;
t133 = t220 * t194;
t126 = t133 * qJD(6);
t269 = t333 * t221;
t323 = t218 * t223;
t196 = t269 + t323;
t294 = t196 * qJD(4);
t187 = t222 * t294;
t362 = -t187 + t126;
t192 = t194 ^ 2;
t193 = t196 ^ 2;
t361 = -t193 - t192;
t120 = t218 * t315 + t333 * t266;
t216 = t220 ^ 2;
t217 = t222 ^ 2;
t207 = t217 - t216;
t320 = t220 * t222;
t265 = 0.2e1 * t196 * t320;
t237 = qJD(2) * t265 - qJD(4) * t207;
t332 = sin(pkin(6));
t257 = t332 * t331;
t349 = cos(qJ(2));
t202 = t349 * t257;
t334 = cos(pkin(11));
t258 = t334 * t332;
t348 = sin(qJ(2));
t203 = t348 * t258;
t172 = -t202 - t203;
t219 = cos(pkin(6));
t149 = -t221 * t172 - t219 * t223;
t150 = -t172 * t223 + t219 * t221;
t79 = t333 * t149 + t150 * t218;
t359 = -t79 / 0.2e1;
t357 = -t360 / 0.2e1;
t356 = t194 / 0.2e1;
t355 = -t196 / 0.2e1;
t354 = t196 / 0.2e1;
t351 = -t222 / 0.2e1;
t350 = t222 / 0.2e1;
t347 = t221 * pkin(4);
t20 = (t357 + t360 / 0.2e1) * t194;
t346 = t20 * qJD(4);
t241 = -t218 * t149 + t333 * t150;
t338 = t241 * t194;
t339 = t79 * t196;
t68 = t339 / 0.2e1;
t345 = t68 - t338 / 0.2e1;
t344 = qJD(4) * pkin(4);
t171 = t348 * t257 - t349 * t258;
t99 = t171 * t194;
t343 = t220 * t99;
t342 = t222 * t99;
t47 = -t171 * t222 + t220 * t241;
t341 = t47 * t194;
t48 = t171 * t220 + t222 * t241;
t340 = t48 * t194;
t288 = t79 / 0.2e1 + t359;
t263 = t288 * t194;
t337 = t263 * qJD(2);
t98 = t171 * t196;
t336 = t98 * t220;
t335 = t98 * t222;
t36 = t99 * t354 - t98 * t356;
t330 = qJD(1) * t36;
t105 = t171 * t221;
t326 = t194 * t218;
t325 = t196 * t222;
t138 = pkin(5) * t196 + pkin(9) * t194 + t347;
t322 = t220 * t138;
t321 = t220 * t172;
t135 = t220 * t196;
t319 = t222 * t138;
t318 = t222 * t172;
t290 = t193 - t192;
t100 = t290 * t220;
t314 = qJD(2) * t100;
t101 = t361 * t220;
t313 = qJD(2) * t101;
t102 = t290 * t222;
t312 = qJD(2) * t102;
t142 = t361 * t222;
t311 = qJD(2) * t142;
t310 = qJD(2) * t221;
t309 = qJD(2) * t223;
t137 = t222 * t194;
t308 = qJD(4) * t137;
t307 = qJD(4) * t220;
t306 = qJD(4) * t222;
t305 = qJD(5) * t222;
t304 = qJD(6) * t220;
t303 = qJD(6) * t222;
t270 = t333 * t196;
t233 = -t326 / 0.2e1 - t270 / 0.2e1;
t110 = (-t221 / 0.2e1 + t233) * pkin(4);
t302 = t110 * qJD(2);
t125 = t133 * qJD(2);
t301 = t135 * qJD(2);
t300 = t137 * qJD(2);
t299 = t361 * qJD(2);
t191 = t269 / 0.2e1 + t323 / 0.2e1;
t298 = t191 * qJD(2);
t297 = t194 * qJD(2);
t296 = t194 * qJD(4);
t295 = t196 * qJD(2);
t208 = -t221 ^ 2 + t223 ^ 2;
t293 = t208 * qJD(2);
t292 = t221 * qJD(4);
t291 = t223 * qJD(4);
t289 = t347 / 0.2e1;
t287 = -t343 / 0.2e1;
t286 = -t342 / 0.2e1;
t285 = -t339 / 0.2e1;
t284 = t79 * t350;
t283 = t194 * t295;
t282 = t217 * t295;
t213 = -t334 * pkin(2) - pkin(3);
t281 = t213 * t309;
t280 = t220 * t306;
t279 = t196 * t304;
t278 = t196 * t303;
t277 = t194 * t294;
t276 = t213 * t310;
t275 = t220 * t303;
t274 = t221 * t309;
t273 = t222 * t295;
t271 = t202 / 0.2e1 + t203 / 0.2e1;
t267 = qJD(2) * t332;
t264 = -qJD(6) - t297;
t261 = t172 / 0.2e1 + t68;
t260 = qJD(4) * t265;
t200 = -t223 * pkin(4) + t213;
t227 = t194 * pkin(5) - t196 * pkin(9) + t200;
t63 = -t222 * t227 + t328;
t11 = (-t63 + t328) * t196 + t319 * t194;
t230 = t241 * t354 + t263;
t225 = t230 * t220 + t47 * t355;
t4 = -t335 / 0.2e1 + t225;
t256 = t4 * qJD(1) + t11 * qJD(2);
t10 = t241 * t356 - t354 * t79 + t345;
t255 = -t10 * qJD(1) - t20 * qJD(2);
t14 = t287 + t340 / 0.2e1 - t261 * t222;
t64 = t220 * t227 + t327;
t31 = t120 * t325 - t194 * t64;
t254 = qJD(1) * t14 - qJD(2) * t31;
t15 = t286 - t341 / 0.2e1 + t261 * t220;
t30 = -t120 * t135 + t194 * t63;
t253 = -qJD(1) * t15 + qJD(2) * t30;
t22 = t338 / 0.2e1 + t285 + t271;
t45 = t120 * t196 - t194 * t360;
t252 = -qJD(1) * t22 + qJD(2) * t45;
t251 = t10 * qJD(3);
t13 = -t171 * t172 + t241 * t99 - t79 * t98;
t250 = t13 * qJD(1) + t36 * qJD(3);
t210 = pkin(4) * t218 + pkin(9);
t212 = -t333 * pkin(4) - pkin(5);
t249 = -t194 * t212 - t196 * t210;
t111 = t194 * t347 + t196 * t200;
t50 = (t355 + t191) * t171;
t248 = -qJD(1) * t50 + qJD(2) * t111;
t112 = -t194 * t200 + t196 * t347;
t232 = t268 / 0.2e1 - t324 / 0.2e1;
t51 = (t356 + t232) * t171;
t247 = -qJD(1) * t51 + qJD(2) * t112;
t246 = t264 * t222;
t245 = t210 * t356 + t212 * t355;
t244 = t196 * t246;
t131 = (t216 / 0.2e1 - t217 / 0.2e1) * t196;
t243 = -qJD(2) * t131 + t280;
t242 = qJD(6) * t191 + t283;
t240 = t99 * t218 / 0.2e1 + t98 * t333 / 0.2e1;
t239 = qJD(2) * t193 * t320 + qJD(4) * t131;
t141 = t207 * t193;
t238 = qJD(2) * t141 + t260;
t226 = -t79 * t357 + t360 * t359;
t1 = (-t105 / 0.2e1 + t240) * pkin(4) + t226;
t28 = t200 * t347;
t236 = -t1 * qJD(1) + t28 * qJD(2) + t20 * qJD(3);
t12 = (-t64 + t327) * t196 - t322 * t194;
t224 = t230 * t222 + t48 * t355;
t7 = t336 / 0.2e1 + t224;
t235 = t7 * qJD(1) + t12 * qJD(2);
t234 = qJD(1) * t263;
t231 = t138 / 0.2e1 + t245;
t26 = t231 * t222;
t32 = t288 * t220;
t229 = qJD(1) * t32 + qJD(2) * t26 - t212 * t307;
t24 = t231 * t220;
t33 = t288 * t222;
t228 = qJD(1) * t33 - qJD(2) * t24 - t212 * t306;
t188 = t191 * qJD(4);
t186 = t220 * t294;
t130 = t137 * qJD(6);
t124 = t133 * qJD(4);
t123 = t131 * qJD(6);
t109 = t233 * pkin(4) + t289;
t108 = -t125 - t304;
t106 = t171 * t223;
t53 = (t191 + t354) * t171;
t52 = (-t194 / 0.2e1 + t232) * t171;
t35 = -t351 * t79 + t284;
t34 = t79 * t220;
t27 = t319 / 0.2e1 - t245 * t222 + t120 * t220;
t25 = -t322 / 0.2e1 + t245 * t220 + (t350 - t351) * t120;
t23 = t271 + t345;
t17 = -t340 / 0.2e1 + t196 * t284 + t287 - t318 / 0.2e1;
t16 = t341 / 0.2e1 + t220 * t285 + t286 + t321 / 0.2e1;
t8 = t263 * qJD(4);
t6 = -t336 / 0.2e1 + t224;
t5 = t335 / 0.2e1 + t225;
t3 = qJD(2) * t36 + qJD(4) * t10;
t2 = t240 * pkin(4) + t171 * t289 - t226;
t9 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t13, 0, 0, 0, 0, 0, 0, 0; 0, 0, -t348 * t267, -t349 * t267, (-t331 * t171 + t334 * t172) * qJD(2) * pkin(2), 0, 0, 0, 0, 0, t105 * qJD(4) + t172 * t309, qJD(4) * t106 - t172 * t310, qJD(4) * t53 - t172 * t297, qJD(4) * t52 - t172 * t295, (-t194 * t99 - t196 * t98) * qJD(2) + t8, (-t120 * t98 - t172 * t200 + t360 * t99) * qJD(2) + t2 * qJD(4) + t23 * qJD(5) + t250, 0, 0, 0, 0, 0, ((-t318 - t343) * t194 - t98 * t135) * qJD(2) + t5 * qJD(4) + t17 * qJD(6), (-(-t321 + t342) * t194 - t98 * t325) * qJD(2) + t6 * qJD(4) + t16 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t105 - qJD(4) * t150, qJD(2) * t106 + qJD(4) * t149, qJD(2) * t53 - qJD(4) * t241, qJD(2) * t52 + qJD(4) * t79, t337, t2 * qJD(2) + (-t218 * t79 - t241 * t333) * t344 + t251, 0, 0, 0, 0, 0, qJD(2) * t5 + qJD(6) * t34 - t241 * t306, qJD(2) * t6 + qJD(6) * t35 + t241 * t307; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t23 * qJD(2), 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t17 + qJD(4) * t34 - qJD(6) * t48, qJD(2) * t16 + qJD(4) * t35 + qJD(6) * t47; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t50 * qJD(4), -t51 * qJD(4), t8, -qJD(4) * t1 - qJD(5) * t22 - t250, 0, 0, 0, 0, 0, qJD(4) * t4 - qJD(6) * t14, qJD(4) * t7 - qJD(6) * t15; 0, 0, 0, 0, 0, t221 * t291, t208 * qJD(4), 0, 0, 0, t213 * t292, t213 * t291, t111 * qJD(4), t112 * qJD(4), -qJD(5) * t361, qJD(4) * t28 + qJD(5) * t45, -t193 * t275 - t217 * t277, -qJD(6) * t141 + t194 * t260, qJD(4) * t102 - t194 * t279, -qJD(4) * t100 - t194 * t278, t277, qJD(4) * t11 - qJD(5) * t101 + qJD(6) * t31, qJD(4) * t12 - qJD(5) * t142 + qJD(6) * t30; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t330 + t346, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, t274, t293, t291, -t292, 0, -t211 * t291 + t276, t211 * t292 + t281, -qJD(4) * t360 + t248, qJD(4) * t120 + t247, (t333 * t194 - t196 * t218) * t344 + t234, (-t120 * t218 - t333 * t360) * t344 + t109 * qJD(5) + t236, -t123 + (-t280 - t282) * t194, t194 * t237 - 0.2e1 * t196 * t275, t186 + t312, t187 - t314, t242, (t220 * t249 - t327) * qJD(4) + t27 * qJD(6) + t256, (t222 * t249 + t328) * qJD(4) + t25 * qJD(6) + t235; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t299, qJD(4) * t109 + t252, 0, 0, 0, 0, 0, -t313, -t311; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t239, -t238, t264 * t135, t244, t188, qJD(4) * t27 - qJD(6) * t64 - t254, qJD(4) * t25 + qJD(6) * t63 + t253; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t330 + t346, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t292, -t291, -t294, t296, 0, (-t270 - t326) * t344 - t255, 0, 0, 0, 0, 0, t362, t130 + t186; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t124 - t278, t279 + t308; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t50 * qJD(2), t51 * qJD(2), -t337, qJD(2) * t1 - t251, 0, 0, 0, 0, 0, -qJD(2) * t4 - qJD(6) * t32, -qJD(2) * t7 - qJD(6) * t33; 0, 0, 0, 0, 0, -t274, -t293, 0, 0, 0, -t276, -t281, -qJD(5) * t196 - t248, qJD(5) * t194 - t247, -t234, qJD(5) * t110 - t236, t194 * t282 - t123, 0.2e1 * t220 * t244, t130 - t312, -t126 + t314, -t242, -qJD(6) * t26 - t196 * t305 - t256, qJD(5) * t135 + qJD(6) * t24 - t235; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t255, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t275, t207 * qJD(6), 0, 0, 0, t212 * t304, t212 * t303; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t295, t297, 0, t302, 0, 0, 0, 0, 0, -t273, t301; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t243, -t237, t300 + t303, t108, -t298, -t210 * t303 - t229, t210 * t304 - t228; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t22 * qJD(2), 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t294, -t296, t299, -qJD(4) * t110 - t252, 0, 0, 0, 0, 0, t313 - t362, -qJD(4) * t135 - t194 * t303 + t311; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t295, -t297, 0, -t302, 0, 0, 0, 0, 0, t273, -t301; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t108, t246; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t14 + qJD(4) * t32, qJD(2) * t15 + qJD(4) * t33; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t239, t238, t220 * t283 - t308, t194 * t273 + t124, t188, qJD(4) * t26 + qJD(5) * t133 + t254, -qJD(4) * t24 + t194 * t305 - t253; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t243, t237, -t300, t125, t298, t229, t228; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t125, t222 * t297; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t9;
