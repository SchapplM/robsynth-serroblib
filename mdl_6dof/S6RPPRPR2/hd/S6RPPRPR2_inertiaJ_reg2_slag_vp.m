% Calculate inertial parameters regressor of joint inertia matrix for
% S6RPPRPR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d6,theta2,theta3]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 01:42
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RPPRPR2_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRPR2_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPPRPR2_inertiaJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 14:02:48
% EndTime: 2019-05-05 14:02:52
% DurationCPUTime: 0.99s
% Computational Cost: add. (654->74), mult. (1147->120), div. (0->0), fcn. (1312->8), ass. (0->68)
t43 = cos(pkin(10));
t46 = sin(qJ(4));
t41 = sin(pkin(10));
t70 = cos(qJ(4));
t56 = t70 * t41;
t27 = t46 * t43 + t56;
t79 = t27 ^ 2;
t66 = t46 * t41;
t25 = -t70 * t43 + t66;
t80 = t25 ^ 2;
t82 = t79 + t80;
t44 = cos(pkin(9));
t72 = t44 * pkin(1);
t35 = -pkin(2) - t72;
t30 = -t43 * pkin(3) + t35;
t61 = t27 * qJ(5);
t51 = t30 - t61;
t74 = t25 * pkin(4);
t7 = t51 + t74;
t81 = -0.2e1 * t7;
t78 = 0.2e1 * t30;
t77 = 0.2e1 * t41;
t76 = 0.2e1 * qJ(5);
t75 = pkin(4) + pkin(8);
t42 = sin(pkin(9));
t73 = t42 * pkin(1);
t33 = qJ(3) + t73;
t71 = pkin(7) + t33;
t69 = t25 * t27;
t45 = sin(qJ(6));
t68 = t45 * t25;
t67 = t45 * t27;
t47 = cos(qJ(6));
t18 = t47 * t25;
t19 = t47 * t27;
t65 = t47 * t45;
t36 = t41 ^ 2;
t37 = t43 ^ 2;
t64 = t36 + t37;
t38 = t45 ^ 2;
t39 = t47 ^ 2;
t63 = t38 + t39;
t62 = qJ(5) * t25;
t60 = -0.2e1 * t69;
t59 = 0.2e1 * t69;
t58 = t25 * t65;
t20 = t71 * t43;
t10 = t70 * t20 - t71 * t66;
t8 = t46 * t20 + t71 * t56;
t57 = t10 ^ 2 + t8 ^ 2;
t29 = t63 * t75;
t4 = t75 * t25 + t51;
t5 = t27 * pkin(5) + t8;
t2 = -t45 * t4 + t47 * t5;
t3 = t47 * t4 + t45 * t5;
t1 = t2 * t47 + t3 * t45;
t55 = -t2 * t45 + t3 * t47;
t54 = t10 * t27 + t8 * t25;
t53 = t27 * t75 + t62;
t52 = -0.2e1 * t10 * t25 + 0.2e1 * t8 * t27;
t49 = qJ(5) ^ 2;
t17 = t39 * t25;
t16 = t39 * t80;
t15 = t38 * t25;
t14 = t38 * t80;
t12 = -t15 - t17;
t6 = -t25 * pkin(5) + t10;
t9 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t72, -0.2e1 * t73, 0 (t42 ^ 2 + t44 ^ 2) * pkin(1) ^ 2, t36, t43 * t77, 0, t37, 0, 0, -0.2e1 * t35 * t43, t35 * t77, 0.2e1 * t64 * t33, t64 * t33 ^ 2 + t35 ^ 2, t79, t60, 0, t80, 0, 0, t25 * t78, t27 * t78, t52, t30 ^ 2 + t57, 0, 0, 0, t79, t60, t80, t52, t25 * t81, t27 * t81, t7 ^ 2 + t57, t14, 0.2e1 * t80 * t65, t45 * t59, t16, t47 * t59, t79, -0.2e1 * t6 * t18 + 0.2e1 * t2 * t27, -0.2e1 * t3 * t27 + 0.2e1 * t6 * t68, 0.2e1 * t55 * t25, t2 ^ 2 + t3 ^ 2 + t6 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t54, 0, 0, 0, 0, 0, 0, 0, 0, 0, t54, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1 * t25 + t6 * t27; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t64, 0, 0, 0, 0, 0, 0, 0, 0, 0, t82, 0, 0, 0, 0, 0, 0, 0, 0, 0, t82, 0, 0, 0, 0, 0, 0, 0, 0, 0, t14 + t16 + t79; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t43, t41, 0, t35, 0, 0, 0, 0, 0, 0, t25, t27, 0, t30, 0, 0, 0, 0, 0, 0, 0, -t25, -t27, t7, 0, 0, 0, 0, 0, 0, -t67, -t19, -t12, t55; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t63; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t27, 0, -t25, 0, -t8, -t10, 0, 0, 0, -t27, t25, 0, 0, 0, -pkin(4) * t27 - t62, t8, t10, -t8 * pkin(4) + t10 * qJ(5), t58, t17 - t15, t19, -t58, -t67, 0, t6 * t45 - t53 * t47, t53 * t45 + t6 * t47, -t1, t6 * qJ(5) - t1 * t75; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t25, -t27, 0, 0, 0, 0, 0, 0, 0, 0, 0, t25, t27, t61 - t74, 0, 0, 0, 0, 0, 0, t67, t19, t12, -t25 * t29 + t61; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, -0.2e1 * pkin(4), t76, pkin(4) ^ 2 + t49, t39, -0.2e1 * t65, 0, t38, 0, 0, t45 * t76, t47 * t76, 0.2e1 * t29, t63 * t75 ^ 2 + t49; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t27, 0, 0, t8, 0, 0, 0, 0, 0, 0, t19, -t67, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t25, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, -pkin(4), 0, 0, 0, 0, 0, 0, 0, 0, -t63, -t29; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t63; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t68, 0, t18, t27, t2, -t3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t18, -t68, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t45, -t47, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t47, 0, -t45, 0, -t47 * t75, t45 * t75, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t47, -t45, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t9;
