% Calculate inertial parameters regressor of joint inertia matrix for
% S6PRPRRP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d5,theta1,theta3]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 19:58
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6PRPRRP1_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRP1_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRPRRP1_inertiaJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-04 23:32:30
% EndTime: 2019-05-04 23:32:34
% DurationCPUTime: 1.21s
% Computational Cost: add. (569->126), mult. (1336->204), div. (0->0), fcn. (1530->10), ass. (0->87)
t51 = sin(pkin(11));
t52 = sin(pkin(6));
t53 = cos(pkin(11));
t57 = sin(qJ(2));
t60 = cos(qJ(2));
t19 = (t51 * t60 + t53 * t57) * t52;
t54 = cos(pkin(6));
t56 = sin(qJ(4));
t59 = cos(qJ(4));
t14 = t19 * t56 - t54 * t59;
t93 = t14 ^ 2;
t79 = t52 * t60;
t80 = t52 * t57;
t17 = t51 * t80 - t53 * t79;
t92 = t17 ^ 2;
t91 = 0.2e1 * t56;
t58 = cos(qJ(5));
t90 = pkin(4) * t58;
t89 = t51 * pkin(2);
t88 = t53 * pkin(2);
t55 = sin(qJ(5));
t87 = t55 * pkin(5);
t86 = t59 * pkin(4);
t85 = t14 * t58;
t84 = t14 * t59;
t37 = pkin(8) + t89;
t83 = t37 * t55;
t47 = t55 ^ 2;
t82 = t47 * t56;
t48 = t56 ^ 2;
t81 = t48 * t37;
t78 = t55 * t56;
t77 = t55 * t58;
t76 = t55 * t59;
t75 = t56 * t37;
t42 = t58 * t56;
t43 = t58 * t59;
t74 = t59 * t37;
t73 = -qJ(6) - pkin(9);
t49 = t58 ^ 2;
t72 = t47 + t49;
t50 = t59 ^ 2;
t71 = t48 + t50;
t70 = qJ(6) * t56;
t69 = t59 * t91;
t68 = t58 * t74;
t38 = -pkin(3) - t88;
t67 = t72 * pkin(9);
t23 = -t56 * pkin(9) + t38 - t86;
t20 = t58 * t23;
t66 = -t58 * t70 + t20;
t16 = t19 * t59 + t54 * t56;
t7 = -t16 * t55 + t17 * t58;
t8 = t16 * t58 + t17 * t55;
t4 = -t7 * t55 + t8 * t58;
t12 = -t55 * t74 + t20;
t13 = t55 * t23 + t68;
t65 = -t12 * t55 + t13 * t58;
t64 = t14 * t56 + t16 * t59;
t26 = t73 * t55;
t27 = t73 * t58;
t63 = -t26 * t55 - t27 * t58;
t46 = t54 ^ 2;
t44 = -t58 * pkin(5) - pkin(4);
t41 = t49 * t56;
t40 = t49 * t48;
t39 = t47 * t48;
t35 = 0.2e1 * t77;
t34 = t37 ^ 2;
t33 = t55 * t42;
t31 = -0.2e1 * t56 * t43;
t30 = -0.2e1 * t48 * t77;
t29 = t55 * t69;
t28 = t48 * t34;
t25 = t41 + t82;
t24 = t41 - t82;
t22 = t40 + t39 + t50;
t21 = (t37 + t87) * t56;
t11 = t14 * t55;
t10 = t68 + (t23 - t70) * t55;
t9 = (-pkin(5) - t83) * t59 + t66;
t6 = t14 * t42 + t8 * t59;
t5 = t14 * t78 - t7 * t59;
t3 = (-t55 * t8 - t58 * t7) * t56;
t2 = t7 ^ 2 + t8 ^ 2 + t93;
t1 = t4 * t56 - t84;
t15 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t46 + (t57 ^ 2 + t60 ^ 2) * t52 ^ 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, t19 ^ 2 + t46 + t92, 0, 0, 0, 0, 0, 0, 0, 0, 0, t16 ^ 2 + t92 + t93, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t79, -t80, 0, 0, 0, 0, 0, 0, 0, 0, -t17, -t19, 0 (-t17 * t53 + t19 * t51) * pkin(2), 0, 0, 0, 0, 0, 0, -t17 * t59, t17 * t56, t64, t17 * t38 + t64 * t37, 0, 0, 0, 0, 0, 0, t5, t6, t3, t7 * t12 + t8 * t13 + t14 * t75, 0, 0, 0, 0, 0, 0, t5, t6, t3, t8 * t10 + t14 * t21 + t7 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t88, -0.2e1 * t89, 0 (t51 ^ 2 + t53 ^ 2) * pkin(2) ^ 2, t48, t69, 0, t50, 0, 0, -0.2e1 * t38 * t59, t38 * t91, 0.2e1 * t71 * t37, t50 * t34 + t38 ^ 2 + t28, t40, t30, t31, t39, t29, t50, -0.2e1 * t12 * t59 + 0.2e1 * t55 * t81, 0.2e1 * t13 * t59 + 0.2e1 * t58 * t81 (-t12 * t58 - t13 * t55) * t91, t12 ^ 2 + t13 ^ 2 + t28, t40, t30, t31, t39, t29, t50, 0.2e1 * t21 * t78 - 0.2e1 * t9 * t59, 0.2e1 * t10 * t59 + 0.2e1 * t21 * t42 (-t10 * t55 - t58 * t9) * t91, t10 ^ 2 + t21 ^ 2 + t9 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t54, 0, 0, 0, 0, 0, 0, 0, 0, 0, t16 * t56 - t84, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (t65 - t74) * t56, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t21 * t59 + (t10 * t58 - t9 * t55) * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t71, 0, 0, 0, 0, 0, 0, 0, 0, 0, t22, 0, 0, 0, 0, 0, 0, 0, 0, 0, t22; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t14, -t16, 0, 0, 0, 0, 0, 0, 0, 0, -t85, t11, t4, -t14 * pkin(4) + t4 * pkin(9), 0, 0, 0, 0, 0, 0, -t85, t11, t4, t14 * t44 + t7 * t26 - t8 * t27; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t56, 0, t59, 0, -t75, -t74, 0, 0, t33, t24, -t76, -t33, -t43, 0, -t37 * t42 + (-pkin(4) * t56 + pkin(9) * t59) * t55, pkin(9) * t43 + (t83 - t90) * t56, t65, -pkin(4) * t75 + t65 * pkin(9), t33, t24, -t76, -t33, -t43, 0, -t21 * t58 - t26 * t59 + t44 * t78, t21 * t55 - t27 * t59 + t44 * t42 (-t26 * t56 + t10) * t58 + (t27 * t56 - t9) * t55, -t10 * t27 + t21 * t44 + t9 * t26; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t59, -t56, 0, 0, 0, 0, 0, 0, 0, 0, t43, -t76, t25, t56 * t67 + t86, 0, 0, 0, 0, 0, 0, t43, -t76, t25, -t59 * t44 + t56 * t63; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t47, t35, 0, t49, 0, 0, 0.2e1 * t90, -0.2e1 * pkin(4) * t55, 0.2e1 * t67, t72 * pkin(9) ^ 2 + pkin(4) ^ 2, t47, t35, 0, t49, 0, 0, -0.2e1 * t44 * t58, 0.2e1 * t44 * t55, 0.2e1 * t63, t26 ^ 2 + t27 ^ 2 + t44 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t7, -t8, 0, 0, 0, 0, 0, 0, 0, 0, t7, -t8, 0, t7 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t42, 0, -t78, -t59, t12, -t13, 0, 0, 0, 0, t42, 0, -t78, -t59 (-0.2e1 * pkin(5) - t83) * t59 + t66, -t10, -pkin(5) * t42, t9 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t78, -t42, 0, 0, 0, 0, 0, 0, 0, 0, -t78, -t42, 0, -pkin(5) * t78; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t55, 0, t58, 0, -t55 * pkin(9), -t58 * pkin(9), 0, 0, 0, 0, t55, 0, t58, 0, t26, t27, -t87, t26 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * pkin(5), 0, 0, pkin(5) ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t14; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t78, t42, 0, t21; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t59; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t58, t55, 0, t44; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1;];
MM_reg  = t15;
