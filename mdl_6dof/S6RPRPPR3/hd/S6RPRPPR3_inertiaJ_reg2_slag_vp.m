% Calculate inertial parameters regressor of joint inertia matrix for
% S6RPRPPR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d6,theta2]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 02:45
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RPRPPR3_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPPR3_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPRPPR3_inertiaJ_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 16:42:46
% EndTime: 2019-05-05 16:42:49
% DurationCPUTime: 0.98s
% Computational Cost: add. (361->75), mult. (539->116), div. (0->0), fcn. (498->6), ass. (0->57)
t41 = sin(qJ(3));
t34 = t41 ^ 2;
t43 = cos(qJ(3));
t36 = t43 ^ 2;
t16 = t34 + t36;
t40 = sin(qJ(6));
t33 = t40 ^ 2;
t42 = cos(qJ(6));
t35 = t42 ^ 2;
t17 = t35 + t33;
t12 = t17 * t43;
t37 = sin(pkin(9));
t63 = t37 * pkin(1);
t20 = pkin(7) + t63;
t57 = t43 * t20;
t9 = -t43 * qJ(5) + t57;
t66 = t9 ^ 2;
t65 = 0.2e1 * t41;
t64 = -0.2e1 * t43;
t44 = -pkin(3) - pkin(4);
t62 = t9 * t41;
t38 = cos(pkin(9));
t27 = t38 * pkin(1);
t21 = -t27 - pkin(2);
t61 = t40 * t41;
t60 = t40 * t42;
t23 = t40 * t43;
t59 = t41 * t43;
t58 = t42 * t43;
t56 = t16 * t20 ^ 2;
t26 = t41 * qJ(4);
t55 = t43 * pkin(3) + t26;
t54 = t43 * qJ(4);
t53 = -0.2e1 * t59;
t19 = 0.2e1 * t59;
t52 = t40 * t58;
t7 = -t55 + t21;
t6 = t43 * pkin(4) - t7;
t4 = t41 * pkin(5) + t43 * pkin(8) + t6;
t14 = t41 * t20;
t8 = -t41 * qJ(5) + t14;
t2 = t42 * t4 - t40 * t8;
t3 = t40 * t4 + t42 * t8;
t51 = t2 * t42 + t3 * t40;
t50 = t2 * t40 - t3 * t42;
t49 = -t41 * pkin(3) + t54;
t32 = -pkin(8) + t44;
t39 = qJ(4) + pkin(5);
t48 = -t32 * t41 - t39 * t43;
t46 = qJ(4) ^ 2;
t45 = 0.2e1 * qJ(4);
t25 = t42 * t41;
t24 = t35 * t36;
t22 = t33 * t36;
t11 = t17 * t32;
t5 = 0.2e1 * t16 * t20;
t1 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t27, -0.2e1 * t63, 0 (t37 ^ 2 + t38 ^ 2) * pkin(1) ^ 2, t34, t19, 0, t36, 0, 0, t21 * t64, t21 * t65, t5, t21 ^ 2 + t56, t34, 0, t53, 0, 0, t36, t7 * t64, t5, -0.2e1 * t7 * t41, t7 ^ 2 + t56, t36, t19, 0, t34, 0, 0, t6 * t65, t6 * t64, -0.2e1 * t8 * t41 - 0.2e1 * t9 * t43, t6 ^ 2 + t8 ^ 2 + t66, t24, -0.2e1 * t36 * t60, t42 * t53, t22, t40 * t19, t34, 0.2e1 * t2 * t41 - 0.2e1 * t9 * t23, -0.2e1 * t3 * t41 - 0.2e1 * t9 * t58, 0.2e1 * t51 * t43, t2 ^ 2 + t3 ^ 2 + t66; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t8 * t43 + t62, 0, 0, 0, 0, 0, 0, 0, 0, 0, t50 * t43 + t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t16, 0, 0, 0, 0, 0, 0, 0, 0, 0, t16, 0, 0, 0, 0, 0, 0, 0, 0, 0, t16, 0, 0, 0, 0, 0, 0, 0, 0, 0, t24 + t22 + t34; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t41, 0, t43, 0, -t14, -t57, 0, 0, 0, t41, 0, 0, -t43, 0, -t14, t49, t57, t49 * t20, 0, 0, t43, 0, t41, 0, t9, t8, -t44 * t41 - t54, t9 * qJ(4) + t8 * t44, t52 (-t33 + t35) * t43, -t61, -t52, -t25, 0, t48 * t40 + t9 * t42, -t9 * t40 + t48 * t42, t50, -t50 * t32 + t9 * t39; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t43, -t41, 0, 0, 0, 0, 0, 0, 0, 0, t43, 0, t41, t55, 0, 0, 0, 0, 0, 0, t41, -t43, 0, -t43 * t44 + t26, 0, 0, 0, 0, 0, 0, t25, -t61, t12, -t32 * t12 + t41 * t39; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0.2e1 * pkin(3), 0, t45, pkin(3) ^ 2 + t46, 0, 0, 0, 0, 0, 1, t45, 0.2e1 * t44, 0, t44 ^ 2 + t46, t33, 0.2e1 * t60, 0, t35, 0, 0, 0.2e1 * t39 * t42, -0.2e1 * t39 * t40, -0.2e1 * t11, t17 * t32 ^ 2 + t39 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t41, 0, t14, 0, 0, 0, 0, 0, 0, 0, 0, -t41, t8, 0, 0, 0, 0, 0, 0, -t61, -t25, 0, -t50; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t43, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t43, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, -pkin(3), 0, 0, 0, 0, 0, 0, 0, 1, 0, t44, 0, 0, 0, 0, 0, 0, 0, 0, -t17, t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t17; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t41, -t43, 0, t6, 0, 0, 0, 0, 0, 0, t25, -t61, t12, t51; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t17; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t58, 0, t23, t41, t2, -t3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t23, t58, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t40, 0, -t42, 0, -t40 * t32, -t42 * t32, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t40, -t42, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t42, -t40, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t1;
