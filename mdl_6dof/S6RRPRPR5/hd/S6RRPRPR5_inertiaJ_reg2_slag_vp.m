% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRPRPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d6,theta3,theta5]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 10:37
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRPRPR5_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR5_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPRPR5_inertiaJ_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 14:02:26
% EndTime: 2019-05-06 14:02:37
% DurationCPUTime: 2.88s
% Computational Cost: add. (3996->234), mult. (9667->457), div. (0->0), fcn. (11073->12), ass. (0->146)
t100 = cos(pkin(6));
t102 = sin(qJ(4));
t104 = cos(qJ(4));
t103 = sin(qJ(2));
t105 = cos(qJ(2));
t96 = sin(pkin(11));
t97 = sin(pkin(6));
t99 = cos(pkin(11));
t56 = (t103 * t99 + t105 * t96) * t97;
t43 = -t100 * t104 + t56 * t102;
t42 = t43 ^ 2;
t123 = t97 * t105;
t124 = t97 * t103;
t54 = -t99 * t123 + t96 * t124;
t170 = t54 ^ 2;
t169 = -0.2e1 * t43;
t168 = 0.2e1 * t43;
t167 = -0.2e1 * t54;
t98 = cos(pkin(12));
t88 = -t98 * pkin(5) - pkin(4);
t166 = 0.2e1 * t88;
t165 = 0.2e1 * t100;
t164 = 0.2e1 * t102;
t163 = -0.2e1 * t104;
t95 = sin(pkin(12));
t162 = pkin(4) * t95;
t161 = pkin(4) * t98;
t160 = t96 * pkin(2);
t159 = t99 * pkin(2);
t144 = pkin(8) + qJ(3);
t154 = t100 * pkin(2);
t79 = t100 * t105 * pkin(1);
t48 = -t144 * t124 + t154 + t79;
t157 = pkin(1) * t103;
t116 = t100 * t157;
t52 = t144 * t123 + t116;
t142 = -t99 * t48 + t96 * t52;
t24 = -t100 * pkin(3) + t142;
t45 = t100 * t102 + t56 * t104;
t14 = t43 * pkin(4) - t45 * qJ(5) + t24;
t28 = t96 * t48 + t99 * t52;
t25 = t100 * pkin(9) + t28;
t71 = (-pkin(2) * t105 - pkin(1)) * t97;
t32 = t54 * pkin(3) - t56 * pkin(9) + t71;
t16 = t102 * t32 + t104 * t25;
t9 = t54 * qJ(5) + t16;
t6 = t95 * t14 + t98 * t9;
t158 = cos(qJ(6));
t15 = -t102 * t25 + t104 * t32;
t10 = -t54 * pkin(4) - t15;
t156 = t10 * t95;
t155 = t10 * t98;
t153 = t104 * pkin(4);
t101 = sin(qJ(6));
t29 = t45 * t95 - t54 * t98;
t31 = t45 * t98 + t54 * t95;
t19 = -t101 * t29 + t158 * t31;
t70 = t101 * t98 + t158 * t95;
t59 = t70 * t102;
t152 = t19 * t59;
t151 = t29 * t98;
t150 = t31 * t95;
t111 = t158 * t98;
t126 = t95 * t102;
t61 = -t101 * t126 + t102 * t111;
t149 = t61 * t43;
t148 = t70 * t59;
t86 = pkin(9) + t160;
t147 = t86 * t95;
t93 = t102 ^ 2;
t146 = t93 * t86;
t145 = t95 * t98;
t143 = pkin(10) + qJ(5);
t121 = t98 * t104;
t87 = -pkin(3) - t159;
t67 = -t102 * qJ(5) - t153 + t87;
t39 = t86 * t121 + t95 * t67;
t89 = t95 ^ 2;
t91 = t98 ^ 2;
t141 = t89 + t91;
t94 = t104 ^ 2;
t140 = t93 + t94;
t139 = qJ(5) * t43;
t138 = t102 * t54;
t76 = t102 * t86;
t17 = t101 * t31 + t158 * t29;
t137 = t104 * t17;
t136 = t104 * t29;
t68 = t101 * t95 - t111;
t135 = t104 * t68;
t134 = t104 * t86;
t90 = t97 ^ 2;
t133 = t105 * t90;
t132 = t19 * t104;
t131 = t31 * t104;
t130 = t43 * t104;
t129 = t45 * t104;
t128 = t70 * t104;
t127 = t89 * t102;
t125 = t95 * t104;
t122 = t98 * t102;
t120 = qJ(5) * t104;
t119 = t102 * t104;
t118 = t97 * t165;
t117 = 0.2e1 * t119;
t115 = t31 * t126;
t114 = t43 * t126;
t113 = t43 * t122;
t112 = t95 * t122;
t5 = t98 * t14 - t95 * t9;
t110 = t141 * qJ(5);
t109 = -t5 * t95 + t6 * t98;
t63 = t98 * t67;
t38 = -t86 * t125 + t63;
t108 = -t38 * t95 + t39 * t98;
t92 = t100 ^ 2;
t83 = t91 * t102;
t82 = t91 * t93;
t81 = t89 * t93;
t80 = t86 ^ 2;
t75 = t93 * t80;
t74 = t143 * t98;
t73 = t143 * t95;
t66 = pkin(8) * t123 + t116;
t65 = -pkin(8) * t124 + t79;
t64 = pkin(5) * t126 + t76;
t58 = t61 ^ 2;
t57 = t59 ^ 2;
t53 = t104 * t54;
t47 = -t101 * t73 + t158 * t74;
t46 = -t101 * t74 - t158 * t73;
t37 = t61 * t68;
t36 = t102 * t43;
t35 = -pkin(10) * t126 + t39;
t34 = -pkin(10) * t122 + t63 + (-pkin(5) - t147) * t104;
t33 = t59 * t43;
t23 = t29 * t122;
t21 = t101 * t34 + t158 * t35;
t20 = -t101 * t35 + t158 * t34;
t11 = t61 * t17;
t7 = t29 * pkin(5) + t10;
t4 = -t29 * pkin(10) + t6;
t3 = t43 * pkin(5) - t31 * pkin(10) + t5;
t2 = t101 * t3 + t158 * t4;
t1 = -t101 * t4 + t158 * t3;
t8 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t90 * t103 ^ 2, 0.2e1 * t103 * t133, t103 * t118, t90 * t105 ^ 2, t105 * t118, t92, 0.2e1 * pkin(1) * t133 + 0.2e1 * t65 * t100, -0.2e1 * t66 * t100 - 0.2e1 * t90 * t157, 0.2e1 * (-t103 * t65 + t105 * t66) * t97, t90 * pkin(1) ^ 2 + t65 ^ 2 + t66 ^ 2, t56 ^ 2, t56 * t167, t56 * t165, t170, t100 * t167, t92, -0.2e1 * t100 * t142 + 0.2e1 * t71 * t54, -0.2e1 * t28 * t100 + 0.2e1 * t71 * t56, 0.2e1 * t142 * t56 - 0.2e1 * t28 * t54, t142 ^ 2 + t28 ^ 2 + t71 ^ 2, t45 ^ 2, t45 * t169, 0.2e1 * t45 * t54, t42, t43 * t167, t170, 0.2e1 * t15 * t54 + 0.2e1 * t24 * t43, -0.2e1 * t16 * t54 + 0.2e1 * t24 * t45, -0.2e1 * t15 * t45 - 0.2e1 * t16 * t43, t15 ^ 2 + t16 ^ 2 + t24 ^ 2, t31 ^ 2, -0.2e1 * t31 * t29, t31 * t168, t29 ^ 2, t29 * t169, t42, 0.2e1 * t10 * t29 + 0.2e1 * t5 * t43, 0.2e1 * t10 * t31 - 0.2e1 * t6 * t43, -0.2e1 * t6 * t29 - 0.2e1 * t5 * t31, t10 ^ 2 + t5 ^ 2 + t6 ^ 2, t19 ^ 2, -0.2e1 * t19 * t17, t19 * t168, t17 ^ 2, t17 * t169, t42, 0.2e1 * t1 * t43 + 0.2e1 * t7 * t17, 0.2e1 * t7 * t19 - 0.2e1 * t2 * t43, -0.2e1 * t1 * t19 - 0.2e1 * t2 * t17, t1 ^ 2 + t2 ^ 2 + t7 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t124, 0, t123, t100, t65, -t66, 0, 0, 0, 0, t56, 0, -t54, t100, t99 * t154 - t142, -t96 * t154 - t28 (-t54 * t96 - t56 * t99) * pkin(2) (-t142 * t99 + t28 * t96) * pkin(2), t45 * t102, -t36 + t129, t138, -t130, t53, 0, -t24 * t104 + t87 * t43 - t54 * t76, t24 * t102 - t134 * t54 + t87 * t45 (-t43 * t86 + t16) * t104 + (t45 * t86 - t15) * t102, t24 * t87 + (-t15 * t102 + t16 * t104) * t86, t31 * t122, -t23 - t115, t113 - t131, t29 * t126, -t114 + t136, -t130, -t5 * t104 + t38 * t43 + (t29 * t86 + t156) * t102, t6 * t104 - t39 * t43 + (t31 * t86 + t155) * t102, -t39 * t29 - t38 * t31 + (-t5 * t98 - t6 * t95) * t102, t10 * t76 + t5 * t38 + t6 * t39, t19 * t61, -t11 - t152, -t132 + t149, t17 * t59, -t33 + t137, -t130, -t1 * t104 + t64 * t17 + t20 * t43 + t7 * t59, t2 * t104 + t64 * t19 - t21 * t43 + t7 * t61, -t1 * t61 - t21 * t17 - t20 * t19 - t2 * t59, t1 * t20 + t2 * t21 + t7 * t64; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t159, -0.2e1 * t160, 0 (t96 ^ 2 + t99 ^ 2) * pkin(2) ^ 2, t93, t117, 0, t94, 0, 0, t87 * t163, t87 * t164, 0.2e1 * t140 * t86, t94 * t80 + t87 ^ 2 + t75, t82, -0.2e1 * t93 * t145, -0.2e1 * t98 * t119, t81, t95 * t117, t94, -0.2e1 * t38 * t104 + 0.2e1 * t146 * t95, 0.2e1 * t39 * t104 + 0.2e1 * t146 * t98 (-t38 * t98 - t39 * t95) * t164, t38 ^ 2 + t39 ^ 2 + t75, t58, -0.2e1 * t61 * t59, t61 * t163, t57, -t59 * t163, t94, -0.2e1 * t20 * t104 + 0.2e1 * t64 * t59, 0.2e1 * t21 * t104 + 0.2e1 * t64 * t61, -0.2e1 * t20 * t61 - 0.2e1 * t21 * t59, t20 ^ 2 + t21 ^ 2 + t64 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t54, t56, 0, t71, 0, 0, 0, 0, 0, 0, t53, -t138, -t36 - t129, t16 * t102 + t15 * t104, 0, 0, 0, 0, 0, 0, -t114 - t136, -t113 - t131, -t23 + t115, -t10 * t104 + t102 * t109, 0, 0, 0, 0, 0, 0, -t33 - t137, -t132 - t149, -t11 + t152, -t1 * t59 - t7 * t104 + t2 * t61; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (t108 - t134) * t102, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t64 * t104 - t20 * t59 + t21 * t61; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t140, 0, 0, 0, 0, 0, 0, 0, 0, 0, t82 + t81 + t94, 0, 0, 0, 0, 0, 0, 0, 0, 0, t58 + t57 + t94; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t45, 0, -t43, t54, t15, -t16, 0, 0, t150, -t95 * t29 + t31 * t98, t95 * t43, -t151, t98 * t43, 0, -pkin(4) * t29 - t139 * t95 - t155, -pkin(4) * t31 - t139 * t98 + t156 (t150 - t151) * qJ(5) + t109, -t10 * pkin(4) + qJ(5) * t109, t19 * t70, -t70 * t17 - t19 * t68, t70 * t43, t17 * t68, -t68 * t43, 0, t88 * t17 + t46 * t43 + t7 * t68, t88 * t19 - t47 * t43 + t7 * t70, -t1 * t70 - t47 * t17 - t46 * t19 - t2 * t68, t1 * t46 + t2 * t47 + t7 * t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t102, 0, t104, 0, -t76, -t134, 0, 0, t112, t83 - t127, -t125, -t112, -t121, 0, t95 * t120 + (-t86 * t98 - t162) * t102, t98 * t120 + (t147 - t161) * t102, t108, -pkin(4) * t76 + qJ(5) * t108, t61 * t70, -t37 - t148, -t128, t59 * t68, t135, 0, -t46 * t104 + t88 * t59 + t64 * t68, t47 * t104 + t88 * t61 + t64 * t70, -t20 * t70 - t21 * t68 - t46 * t61 - t47 * t59, t20 * t46 + t21 * t47 + t64 * t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t104, -t102, 0, 0, 0, 0, 0, 0, 0, 0, t121, -t125, t83 + t127, t102 * t110 + t153, 0, 0, 0, 0, 0, 0, -t135, -t128, -t37 + t148, -t104 * t88 - t59 * t46 + t61 * t47; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t89, 0.2e1 * t145, 0, t91, 0, 0, 0.2e1 * t161, -0.2e1 * t162, 0.2e1 * t110, qJ(5) ^ 2 * t141 + pkin(4) ^ 2, t70 ^ 2, -0.2e1 * t70 * t68, 0, t68 ^ 2, 0, 0, t68 * t166, t70 * t166, -0.2e1 * t46 * t70 - 0.2e1 * t47 * t68, t46 ^ 2 + t47 ^ 2 + t88 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t29, t31, 0, t10, 0, 0, 0, 0, 0, 0, t17, t19, 0, t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t126, t122, 0, t76, 0, 0, 0, 0, 0, 0, t59, t61, 0, t64; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t104, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t104; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t98, t95, 0, -pkin(4), 0, 0, 0, 0, 0, 0, t68, t70, 0, t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t19, 0, -t17, t43, t1, -t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t61, 0, -t59, -t104, t20, -t21, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t59, -t61, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t70, 0, -t68, 0, t46, -t47, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t8;
