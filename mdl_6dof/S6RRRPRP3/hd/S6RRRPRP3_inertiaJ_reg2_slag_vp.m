% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRRPRP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,theta4]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 16:42
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRRPRP3_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP3_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRP3_inertiaJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 07:39:46
% EndTime: 2019-05-07 07:39:53
% DurationCPUTime: 2.25s
% Computational Cost: add. (2247->179), mult. (4314->296), div. (0->0), fcn. (5037->8), ass. (0->124)
t107 = sin(pkin(10));
t103 = t107 ^ 2;
t108 = cos(pkin(10));
t104 = t108 ^ 2;
t131 = t103 + t104;
t132 = t131 * qJ(4);
t109 = sin(qJ(5));
t133 = t109 * t107;
t159 = cos(qJ(5));
t176 = t159 * t108 - t133;
t120 = (-pkin(9) - qJ(4)) * t107;
t102 = t108 * pkin(9);
t88 = t108 * qJ(4) + t102;
t58 = t109 * t88 - t159 * t120;
t60 = t109 * t120 + t159 * t88;
t125 = t159 * t107;
t80 = t109 * t108 + t125;
t177 = t176 * t60 + t58 * t80;
t181 = 0.2e1 * t177;
t110 = sin(qJ(3));
t158 = t110 * pkin(2);
t95 = qJ(4) + t158;
t160 = -pkin(9) - t95;
t73 = t108 * t95 + t102;
t46 = t109 * t73 - t160 * t125;
t48 = t160 * t133 + t159 * t73;
t178 = t176 * t48 + t46 * t80;
t180 = 0.2e1 * t178;
t179 = t177 + t178;
t111 = sin(qJ(2));
t112 = cos(qJ(3));
t113 = cos(qJ(2));
t85 = t110 * t113 + t112 * t111;
t40 = t80 * t85;
t175 = t40 ^ 2;
t165 = -pkin(8) - pkin(7);
t126 = t165 * t111;
t91 = t165 * t113;
t64 = -t110 * t91 - t112 * t126;
t174 = t64 ^ 2;
t173 = t176 ^ 2;
t83 = t110 * t111 - t112 * t113;
t81 = t83 ^ 2;
t172 = -0.2e1 * t176;
t171 = -0.2e1 * t80;
t170 = 0.2e1 * t83;
t157 = t112 * pkin(2);
t96 = -t108 * pkin(4) - pkin(3);
t87 = t96 - t157;
t169 = 0.2e1 * t87;
t168 = 0.2e1 * t96;
t99 = -t113 * pkin(2) - pkin(1);
t167 = 0.2e1 * t99;
t166 = 0.2e1 * t113;
t135 = t83 * qJ(6);
t137 = t108 * t85;
t50 = t83 * pkin(3) - t85 * qJ(4) + t99;
t66 = t110 * t126 - t112 * t91;
t21 = -t107 * t66 + t108 * t50;
t17 = t83 * pkin(4) - pkin(9) * t137 + t21;
t138 = t107 * t85;
t22 = t107 * t50 + t108 * t66;
t19 = -pkin(9) * t138 + t22;
t8 = t109 * t17 + t159 * t19;
t3 = t135 + t8;
t119 = t109 * t19 - t159 * t17;
t162 = t83 * pkin(5);
t4 = t119 - t162;
t164 = t176 * t3 + t4 * t80;
t163 = t119 * t80 + t176 * t8;
t98 = -pkin(3) - t157;
t161 = pkin(3) - t98;
t156 = t40 * t176;
t42 = t176 * t85;
t155 = t42 * t40;
t153 = t46 * t83;
t152 = t48 * t83;
t150 = t58 * t83;
t149 = t60 * t83;
t148 = t80 * t176;
t147 = t83 * t40;
t146 = t83 * t176;
t49 = -pkin(5) * t176 - t80 * qJ(6) + t96;
t38 = t49 - t157;
t141 = t38 + t49;
t140 = t87 + t96;
t139 = t131 * t95;
t54 = t64 * t107;
t136 = t64 * t108;
t134 = t107 * t108;
t105 = t111 ^ 2;
t106 = t113 ^ 2;
t130 = t105 + t106;
t129 = -0.2e1 * t85 * t83;
t128 = t46 ^ 2 + t48 ^ 2;
t127 = t58 ^ 2 + t60 ^ 2;
t123 = -t48 * t40 + t46 * t42;
t122 = -t60 * t40 + t58 * t42;
t121 = t46 * t58 + t48 * t60;
t34 = pkin(4) * t138 + t64;
t118 = -pkin(3) * t85 - qJ(4) * t83;
t14 = t176 * t42 - t80 * t40;
t117 = -t83 * t95 + t85 * t98;
t9 = -t21 * t107 + t22 * t108;
t92 = 0.2e1 * t134;
t82 = t85 ^ 2;
t76 = t80 ^ 2;
t72 = t108 * t83;
t71 = t107 * t83;
t67 = t85 * t134;
t63 = t80 * t83;
t57 = 0.2e1 * t148;
t56 = -0.2e1 * t148;
t52 = -pkin(5) * t80 + qJ(6) * t176;
t51 = (-t103 + t104) * t85;
t39 = t42 ^ 2;
t30 = t42 * t80;
t27 = t42 * t170;
t26 = t34 * t80;
t25 = t34 * t176;
t12 = t40 * pkin(5) - t42 * qJ(6) + t34;
t11 = t12 * t80;
t10 = t12 * t176;
t1 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t105, t111 * t166, 0, t106, 0, 0, pkin(1) * t166, -0.2e1 * pkin(1) * t111, 0.2e1 * t130 * pkin(7), t130 * pkin(7) ^ 2 + pkin(1) ^ 2, t82, t129, 0, t81, 0, 0, t83 * t167, t85 * t167, 0.2e1 * t64 * t85 - 0.2e1 * t66 * t83, t66 ^ 2 + t99 ^ 2 + t174, t104 * t82, -0.2e1 * t82 * t134, t137 * t170, t103 * t82, t107 * t129, t81, 0.2e1 * t21 * t83 + 0.2e1 * t85 * t54, 0.2e1 * t85 * t136 - 0.2e1 * t22 * t83, 0.2e1 * (-t107 * t22 - t108 * t21) * t85, t21 ^ 2 + t22 ^ 2 + t174, t39, -0.2e1 * t155, t27, t175, -0.2e1 * t147, t81, -0.2e1 * t119 * t83 + 0.2e1 * t34 * t40, 0.2e1 * t34 * t42 - 0.2e1 * t8 * t83, 0.2e1 * t119 * t42 - 0.2e1 * t8 * t40, t119 ^ 2 + t34 ^ 2 + t8 ^ 2, t39, t27, 0.2e1 * t155, t81, 0.2e1 * t147, t175, 0.2e1 * t12 * t40 - 0.2e1 * t4 * t83, -0.2e1 * t3 * t40 + 0.2e1 * t4 * t42, -0.2e1 * t12 * t42 + 0.2e1 * t3 * t83, t12 ^ 2 + t3 ^ 2 + t4 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t111, 0, t113, 0, -t111 * pkin(7), -t113 * pkin(7), 0, 0, 0, 0, t85, 0, -t83, 0, -t64, -t66 (-t110 * t83 - t112 * t85) * pkin(2) (t110 * t66 - t112 * t64) * pkin(2), t67, t51, t71, -t67, t72, 0, t117 * t107 - t136, t117 * t108 + t54, t9, t64 * t98 + t9 * t95, t30, t14, t63, -t156, t146, 0, t87 * t40 - t153 - t25, t87 * t42 - t152 + t26, t123 + t163, t119 * t46 + t34 * t87 + t8 * t48, t30, t63, -t14, 0, -t146, -t156, t38 * t40 - t10 - t153, t123 + t164, -t38 * t42 - t11 + t152, t12 * t38 + t3 * t48 + t4 * t46; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t157, -0.2e1 * t158, 0 (t110 ^ 2 + t112 ^ 2) * pkin(2) ^ 2, t103, t92, 0, t104, 0, 0, -0.2e1 * t98 * t108, 0.2e1 * t98 * t107, 0.2e1 * t139, t131 * t95 ^ 2 + t98 ^ 2, t76, t57, 0, t173, 0, 0, -t176 * t169, t80 * t169, t180, t87 ^ 2 + t128, t76, 0, t56, 0, 0, t173, t38 * t172, t180, t38 * t171, t38 ^ 2 + t128; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t85, 0, -t83, 0, -t64, -t66, 0, 0, t67, t51, t71, -t67, t72, 0, t118 * t107 - t136, t118 * t108 + t54, t9, -t64 * pkin(3) + t9 * qJ(4), t30, t14, t63, -t156, t146, 0, t96 * t40 - t150 - t25, t96 * t42 - t149 + t26, t122 + t163, t119 * t58 + t34 * t96 + t8 * t60, t30, t63, -t14, 0, -t146, -t156, t49 * t40 - t10 - t150, t122 + t164, -t49 * t42 - t11 + t149, t12 * t49 + t3 * t60 + t4 * t58; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t157, -t158, 0, 0, t103, t92, 0, t104, 0, 0, t161 * t108, -t161 * t107, t132 + t139, -t98 * pkin(3) + t95 * t132, t76, t57, 0, t173, 0, 0, -t140 * t176, t140 * t80, t179, t87 * t96 + t121, t76, 0, t56, 0, 0, t173, -t141 * t176, t179, -t141 * t80, t38 * t49 + t121; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t103, t92, 0, t104, 0, 0, 0.2e1 * pkin(3) * t108, -0.2e1 * pkin(3) * t107, 0.2e1 * t132, t131 * qJ(4) ^ 2 + pkin(3) ^ 2, t76, t57, 0, t173, 0, 0, -t176 * t168, t80 * t168, t181, t96 ^ 2 + t127, t76, 0, t56, 0, 0, t173, t49 * t172, t181, t49 * t171, t49 ^ 2 + t127; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t138, t137, 0, t64, 0, 0, 0, 0, 0, 0, t40, t42, 0, t34, 0, 0, 0, 0, 0, 0, t40, 0, -t42, t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t108, t107, 0, t98, 0, 0, 0, 0, 0, 0, -t176, t80, 0, t87, 0, 0, 0, 0, 0, 0, -t176, 0, -t80, t38; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t108, t107, 0, -pkin(3), 0, 0, 0, 0, 0, 0, -t176, t80, 0, t96, 0, 0, 0, 0, 0, 0, -t176, 0, -t80, t49; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t42, 0, -t40, t83, -t119, -t8, 0, 0, 0, t42, 0, t83, t40, 0, -t119 + 0.2e1 * t162, -pkin(5) * t42 - t40 * qJ(6), 0.2e1 * t135 + t8, -t4 * pkin(5) + t3 * qJ(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t80, 0, t176, 0, -t46, -t48, 0, 0, 0, t80, 0, 0, -t176, 0, -t46, t52, t48, -t46 * pkin(5) + t48 * qJ(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t80, 0, t176, 0, -t58, -t60, 0, 0, 0, t80, 0, 0, -t176, 0, -t58, t52, t60, -t58 * pkin(5) + t60 * qJ(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0.2e1 * pkin(5), 0, 0.2e1 * qJ(6), pkin(5) ^ 2 + qJ(6) ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t83, t42, 0, t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t80, 0, t46; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t80, 0, t58; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, -pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1;];
MM_reg  = t1;
