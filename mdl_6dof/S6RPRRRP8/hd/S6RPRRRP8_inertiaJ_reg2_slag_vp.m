% Calculate inertial parameters regressor of joint inertia matrix for
% S6RPRRRP8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 06:25
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RPRRRP8_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRP8_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPRRRP8_inertiaJ_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 01:48:05
% EndTime: 2019-05-06 01:48:10
% DurationCPUTime: 1.79s
% Computational Cost: add. (1093->132), mult. (1884->199), div. (0->0), fcn. (2085->6), ass. (0->102)
t72 = sin(qJ(5));
t67 = t72 ^ 2;
t75 = cos(qJ(5));
t69 = t75 ^ 2;
t96 = t67 + t69;
t73 = sin(qJ(4));
t74 = sin(qJ(3));
t76 = cos(qJ(4));
t77 = cos(qJ(3));
t39 = t73 * t77 + t76 * t74;
t37 = t39 ^ 2;
t41 = -t73 * t74 + t76 * t77;
t38 = t41 ^ 2;
t132 = t37 + t38;
t134 = t132 * t75;
t118 = t73 * pkin(3);
t60 = pkin(9) + t118;
t99 = t96 * t60;
t97 = t96 * pkin(9);
t133 = (t39 * t73 + t41 * t76) * pkin(3);
t131 = t132 * t72;
t78 = -pkin(1) - pkin(7);
t114 = -pkin(8) + t78;
t45 = t114 * t74;
t91 = t114 * t77;
t17 = t73 * t45 - t76 * t91;
t130 = t17 ^ 2;
t129 = 0.2e1 * t41;
t58 = t74 * pkin(3) + qJ(2);
t128 = 0.2e1 * t58;
t127 = -0.2e1 * t72;
t126 = -0.2e1 * t75;
t125 = 0.2e1 * qJ(2);
t124 = pkin(9) * t39;
t123 = t39 * pkin(5);
t122 = t41 * pkin(4);
t86 = pkin(5) * t72 - t75 * qJ(6);
t7 = t86 * t41 + t17;
t121 = t7 * t72;
t120 = t7 * t75;
t119 = t72 * pkin(9);
t117 = t75 * pkin(9);
t116 = t76 * pkin(3);
t61 = -pkin(4) - t116;
t115 = pkin(4) - t61;
t11 = t39 * pkin(4) - t41 * pkin(9) + t58;
t19 = t76 * t45 + t73 * t91;
t6 = t72 * t11 + t75 * t19;
t113 = t17 * t41;
t112 = t17 * t75;
t111 = t39 * t60;
t87 = -t75 * pkin(5) - t72 * qJ(6);
t46 = -pkin(4) + t87;
t35 = t46 - t116;
t110 = t41 * t35;
t109 = t41 * t46;
t108 = t41 * t61;
t34 = t72 * t41;
t107 = t72 * t60;
t106 = t72 * t75;
t33 = t75 * t41;
t105 = t75 * t60;
t104 = t99 * t39;
t103 = t97 * t39;
t102 = -t35 - t46;
t101 = t99 * pkin(9);
t100 = t96 * t60 ^ 2;
t98 = t96 * pkin(9) ^ 2;
t68 = t74 ^ 2;
t70 = t77 ^ 2;
t54 = t68 + t70;
t95 = t39 * qJ(6);
t94 = t39 * t34;
t93 = t38 * t106;
t90 = -t75 * t11 + t72 * t19;
t89 = -t122 - t124;
t3 = t95 + t6;
t4 = t90 - t123;
t1 = t3 * t75 + t4 * t72;
t2 = t6 * t75 + t72 * t90;
t88 = -t109 + t124;
t85 = -t19 * t39 + t113;
t84 = t110 - t111;
t83 = t108 - t111;
t79 = qJ(2) ^ 2;
t56 = -0.2e1 * t106;
t55 = 0.2e1 * t106;
t44 = 0.2e1 * t97;
t43 = t54 * t78;
t32 = t75 * t39;
t30 = t69 * t38;
t29 = t72 * t39;
t28 = t67 * t38;
t25 = t72 * t33;
t24 = 0.2e1 * t99;
t21 = t97 + t99;
t16 = 0.2e1 * t39 * t33;
t15 = t17 * t72;
t13 = t96 * t39;
t12 = (t67 - t69) * t41;
t8 = t96 * t37 + t38;
t5 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, -2 * pkin(1), t125 (pkin(1) ^ 2) + t79, t70, -0.2e1 * t77 * t74, 0, t68, 0, 0, t74 * t125, t77 * t125, -0.2e1 * t43, t54 * t78 ^ 2 + t79, t38, -0.2e1 * t41 * t39, 0, t37, 0, 0, t39 * t128, t41 * t128, 0.2e1 * t85, t19 ^ 2 + t58 ^ 2 + t130, t30, -0.2e1 * t93, t16, t28, -0.2e1 * t94, t37, 0.2e1 * t17 * t34 - 0.2e1 * t39 * t90, 0.2e1 * t17 * t33 - 0.2e1 * t6 * t39 (-t6 * t72 + t75 * t90) * t129, t6 ^ 2 + t90 ^ 2 + t130, t30, t16, 0.2e1 * t93, t37, 0.2e1 * t94, t28, 0.2e1 * t7 * t34 - 0.2e1 * t4 * t39 (-t3 * t72 + t4 * t75) * t129, 0.2e1 * t3 * t39 - 0.2e1 * t7 * t33, t3 ^ 2 + t4 ^ 2 + t7 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, -pkin(1), 0, 0, 0, 0, 0, 0, 0, 0, -t54, t43, 0, 0, 0, 0, 0, 0, 0, 0, -t132, -t85, 0, 0, 0, 0, 0, 0, -t131, -t134, 0, t2 * t39 - t113, 0, 0, 0, 0, 0, 0, -t131, 0, t134, t1 * t39 - t7 * t41; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t54, 0, 0, 0, 0, 0, 0, 0, 0, 0, t132, 0, 0, 0, 0, 0, 0, 0, 0, 0, t8, 0, 0, 0, 0, 0, 0, 0, 0, 0, t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t77, 0, -t74, 0, t77 * t78, -t74 * t78, 0, 0, 0, 0, t41, 0, -t39, 0, -t17, -t19, -t133 (-t17 * t76 + t19 * t73) * pkin(3), t25, -t12, t29, -t25, t32, 0, t72 * t83 - t112, t75 * t83 + t15, t2, t17 * t61 + t2 * t60, t25, t29, t12, 0, -t32, -t25, t84 * t72 - t120, t1, -t84 * t75 - t121, t1 * t60 + t7 * t35; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t77, -t74, 0, 0, 0, 0, 0, 0, 0, 0, t41, -t39, 0, t133, 0, 0, 0, 0, 0, 0, t33, -t34, t13, t104 - t108, 0, 0, 0, 0, 0, 0, t33, t13, t34, t104 - t110; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t116, -0.2e1 * t118, 0 (t73 ^ 2 + t76 ^ 2) * pkin(3) ^ 2, t67, t55, 0, t69, 0, 0, t61 * t126, 0.2e1 * t61 * t72, t24, t61 ^ 2 + t100, t67, 0, t56, 0, 0, t69, t35 * t126, t24, t35 * t127, t35 ^ 2 + t100; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t41, 0, -t39, 0, -t17, -t19, 0, 0, t25, -t12, t29, -t25, t32, 0, t89 * t72 - t112, t89 * t75 + t15, t2, -t17 * pkin(4) + t2 * pkin(9), t25, t29, t12, 0, -t32, -t25, -t88 * t72 - t120, t1, t88 * t75 - t121, t1 * pkin(9) + t7 * t46; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t41, -t39, 0, 0, 0, 0, 0, 0, 0, 0, t33, -t34, t13, t103 + t122, 0, 0, 0, 0, 0, 0, t33, t13, t34, t103 - t109; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t116, -t118, 0, 0, t67, t55, 0, t69, 0, 0, t115 * t75, -t115 * t72, t21, -t61 * pkin(4) + t101, t67, 0, t56, 0, 0, t69, t102 * t75, t21, t102 * t72, t35 * t46 + t101; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t67, t55, 0, t69, 0, 0, 0.2e1 * pkin(4) * t75, pkin(4) * t127, t44, pkin(4) ^ 2 + t98, t67, 0, t56, 0, 0, t69, t46 * t126, t44, t46 * t127, t46 ^ 2 + t98; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t33, 0, -t34, t39, -t90, -t6, 0, 0, 0, t33, 0, t39, t34, 0, -t90 + 0.2e1 * t123, t87 * t41, 0.2e1 * t95 + t6, -t4 * pkin(5) + t3 * qJ(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t29, -t32, 0, 0, 0, 0, 0, 0, 0, 0, -t29, 0, t32, -t86 * t39; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t72, 0, t75, 0, -t107, -t105, 0, 0, 0, t72, 0, 0, -t75, 0, -t107, -t86, t105, -t86 * t60; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t72, 0, t75, 0, -t119, -t117, 0, 0, 0, t72, 0, 0, -t75, 0, -t119, -t86, t117, -t86 * pkin(9); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0.2e1 * pkin(5), 0, 0.2e1 * qJ(6), pkin(5) ^ 2 + qJ(6) ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t39, t33, 0, t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t29; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t72, 0, t107; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t72, 0, t119; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, -pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1;];
MM_reg  = t5;
