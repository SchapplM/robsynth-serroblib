% Calculate minimal parameter regressor of coriolis matrix for
% S6PRPRRP5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d5,theta1]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x25]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2021-01-16 01:52
% Revision: 24b2e7d74a0c1a3b64fa2f8f5ad758691ad61af3 (2021-01-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRPRRP5_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRP5_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRRP5_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6PRPRRP5_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2021-01-16 01:51:55
% EndTime: 2021-01-16 01:52:11
% DurationCPUTime: 5.35s
% Computational Cost: add. (3802->437), mult. (8826->651), div. (0->0), fcn. (8532->8), ass. (0->355)
t324 = cos(qJ(4));
t320 = sin(qJ(5));
t314 = t320 ^ 2;
t323 = cos(qJ(5));
t316 = t323 ^ 2;
t515 = -t316 / 0.2e1;
t375 = t314 / 0.2e1 + t515;
t236 = t375 * t324;
t321 = sin(qJ(4));
t366 = t321 * pkin(4) - t324 * pkin(9);
t352 = qJ(3) + t366;
t241 = t323 * t352;
t326 = -pkin(2) - pkin(8);
t468 = t320 * t326;
t374 = pkin(5) - t468;
t459 = t323 * t324;
t409 = qJ(6) * t459;
t138 = t374 * t321 + t241 - t409;
t463 = t321 * t326;
t184 = t320 * t463 - t241;
t154 = t184 + t409;
t530 = t154 + t138;
t290 = t316 + t314;
t318 = sin(pkin(6));
t322 = sin(qJ(2));
t475 = t318 * t322;
t388 = -t475 / 0.2e1;
t325 = cos(qJ(2));
t474 = t318 * t325;
t412 = t321 * t474;
t319 = cos(pkin(6));
t473 = t319 * t324;
t228 = -t412 + t473;
t487 = t228 * t323;
t415 = t320 * t475;
t159 = t415 + t487;
t522 = t159 / 0.2e1;
t46 = (t320 * t388 + t522 - t487 / 0.2e1) * t324;
t453 = t46 * qJD(1);
t458 = t323 * t326;
t410 = t321 * t458;
t185 = t320 * t352 + t410;
t506 = t324 * pkin(4);
t508 = t321 * pkin(9);
t271 = t506 + t508;
t258 = t320 * t271;
t457 = t324 * t326;
t277 = t323 * t457;
t80 = t185 * t324 + (-t277 + t258) * t321;
t529 = -t80 * qJD(2) - t453;
t462 = t322 * t323;
t414 = t318 * t462;
t488 = t228 * t320;
t158 = -t414 + t488;
t387 = t475 / 0.2e1;
t47 = (t323 * t387 + t158 / 0.2e1 - t488 / 0.2e1) * t324;
t452 = t47 * qJD(1);
t259 = t323 * t271;
t408 = t320 * t457;
t79 = -t184 * t324 + (t259 + t408) * t321;
t528 = t79 * qJD(2) - t452;
t467 = t321 * qJ(6);
t160 = t320 * t467 + t258 + t277;
t373 = t320 * pkin(5) - t326;
t243 = t373 * t321;
t244 = t373 * t324;
t484 = t244 * t323;
t469 = t320 * t324;
t155 = -qJ(6) * t469 + t185;
t494 = t155 * t324;
t51 = t494 + t243 * t459 + (t160 + t484) * t321;
t527 = -t51 * qJD(2) - t453;
t461 = t323 * qJ(6);
t148 = t321 * t461 + t374 * t324 + t259;
t486 = t243 * t324;
t50 = t138 * t324 + t148 * t321 + (-t244 * t321 - t486) * t320;
t526 = t50 * qJD(2) - t452;
t291 = t316 - t314;
t411 = t320 * t459;
t372 = 0.2e1 * t411;
t334 = qJD(2) * t372 - t291 * qJD(4);
t525 = t148 / 0.2e1;
t524 = -t158 / 0.2e1;
t455 = t325 * t323;
t465 = t321 * t322;
t188 = (-t320 * t465 + t455) * t318;
t521 = t188 / 0.2e1;
t520 = t244 / 0.2e1;
t504 = pkin(9) + qJ(6);
t268 = t504 * t320;
t519 = t268 / 0.2e1;
t269 = t504 * t323;
t518 = -t269 / 0.2e1;
t317 = t324 ^ 2;
t307 = t317 * t323;
t517 = -t307 / 0.2e1;
t514 = -t320 / 0.2e1;
t513 = t320 / 0.2e1;
t512 = t321 / 0.2e1;
t511 = -t323 / 0.2e1;
t510 = t323 / 0.2e1;
t509 = -t324 / 0.2e1;
t507 = t323 * pkin(5);
t213 = (0.1e1 / 0.2e1 + t515 - t314 / 0.2e1) * t321;
t227 = t319 * t321 + t324 * t474;
t491 = t159 * t323;
t493 = t158 * t320;
t347 = t493 / 0.2e1 + t491 / 0.2e1;
t24 = (-t228 / 0.2e1 + t347) * t324 + t227 * t213;
t503 = t24 * qJD(4);
t315 = t321 ^ 2;
t417 = -t317 / 0.2e1 - 0.1e1 / 0.2e1;
t212 = (-t315 / 0.2e1 + t417) * t320;
t382 = -t465 / 0.2e1;
t456 = t325 * t320;
t331 = (t323 * t382 - t456 / 0.2e1) * t318;
t385 = t469 / 0.2e1;
t391 = t321 * t524;
t341 = t227 * t385 + t391;
t65 = t331 + t341;
t448 = t65 * qJD(1);
t502 = t212 * qJD(3) + t448;
t214 = t307 / 0.2e1 + (0.1e1 / 0.2e1 + t315 / 0.2e1) * t323;
t332 = (t320 * t382 + t455 / 0.2e1) * t318;
t378 = t459 / 0.2e1;
t370 = t227 * t378;
t492 = t159 * t321;
t340 = -t492 / 0.2e1 + t370;
t64 = t332 - t340;
t449 = t64 * qJD(1);
t501 = t214 * qJD(3) + t449;
t476 = t317 * t320;
t215 = t315 * t513 + t476 / 0.2e1 + t514;
t500 = t215 * qJD(3) - t448;
t460 = t323 * t315;
t217 = -t460 / 0.2e1 + t517 + t510;
t499 = t217 * qJD(3) - t449;
t498 = t138 * t323;
t376 = t154 / 0.2e1 + t138 / 0.2e1;
t416 = pkin(5) * t512;
t15 = (t416 + t376) * t323;
t497 = t15 * qJD(2);
t496 = t154 * t321;
t495 = t155 * t320;
t490 = t188 * t321;
t464 = t321 * t323;
t109 = t138 * t464;
t471 = t320 * t321;
t129 = t155 * t471;
t377 = -t109 / 0.2e1 - t129 / 0.2e1;
t392 = t495 / 0.2e1;
t20 = t321 * t392 + (-t496 / 0.2e1 + t417 * pkin(5)) * t323 + t377;
t489 = t20 * qJD(2);
t100 = t227 * t320;
t485 = t244 * t320;
t483 = t268 * t321;
t482 = t268 * t324;
t481 = t269 * t321;
t480 = t269 * t324;
t108 = t138 * t469;
t29 = -t154 * t469 - t108;
t479 = t29 * qJD(2);
t308 = -pkin(4) - t507;
t478 = t308 * t320;
t477 = t308 * t323;
t472 = t320 * t269;
t470 = t320 * t323;
t466 = t321 * t308;
t189 = (t321 * t462 + t456) * t318;
t413 = t324 * t475;
t34 = -t158 * t188 + t159 * t189 - t227 * t413;
t454 = t34 * qJD(1);
t78 = -t155 * t321 + (pkin(5) * t476 + t244 * t324) * t323;
t447 = t78 * qJD(2);
t84 = -t316 * t317 * pkin(5) + t244 * t469 - t496;
t444 = t84 * qJD(2);
t289 = t315 - t317;
t443 = qJD(2) * qJ(3);
t442 = qJD(2) * t318;
t441 = qJD(3) * t321;
t440 = qJD(5) * t320;
t310 = qJD(5) * t323;
t130 = -t184 * t321 - t317 * t468;
t439 = t130 * qJD(2);
t131 = -t185 * t321 - t317 * t458;
t438 = t131 * qJD(2);
t437 = t155 * qJD(5);
t436 = t159 * qJD(5);
t197 = t212 * qJD(2);
t199 = t214 * qJD(2);
t435 = t227 * qJD(4);
t253 = t290 * t317;
t434 = t253 * qJD(2);
t255 = t290 * t324;
t433 = t255 * qJD(2);
t256 = t289 * t320;
t432 = t256 * qJD(2);
t257 = -t307 + t460;
t431 = t257 * qJD(2);
t430 = t269 * qJD(5);
t429 = t289 * qJD(2);
t428 = t290 * qJD(4);
t427 = t320 * qJD(4);
t426 = t320 * qJD(6);
t425 = t321 * qJD(2);
t424 = t321 * qJD(4);
t423 = t323 * qJD(4);
t422 = t323 * qJD(6);
t421 = t324 * qJD(2);
t420 = t324 * qJD(4);
t419 = t324 * qJD(5);
t239 = -t258 / 0.2e1;
t418 = t239 - t277 / 0.2e1;
t407 = qJ(3) * t425;
t406 = qJ(3) * t421;
t405 = t321 * t440;
t404 = t320 * t419;
t403 = t321 * t310;
t402 = t323 * t419;
t288 = t322 * t442;
t401 = t325 * t442;
t400 = t320 * t420;
t399 = t320 * t310;
t398 = t320 * t423;
t397 = t323 * t420;
t396 = t324 * t422;
t395 = t321 * t420;
t394 = t321 * t421;
t393 = t154 * t511;
t390 = t158 * t511;
t389 = -t485 / 0.2e1;
t386 = -t469 / 0.2e1;
t384 = -t468 / 0.2e1;
t383 = -t467 / 0.2e1;
t381 = t464 / 0.2e1;
t380 = t461 / 0.2e1;
t379 = -t459 / 0.2e1;
t371 = qJD(5) + t425;
t369 = t317 * t387;
t368 = t324 * t388;
t367 = t324 * t387;
t364 = qJD(4) * t372;
t363 = t155 * t510 + t243 / 0.2e1;
t362 = -t480 / 0.2e1 - t138 / 0.2e1;
t327 = (t138 * t513 - t363) * t227 + t148 * t524 + t160 * t522 + t228 * t520;
t329 = t188 * t519 + t189 * t518 + t308 * t367;
t2 = t327 + t329;
t25 = t138 * t148 + t155 * t160 - t244 * t243;
t361 = t2 * qJD(1) + t25 * qJD(2);
t3 = t376 * t159 + (t227 * t379 + t521) * pkin(5);
t30 = t244 * pkin(5) * t459 - t530 * t155;
t360 = -t3 * qJD(1) + t30 * qJD(2);
t339 = t308 * t379 + t389;
t7 = t376 * t269 + (t525 + t339) * pkin(5);
t88 = pkin(5) * t478;
t359 = -t7 * qJD(2) + t88 * qJD(4);
t28 = -t109 - t129 + (t148 * t323 + t160 * t320) * t324;
t38 = (t391 - t189 / 0.2e1) * t323 + (t492 / 0.2e1 + t521) * t320;
t358 = t38 * qJD(1) - t28 * qJD(2);
t345 = t188 * t514 + t189 * t510;
t346 = t159 * t513 + t390;
t31 = t345 * t321 - t346 + t369;
t73 = t495 + t498;
t357 = t31 * qJD(1) - t73 * qJD(2);
t58 = (t388 + t346) * t324;
t68 = t73 * t324;
t356 = -t58 * qJD(1) - t68 * qJD(2);
t33 = (t228 - t491 - t493) * t227;
t355 = t33 * qJD(1) + t24 * qJD(3);
t168 = t268 * t320 + t269 * t323;
t224 = pkin(5) * t470 - t478;
t240 = t259 / 0.2e1;
t52 = t240 + t389 + (t380 + t269 / 0.2e1) * t321 + (t384 - t477 / 0.2e1 + (0.1e1 - t375) * pkin(5)) * t324;
t354 = -t52 * qJD(2) - t224 * qJD(4);
t237 = t314 * pkin(5) + t477;
t337 = -pkin(5) * t411 - t484 / 0.2e1 - t483 / 0.2e1;
t54 = (t383 + t308 * t324 / 0.2e1) * t320 + t337 + t418;
t353 = -t54 * qJD(2) + t237 * qJD(4);
t351 = t508 / 0.2e1 + t506 / 0.2e1;
t342 = t351 * t320;
t156 = t258 / 0.2e1 + t342;
t350 = pkin(4) * t423 - t156 * qJD(2);
t343 = t351 * t323;
t157 = -t259 / 0.2e1 - t343;
t349 = pkin(4) * t427 - t157 * qJD(2);
t348 = (t155 / 0.2e1 + t482 / 0.2e1) * t323;
t205 = t371 * t469;
t344 = -t236 * qJD(2) + t398;
t252 = t323 * t421 + t427;
t251 = t320 * t421 - t423;
t338 = t473 / 0.2e1 - t412 / 0.2e1;
t336 = t317 * qJD(2) * t470 + t236 * qJD(4);
t254 = t291 * t317;
t335 = t254 * qJD(2) + t364;
t328 = (t148 * t514 + t160 * t510 + t520) * t321 - t108 / 0.2e1;
t10 = t486 / 0.2e1 - t472 / 0.2e1 + (t494 / 0.2e1 + t519) * t323 + t328;
t173 = (-0.1e1 + t290) * t324 * t321;
t333 = t24 * qJD(1) + t10 * qJD(2) + t173 * qJD(3);
t40 = -t463 / 0.2e1 + t348 + (t416 + t362) * t320;
t56 = t338 - t347;
t330 = -t56 * qJD(1) + t40 * qJD(2) - t213 * qJD(3) + t168 * qJD(4);
t306 = t420 / 0.2e1;
t302 = t323 * t425;
t301 = t323 * t441;
t300 = t320 * t425;
t242 = (t425 + qJD(5) / 0.2e1) * t324;
t231 = t252 * pkin(5);
t230 = t320 * t424 - t402;
t229 = -t321 * t423 - t404;
t226 = t236 * qJD(5);
t216 = (0.1e1 + t290) * t512;
t207 = t371 * t459;
t206 = t252 * t321;
t204 = t251 * t321;
t166 = -t214 * qJD(5) - t302;
t165 = t217 * qJD(5) + t302;
t164 = t215 * qJD(5) - t300;
t163 = -t212 * qJD(5) + t300;
t133 = -t400 - t403 - t199;
t132 = -t397 + t405 - t197;
t114 = t240 - t343 - t408;
t113 = -t277 + t239 + t342;
t110 = pkin(5) * t469;
t102 = t227 * t323;
t67 = t332 + t340;
t66 = t331 - t341;
t59 = t158 * t378 + t159 * t386 + t368;
t57 = t338 + t347;
t55 = t308 * t386 + t320 * t383 - t337 + t418;
t53 = -t481 / 0.2e1 + t240 + t321 * t380 + (pkin(5) + t384) * t324 - t339 + pkin(5) * t236;
t49 = t159 * t509 + t228 * t378 + t320 * t368;
t48 = t158 * t509 + t228 * t385 + t323 * t367;
t39 = t463 / 0.2e1 - pkin(5) * t471 / 0.2e1 + t348 + t362 * t320;
t37 = t321 * t346 + t345;
t36 = t65 * qJD(2);
t35 = t64 * qJD(2);
t32 = t390 + t189 * t381 + t369 + (t522 - t490 / 0.2e1) * t320;
t27 = t67 * qJD(2) + t100 * qJD(4) - t436;
t26 = t66 * qJD(2) + t102 * qJD(4) + t158 * qJD(5);
t22 = t47 * qJD(2);
t21 = t46 * qJD(2);
t19 = pkin(5) * t517 + t507 / 0.2e1 + (t393 + t392) * t321 + t377;
t18 = t49 * qJD(2) + t102 * qJD(5) + t228 * t427;
t17 = t48 * qJD(2) + t100 * qJD(5) - t228 * t423;
t16 = t393 - t498 / 0.2e1 + pkin(5) * t381;
t14 = -t46 * qJD(4) - t65 * qJD(5);
t13 = -t47 * qJD(4) - t64 * qJD(5);
t12 = pkin(5) * t100;
t9 = t472 / 0.2e1 + t268 * t511 + t363 * t324 + t328;
t8 = t530 * t518 + (t308 * t378 + t485 / 0.2e1 + t525) * pkin(5);
t6 = (-t189 * t321 - t317 * t414) * qJD(2) + t49 * qJD(4) + t66 * qJD(5);
t5 = (-t317 * t415 + t490) * qJD(2) + t48 * qJD(4) + t67 * qJD(5);
t4 = -t530 * t159 / 0.2e1 + (t370 + t521) * pkin(5);
t1 = t327 - t329;
t11 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t34 * qJD(2) + t33 * qJD(4); 0, 0, -t288, -t401, t288, t401, ((-pkin(2) * t322 + qJ(3) * t325) * qJD(2) + t322 * qJD(3)) * t318, 0, 0, 0, 0, 0, (t322 * t420 + t325 * t425) * t318, (-t322 * t424 + t325 * t421) * t318, 0, 0, 0, 0, 0, t5, t6, t5, t6, t37 * qJD(4) + (-t188 * t323 - t189 * t320) * t421, t454 + (t188 * t138 + t189 * t155 - t244 * t413) * qJD(2) + t32 * qJD(3) + t1 * qJD(4) + t4 * qJD(5) + t59 * qJD(6); 0, 0, 0, 0, 0, 0, t288, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t32 * qJD(2) + t503; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t228 * qJD(4) + t288 * t324, -t288 * t321 + t435, 0, 0, 0, 0, 0, t17, t18, t17, t18, t37 * qJD(2) - t290 * t435, t1 * qJD(2) + (-t168 * t227 + t228 * t308) * qJD(4) + t12 * qJD(5) + t57 * qJD(6) + t355; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t27, t26, t27, t26, 0, -pkin(5) * t436 + t4 * qJD(2) + t12 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t59 * qJD(2) + t57 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t13, t14, t13, t14, t38 * qJD(4), -t31 * qJD(3) + t2 * qJD(4) - t3 * qJD(5) - t58 * qJD(6) - t454; 0, 0, 0, 0, 0, qJD(3), qJ(3) * qJD(3), -t395, t289 * qJD(4), 0, 0, 0, qJ(3) * t420 + t441, -qJ(3) * t424 + qJD(3) * t324, -t316 * t395 - t317 * t399, -t254 * qJD(5) + t321 * t364, -t257 * qJD(4) - t321 * t404, t256 * qJD(4) - t321 * t402, t395, t79 * qJD(4) + t131 * qJD(5) + t301, -t80 * qJD(4) - t130 * qJD(5) - t320 * t441, t50 * qJD(4) + t78 * qJD(5) - t321 * t396 + t301, -t51 * qJD(4) - t84 * qJD(5) + (qJD(6) * t324 - qJD(3)) * t471, -t255 * qJD(3) - t28 * qJD(4) - t29 * qJD(5) + t253 * qJD(6), t73 * qJD(3) + t25 * qJD(4) + t30 * qJD(5) - t68 * qJD(6); 0, 0, 0, 0, 0, qJD(2), t443, 0, 0, 0, 0, 0, t425, t421, 0, 0, 0, 0, 0, t165, t164, t165, t164, -t433, t9 * qJD(4) + t19 * qJD(5) - t357; 0, 0, 0, 0, 0, 0, 0, -t394, t429, -t424, -t420, 0, -t326 * t424 + t406, -t326 * t420 - t407, -t226 + (-t316 * t421 - t398) * t321, t334 * t321 - 0.2e1 * t324 * t399, t400 - t431, t397 + t432, t242, (t320 * t366 - t410) * qJD(4) + t114 * qJD(5) + t528, (-pkin(9) * t459 + (pkin(4) * t323 + t468) * t321) * qJD(4) + t113 * qJD(5) + t529, (t243 * t323 - t320 * t466 - t482) * qJD(4) + t53 * qJD(5) - t321 * t426 + t526, (-t243 * t320 - t308 * t464 - t480) * qJD(4) + t55 * qJD(5) - t321 * t422 + t527, ((t160 - t483) * t323 + (-t148 + t481) * t320) * qJD(4) + t16 * qJD(5) + t358, t9 * qJD(3) + (-t148 * t268 + t160 * t269 - t243 * t308) * qJD(4) + t8 * qJD(5) + t39 * qJD(6) + t361; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t336, -t335, -t205, -t207, t306, t114 * qJD(4) - t185 * qJD(5) + t438 + t499, t113 * qJD(4) + t184 * qJD(5) - t439 + t500, t53 * qJD(4) - t437 + t447 + t499, t55 * qJD(4) + t154 * qJD(5) - t444 + t500, pkin(5) * t404 + t16 * qJD(4) - t479, -pkin(5) * t437 + t19 * qJD(3) + t8 * qJD(4) + t360; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t206, t204, t434, t39 * qJD(4) + t356; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t31 * qJD(2) + t503; 0, 0, 0, 0, 0, -qJD(2), -t443, 0, 0, 0, 0, 0, -t425, -t421, 0, 0, 0, 0, 0, t166, t163, t166, t163, t433, t10 * qJD(4) + t20 * qJD(5) + t357; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t173 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t424, -t420, 0, 0, 0, 0, 0, t229, t230, t229, t230, t255 * qJD(4), (t168 * t324 + t466) * qJD(4) - t110 * qJD(5) + t216 * qJD(6) + t333; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t133, t132, t133, t132, 0, -pkin(5) * t403 - t110 * qJD(4) + t489; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t216 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t22, t21, t22, t21, -t38 * qJD(2), -t2 * qJD(2) - t56 * qJD(6) - t355; 0, 0, 0, 0, 0, 0, 0, t394, -t429, 0, 0, 0, -t406, t407, t316 * t394 - t226, -0.2e1 * t323 * t205, t403 + t431, -t405 - t432, -t242, t157 * qJD(5) - t528, t156 * qJD(5) - t529, -t52 * qJD(5) - t526, -t54 * qJD(5) - t527, -qJD(5) * t15 - t358, -t10 * qJD(3) - t7 * qJD(5) + qJD(6) * t40 - t361; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t213 * qJD(6) - t333; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t399, t291 * qJD(5), 0, 0, 0, -pkin(4) * t440, -pkin(4) * t310, -t224 * qJD(5), t237 * qJD(5), t290 * qJD(6), t88 * qJD(5) + t168 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t344, -t334, t302 + t310, -t300 - t440, -t421 / 0.2e1, -pkin(9) * t310 - t349, pkin(9) * t440 - t350, t354 - t430, t268 * qJD(5) + t353, -pkin(5) * t310 - t497, -pkin(5) * t430 + t359; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t428, t330; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t35, t36, t35, t36, 0, t3 * qJD(2); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t336, t335, t204, t206, t306, -t157 * qJD(4) - t438 + t501, -t156 * qJD(4) + t439 + t502, t52 * qJD(4) - t396 - t447 + t501, t54 * qJD(4) + t324 * t426 + t444 + t502, t15 * qJD(4) + t479, -pkin(5) * t396 - t20 * qJD(3) + t7 * qJD(4) - t360; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t199, t197, t199, t197, 0, -t489; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t344, t334, -t302, t300, t421 / 0.2e1, t349, t350, -t354 - t426, -t353 - t422, t497, -pkin(5) * t426 - t359; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t252, t251, 0, -t231; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t58 * qJD(2) + t56 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t207, -t205, -t434, pkin(5) * t402 - t40 * qJD(4) - t356; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t213 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t440, t310, -t428, pkin(5) * t440 - t330; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t252, -t251, 0, t231; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t11;
