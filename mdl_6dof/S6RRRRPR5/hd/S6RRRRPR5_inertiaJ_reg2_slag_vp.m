% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRRRPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d6]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 22:17
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRRRPR5_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR5_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRPR5_inertiaJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 20:30:53
% EndTime: 2019-05-07 20:31:05
% DurationCPUTime: 2.77s
% Computational Cost: add. (2002->199), mult. (3741->327), div. (0->0), fcn. (4250->8), ass. (0->132)
t116 = sin(qJ(4));
t111 = t116 ^ 2;
t120 = cos(qJ(4));
t113 = t120 ^ 2;
t179 = t111 + t113;
t117 = sin(qJ(3));
t159 = t117 * pkin(2);
t98 = pkin(9) + t159;
t149 = t179 * t98;
t178 = -t120 * pkin(4) - t116 * qJ(5);
t115 = sin(qJ(6));
t119 = cos(qJ(6));
t74 = -t115 * t120 + t119 * t116;
t121 = cos(qJ(3));
t118 = sin(qJ(2));
t165 = -pkin(8) - pkin(7);
t133 = t165 * t118;
t122 = cos(qJ(2));
t87 = t165 * t122;
t46 = -t117 * t87 - t121 * t133;
t177 = t46 ^ 2;
t72 = t117 * t118 - t121 * t122;
t176 = t72 ^ 2;
t70 = t115 * t116 + t119 * t120;
t175 = 0.2e1 * t70;
t174 = -0.2e1 * t72;
t173 = 0.2e1 * t72;
t172 = 0.2e1 * t74;
t75 = t117 * t122 + t121 * t118;
t171 = 0.2e1 * t75;
t100 = -t122 * pkin(2) - pkin(1);
t170 = 0.2e1 * t100;
t169 = -0.2e1 * t116;
t168 = -0.2e1 * t120;
t167 = 0.2e1 * t122;
t166 = -pkin(4) - pkin(5);
t33 = t72 * pkin(3) - t75 * pkin(9) + t100;
t49 = t117 * t133 - t121 * t87;
t154 = t116 * t49 - t120 * t33;
t60 = t120 * t75;
t7 = -pkin(10) * t60 + t166 * t72 + t154;
t16 = t116 * t33 + t120 * t49;
t63 = t72 * qJ(5);
t12 = t63 + t16;
t148 = t116 * t75;
t9 = pkin(10) * t148 + t12;
t3 = -t115 * t9 + t119 * t7;
t4 = t115 * t7 + t119 * t9;
t164 = -t3 * t74 - t4 * t70;
t163 = pkin(9) * t72;
t162 = t72 * pkin(4);
t110 = t121 * pkin(2);
t99 = -t110 - pkin(3);
t161 = pkin(3) - t99;
t160 = t116 * pkin(9);
t158 = t120 * pkin(10);
t157 = t72 * t98;
t131 = (-pkin(10) + t98) * t116;
t92 = t120 * t98;
t64 = t92 - t158;
t30 = t115 * t64 - t119 * t131;
t32 = t115 * t131 + t119 * t64;
t156 = t30 * t74 - t32 * t70;
t132 = (pkin(9) - pkin(10)) * t116;
t107 = t120 * pkin(9);
t86 = t107 - t158;
t44 = t115 * t86 - t119 * t132;
t48 = t115 * t132 + t119 * t86;
t155 = t44 * t74 - t48 * t70;
t108 = t120 * pkin(5);
t135 = pkin(3) - t178;
t61 = -t110 - t135;
t51 = t108 - t61;
t62 = t108 + t135;
t153 = t51 + t62;
t152 = -t61 + t135;
t151 = t149 * pkin(9);
t150 = t179 * t98 ^ 2;
t147 = t116 * t98;
t140 = t120 * qJ(5);
t126 = pkin(4) * t116 - t140;
t17 = t126 * t75 + t46;
t146 = t17 * t116;
t145 = t17 * t120;
t39 = t46 * t116;
t144 = t46 * t120;
t142 = t116 * t120;
t139 = t179 * pkin(9) ^ 2;
t138 = t179 * pkin(9);
t112 = t118 ^ 2;
t114 = t122 ^ 2;
t137 = t112 + t114;
t136 = t72 * t148;
t69 = t75 ^ 2;
t134 = t69 * t142;
t130 = -pkin(3) * t75 - t163;
t129 = t135 * t75 + t163;
t128 = t61 * t75 - t157;
t127 = t75 * t99 - t157;
t13 = t154 - t162;
t5 = t13 * t116 + t12 * t120;
t6 = t116 * t154 + t16 * t120;
t94 = -0.2e1 * t142;
t93 = 0.2e1 * t142;
t81 = t119 * qJ(5) + t115 * t166;
t79 = qJ(5) * t115 - t119 * t166;
t78 = 0.2e1 * t138;
t68 = t74 ^ 2;
t65 = t70 ^ 2;
t59 = t120 * t72;
t57 = t113 * t69;
t56 = t116 * t72;
t55 = t111 * t69;
t53 = t75 * t142;
t50 = 0.2e1 * t149;
t43 = t72 * t74;
t42 = t70 * t72;
t41 = -0.2e1 * t70 * t74;
t40 = t138 + t149;
t36 = t60 * t173;
t35 = (t111 - t113) * t75;
t34 = -t115 * t70 - t119 * t74;
t27 = t70 * t75;
t25 = t74 * t75;
t20 = -t70 * t81 + t74 * t79;
t19 = t27 * t74;
t18 = t25 * t70;
t14 = (t166 * t116 + t140) * t75 - t46;
t11 = t14 * t74;
t10 = t14 * t70;
t8 = t25 * t74 - t27 * t70;
t1 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t112, t118 * t167, 0, t114, 0, 0, pkin(1) * t167, -0.2e1 * pkin(1) * t118, 0.2e1 * t137 * pkin(7), t137 * pkin(7) ^ 2 + pkin(1) ^ 2, t69, t75 * t174, 0, t176, 0, 0, t72 * t170, t75 * t170, 0.2e1 * t46 * t75 - 0.2e1 * t49 * t72, t100 ^ 2 + t49 ^ 2 + t177, t57, -0.2e1 * t134, t36, t55, -0.2e1 * t136, t176, -0.2e1 * t154 * t72 + 0.2e1 * t75 * t39, 0.2e1 * t75 * t144 - 0.2e1 * t16 * t72 (-t116 * t16 + t120 * t154) * t171, t154 ^ 2 + t16 ^ 2 + t177, t57, t36, 0.2e1 * t134, t176, 0.2e1 * t136, t55, -0.2e1 * t13 * t72 + 0.2e1 * t146 * t75 (-t116 * t12 + t120 * t13) * t171, 0.2e1 * t12 * t72 - 0.2e1 * t145 * t75, t12 ^ 2 + t13 ^ 2 + t17 ^ 2, t27 ^ 2, 0.2e1 * t25 * t27, t27 * t174, t25 ^ 2, -t25 * t173, t176, -0.2e1 * t14 * t25 - 0.2e1 * t3 * t72, 0.2e1 * t14 * t27 + 0.2e1 * t4 * t72, 0.2e1 * t25 * t4 - 0.2e1 * t3 * t27, t14 ^ 2 + t3 ^ 2 + t4 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t118, 0, t122, 0, -t118 * pkin(7), -t122 * pkin(7), 0, 0, 0, 0, t75, 0, -t72, 0, -t46, -t49 (-t117 * t72 - t121 * t75) * pkin(2) (t117 * t49 - t121 * t46) * pkin(2), t53, -t35, t56, -t53, t59, 0, t127 * t116 - t144, t127 * t120 + t39, t6, t46 * t99 + t6 * t98, t53, t56, t35, 0, -t59, -t53, t116 * t128 - t145, t5, -t120 * t128 - t146, t17 * t61 + t5 * t98, t19, t8, -t43, -t18, t42, 0, -t25 * t51 + t30 * t72 + t10, t27 * t51 + t32 * t72 + t11, t25 * t32 + t27 * t30 + t164, t14 * t51 - t3 * t30 + t32 * t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t110, -0.2e1 * t159, 0 (t117 ^ 2 + t121 ^ 2) * pkin(2) ^ 2, t111, t93, 0, t113, 0, 0, t99 * t168, 0.2e1 * t99 * t116, t50, t99 ^ 2 + t150, t111, 0, t94, 0, 0, t113, t61 * t168, t50, t61 * t169, t61 ^ 2 + t150, t68, t41, 0, t65, 0, 0, t51 * t175, t51 * t172, 0.2e1 * t156, t30 ^ 2 + t32 ^ 2 + t51 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t75, 0, -t72, 0, -t46, -t49, 0, 0, t53, -t35, t56, -t53, t59, 0, t130 * t116 - t144, t130 * t120 + t39, t6, -t46 * pkin(3) + pkin(9) * t6, t53, t56, t35, 0, -t59, -t53, -t116 * t129 - t145, t5, t120 * t129 - t146, pkin(9) * t5 - t135 * t17, t19, t8, -t43, -t18, t42, 0, -t25 * t62 + t44 * t72 + t10, t27 * t62 + t48 * t72 + t11, t25 * t48 + t27 * t44 + t164, t14 * t62 - t3 * t44 + t4 * t48; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t110, -t159, 0, 0, t111, t93, 0, t113, 0, 0, t161 * t120, -t161 * t116, t40, -pkin(3) * t99 + t151, t111, 0, t94, 0, 0, t113, t152 * t120, t40, t152 * t116, -t135 * t61 + t151, t68, t41, 0, t65, 0, 0, t153 * t70, t153 * t74, t155 + t156, t30 * t44 + t32 * t48 + t51 * t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t111, t93, 0, t113, 0, 0, 0.2e1 * pkin(3) * t120, pkin(3) * t169, t78, pkin(3) ^ 2 + t139, t111, 0, t94, 0, 0, t113, -t135 * t168, t78, -t135 * t169, t135 ^ 2 + t139, t68, t41, 0, t65, 0, 0, t62 * t175, t62 * t172, 0.2e1 * t155, t44 ^ 2 + t48 ^ 2 + t62 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t60, 0, -t148, t72, -t154, -t16, 0, 0, 0, t60, 0, t72, t148, 0, -t154 + 0.2e1 * t162, t178 * t75, 0.2e1 * t63 + t16, -pkin(4) * t13 + qJ(5) * t12, 0, 0, -t27, 0, -t25, t72, t79 * t72 - t3, t81 * t72 + t4, t25 * t81 + t27 * t79, -t3 * t79 + t4 * t81; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t116, 0, t120, 0, -t147, -t92, 0, 0, 0, t116, 0, 0, -t120, 0, -t147, -t126, t92, -t126 * t98, 0, 0, -t74, 0, t70, 0, t30, t32, t20, t30 * t79 + t32 * t81; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t116, 0, t120, 0, -t160, -t107, 0, 0, 0, t116, 0, 0, -t120, 0, -t160, -t126, t107, -t126 * pkin(9), 0, 0, -t74, 0, t70, 0, t44, t48, t20, t44 * t79 + t48 * t81; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0.2e1 * pkin(4), 0, 0.2e1 * qJ(5), pkin(4) ^ 2 + qJ(5) ^ 2, 0, 0, 0, 0, 0, 1, 0.2e1 * t79, 0.2e1 * t81, 0, t79 ^ 2 + t81 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t72, t60, 0, t13, 0, 0, 0, 0, 0, 0, -t119 * t72, t115 * t72, t115 * t25 - t119 * t27, t4 * t115 + t3 * t119; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t116, 0, t147, 0, 0, 0, 0, 0, 0, 0, 0, t34, t32 * t115 - t30 * t119; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t116, 0, t160, 0, 0, 0, 0, 0, 0, 0, 0, t34, t48 * t115 - t44 * t119; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, -pkin(4), 0, 0, 0, 0, 0, 0, -t119, t115, 0, t81 * t115 - t79 * t119; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t115 ^ 2 + t119 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t27, 0, t25, -t72, t3, -t4, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t74, 0, -t70, 0, -t30, -t32, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t74, 0, -t70, 0, -t44, -t48, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -t79, -t81, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t119, -t115, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t1;
