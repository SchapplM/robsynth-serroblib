% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRRPPR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d6]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 16:10
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRRPPR8_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPR8_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPPR8_inertiaJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 06:16:27
% EndTime: 2019-05-07 06:16:38
% DurationCPUTime: 2.46s
% Computational Cost: add. (1561->205), mult. (3418->338), div. (0->0), fcn. (3705->8), ass. (0->119)
t81 = sin(qJ(3));
t74 = t81 ^ 2;
t84 = cos(qJ(3));
t76 = t84 ^ 2;
t144 = t74 + t76;
t77 = sin(pkin(6));
t82 = sin(qJ(2));
t122 = t77 * t82;
t78 = cos(pkin(6));
t36 = t81 * t122 - t78 * t84;
t34 = t36 ^ 2;
t38 = t84 * t122 + t78 * t81;
t35 = t38 ^ 2;
t134 = t84 * pkin(9);
t48 = -t84 * qJ(5) + t134;
t143 = t48 ^ 2;
t142 = -0.2e1 * t38;
t141 = 0.2e1 * t77;
t140 = -0.2e1 * t81;
t139 = -0.2e1 * t84;
t138 = 0.2e1 * t84;
t137 = -pkin(4) - pkin(10);
t136 = pkin(1) * t82;
t135 = pkin(9) * t38;
t85 = cos(qJ(2));
t59 = t77 * t85;
t105 = pkin(8) * t59;
t28 = t105 + (pkin(9) + t136) * t78;
t29 = (-pkin(2) * t85 - pkin(9) * t82 - pkin(1)) * t77;
t14 = t84 * t28 + t81 * t29;
t99 = qJ(4) * t59;
t11 = -t99 + t14;
t133 = t11 * t84;
t132 = t14 * t84;
t80 = sin(qJ(6));
t83 = cos(qJ(6));
t17 = t36 * t80 - t83 * t59;
t131 = t17 * t83;
t19 = t36 * t83 + t80 * t59;
t130 = t19 * t80;
t129 = t19 * t83;
t128 = t36 * t84;
t127 = t38 * t36;
t126 = t38 * t80;
t30 = t38 * t81;
t125 = t38 * t83;
t71 = t77 ^ 2;
t124 = t71 * t85;
t73 = t80 ^ 2;
t123 = t73 * t84;
t121 = t80 * t17;
t72 = -pkin(3) + t137;
t120 = t80 * t72;
t119 = t80 * t81;
t118 = t80 * t83;
t117 = t80 * t84;
t116 = t81 * t84;
t115 = t83 * t72;
t114 = t83 * t81;
t113 = t83 * t84;
t79 = qJ(4) + pkin(5);
t112 = t81 * t28 - t84 * t29;
t40 = t78 * t85 * pkin(1) - pkin(8) * t122;
t111 = t144 * pkin(9) ^ 2;
t75 = t83 ^ 2;
t52 = t75 + t73;
t110 = t36 * qJ(4);
t109 = t84 * qJ(4);
t108 = -0.2e1 * t127;
t107 = t78 * t141;
t106 = -0.2e1 * t116;
t57 = 0.2e1 * t116;
t45 = -t84 * pkin(3) - t81 * qJ(4) - pkin(2);
t104 = t36 * t59;
t103 = t81 * t59;
t102 = t84 * t59;
t101 = t80 * t113;
t55 = pkin(3) * t59;
t12 = t55 + t112;
t100 = -0.2e1 * t99 + t14;
t27 = -t78 * pkin(2) - t40;
t21 = t59 * t142;
t98 = 0.2e1 * t104;
t97 = pkin(9) * t102;
t42 = t84 * pkin(4) - t45;
t10 = t36 * pkin(3) - t38 * qJ(4) + t27;
t3 = t38 * pkin(5) + t137 * t36 - t10;
t7 = pkin(4) * t59 - t38 * qJ(5) + t12;
t5 = pkin(10) * t59 + t7;
t1 = t83 * t3 - t80 * t5;
t2 = t80 * t3 + t83 * t5;
t96 = t1 * t83 + t2 * t80;
t95 = -t1 * t80 + t2 * t83;
t94 = -pkin(3) * t81 + t109;
t20 = t81 * pkin(5) + t84 * pkin(10) + t42;
t66 = t81 * pkin(9);
t47 = -t81 * qJ(5) + t66;
t15 = t83 * t20 - t80 * t47;
t16 = t80 * t20 + t83 * t47;
t93 = t15 * t83 + t16 * t80;
t4 = -t15 * t80 + t16 * t83;
t92 = t130 - t131;
t91 = t81 * t36 - t38 * t84;
t90 = -t72 * t81 - t79 * t84;
t88 = qJ(4) ^ 2;
t87 = 0.2e1 * qJ(4);
t86 = -pkin(3) - pkin(4);
t61 = t75 * t84;
t58 = t71 * t85 ^ 2;
t46 = pkin(9) * t103;
t44 = 0.2e1 * t144 * pkin(9);
t43 = t52 * t72;
t41 = t78 * t136 + t105;
t31 = t36 * qJ(5);
t26 = pkin(9) * t128;
t9 = -t11 - t31;
t8 = -t36 * pkin(4) - t10;
t6 = -t79 * t59 + t14 + t31;
t13 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t71 * t82 ^ 2, 0.2e1 * t82 * t124, t82 * t107, t58, t85 * t107, t78 ^ 2, 0.2e1 * pkin(1) * t124 + 0.2e1 * t40 * t78, -0.2e1 * t71 * t136 - 0.2e1 * t41 * t78 (-t40 * t82 + t41 * t85) * t141, t71 * pkin(1) ^ 2 + t40 ^ 2 + t41 ^ 2, t35, t108, t21, t34, t98, t58, 0.2e1 * t112 * t59 + 0.2e1 * t27 * t36, 0.2e1 * t14 * t59 + 0.2e1 * t27 * t38, 0.2e1 * t112 * t38 - 0.2e1 * t14 * t36, t112 ^ 2 + t14 ^ 2 + t27 ^ 2, t35, t21, 0.2e1 * t127, t58, -0.2e1 * t104, t34, 0.2e1 * t10 * t36 + 0.2e1 * t12 * t59, -0.2e1 * t11 * t36 + 0.2e1 * t12 * t38, -0.2e1 * t10 * t38 - 0.2e1 * t11 * t59, t10 ^ 2 + t11 ^ 2 + t12 ^ 2, t34, t108, t98, t35, t21, t58, 0.2e1 * t8 * t38 + 0.2e1 * t59 * t9, 0.2e1 * t8 * t36 - 0.2e1 * t59 * t7, -0.2e1 * t9 * t36 - 0.2e1 * t7 * t38, t7 ^ 2 + t8 ^ 2 + t9 ^ 2, t19 ^ 2, -0.2e1 * t19 * t17, 0.2e1 * t19 * t38, t17 ^ 2, t17 * t142, t35, 0.2e1 * t1 * t38 + 0.2e1 * t6 * t17, 0.2e1 * t6 * t19 - 0.2e1 * t2 * t38, -0.2e1 * t1 * t19 - 0.2e1 * t2 * t17, t1 ^ 2 + t2 ^ 2 + t6 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t122, 0, t59, t78, t40, -t41, 0, 0, t30, -t91, -t103, -t128, -t102, 0, -pkin(2) * t36 - t27 * t84 + t46, -pkin(2) * t38 + t27 * t81 + t97, t132 - t26 + (t112 + t135) * t81, -t27 * pkin(2) + (t112 * t81 + t132) * pkin(9), t30, -t103, t91, 0, t102, -t128, -t10 * t84 + t45 * t36 + t46, t133 - t26 + (t12 + t135) * t81, -t10 * t81 - t45 * t38 - t97, t10 * t45 + (t12 * t81 + t133) * pkin(9), -t128, -t91, -t102, t30, -t103, 0, t42 * t38 - t48 * t59 + t8 * t81, t42 * t36 - t47 * t59 - t8 * t84, t48 * t36 - t47 * t38 - t7 * t81 + t9 * t84, t8 * t42 + t7 * t47 - t9 * t48, -t19 * t113 (t130 + t131) * t84, -t113 * t38 + t19 * t81, -t17 * t117, t117 * t38 - t17 * t81, t30, t1 * t81 - t117 * t6 + t15 * t38 + t48 * t17, -t113 * t6 - t16 * t38 + t48 * t19 - t2 * t81, -t15 * t19 - t16 * t17 + t84 * t96, t1 * t15 + t2 * t16 + t6 * t48; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t74, t57, 0, t76, 0, 0, pkin(2) * t138, pkin(2) * t140, t44, pkin(2) ^ 2 + t111, t74, 0, t106, 0, 0, t76, t45 * t139, t44, t45 * t140, t45 ^ 2 + t111, t76, t57, 0, t74, 0, 0, 0.2e1 * t42 * t81, t42 * t139, -0.2e1 * t47 * t81 - 0.2e1 * t48 * t84, t42 ^ 2 + t47 ^ 2 + t143, t75 * t76, -0.2e1 * t76 * t118, t83 * t106, t73 * t76, t80 * t57, t74, -0.2e1 * t117 * t48 + 0.2e1 * t15 * t81, -0.2e1 * t113 * t48 - 0.2e1 * t16 * t81, t93 * t138, t15 ^ 2 + t16 ^ 2 + t143; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t38, 0, -t36, -t59, -t112, -t14, 0, 0, 0, t38, 0, -t59, t36, 0, -0.2e1 * t55 - t112, -t38 * pkin(3) - t110, t100, -t12 * pkin(3) + t11 * qJ(4), 0, 0, -t36, 0, t38, -t59, t31 + t100, -t59 * t86 + t7, -t86 * t38 + t110, -t9 * qJ(4) + t7 * t86, -t130, t121 - t129, -t126, t131, -t125, 0, -t120 * t38 + t79 * t17 + t6 * t83, -t115 * t38 + t79 * t19 - t6 * t80, t72 * t92 - t95, t6 * t79 + t72 * t95; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t81, 0, t84, 0, -t66, -t134, 0, 0, 0, t81, 0, 0, -t84, 0, -t66, t94, t134, t94 * pkin(9), 0, 0, t84, 0, t81, 0, t48, t47, -t86 * t81 - t109, t48 * qJ(4) + t47 * t86, t101, t61 - t123, -t119, -t101, -t114, 0, t48 * t83 + t80 * t90, -t48 * t80 + t83 * t90, -t4, t4 * t72 + t48 * t79; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0.2e1 * pkin(3), 0, t87, pkin(3) ^ 2 + t88, 0, 0, 0, 0, 0, 1, t87, 0.2e1 * t86, 0, t86 ^ 2 + t88, t73, 0.2e1 * t118, 0, t75, 0, 0, 0.2e1 * t79 * t83, -0.2e1 * t79 * t80, -0.2e1 * t43, t52 * t72 ^ 2 + t79 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t59, t38, 0, t12, 0, 0, 0, 0, 0, 0, 0, -t59, -t38, t7, 0, 0, 0, 0, 0, 0, -t126, -t125, t92, t95; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t81, 0, t66, 0, 0, 0, 0, 0, 0, 0, 0, -t81, t47, 0, 0, 0, 0, 0, 0, -t119, -t114, 0, t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, -pkin(3), 0, 0, 0, 0, 0, 0, 0, 1, 0, t86, 0, 0, 0, 0, 0, 0, 0, 0, -t52, t43; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t52; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t38, t36, 0, t8, 0, 0, 0, 0, 0, 0, t125, -t126, -t121 - t129, t96; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t81, -t84, 0, t42, 0, 0, 0, 0, 0, 0, t114, -t119, t61 + t123, t93; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t52; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t19, 0, -t17, t38, t1, -t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t113, 0, t117, t81, t15, -t16, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t80, 0, -t83, 0, -t120, -t115, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t80, -t83, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83, -t80, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t13;
