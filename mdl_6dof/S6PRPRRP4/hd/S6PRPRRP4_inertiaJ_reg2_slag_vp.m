% Calculate inertial parameters regressor of joint inertia matrix for
% S6PRPRRP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d5,theta1,theta3]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 20:12
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6PRPRRP4_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRP4_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRPRRP4_inertiaJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-04 23:50:28
% EndTime: 2019-05-04 23:50:33
% DurationCPUTime: 1.49s
% Computational Cost: add. (882->122), mult. (1911->199), div. (0->0), fcn. (2317->10), ass. (0->89)
t61 = sin(qJ(5));
t55 = t61 ^ 2;
t64 = cos(qJ(5));
t56 = t64 ^ 2;
t46 = t55 + t56;
t101 = cos(qJ(4));
t57 = sin(pkin(11));
t59 = cos(pkin(11));
t60 = cos(pkin(6));
t58 = sin(pkin(6));
t63 = sin(qJ(2));
t95 = t58 * t63;
t30 = -t57 * t95 + t60 * t59;
t31 = t60 * t57 + t59 * t95;
t62 = sin(qJ(4));
t17 = t101 * t31 + t62 * t30;
t65 = cos(qJ(2));
t94 = t58 * t65;
t11 = t61 * t17 + t64 * t94;
t13 = t64 * t17 - t61 * t94;
t84 = t11 * t61 + t13 * t64;
t42 = t101 * t57 + t62 * t59;
t110 = -0.2e1 * t42;
t83 = -t11 * t64 + t13 * t61;
t15 = -t101 * t30 + t62 * t31;
t14 = t15 ^ 2;
t91 = pkin(8) + qJ(3);
t45 = t91 * t59;
t82 = t91 * t57;
t25 = t101 * t82 + t62 * t45;
t109 = t25 ^ 2;
t40 = -t101 * t59 + t62 * t57;
t37 = t40 ^ 2;
t49 = -t59 * pkin(3) - pkin(2);
t108 = 0.2e1 * t49;
t107 = 0.2e1 * t59;
t106 = -0.2e1 * t61;
t105 = pkin(9) * t40;
t104 = t40 * pkin(5);
t103 = t61 * pkin(9);
t102 = t64 * pkin(9);
t98 = t15 * t25;
t97 = t15 * t61;
t96 = t15 * t64;
t33 = t61 * t40;
t93 = t61 * t42;
t92 = t61 * t64;
t35 = t64 * t40;
t36 = t64 * t42;
t20 = t40 * pkin(4) - t42 * pkin(9) + t49;
t27 = t101 * t45 - t62 * t82;
t4 = t61 * t20 + t64 * t27;
t90 = t46 * pkin(9) ^ 2;
t52 = t57 ^ 2;
t54 = t59 ^ 2;
t89 = t52 + t54;
t88 = t40 * qJ(6);
t87 = t40 * t93;
t38 = t42 ^ 2;
t86 = t38 * t92;
t85 = -t11 * t40 + t15 * t93;
t81 = -t64 * t20 + t61 * t27;
t80 = t11 ^ 2 + t13 ^ 2 + t14;
t79 = t84 * pkin(9);
t78 = -pkin(4) * t42 - t105;
t1 = t88 + t4;
t2 = t81 - t104;
t77 = t1 * t64 + t2 * t61;
t76 = t1 * t61 - t2 * t64;
t75 = t4 * t61 - t64 * t81;
t74 = t4 * t64 + t61 * t81;
t72 = t64 * pkin(5) + t61 * qJ(6);
t44 = -pkin(4) - t72;
t73 = -t42 * t44 + t105;
t71 = pkin(5) * t61 - t64 * qJ(6);
t70 = -t30 * t57 + t31 * t59;
t69 = -t13 * t40 + t15 * t36;
t68 = t83 * t42;
t53 = t58 ^ 2;
t47 = t53 * t65 ^ 2;
t43 = 0.2e1 * t46 * pkin(9);
t34 = t56 * t38;
t32 = t55 * t38;
t29 = t61 * t36;
t24 = 0.2e1 * t40 * t36;
t22 = t46 * t42;
t21 = (t55 - t56) * t42;
t5 = t71 * t42 + t25;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t53 * t63 ^ 2 + t60 ^ 2 + t47, 0, 0, 0, 0, 0, 0, 0, 0, 0, t30 ^ 2 + t31 ^ 2 + t47, 0, 0, 0, 0, 0, 0, 0, 0, 0, t17 ^ 2 + t14 + t47, 0, 0, 0, 0, 0, 0, 0, 0, 0, t80, 0, 0, 0, 0, 0, 0, 0, 0, 0, t80; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t94, -t95, 0, 0, 0, 0, 0, 0, 0, 0, t59 * t94, -t57 * t94, t70, pkin(2) * t94 + t70 * qJ(3), 0, 0, 0, 0, 0, 0, -t40 * t94, -t42 * t94, t15 * t42 - t17 * t40, t17 * t27 - t49 * t94 + t98, 0, 0, 0, 0, 0, 0, t85, t69, -t68, t11 * t81 + t13 * t4 + t98, 0, 0, 0, 0, 0, 0, t85, -t68, -t69, t13 * t1 + t11 * t2 + t15 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t52, t57 * t107, 0, t54, 0, 0, pkin(2) * t107, -0.2e1 * pkin(2) * t57, 0.2e1 * t89 * qJ(3), t89 * qJ(3) ^ 2 + pkin(2) ^ 2, t38, t40 * t110, 0, t37, 0, 0, t40 * t108, t42 * t108, 0.2e1 * t25 * t42 - 0.2e1 * t27 * t40, t27 ^ 2 + t49 ^ 2 + t109, t34, -0.2e1 * t86, t24, t32, -0.2e1 * t87, t37, 0.2e1 * t25 * t93 - 0.2e1 * t40 * t81, 0.2e1 * t25 * t36 - 0.2e1 * t4 * t40, t75 * t110, t4 ^ 2 + t81 ^ 2 + t109, t34, t24, 0.2e1 * t86, t37, 0.2e1 * t87, t32, -0.2e1 * t2 * t40 + 0.2e1 * t5 * t93, t76 * t110, 0.2e1 * t1 * t40 - 0.2e1 * t5 * t36, t1 ^ 2 + t2 ^ 2 + t5 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t94, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t94, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t59, t57, 0, -pkin(2), 0, 0, 0, 0, 0, 0, t40, t42, 0, t49, 0, 0, 0, 0, 0, 0, t35, -t33, -t22, t75, 0, 0, 0, 0, 0, 0, t35, -t22, t33, t76; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t46, 0, 0, 0, 0, 0, 0, 0, 0, 0, t46; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t15, -t17, 0, 0, 0, 0, 0, 0, 0, 0, -t96, t97, t84, -t15 * pkin(4) + t79, 0, 0, 0, 0, 0, 0, -t96, t84, -t97, t15 * t44 + t79; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t42, 0, -t40, 0, -t25, -t27, 0, 0, t29, -t21, t33, -t29, t35, 0, -t25 * t64 + t78 * t61, t25 * t61 + t78 * t64, t74, -t25 * pkin(4) + t74 * pkin(9), t29, t33, t21, 0, -t35, -t29, -t5 * t64 - t73 * t61, t77, -t5 * t61 + t73 * t64, t77 * pkin(9) + t5 * t44; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t55, 0.2e1 * t92, 0, t56, 0, 0, 0.2e1 * pkin(4) * t64, pkin(4) * t106, t43, pkin(4) ^ 2 + t90, t55, 0, -0.2e1 * t92, 0, 0, t56, -0.2e1 * t44 * t64, t43, t44 * t106, t44 ^ 2 + t90; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t11, -t13, 0, 0, 0, 0, 0, 0, 0, 0, -t11, 0, t13, -t11 * pkin(5) + t13 * qJ(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t36, 0, -t93, t40, -t81, -t4, 0, 0, 0, t36, 0, t40, t93, 0, -t81 + 0.2e1 * t104, -t72 * t42, 0.2e1 * t88 + t4, -t2 * pkin(5) + t1 * qJ(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t64, -t61, 0, 0, 0, 0, 0, 0, 0, 0, t64, 0, t61, t72; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t61, 0, t64, 0, -t103, -t102, 0, 0, 0, t61, 0, 0, -t64, 0, -t103, -t71, t102, -t71 * pkin(9); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0.2e1 * pkin(5), 0, 0.2e1 * qJ(6), pkin(5) ^ 2 + qJ(6) ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t40, t36, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t64; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t61, 0, t103; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, -pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1;];
MM_reg  = t3;
