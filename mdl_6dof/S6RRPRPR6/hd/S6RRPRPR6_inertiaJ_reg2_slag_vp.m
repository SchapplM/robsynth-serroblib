% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRPRPR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d6,theta3]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 10:44
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRPRPR6_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR6_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRPR6_inertiaJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 14:26:12
% EndTime: 2019-05-06 14:26:22
% DurationCPUTime: 2.46s
% Computational Cost: add. (2341->184), mult. (5637->343), div. (0->0), fcn. (6329->10), ass. (0->129)
t86 = sin(qJ(4));
t77 = t86 ^ 2;
t89 = cos(qJ(4));
t79 = t89 ^ 2;
t63 = t77 + t79;
t142 = pkin(4) + pkin(10);
t85 = sin(qJ(6));
t76 = t85 ^ 2;
t88 = cos(qJ(6));
t78 = t88 ^ 2;
t62 = t76 + t78;
t151 = t62 * t142;
t81 = sin(pkin(11));
t82 = sin(pkin(6));
t83 = cos(pkin(11));
t87 = sin(qJ(2));
t90 = cos(qJ(2));
t47 = (t81 * t90 + t83 * t87) * t82;
t84 = cos(pkin(6));
t35 = t47 * t89 + t84 * t86;
t130 = t35 * t89;
t33 = t47 * t86 - t84 * t89;
t26 = t86 * t33;
t150 = -t26 - t130;
t149 = -t26 + t130;
t148 = t33 ^ 2;
t32 = t35 ^ 2;
t126 = t82 * t90;
t127 = t82 * t87;
t45 = -t83 * t126 + t81 * t127;
t44 = t45 ^ 2;
t147 = -0.2e1 * t35;
t146 = -0.2e1 * t45;
t145 = 0.2e1 * t84;
t144 = 0.2e1 * t89;
t143 = 2 * qJ(5);
t141 = pkin(1) * t87;
t140 = t45 * pkin(4);
t139 = t81 * pkin(2);
t138 = t83 * pkin(2);
t137 = t84 * pkin(2);
t136 = t89 * pkin(4);
t20 = -t33 * t88 + t45 * t85;
t135 = t20 * t85;
t22 = t33 * t85 + t45 * t88;
t134 = t22 * t88;
t133 = t33 * t89;
t132 = t35 * t45;
t131 = t35 * t85;
t28 = t35 * t86;
t129 = t45 * t33;
t74 = t82 ^ 2;
t128 = t74 * t90;
t125 = t85 * t86;
t124 = t85 * t89;
t123 = t85 * t142;
t122 = t86 * t20;
t121 = t86 * t45;
t68 = pkin(9) + t139;
t58 = t86 * t68;
t120 = t86 * t89;
t119 = t88 * t85;
t118 = t88 * t89;
t117 = t88 * t142;
t60 = t89 * t68;
t116 = pkin(8) + qJ(3);
t64 = t84 * t90 * pkin(1);
t37 = -t116 * t127 + t137 + t64;
t109 = t84 * t141;
t40 = t116 * t126 + t109;
t18 = t81 * t37 + t83 * t40;
t15 = t84 * pkin(9) + t18;
t55 = (-pkin(2) * t90 - pkin(1)) * t82;
t23 = t45 * pkin(3) - t47 * pkin(9) + t55;
t10 = t89 * t15 + t86 * t23;
t115 = -t83 * t37 + t81 * t40;
t114 = t63 * t68 ^ 2;
t113 = qJ(5) * t89;
t43 = t45 * qJ(5);
t112 = t33 * t147;
t111 = t82 * t145;
t110 = -0.2e1 * t120;
t108 = t35 * t124;
t107 = t85 * t118;
t106 = t45 * t58;
t105 = t35 * t118;
t104 = t45 * t60;
t103 = t43 + t10;
t69 = -pkin(3) - t138;
t9 = -t86 * t15 + t89 * t23;
t73 = t86 * qJ(5);
t102 = t69 - t73;
t14 = -t84 * pkin(3) + t115;
t3 = t35 * pkin(5) - t142 * t45 - t9;
t94 = -t35 * qJ(5) + t14;
t5 = t142 * t33 + t94;
t1 = t88 * t3 - t85 * t5;
t2 = t85 * t3 + t88 * t5;
t101 = t1 * t88 + t2 * t85;
t7 = -t9 - t140;
t100 = t103 * t89 + t7 * t86;
t99 = t10 * t89 - t9 * t86;
t98 = -pkin(4) * t86 + t113;
t97 = t134 + t135;
t48 = -t142 * t89 + t102;
t52 = t86 * pkin(5) + t58;
t24 = -t85 * t48 + t88 * t52;
t25 = t88 * t48 + t85 * t52;
t11 = t24 * t88 + t25 * t85;
t96 = -t142 * t86 + t113;
t95 = (t28 - t133) * t68;
t92 = qJ(5) ^ 2;
t75 = t84 ^ 2;
t72 = t88 * t86;
t71 = t78 * t79;
t70 = t76 * t79;
t66 = 0.2e1 * t120;
t54 = t62 * t89;
t53 = t89 * pkin(5) + t60;
t51 = t102 - t136;
t50 = pkin(8) * t126 + t109;
t49 = -pkin(8) * t127 + t64;
t42 = 0.2e1 * t63 * t68;
t41 = t89 * t45;
t29 = t35 * t88;
t16 = t22 * t86;
t8 = t33 * pkin(4) + t94;
t4 = -t33 * pkin(5) + t103;
t6 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t74 * t87 ^ 2, 0.2e1 * t87 * t128, t87 * t111, t74 * t90 ^ 2, t90 * t111, t75, 0.2e1 * pkin(1) * t128 + 0.2e1 * t49 * t84, -0.2e1 * t74 * t141 - 0.2e1 * t50 * t84, 0.2e1 * (-t49 * t87 + t50 * t90) * t82, t74 * pkin(1) ^ 2 + t49 ^ 2 + t50 ^ 2, t47 ^ 2, t47 * t146, t47 * t145, t44, t84 * t146, t75, -0.2e1 * t115 * t84 + 0.2e1 * t55 * t45, -0.2e1 * t18 * t84 + 0.2e1 * t55 * t47, 0.2e1 * t115 * t47 - 0.2e1 * t18 * t45, t115 ^ 2 + t18 ^ 2 + t55 ^ 2, t32, t112, 0.2e1 * t132, t148, -0.2e1 * t129, t44, 0.2e1 * t14 * t33 + 0.2e1 * t9 * t45, -0.2e1 * t10 * t45 + 0.2e1 * t14 * t35, -0.2e1 * t10 * t33 - 0.2e1 * t9 * t35, t10 ^ 2 + t14 ^ 2 + t9 ^ 2, t44, -0.2e1 * t132, 0.2e1 * t129, t32, t112, t148, -0.2e1 * t103 * t33 + 0.2e1 * t7 * t35, -0.2e1 * t8 * t33 + 0.2e1 * t7 * t45, 0.2e1 * t103 * t45 - 0.2e1 * t8 * t35, t103 ^ 2 + t7 ^ 2 + t8 ^ 2, t22 ^ 2, -0.2e1 * t22 * t20, 0.2e1 * t22 * t35, t20 ^ 2, t20 * t147, t32, 0.2e1 * t1 * t35 + 0.2e1 * t4 * t20, -0.2e1 * t2 * t35 + 0.2e1 * t4 * t22, -0.2e1 * t1 * t22 - 0.2e1 * t2 * t20, t1 ^ 2 + t2 ^ 2 + t4 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t127, 0, t126, t84, t49, -t50, 0, 0, 0, 0, t47, 0, -t45, t84, t83 * t137 - t115, -t81 * t137 - t18 (-t45 * t81 - t47 * t83) * pkin(2) (-t115 * t83 + t18 * t81) * pkin(2), t28, t149, t121, -t133, t41, 0, -t14 * t89 + t69 * t33 - t106, t14 * t86 + t69 * t35 - t104, t95 + t99, t14 * t69 + t68 * t99, 0, -t121, -t41, t28, t149, -t133, t100 + t95, -t51 * t33 + t8 * t89 + t106, -t51 * t35 - t8 * t86 + t104, t100 * t68 + t8 * t51, -t22 * t124 (-t134 + t135) * t89, t16 - t108, t20 * t118, -t105 - t122, t28, t1 * t86 + t118 * t4 + t53 * t20 + t24 * t35, -t124 * t4 - t2 * t86 + t53 * t22 - t25 * t35, -t25 * t20 - t24 * t22 + (t1 * t85 - t2 * t88) * t89, t1 * t24 + t2 * t25 + t4 * t53; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t138, -0.2e1 * t139, 0 (t81 ^ 2 + t83 ^ 2) * pkin(2) ^ 2, t77, t66, 0, t79, 0, 0, -0.2e1 * t69 * t89, 0.2e1 * t69 * t86, t42, t69 ^ 2 + t114, 0, 0, 0, t77, t66, t79, t42, t51 * t144, -0.2e1 * t51 * t86, t51 ^ 2 + t114, t70, 0.2e1 * t79 * t119, t85 * t110, t71, t88 * t110, t77, 0.2e1 * t118 * t53 + 0.2e1 * t24 * t86, -0.2e1 * t124 * t53 - 0.2e1 * t25 * t86 (t24 * t85 - t25 * t88) * t144, t24 ^ 2 + t25 ^ 2 + t53 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t45, t47, 0, t55, 0, 0, 0, 0, 0, 0, t41, -t121, t150, t10 * t86 + t9 * t89, 0, 0, 0, 0, 0, 0, t150, -t41, t121, t103 * t86 - t7 * t89, 0, 0, 0, 0, 0, 0, -t105 + t122, t16 + t108, t97 * t89, -t101 * t89 + t4 * t86; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t11 * t89 + t53 * t86; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t63, 0, 0, 0, 0, 0, 0, 0, 0, 0, t63, 0, 0, 0, 0, 0, 0, 0, 0, 0, t70 + t71 + t77; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t35, 0, -t33, t45, t9, -t10, 0, 0, t45, -t35, t33, 0, 0, 0, -t35 * pkin(4) - qJ(5) * t33, -t9 - 0.2e1 * t140, t103 + t43, -t7 * pkin(4) + qJ(5) * t103, t134, -t88 * t20 - t22 * t85, t29, t135, -t131, 0, qJ(5) * t20 - t117 * t35 + t4 * t85, qJ(5) * t22 + t123 * t35 + t4 * t88 (t142 * t22 - t1) * t88 + (t142 * t20 - t2) * t85, t4 * qJ(5) - t101 * t142; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t86, 0, t89, 0, -t58, -t60, 0, 0, 0, -t86, -t89, 0, 0, 0, t98, t58, t60, t98 * t68, -t107 (t76 - t78) * t89, t72, t107, -t125, 0, t53 * t85 + t88 * t96, t53 * t88 - t85 * t96, -t11, t53 * qJ(5) - t11 * t142; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t89, -t86, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t89, t86, t73 + t136, 0, 0, 0, 0, 0, 0, t125, t72, t54, t89 * t151 + t73; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, -0.2e1 * pkin(4), t143, pkin(4) ^ 2 + t92, t78, -0.2e1 * t119, 0, t76, 0, 0, t85 * t143, t88 * t143, 0.2e1 * t151, t142 ^ 2 * t62 + t92; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t35, t45, 0, t7, 0, 0, 0, 0, 0, 0, t29, -t131, -t97, t101; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t86, 0, 0, t58, 0, 0, 0, 0, 0, 0, t72, -t125, 0, t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t89, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t54; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, -pkin(4), 0, 0, 0, 0, 0, 0, 0, 0, -t62, -t151; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t22, 0, -t20, t35, t1, -t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t124, 0, -t118, t86, t24, -t25, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t118, t124, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t88, 0, -t85, 0, -t117, t123, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t88, -t85, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t6;
