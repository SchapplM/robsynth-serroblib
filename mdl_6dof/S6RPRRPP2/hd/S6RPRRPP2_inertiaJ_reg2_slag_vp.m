% Calculate inertial parameters regressor of joint inertia matrix for
% S6RPRRPP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,theta2]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 04:34
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RPRRPP2_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPP2_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPRRPP2_inertiaJ_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 21:22:43
% EndTime: 2019-05-05 21:22:48
% DurationCPUTime: 1.40s
% Computational Cost: add. (552->126), mult. (1035->197), div. (0->0), fcn. (967->6), ass. (0->87)
t53 = sin(qJ(4));
t47 = t53 ^ 2;
t55 = cos(qJ(4));
t49 = t55 ^ 2;
t78 = t47 + t49;
t57 = pkin(4) + pkin(5);
t82 = t57 * t53;
t76 = t53 * qJ(5);
t99 = t55 * t57 + t76;
t13 = pkin(3) + t99;
t98 = 0.2e1 * t13;
t66 = -pkin(4) * t55 - t76;
t19 = -pkin(3) + t66;
t97 = -0.2e1 * t19;
t54 = sin(qJ(3));
t96 = 0.2e1 * t54;
t95 = pkin(3) * t53;
t94 = pkin(3) * t55;
t93 = pkin(4) * t53;
t51 = sin(pkin(9));
t92 = t51 * pkin(1);
t52 = cos(pkin(9));
t91 = t52 * pkin(1);
t90 = t53 * pkin(8);
t89 = t54 * pkin(8);
t56 = cos(qJ(3));
t88 = t56 * pkin(3);
t35 = -pkin(2) - t91;
t12 = t35 - t88 - t89;
t34 = pkin(7) + t92;
t83 = t56 * t34;
t7 = t12 * t53 + t55 * t83;
t48 = t54 ^ 2;
t87 = t48 * t34;
t37 = t53 * t54;
t86 = t53 * t55;
t38 = t53 * t56;
t85 = t54 * t34;
t84 = t54 * t56;
t40 = t55 * t54;
t41 = t55 * t56;
t81 = -t12 * t55 + t53 * t83;
t80 = t78 * t89;
t79 = t78 * pkin(8) ^ 2;
t50 = t56 ^ 2;
t77 = t48 + t50;
t75 = t55 * qJ(5);
t74 = t55 * qJ(6);
t73 = t56 * qJ(5);
t72 = -0.2e1 * t73 + t7;
t71 = t53 * t84;
t70 = t48 * t86;
t69 = t54 * t41;
t46 = t56 * pkin(4);
t4 = t46 + t81;
t3 = -t73 + t7;
t68 = t3 * t55 + t4 * t53;
t67 = t53 * t81 + t55 * t7;
t65 = t75 - t93;
t20 = (pkin(8) - qJ(6)) * t53;
t45 = t55 * pkin(8);
t21 = t45 - t74;
t64 = t20 * t53 + t21 * t55;
t63 = t54 * t74 - t4;
t60 = qJ(5) ^ 2;
t59 = 0.2e1 * qJ(5);
t39 = t49 * t48;
t36 = t47 * t48;
t33 = -0.2e1 * t86;
t32 = t34 ^ 2;
t30 = pkin(8) * t38;
t28 = t54 * t75;
t27 = qJ(6) * t37;
t26 = t53 * t40;
t25 = -0.2e1 * t69;
t24 = 0.2e1 * t70;
t23 = 0.2e1 * t71;
t22 = t48 * t32;
t18 = 0.2e1 * t78 * pkin(8);
t15 = t78 * t54;
t14 = (t47 - t49) * t54;
t11 = t39 + t36 + t50;
t8 = -t28 + (t34 + t93) * t54;
t5 = t28 + (-t34 - t82) * t54;
t2 = t27 + t3;
t1 = pkin(5) * t56 - t63;
t6 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t91, -0.2e1 * t92, 0 (t51 ^ 2 + t52 ^ 2) * pkin(1) ^ 2, t48, 0.2e1 * t84, 0, t50, 0, 0, -0.2e1 * t35 * t56, t35 * t96, 0.2e1 * t77 * t34, t32 * t50 + t35 ^ 2 + t22, t39, -0.2e1 * t70, t25, t36, t23, t50, 0.2e1 * t53 * t87 + 0.2e1 * t56 * t81, 0.2e1 * t55 * t87 + 0.2e1 * t56 * t7 (-t53 * t7 + t55 * t81) * t96, t7 ^ 2 + t81 ^ 2 + t22, t39, t25, t24, t50, -0.2e1 * t71, t36, 0.2e1 * t37 * t8 + 0.2e1 * t4 * t56 (-t3 * t53 + t4 * t55) * t96, -0.2e1 * t3 * t56 - 0.2e1 * t40 * t8, t3 ^ 2 + t4 ^ 2 + t8 ^ 2, t39, t24, 0.2e1 * t69, t36, t23, t50, 0.2e1 * t1 * t56 - 0.2e1 * t37 * t5, -0.2e1 * t2 * t56 + 0.2e1 * t40 * t5 (-t1 * t55 + t2 * t53) * t96, t1 ^ 2 + t2 ^ 2 + t5 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (t67 - t83) * t54, 0, 0, 0, 0, 0, 0, 0, 0, 0, t54 * t68 - t8 * t56, 0, 0, 0, 0, 0, 0, 0, 0, 0, t5 * t56 + (t1 * t53 + t2 * t55) * t54; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t77, 0, 0, 0, 0, 0, 0, 0, 0, 0, t11, 0, 0, 0, 0, 0, 0, 0, 0, 0, t11, 0, 0, 0, 0, 0, 0, 0, 0, 0, t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t54, 0, t56, 0, -t85, -t83, 0, 0, t26, -t14, -t38, -t26, -t41, 0, t30 + (-t34 * t55 - t95) * t54, pkin(8) * t41 + (t34 * t53 - t94) * t54, t67, -pkin(3) * t85 + pkin(8) * t67, t26, -t38, t14, 0, t41, -t26, t19 * t37 - t55 * t8 + t30, t68, -t8 * t53 + (-pkin(8) * t56 - t19 * t54) * t55, pkin(8) * t68 + t8 * t19, t26, t14, t38, -t26, -t41, 0, -t13 * t37 + t20 * t56 + t5 * t55, t13 * t40 - t21 * t56 + t5 * t53 (-t20 * t54 - t2) * t55 + (t21 * t54 - t1) * t53, t1 * t20 + t13 * t5 + t2 * t21; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t56, -t54, 0, 0, 0, 0, 0, 0, 0, 0, t41, -t38, t15, t80 + t88, 0, 0, 0, 0, 0, 0, t41, t15, t38, -t19 * t56 + t80, 0, 0, 0, 0, 0, 0, t41, t38, -t15, t56 * t13 + t54 * t64; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t47, 0.2e1 * t86, 0, t49, 0, 0, 0.2e1 * t94, -0.2e1 * t95, t18, pkin(3) ^ 2 + t79, t47, 0, t33, 0, 0, t49, t55 * t97, t18, t53 * t97, t19 ^ 2 + t79, t47, t33, 0, t49, 0, 0, t55 * t98, t53 * t98, -0.2e1 * t64, t13 ^ 2 + t20 ^ 2 + t21 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t40, 0, -t37, -t56, -t81, -t7, 0, 0, 0, t40, 0, -t56, t37, 0, -0.2e1 * t46 - t81, t66 * t54, t72, -pkin(4) * t4 + qJ(5) * t3, 0, 0, -t40, 0, -t37, -t56 (-pkin(5) - t57) * t56 + t63, t27 + t72, t99 * t54, qJ(5) * t2 - t1 * t57; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t37, -t40, 0, 0, 0, 0, 0, 0, 0, 0, -t37, 0, t40, -pkin(4) * t37 + t28, 0, 0, 0, 0, 0, 0, -t37, t40, 0, -t54 * t82 + t28; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t53, 0, t55, 0, -t90, -t45, 0, 0, 0, t53, 0, 0, -t55, 0, -t90, t65, t45, t65 * pkin(8), 0, 0, -t53, 0, t55, 0, -t20, t21, -t75 + t82, qJ(5) * t21 - t20 * t57; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0.2e1 * pkin(4), 0, t59, pkin(4) ^ 2 + t60, 0, 0, 0, 0, 0, 1, 0.2e1 * t57, t59, 0, t57 ^ 2 + t60; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t56, t40, 0, t4, 0, 0, 0, 0, 0, 0, t56, 0, -t40, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t37, 0, 0, 0, 0, 0, 0, 0, 0, 0, t37; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t53, 0, t90, 0, 0, 0, 0, 0, 0, 0, 0, -t53, t20; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, -pkin(4), 0, 0, 0, 0, 0, 0, -1, 0, 0, -t57; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t37, t40, 0, t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t55, t53, 0, t13; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1;];
MM_reg  = t6;
