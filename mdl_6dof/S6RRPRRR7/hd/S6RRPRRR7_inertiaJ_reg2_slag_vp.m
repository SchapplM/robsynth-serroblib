% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRPRRR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5,d6]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 14:01
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRPRRR7_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR7_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRRR7_inertiaJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 22:20:56
% EndTime: 2019-05-06 22:21:03
% DurationCPUTime: 2.35s
% Computational Cost: add. (1817->197), mult. (3203->322), div. (0->0), fcn. (3627->8), ass. (0->120)
t74 = sin(qJ(2));
t67 = t74 ^ 2;
t78 = cos(qJ(2));
t70 = t78 ^ 2;
t143 = t67 + t70;
t71 = sin(qJ(6));
t72 = sin(qJ(5));
t75 = cos(qJ(6));
t76 = cos(qJ(5));
t33 = t71 * t72 - t75 * t76;
t38 = t71 * t76 + t72 * t75;
t142 = (t33 * t71 + t38 * t75) * pkin(5);
t65 = t72 ^ 2;
t68 = t76 ^ 2;
t95 = t65 + t68;
t141 = t95 * pkin(9);
t130 = -pkin(2) - pkin(3);
t73 = sin(qJ(4));
t77 = cos(qJ(4));
t48 = t77 * qJ(3) + t73 * t130;
t44 = -pkin(9) + t48;
t90 = t95 * t44;
t62 = t78 * pkin(7);
t52 = -pkin(8) * t78 + t62;
t91 = (pkin(7) - pkin(8)) * t74;
t19 = t52 * t73 - t77 * t91;
t140 = t19 ^ 2;
t139 = t33 ^ 2;
t35 = t73 * t74 + t77 * t78;
t31 = t35 ^ 2;
t138 = t38 ^ 2;
t127 = pkin(5) * t76;
t46 = qJ(3) * t73 - t77 * t130;
t43 = pkin(4) + t46;
t29 = t43 + t127;
t137 = -0.2e1 * t29;
t136 = 0.2e1 * t35;
t37 = -t78 * t73 + t74 * t77;
t135 = 0.2e1 * t37;
t57 = -pkin(4) - t127;
t134 = 0.2e1 * t57;
t133 = -0.2e1 * t72;
t132 = -0.2e1 * t74;
t131 = 0.2e1 * t76;
t129 = -pkin(10) - pkin(9);
t128 = pkin(5) * t35;
t126 = t71 * pkin(5);
t125 = t74 * pkin(7);
t124 = t75 * pkin(5);
t22 = t77 * t52 + t73 * t91;
t105 = t76 * t22;
t49 = -t78 * pkin(2) - t74 * qJ(3) - pkin(1);
t30 = t78 * pkin(3) - t49;
t12 = pkin(4) * t35 - pkin(9) * t37 + t30;
t6 = t105 + (-pkin(10) * t37 + t12) * t72;
t123 = t75 * t6;
t122 = pkin(4) + t43;
t121 = pkin(10) - t44;
t109 = t72 * t37;
t13 = pkin(5) * t109 + t19;
t120 = t13 * t33;
t119 = t13 * t38;
t14 = t38 * t37;
t118 = t14 * t33;
t103 = t76 * t37;
t16 = t75 * t103 - t71 * t109;
t117 = t16 * t38;
t116 = t19 * t72;
t115 = t19 * t76;
t114 = t19 * t77;
t113 = t33 * t35;
t112 = t38 * t33;
t111 = t38 * t35;
t110 = t72 * t35;
t108 = t72 * t73;
t107 = t72 * t76;
t106 = t74 * t78;
t104 = t76 * t35;
t102 = t76 * t73;
t101 = t77 * t33;
t100 = t77 * t38;
t99 = t77 * t72;
t98 = t77 * t76;
t97 = t29 - t57;
t96 = t143 * pkin(7) ^ 2;
t94 = -0.2e1 * t37 * t35;
t93 = -0.2e1 * t112;
t92 = -0.2e1 * t107;
t7 = t76 * t12 - t22 * t72;
t5 = -pkin(10) * t103 + t128 + t7;
t1 = t75 * t5 - t6 * t71;
t40 = t95 * t73;
t89 = -pkin(4) * t37 - pkin(9) * t35;
t2 = t5 * t71 + t123;
t88 = t1 * t38 + t2 * t33;
t8 = t12 * t72 + t105;
t3 = -t7 * t72 + t76 * t8;
t87 = -pkin(2) * t74 + qJ(3) * t78;
t86 = -t14 * t38 - t16 * t33;
t27 = t38 * t73;
t28 = t75 * t102 - t71 * t108;
t85 = -t27 * t38 + t28 * t33;
t83 = -t35 * t44 + t37 * t43;
t82 = -t35 * t73 - t37 * t77;
t69 = t77 ^ 2;
t66 = t73 ^ 2;
t54 = 0.2e1 * t107;
t51 = t129 * t76;
t50 = t129 * t72;
t45 = 0.2e1 * t143 * pkin(7);
t32 = t37 ^ 2;
t26 = t72 * t103;
t24 = t121 * t76;
t23 = t121 * t72;
t21 = t50 * t71 - t51 * t75;
t18 = t50 * t75 + t51 * t71;
t17 = (t65 - t68) * t37;
t10 = t23 * t71 - t24 * t75;
t9 = t23 * t75 + t24 * t71;
t4 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t67, 0.2e1 * t106, 0, t70, 0, 0, 0.2e1 * pkin(1) * t78, pkin(1) * t132, t45, pkin(1) ^ 2 + t96, t67, 0, -0.2e1 * t106, 0, 0, t70, -0.2e1 * t49 * t78, t45, t49 * t132, t49 ^ 2 + t96, t32, t94, 0, t31, 0, 0, t30 * t136, t30 * t135, 0.2e1 * t19 * t37 - 0.2e1 * t22 * t35, t22 ^ 2 + t30 ^ 2 + t140, t68 * t32, t32 * t92, t103 * t136, t65 * t32, t72 * t94, t31, 0.2e1 * t19 * t109 + 0.2e1 * t35 * t7, 0.2e1 * t103 * t19 - 0.2e1 * t35 * t8 (-t7 * t76 - t72 * t8) * t135, t7 ^ 2 + t8 ^ 2 + t140, t16 ^ 2, -0.2e1 * t16 * t14, t16 * t136, t14 ^ 2, -t14 * t136, t31, 0.2e1 * t1 * t35 + 0.2e1 * t13 * t14, 0.2e1 * t13 * t16 - 0.2e1 * t2 * t35, -0.2e1 * t1 * t16 - 0.2e1 * t14 * t2, t1 ^ 2 + t13 ^ 2 + t2 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t74, 0, t78, 0, -t125, -t62, 0, 0, 0, t74, 0, 0, -t78, 0, -t125, t87, t62, t87 * pkin(7), 0, 0, -t37, 0, t35, 0, t19, t22, -t35 * t48 + t37 * t46, t19 * t46 + t22 * t48, -t26, t17, -t110, t26, -t104, 0, t72 * t83 + t115, t76 * t83 - t116, -t3, t19 * t43 + t3 * t44, -t117, -t86, -t111, -t118, t113, 0, t14 * t29 + t35 * t9 - t120, -t10 * t35 + t16 * t29 - t119, -t10 * t14 - t16 * t9 + t88, t1 * t9 + t10 * t2 + t13 * t29; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0.2e1 * pkin(2), 0, 0.2e1 * qJ(3), pkin(2) ^ 2 + qJ(3) ^ 2, 0, 0, 0, 0, 0, 1, 0.2e1 * t46, 0.2e1 * t48, 0, t46 ^ 2 + t48 ^ 2, t65, t54, 0, t68, 0, 0, t43 * t131, t43 * t133, -0.2e1 * t90, t44 ^ 2 * t95 + t43 ^ 2, t138, t93, 0, t139, 0, 0, t33 * t137, t38 * t137, 0.2e1 * t10 * t33 + 0.2e1 * t9 * t38, t10 ^ 2 + t29 ^ 2 + t9 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t74, 0, t125, 0, 0, 0, 0, 0, 0, 0, 0, t82, t22 * t73 - t114, 0, 0, 0, 0, 0, 0, t82 * t72, t82 * t76, 0, t3 * t73 - t114, 0, 0, 0, 0, 0, 0, -t14 * t77 - t27 * t35, -t16 * t77 - t28 * t35, -t14 * t28 + t16 * t27, -t1 * t27 - t13 * t77 + t2 * t28; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, -pkin(2), 0, 0, 0, 0, 0, 0, -t77, t73, 0, -t46 * t77 + t48 * t73, 0, 0, 0, 0, 0, 0, -t98, t99, -t40, t40 * t44 - t43 * t77, 0, 0, 0, 0, 0, 0, t101, t100, t85, t10 * t28 - t27 * t9 - t29 * t77; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t66 + t69, 0, 0, 0, 0, 0, 0, 0, 0, 0, t66 * t95 + t69, 0, 0, 0, 0, 0, 0, 0, 0, 0, t27 ^ 2 + t28 ^ 2 + t69; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t37, 0, -t35, 0, -t19, -t22, 0, 0, t26, -t17, t110, -t26, t104, 0, t72 * t89 - t115, t76 * t89 + t116, t3, -t19 * pkin(4) + pkin(9) * t3, t117, t86, t111, t118, -t113, 0, t14 * t57 + t18 * t35 + t120, t16 * t57 - t21 * t35 + t119, -t14 * t21 - t16 * t18 - t88, t1 * t18 + t13 * t57 + t2 * t21; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -t46, -t48, 0, 0, -t65, t92, 0, -t68, 0, 0, -t122 * t76, t122 * t72, t90 - t141, -t43 * pkin(4) + pkin(9) * t90, -t138, 0.2e1 * t112, 0, -t139, 0, 0, t97 * t33, t97 * t38 (t18 - t9) * t38 + (-t10 + t21) * t33, t10 * t21 + t18 * t9 + t29 * t57; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t77, -t73, 0, 0, 0, 0, 0, 0, 0, 0, t98, -t99, t40, t77 * pkin(4) + pkin(9) * t40, 0, 0, 0, 0, 0, 0, -t101, -t100, -t85, -t18 * t27 + t21 * t28 - t57 * t77; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t65, t54, 0, t68, 0, 0, pkin(4) * t131, pkin(4) * t133, 0.2e1 * t141, pkin(9) ^ 2 * t95 + pkin(4) ^ 2, t138, t93, 0, t139, 0, 0, t33 * t134, t38 * t134, -0.2e1 * t18 * t38 - 0.2e1 * t21 * t33, t18 ^ 2 + t21 ^ 2 + t57 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t103, 0, -t109, t35, t7, -t8, 0, 0, 0, 0, t16, 0, -t14, t35, t35 * t124 + t1, -t123 + (-t5 - t128) * t71 (-t14 * t71 - t16 * t75) * pkin(5) (t1 * t75 + t2 * t71) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t72, 0, -t76, 0, -t72 * t44, -t76 * t44, 0, 0, 0, 0, -t38, 0, t33, 0, t9, -t10, t142 (t10 * t71 + t75 * t9) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t108, -t102, 0, 0, 0, 0, 0, 0, 0, 0, -t27, -t28, 0 (-t27 * t75 + t28 * t71) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t72, 0, t76, 0, -t72 * pkin(9), -t76 * pkin(9), 0, 0, 0, 0, t38, 0, -t33, 0, t18, -t21, -t142 (t18 * t75 + t21 * t71) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t124, -0.2e1 * t126, 0 (t71 ^ 2 + t75 ^ 2) * pkin(5) ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t16, 0, -t14, t35, t1, -t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t38, 0, t33, 0, t9, -t10, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t27, -t28, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t38, 0, -t33, 0, t18, -t21, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t124, -t126, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t4;
