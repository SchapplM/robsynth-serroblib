% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRPPRR11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d5,d6,theta4]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 09:44
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRPPRR11_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRR11_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPPRR11_inertiaJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 12:02:57
% EndTime: 2019-05-06 12:03:04
% DurationCPUTime: 2.41s
% Computational Cost: add. (2470->179), mult. (5320->354), div. (0->0), fcn. (5994->10), ass. (0->121)
t131 = cos(qJ(5));
t80 = cos(pkin(11));
t101 = t131 * t80;
t130 = sin(qJ(5));
t78 = sin(pkin(11));
t50 = -t130 * t78 + t101;
t143 = -0.2e1 * t50;
t100 = t130 * t80;
t48 = t131 * t78 + t100;
t45 = t48 ^ 2;
t46 = t50 ^ 2;
t142 = t45 + t46;
t141 = -2 * pkin(2);
t79 = sin(pkin(6));
t86 = cos(qJ(2));
t120 = t79 * t86;
t81 = cos(pkin(6));
t38 = t80 * t120 + t81 * t78;
t40 = -t78 * t120 + t81 * t80;
t20 = t130 * t40 + t131 * t38;
t140 = t20 ^ 2;
t82 = -pkin(2) - qJ(4);
t132 = -pkin(9) + t82;
t52 = t132 * t78;
t28 = -t132 * t101 + t130 * t52;
t139 = t28 ^ 2;
t138 = -0.2e1 * t20;
t64 = t78 * pkin(4) + qJ(3);
t137 = 0.2e1 * t64;
t136 = 0.2e1 * t79;
t135 = 0.2e1 * qJ(3);
t134 = pkin(1) * t86;
t133 = t50 * pkin(5);
t22 = -t130 * t38 + t131 * t40;
t84 = sin(qJ(2));
t68 = t79 * t84;
t83 = sin(qJ(6));
t85 = cos(qJ(6));
t15 = t83 * t22 - t85 * t68;
t129 = t15 * t85;
t17 = t85 * t22 + t83 * t68;
t128 = t17 * t83;
t127 = t17 * t85;
t126 = t20 * t48;
t125 = t22 * t50;
t124 = t28 * t50;
t123 = t38 * t78;
t122 = t40 * t80;
t72 = t79 ^ 2;
t121 = t72 * t86;
t119 = t81 * t84;
t118 = t81 * t86;
t117 = t83 * t20;
t116 = t83 * t48;
t115 = t83 * t50;
t114 = t83 * t85;
t19 = t85 * t20;
t41 = t85 * t48;
t113 = t85 * t50;
t102 = -pkin(2) - t134;
t59 = pkin(8) * t68;
t26 = pkin(3) * t68 + t59 + (-qJ(4) + t102) * t81;
t98 = -qJ(3) * t84 - pkin(1);
t31 = (t82 * t86 + t98) * t79;
t13 = t78 * t26 + t80 * t31;
t43 = pkin(1) * t119 + pkin(8) * t120;
t71 = t78 ^ 2;
t73 = t80 ^ 2;
t58 = t71 + t73;
t76 = t83 ^ 2;
t77 = t85 ^ 2;
t112 = t76 + t77;
t111 = t48 * t143;
t110 = -0.2e1 * t68;
t109 = 0.2e1 * t68;
t108 = t48 * t68;
t107 = t78 * t68;
t54 = t80 * t68;
t106 = t79 * t119;
t105 = t79 * t118;
t104 = t83 * t113;
t69 = t81 * qJ(3);
t33 = -t69 - t43;
t99 = t112 * t48;
t12 = t80 * t26 - t78 * t31;
t32 = pkin(3) * t120 - t33;
t97 = -pkin(10) * t48 - t133;
t8 = pkin(4) * t68 - t40 * pkin(9) + t12;
t9 = -t38 * pkin(9) + t13;
t6 = t130 * t8 + t131 * t9;
t4 = pkin(10) * t68 + t6;
t18 = t38 * pkin(4) + t32;
t7 = t20 * pkin(5) - t22 * pkin(10) + t18;
t1 = -t83 * t4 + t85 * t7;
t2 = t85 * t4 + t83 * t7;
t96 = t1 * t85 + t2 * t83;
t95 = -t1 * t83 + t2 * t85;
t5 = -t130 * t9 + t131 * t8;
t94 = t6 * t48 + t5 * t50;
t23 = t48 * pkin(5) - t50 * pkin(10) + t64;
t30 = t132 * t100 + t131 * t52;
t10 = t85 * t23 - t83 * t30;
t11 = t83 * t23 + t85 * t30;
t93 = t10 * t85 + t11 * t83;
t92 = -t10 * t83 + t11 * t85;
t91 = t12 * t80 + t13 * t78;
t90 = t128 - t129;
t89 = -t30 * t48 + t124;
t87 = qJ(3) ^ 2;
t74 = t81 ^ 2;
t67 = t72 * t86 ^ 2;
t66 = t72 * t84 ^ 2;
t53 = 0.2e1 * t84 * t121;
t47 = t58 * t82;
t42 = pkin(1) * t118 - t59;
t37 = t50 * t68;
t36 = t102 * t81 + t59;
t34 = (-pkin(2) * t86 + t98) * t79;
t14 = t83 * t15;
t3 = -pkin(5) * t68 - t5;
t16 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t66, t53, 0.2e1 * t106, t67, 0.2e1 * t105, t74, 0.2e1 * pkin(1) * t121 + 0.2e1 * t42 * t81, -0.2e1 * t72 * pkin(1) * t84 - 0.2e1 * t43 * t81 (-t42 * t84 + t43 * t86) * t136, t72 * pkin(1) ^ 2 + t42 ^ 2 + t43 ^ 2, t74, -0.2e1 * t106, -0.2e1 * t105, t66, t53, t67 (-t33 * t86 + t36 * t84) * t136, 0.2e1 * t34 * t120 + 0.2e1 * t36 * t81, -0.2e1 * t33 * t81 - 0.2e1 * t34 * t68, t33 ^ 2 + t34 ^ 2 + t36 ^ 2, t40 ^ 2, -0.2e1 * t40 * t38, t40 * t109, t38 ^ 2, t38 * t110, t66, 0.2e1 * t12 * t68 + 0.2e1 * t32 * t38, -0.2e1 * t13 * t68 + 0.2e1 * t32 * t40, -0.2e1 * t12 * t40 - 0.2e1 * t13 * t38, t12 ^ 2 + t13 ^ 2 + t32 ^ 2, t22 ^ 2, t22 * t138, t22 * t109, t140, t20 * t110, t66, 0.2e1 * t18 * t20 + 0.2e1 * t5 * t68, 0.2e1 * t18 * t22 - 0.2e1 * t6 * t68, -0.2e1 * t6 * t20 - 0.2e1 * t5 * t22, t18 ^ 2 + t5 ^ 2 + t6 ^ 2, t17 ^ 2, -0.2e1 * t17 * t15, 0.2e1 * t17 * t20, t15 ^ 2, t15 * t138, t140, 0.2e1 * t1 * t20 + 0.2e1 * t3 * t15, 0.2e1 * t3 * t17 - 0.2e1 * t2 * t20, -0.2e1 * t1 * t17 - 0.2e1 * t2 * t15, t1 ^ 2 + t2 ^ 2 + t3 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t68, 0, t120, t81, t42, -t43, 0, 0, t81, -t68, -t120, 0, 0, 0 (-pkin(2) * t84 + qJ(3) * t86) * t79, t59 + (t141 - t134) * t81, 0.2e1 * t69 + t43, -t36 * pkin(2) - t33 * qJ(3), t122, -t80 * t38 - t40 * t78, t54, t123, -t107, 0, qJ(3) * t38 + t32 * t78 + t82 * t54, qJ(3) * t40 - t82 * t107 + t32 * t80 (-t40 * t82 - t12) * t80 + (-t38 * t82 - t13) * t78, t32 * qJ(3) + t91 * t82, t125, -t50 * t20 - t22 * t48, t37, t126, -t108, 0, t18 * t48 + t64 * t20 - t28 * t68, t18 * t50 + t64 * t22 - t30 * t68, -t30 * t20 + t28 * t22 - t94, t18 * t64 - t5 * t28 + t6 * t30, t17 * t113 (-t128 - t129) * t50, t20 * t113 + t17 * t48, t15 * t115, -t20 * t115 - t15 * t48, t126, t1 * t48 + t10 * t20 + t115 * t3 + t28 * t15, -t11 * t20 + t113 * t3 + t28 * t17 - t2 * t48, -t10 * t17 - t11 * t15 - t50 * t96, t1 * t10 + t2 * t11 + t3 * t28; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, t141, t135 (pkin(2) ^ 2) + t87, t73, -0.2e1 * t80 * t78, 0, t71, 0, 0, t78 * t135, t80 * t135, -0.2e1 * t47, t58 * (t82 ^ 2) + t87, t46, t111, 0, t45, 0, 0, t48 * t137, t50 * t137, 0.2e1 * t89, t30 ^ 2 + t64 ^ 2 + t139, t77 * t46, -0.2e1 * t46 * t114, 0.2e1 * t48 * t113, t76 * t46, t83 * t111, t45, 0.2e1 * t10 * t48 + 0.2e1 * t115 * t28, -0.2e1 * t11 * t48 + 0.2e1 * t113 * t28, t93 * t143, t10 ^ 2 + t11 ^ 2 + t139; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t68, t81, 0, t36, 0, 0, 0, 0, 0, 0, t54, -t107, -t122 - t123, t91, 0, 0, 0, 0, 0, 0, t37, -t108, -t125 - t126, t94, 0, 0, 0, 0, 0, 0, -t20 * t116 - t50 * t15, -t50 * t17 - t20 * t41, t90 * t48, -t3 * t50 + t48 * t95; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, -pkin(2), 0, 0, 0, 0, 0, 0, 0, 0, -t58, t47, 0, 0, 0, 0, 0, 0, 0, 0, -t142, -t89, 0, 0, 0, 0, 0, 0, -t142 * t83, -t142 * t85, 0, t48 * t92 - t124; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t58, 0, 0, 0, 0, 0, 0, 0, 0, 0, t142, 0, 0, 0, 0, 0, 0, 0, 0, 0, t112 * t45 + t46; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t38, t40, 0, t32, 0, 0, 0, 0, 0, 0, t20, t22, 0, t18, 0, 0, 0, 0, 0, 0, t19, -t117, -t14 - t127, t96; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t78, t80, 0, qJ(3), 0, 0, 0, 0, 0, 0, t48, t50, 0, t64, 0, 0, 0, 0, 0, 0, t41, -t116, -t112 * t50, t93; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t112; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t22, 0, -t20, t68, t5, -t6, 0, 0, t128, -t14 + t127, t117, -t129, t19, 0, -pkin(5) * t15 - pkin(10) * t117 - t3 * t85, -pkin(5) * t17 - pkin(10) * t19 + t3 * t83, pkin(10) * t90 + t95, -t3 * pkin(5) + pkin(10) * t95; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t50, 0, -t48, 0, -t28, -t30, 0, 0, t104 (-t76 + t77) * t50, t116, -t104, t41, 0, -t28 * t85 + t83 * t97, t28 * t83 + t85 * t97, t92, -t28 * pkin(5) + pkin(10) * t92; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t50, -t48, 0, 0, 0, 0, 0, 0, 0, 0, t113, -t115, t99, pkin(10) * t99 + t133; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t76, 0.2e1 * t114, 0, t77, 0, 0, 0.2e1 * pkin(5) * t85, -0.2e1 * pkin(5) * t83, 0.2e1 * t112 * pkin(10), pkin(10) ^ 2 * t112 + pkin(5) ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t17, 0, -t15, t20, t1, -t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t113, 0, -t115, t48, t10, -t11, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t116, -t41, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t85, -t83, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83, 0, t85, 0, -t83 * pkin(10), -t85 * pkin(10), 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t16;
