% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRPRPP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,theta3]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 09:57
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRPRPP3_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPP3_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRPRPP3_inertiaJ_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 12:32:12
% EndTime: 2019-05-06 12:32:18
% DurationCPUTime: 1.71s
% Computational Cost: add. (1131->152), mult. (2328->258), div. (0->0), fcn. (2523->6), ass. (0->91)
t108 = sin(qJ(4));
t109 = cos(qJ(4));
t60 = sin(pkin(9));
t61 = cos(pkin(9));
t40 = t108 * t60 - t109 * t61;
t42 = t108 * t61 + t109 * t60;
t64 = sin(qJ(2));
t31 = t42 * t64;
t29 = t31 ^ 2;
t33 = t40 * t64;
t30 = t33 ^ 2;
t37 = t40 ^ 2;
t38 = t42 ^ 2;
t113 = -0.2e1 * t42;
t51 = -t61 * pkin(3) - pkin(2);
t112 = 0.2e1 * t51;
t111 = t31 * pkin(5);
t58 = t64 ^ 2;
t110 = t58 * pkin(7);
t54 = t64 * pkin(7);
t92 = pkin(8) + qJ(3);
t46 = t92 * t61;
t78 = t92 * t60;
t21 = t108 * t46 + t109 * t78;
t65 = cos(qJ(2));
t107 = t21 * t65;
t23 = -t108 * t78 + t109 * t46;
t106 = t23 * t65;
t105 = t31 * t33;
t104 = t31 * t40;
t17 = t33 * t42;
t103 = t33 * t65;
t102 = t40 * t42;
t101 = t42 * t65;
t100 = t60 * t61;
t99 = t60 * t64;
t98 = t60 * t65;
t97 = t61 * t64;
t96 = t61 * t65;
t95 = t64 * t65;
t94 = t65 * t31;
t93 = t65 * t40;
t62 = pkin(4) + qJ(6);
t45 = -t65 * pkin(2) - t64 * qJ(3) - pkin(1);
t36 = t61 * t45;
t15 = -pkin(8) * t97 + t36 + (-pkin(7) * t60 - pkin(3)) * t65;
t28 = pkin(7) * t96 + t60 * t45;
t20 = -pkin(8) * t99 + t28;
t91 = t108 * t20 - t109 * t15;
t7 = t108 * t15 + t109 * t20;
t44 = pkin(3) * t99 + t54;
t56 = t60 ^ 2;
t57 = t61 ^ 2;
t90 = t56 + t57;
t89 = qJ(5) * t31;
t88 = qJ(5) * t40;
t87 = t65 * qJ(5);
t86 = 0.2e1 * t105;
t85 = -0.2e1 * t102;
t84 = 0.2e1 * t95;
t83 = t60 * t97;
t55 = t65 * pkin(4);
t4 = t55 + t91;
t82 = -0.2e1 * t87 + t7;
t81 = t21 ^ 2 + t23 ^ 2;
t3 = t87 - t7;
t77 = t33 * qJ(5) + t44;
t76 = -pkin(2) * t64 + qJ(3) * t65;
t75 = -t21 * t33 - t23 * t31;
t27 = -pkin(7) * t98 + t36;
t74 = -t27 * t60 + t28 * t61;
t73 = -t31 * t42 + t40 * t33;
t72 = t33 * pkin(5) - t4;
t71 = -t42 * qJ(5) + t51;
t70 = 0.2e1 * t21 * t42 - 0.2e1 * t23 * t40;
t69 = pkin(7) ^ 2;
t67 = qJ(5) ^ 2;
t66 = 0.2e1 * qJ(5);
t59 = t65 ^ 2;
t53 = t58 * t69;
t26 = 0.2e1 * t103;
t25 = -0.2e1 * t94;
t14 = t40 * pkin(4) + t71;
t11 = -t40 * pkin(5) + t23;
t10 = t42 * pkin(5) + t21;
t9 = t62 * t40 + t71;
t8 = t31 * pkin(4) + t77;
t5 = t62 * t31 + t77;
t2 = -t3 - t111;
t1 = t65 * qJ(6) - t72;
t6 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t58, t84, 0, t59, 0, 0, 0.2e1 * pkin(1) * t65, -0.2e1 * pkin(1) * t64, 0.2e1 * (t58 + t59) * pkin(7), pkin(1) ^ 2 + t59 * t69 + t53, t57 * t58, -0.2e1 * t58 * t100, -0.2e1 * t61 * t95, t56 * t58, t60 * t84, t59, 0.2e1 * t60 * t110 - 0.2e1 * t27 * t65, 0.2e1 * t61 * t110 + 0.2e1 * t28 * t65, 0.2e1 * (-t27 * t61 - t28 * t60) * t64, t27 ^ 2 + t28 ^ 2 + t53, t30, t86, t26, t29, 0.2e1 * t94, t59, 0.2e1 * t44 * t31 + 0.2e1 * t65 * t91, -0.2e1 * t44 * t33 + 0.2e1 * t7 * t65, -0.2e1 * t7 * t31 - 0.2e1 * t33 * t91, t44 ^ 2 + t7 ^ 2 + t91 ^ 2, t59, -0.2e1 * t103, t25, t30, t86, t29, 0.2e1 * t3 * t31 - 0.2e1 * t4 * t33, -0.2e1 * t8 * t31 - 0.2e1 * t4 * t65, 0.2e1 * t3 * t65 + 0.2e1 * t8 * t33, t3 ^ 2 + t4 ^ 2 + t8 ^ 2, t59, t25, t26, t29, -0.2e1 * t105, t30, -0.2e1 * t1 * t33 - 0.2e1 * t2 * t31, -0.2e1 * t2 * t65 + 0.2e1 * t5 * t33, 0.2e1 * t1 * t65 + 0.2e1 * t5 * t31, t1 ^ 2 + t2 ^ 2 + t5 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t64, 0, t65, 0, -t54, -t65 * pkin(7), 0, 0, t83 (-t56 + t57) * t64, -t98, -t83, -t96, 0, -pkin(7) * t97 + t76 * t60, pkin(7) * t99 + t76 * t61, t74, -pkin(2) * t54 + t74 * qJ(3), -t17, t73, -t101, t104, t93, 0, t51 * t31 + t44 * t40 + t107, -t51 * t33 + t44 * t42 + t106, -t7 * t40 + t42 * t91 + t75, t21 * t91 + t7 * t23 + t44 * t51, 0, t101, -t93, -t17, t73, t104, t3 * t40 + t4 * t42 + t75, -t14 * t31 - t8 * t40 - t107, t14 * t33 - t8 * t42 - t106, t8 * t14 + t4 * t21 - t3 * t23, 0, -t93, -t101, t104, -t73, -t17, t1 * t42 - t10 * t33 - t11 * t31 - t2 * t40, -t11 * t65 + t9 * t33 - t5 * t42, t10 * t65 + t9 * t31 + t5 * t40, t1 * t10 + t2 * t11 + t5 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t56, 0.2e1 * t100, 0, t57, 0, 0, 0.2e1 * pkin(2) * t61, -0.2e1 * pkin(2) * t60, 0.2e1 * t90 * qJ(3), t90 * qJ(3) ^ 2 + pkin(2) ^ 2, t38, t85, 0, t37, 0, 0, t40 * t112, t42 * t112, t70, t51 ^ 2 + t81, 0, 0, 0, t38, t85, t37, t70, -0.2e1 * t14 * t40, t14 * t113, t14 ^ 2 + t81, 0, 0, 0, t37, 0.2e1 * t102, t38, 0.2e1 * t10 * t42 - 0.2e1 * t11 * t40, t9 * t113, 0.2e1 * t9 * t40, t10 ^ 2 + t11 ^ 2 + t9 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t99, t97, 0, t54, 0, 0, 0, 0, 0, 0, t31, -t33, 0, t44, 0, 0, 0, 0, 0, 0, 0, -t31, t33, t8, 0, 0, 0, 0, 0, 0, 0, t33, t31, t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t61, t60, 0, -pkin(2), 0, 0, 0, 0, 0, 0, t40, t42, 0, t51, 0, 0, 0, 0, 0, 0, 0, -t40, -t42, t14, 0, 0, 0, 0, 0, 0, 0, -t42, t40, t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t33, 0, -t31, -t65, -t91, -t7, 0, 0, -t65, t33, t31, 0, 0, 0, pkin(4) * t33 - t89, 0.2e1 * t55 + t91, t82, -t4 * pkin(4) - t3 * qJ(5), -t65, t31, -t33, 0, 0, 0, t62 * t33 - t89, t82 - t111 (-qJ(6) - t62) * t65 + t72, t2 * qJ(5) - t1 * t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t42, 0, -t40, 0, -t21, -t23, 0, 0, 0, -t42, t40, 0, 0, 0, -pkin(4) * t42 - t88, t21, t23, -t21 * pkin(4) + t23 * qJ(5), 0, t40, t42, 0, 0, 0, -t62 * t42 - t88, t11, -t10, t11 * qJ(5) - t10 * t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, -0.2e1 * pkin(4), t66, pkin(4) ^ 2 + t67, 1, 0, 0, 0, 0, 0, 0, t66, 0.2e1 * t62, t62 ^ 2 + t67; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t33, -t65, 0, t4, 0, 0, 0, 0, 0, 0, -t33, 0, t65, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t42, 0, 0, t21, 0, 0, 0, 0, 0, 0, t42, 0, 0, t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, -pkin(4), 0, 0, 0, 0, 0, 0, 0, 0, -1, -t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t31, -t65, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t40, 0, 0, t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, qJ(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1;];
MM_reg  = t6;
