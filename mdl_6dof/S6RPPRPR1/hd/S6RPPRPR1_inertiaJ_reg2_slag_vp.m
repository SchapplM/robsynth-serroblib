% Calculate inertial parameters regressor of joint inertia matrix for
% S6RPPRPR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d6,theta2,theta3,theta5]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 01:40
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RPPRPR1_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRPR1_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPPRPR1_inertiaJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 13:55:25
% EndTime: 2019-05-05 13:55:29
% DurationCPUTime: 1.25s
% Computational Cost: add. (1217->104), mult. (2274->189), div. (0->0), fcn. (2680->10), ass. (0->85)
t61 = sin(pkin(11));
t64 = cos(pkin(11));
t67 = sin(qJ(6));
t90 = cos(qJ(6));
t46 = t90 * t61 + t67 * t64;
t65 = cos(pkin(10));
t68 = sin(qJ(4));
t62 = sin(pkin(10));
t91 = cos(qJ(4));
t76 = t91 * t62;
t47 = t68 * t65 + t76;
t18 = t46 * t47;
t88 = t46 * t18;
t102 = -t67 * t61 + t90 * t64;
t20 = t102 * t47;
t9 = t20 * t102;
t104 = t9 + t88;
t103 = -0.2e1 * t47;
t63 = sin(pkin(9));
t94 = t63 * pkin(1);
t52 = qJ(3) + t94;
t92 = pkin(7) + t52;
t36 = t92 * t65;
t21 = t68 * t36 + t92 * t76;
t101 = t21 ^ 2;
t82 = t68 * t62;
t44 = -t91 * t65 + t82;
t100 = t44 ^ 2;
t99 = 0.2e1 * t44;
t66 = cos(pkin(9));
t93 = t66 * pkin(1);
t55 = -pkin(2) - t93;
t48 = -t65 * pkin(3) + t55;
t98 = 0.2e1 * t48;
t56 = -t64 * pkin(5) - pkin(4);
t97 = 0.2e1 * t56;
t96 = 0.2e1 * t62;
t95 = t44 * pkin(4);
t89 = t21 * t44;
t27 = t44 * t102;
t28 = t46 * t44;
t57 = t61 ^ 2;
t87 = t57 * t47;
t32 = t61 * t44;
t86 = t61 * t47;
t85 = t61 * t64;
t84 = t64 * t47;
t81 = pkin(8) + qJ(5);
t15 = -t47 * qJ(5) + t48 + t95;
t23 = t91 * t36 - t92 * t82;
t6 = t61 * t15 + t64 * t23;
t59 = t64 ^ 2;
t80 = t57 + t59;
t58 = t62 ^ 2;
t60 = t65 ^ 2;
t79 = t58 + t60;
t78 = t44 * t103;
t77 = t61 * t84;
t5 = t64 * t15 - t61 * t23;
t74 = t80 * qJ(5);
t73 = t5 * t64 + t6 * t61;
t72 = -t5 * t61 + t6 * t64;
t71 = -pkin(4) * t47 - qJ(5) * t44;
t50 = t81 * t64;
t49 = t81 * t61;
t41 = t47 ^ 2;
t40 = t46 ^ 2;
t37 = t102 ^ 2;
t35 = t64 * t44;
t34 = t59 * t47;
t33 = t59 * t41;
t31 = t57 * t41;
t26 = -t67 * t49 + t90 * t50;
t25 = -t90 * t49 - t67 * t50;
t24 = -t34 - t87;
t17 = t20 ^ 2;
t16 = t18 ^ 2;
t10 = t20 * t46;
t8 = t18 * t102;
t7 = pkin(5) * t86 + t21;
t4 = -pkin(8) * t86 + t6;
t3 = t44 * pkin(5) - pkin(8) * t84 + t5;
t2 = t67 * t3 + t90 * t4;
t1 = t90 * t3 - t67 * t4;
t11 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t93, -0.2e1 * t94, 0 (t63 ^ 2 + t66 ^ 2) * pkin(1) ^ 2, t58, t65 * t96, 0, t60, 0, 0, -0.2e1 * t55 * t65, t55 * t96, 0.2e1 * t79 * t52, t79 * t52 ^ 2 + t55 ^ 2, t41, t78, 0, t100, 0, 0, t44 * t98, t47 * t98, 0.2e1 * t21 * t47 - 0.2e1 * t23 * t44, t23 ^ 2 + t48 ^ 2 + t101, t33, -0.2e1 * t41 * t85, t84 * t99, t31, t61 * t78, t100, 0.2e1 * t21 * t86 + 0.2e1 * t5 * t44, 0.2e1 * t21 * t84 - 0.2e1 * t6 * t44, t73 * t103, t5 ^ 2 + t6 ^ 2 + t101, t17, -0.2e1 * t20 * t18, t20 * t99, t16, -t18 * t99, t100, 0.2e1 * t1 * t44 + 0.2e1 * t7 * t18, -0.2e1 * t2 * t44 + 0.2e1 * t7 * t20, -0.2e1 * t1 * t20 - 0.2e1 * t2 * t18, t1 ^ 2 + t2 ^ 2 + t7 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t23 * t47 + t89, 0, 0, 0, 0, 0, 0, 0, 0, 0, t47 * t72 + t89, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1 * t18 + t2 * t20 + t7 * t44; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t79, 0, 0, 0, 0, 0, 0, 0, 0, 0, t41 + t100, 0, 0, 0, 0, 0, 0, 0, 0, 0, t33 + t31 + t100, 0, 0, 0, 0, 0, 0, 0, 0, 0, t17 + t16 + t100; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t65, t62, 0, t55, 0, 0, 0, 0, 0, 0, t44, t47, 0, t48, 0, 0, 0, 0, 0, 0, t35, -t32, t24, t73, 0, 0, 0, 0, 0, 0, t27, -t28, -t104, t1 * t102 + t2 * t46; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t10 - t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t80, 0, 0, 0, 0, 0, 0, 0, 0, 0, t40 + t37; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t47, 0, -t44, 0, -t21, -t23, 0, 0, t77, t34 - t87, t32, -t77, t35, 0, -t21 * t64 + t61 * t71, t21 * t61 + t64 * t71, t72, -t21 * pkin(4) + qJ(5) * t72, t10, t9 - t88, t28, -t8, t27, 0, -t102 * t7 + t56 * t18 + t25 * t44, t56 * t20 - t26 * t44 + t7 * t46, -t1 * t46 + t102 * t2 - t26 * t18 - t25 * t20, t1 * t25 + t2 * t26 + t7 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t44, -t47, 0, 0, 0, 0, 0, 0, 0, 0, -t35, t32, -t24, t47 * t74 - t95, 0, 0, 0, 0, 0, 0, -t27, t28, t104, -t18 * t25 + t20 * t26 + t44 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t102 * t25 + t46 * t26; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t57, 0.2e1 * t85, 0, t59, 0, 0, 0.2e1 * pkin(4) * t64, -0.2e1 * pkin(4) * t61, 0.2e1 * t74, t80 * qJ(5) ^ 2 + pkin(4) ^ 2, t40, 0.2e1 * t46 * t102, 0, t37, 0, 0, -t102 * t97, t46 * t97, 0.2e1 * t102 * t26 - 0.2e1 * t25 * t46, t25 ^ 2 + t26 ^ 2 + t56 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t86, t84, 0, t21, 0, 0, 0, 0, 0, 0, t18, t20, 0, t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t44, 0, 0, 0, 0, 0, 0, 0, 0, 0, t44; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t64, t61, 0, -pkin(4), 0, 0, 0, 0, 0, 0, -t102, t46, 0, t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t20, 0, -t18, t44, t1, -t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t18, -t20, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t102, -t46, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t46, 0, t102, 0, t25, -t26, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t11;
