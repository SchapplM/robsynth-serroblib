% Calculate inertial parameters regressor of joint inertia matrix for
% S6RPRPRR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5,d6,theta2,theta4]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 03:53
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RPRPRR6_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRR6_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRPRR6_inertiaJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 19:03:23
% EndTime: 2019-05-05 19:03:28
% DurationCPUTime: 1.65s
% Computational Cost: add. (2563->142), mult. (5002->279), div. (0->0), fcn. (6070->10), ass. (0->92)
t72 = sin(pkin(11));
t74 = cos(pkin(11));
t77 = sin(qJ(5));
t80 = cos(qJ(5));
t115 = -t72 * t77 + t74 * t80;
t103 = cos(qJ(3));
t73 = sin(pkin(10));
t92 = pkin(7) + qJ(2);
t62 = t92 * t73;
t75 = cos(pkin(10));
t64 = t92 * t75;
t78 = sin(qJ(3));
t39 = t103 * t62 + t64 * t78;
t114 = t39 ^ 2;
t57 = -t103 * t75 + t73 * t78;
t50 = t57 ^ 2;
t66 = -pkin(4) * t74 - pkin(3);
t44 = -pkin(5) * t115 + t66;
t113 = 0.2e1 * t44;
t112 = -0.2e1 * t57;
t111 = 0.2e1 * t57;
t110 = 0.2e1 * t66;
t67 = -pkin(2) * t75 - pkin(1);
t109 = 0.2e1 * t67;
t108 = 0.2e1 * t75;
t107 = t57 * pkin(5);
t76 = sin(qJ(6));
t106 = t76 * pkin(5);
t79 = cos(qJ(6));
t105 = t79 * pkin(5);
t59 = t72 * t80 + t74 * t77;
t60 = t103 * t73 + t75 * t78;
t26 = t59 * t60;
t31 = pkin(3) * t57 - qJ(4) * t60 + t67;
t42 = t103 * t64 - t62 * t78;
t18 = t31 * t74 - t42 * t72;
t95 = t74 * t60;
t10 = pkin(4) * t57 - pkin(8) * t95 + t18;
t19 = t31 * t72 + t42 * t74;
t97 = t72 * t60;
t13 = -pkin(8) * t97 + t19;
t7 = t10 * t77 + t13 * t80;
t5 = -pkin(9) * t26 + t7;
t104 = t79 * t5;
t28 = t115 * t60;
t16 = -t26 * t76 + t28 * t79;
t34 = -t115 * t79 + t59 * t76;
t102 = t16 * t34;
t101 = t28 * t115;
t36 = t115 * t76 + t59 * t79;
t100 = t36 * t57;
t99 = t59 * t57;
t98 = t72 * t57;
t96 = t72 * t74;
t91 = pkin(8) + qJ(4);
t68 = t72 ^ 2;
t70 = t74 ^ 2;
t90 = t68 + t70;
t69 = t73 ^ 2;
t71 = t75 ^ 2;
t89 = t69 + t71;
t88 = t60 * t112;
t87 = t72 * t95;
t6 = t10 * t80 - t13 * t77;
t4 = -pkin(9) * t28 + t107 + t6;
t1 = t4 * t79 - t5 * t76;
t61 = t91 * t72;
t63 = t91 * t74;
t38 = -t61 * t80 - t63 * t77;
t22 = pkin(4) * t97 + t39;
t86 = -pkin(3) * t60 - qJ(4) * t57;
t85 = t18 * t74 + t19 * t72;
t84 = -t18 * t72 + t19 * t74;
t41 = -t61 * t77 + t63 * t80;
t52 = t60 ^ 2;
t51 = t59 ^ 2;
t49 = t115 ^ 2;
t47 = t74 * t57;
t43 = t115 * t57;
t33 = t36 ^ 2;
t32 = t34 ^ 2;
t25 = pkin(9) * t115 + t41;
t24 = -pkin(9) * t59 + t38;
t21 = t34 * t57;
t20 = t59 * t26;
t17 = pkin(5) * t26 + t22;
t14 = t26 * t79 + t28 * t76;
t12 = t24 * t76 + t25 * t79;
t11 = t24 * t79 - t25 * t76;
t8 = t36 * t14;
t2 = t4 * t76 + t104;
t3 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t69, t73 * t108, 0, t71, 0, 0, pkin(1) * t108, -0.2e1 * pkin(1) * t73, 0.2e1 * t89 * qJ(2), qJ(2) ^ 2 * t89 + pkin(1) ^ 2, t52, t88, 0, t50, 0, 0, t57 * t109, t60 * t109, 0.2e1 * t39 * t60 - 0.2e1 * t42 * t57, t42 ^ 2 + t67 ^ 2 + t114, t70 * t52, -0.2e1 * t52 * t96, t95 * t111, t68 * t52, t72 * t88, t50, 0.2e1 * t18 * t57 + 0.2e1 * t39 * t97, -0.2e1 * t19 * t57 + 0.2e1 * t39 * t95, -0.2e1 * t85 * t60, t18 ^ 2 + t19 ^ 2 + t114, t28 ^ 2, -0.2e1 * t28 * t26, t28 * t111, t26 ^ 2, -t26 * t111, t50, 0.2e1 * t22 * t26 + 0.2e1 * t57 * t6, 0.2e1 * t22 * t28 - 0.2e1 * t57 * t7, -0.2e1 * t26 * t7 - 0.2e1 * t28 * t6, t22 ^ 2 + t6 ^ 2 + t7 ^ 2, t16 ^ 2, -0.2e1 * t16 * t14, t16 * t111, t14 ^ 2, t14 * t112, t50, 0.2e1 * t1 * t57 + 0.2e1 * t14 * t17, 0.2e1 * t16 * t17 - 0.2e1 * t2 * t57, -0.2e1 * t1 * t16 - 0.2e1 * t14 * t2, t1 ^ 2 + t17 ^ 2 + t2 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t75, t73, 0, -pkin(1), 0, 0, 0, 0, 0, 0, t57, t60, 0, t67, 0, 0, 0, 0, 0, 0, t47, -t98, -t90 * t60, t85, 0, 0, 0, 0, 0, 0, t43, -t99, -t20 - t101, t115 * t6 + t59 * t7, 0, 0, 0, 0, 0, 0, -t21, -t100, -t8 + t102, -t1 * t34 + t2 * t36; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t90, 0, 0, 0, 0, 0, 0, 0, 0, 0, t51 + t49, 0, 0, 0, 0, 0, 0, 0, 0, 0, t33 + t32; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t60, 0, -t57, 0, -t39, -t42, 0, 0, t87 (-t68 + t70) * t60, t98, -t87, t47, 0, -t39 * t74 + t72 * t86, t39 * t72 + t74 * t86, t84, -t39 * pkin(3) + qJ(4) * t84, t28 * t59, -t20 + t101, t99, -t26 * t115, t43, 0, -t115 * t22 + t26 * t66 + t38 * t57, t22 * t59 + t28 * t66 - t41 * t57, t115 * t7 - t26 * t41 - t28 * t38 - t59 * t6, t22 * t66 + t38 * t6 + t41 * t7, t16 * t36, -t8 - t102, t100, t14 * t34, -t21, 0, t11 * t57 + t14 * t44 + t17 * t34, -t12 * t57 + t16 * t44 + t17 * t36, -t1 * t36 - t11 * t16 - t12 * t14 - t2 * t34, t1 * t11 + t12 * t2 + t17 * t44; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t115 * t38 + t41 * t59, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t11 * t34 + t12 * t36; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t68, 0.2e1 * t96, 0, t70, 0, 0, 0.2e1 * pkin(3) * t74, -0.2e1 * pkin(3) * t72, 0.2e1 * t90 * qJ(4), qJ(4) ^ 2 * t90 + pkin(3) ^ 2, t51, 0.2e1 * t59 * t115, 0, t49, 0, 0, -t115 * t110, t59 * t110, 0.2e1 * t115 * t41 - 0.2e1 * t38 * t59, t38 ^ 2 + t41 ^ 2 + t66 ^ 2, t33, -0.2e1 * t36 * t34, 0, t32, 0, 0, t34 * t113, t36 * t113, -0.2e1 * t11 * t36 - 0.2e1 * t12 * t34, t11 ^ 2 + t12 ^ 2 + t44 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t97, t95, 0, t39, 0, 0, 0, 0, 0, 0, t26, t28, 0, t22, 0, 0, 0, 0, 0, 0, t14, t16, 0, t17; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t74, t72, 0, -pkin(3), 0, 0, 0, 0, 0, 0, -t115, t59, 0, t66, 0, 0, 0, 0, 0, 0, t34, t36, 0, t44; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t28, 0, -t26, t57, t6, -t7, 0, 0, 0, 0, t16, 0, -t14, t57, t105 * t57 + t1, -t104 + (-t4 - t107) * t76 (-t14 * t76 - t16 * t79) * pkin(5) (t1 * t79 + t2 * t76) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t115, -t59, 0, 0, 0, 0, 0, 0, 0, 0, -t34, -t36, 0 (-t34 * t79 + t36 * t76) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t59, 0, t115, 0, t38, -t41, 0, 0, 0, 0, t36, 0, -t34, 0, t11, -t12 (-t34 * t76 - t36 * t79) * pkin(5) (t11 * t79 + t12 * t76) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t105, -0.2e1 * t106, 0 (t76 ^ 2 + t79 ^ 2) * pkin(5) ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t16, 0, -t14, t57, t1, -t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t34, -t36, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t36, 0, -t34, 0, t11, -t12, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t105, -t106, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t3;
