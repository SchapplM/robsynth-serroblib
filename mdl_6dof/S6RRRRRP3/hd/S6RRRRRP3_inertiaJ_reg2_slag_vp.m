% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRRRRP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d5]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 01:11
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRRRRP3_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP3_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRRP3_inertiaJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-08 04:42:42
% EndTime: 2019-05-08 04:42:55
% DurationCPUTime: 2.86s
% Computational Cost: add. (2574->203), mult. (4945->342), div. (0->0), fcn. (5769->8), ass. (0->132)
t113 = sin(qJ(4));
t108 = t113 ^ 2;
t117 = cos(qJ(4));
t110 = t117 ^ 2;
t131 = t108 + t110;
t114 = sin(qJ(3));
t152 = t114 * pkin(2);
t97 = pkin(9) + t152;
t144 = t131 * t97;
t112 = sin(qJ(5));
t116 = cos(qJ(5));
t83 = t112 * t117 + t116 * t113;
t163 = 0.2e1 * t83;
t167 = -t112 * t113 + t116 * t117;
t118 = cos(qJ(3));
t115 = sin(qJ(2));
t158 = -pkin(8) - pkin(7);
t128 = t158 * t115;
t119 = cos(qJ(2));
t90 = t158 * t119;
t57 = -t114 * t90 - t118 * t128;
t166 = t57 ^ 2;
t81 = t114 * t115 - t118 * t119;
t76 = t81 ^ 2;
t165 = -0.2e1 * t167;
t164 = 0.2e1 * t81;
t100 = -t117 * pkin(4) - pkin(3);
t150 = t118 * pkin(2);
t87 = t100 - t150;
t162 = 0.2e1 * t87;
t161 = 0.2e1 * t100;
t101 = -t119 * pkin(2) - pkin(1);
t160 = 0.2e1 * t101;
t159 = 0.2e1 * t119;
t84 = t114 * t119 + t118 * t115;
t44 = t167 * t84;
t141 = t117 * t84;
t50 = t81 * pkin(3) - t84 * pkin(9) + t101;
t60 = t114 * t128 - t118 * t90;
t18 = -t113 * t60 + t117 * t50;
t12 = t81 * pkin(4) - pkin(10) * t141 + t18;
t142 = t117 * t60;
t15 = t142 + (-pkin(10) * t84 + t50) * t113;
t7 = -t112 * t15 + t116 * t12;
t125 = -t44 * qJ(6) + t7;
t71 = t81 * pkin(5);
t2 = t125 + t71;
t42 = t83 * t84;
t8 = t112 * t12 + t116 * t15;
t4 = -t42 * qJ(6) + t8;
t157 = t167 * t4 - t2 * t83;
t156 = t167 * t8 - t7 * t83;
t155 = t167 * pkin(5);
t99 = -pkin(3) - t150;
t154 = pkin(3) - t99;
t153 = t112 * pkin(4);
t105 = t116 * pkin(4);
t151 = t117 * pkin(9);
t137 = t83 * qJ(6);
t73 = (-pkin(10) - t97) * t113;
t107 = t117 * pkin(10);
t140 = t117 * t97;
t74 = t107 + t140;
t47 = -t112 * t74 + t116 * t73;
t30 = t47 - t137;
t138 = t167 * qJ(6);
t48 = t112 * t73 + t116 * t74;
t31 = t48 + t138;
t149 = t167 * t31 - t30 * t83;
t88 = (-pkin(10) - pkin(9)) * t113;
t89 = t107 + t151;
t56 = -t112 * t89 + t116 * t88;
t36 = t56 - t137;
t59 = t112 * t88 + t116 * t89;
t37 = t59 + t138;
t148 = t167 * t37 - t36 * t83;
t147 = t167 * t48 - t47 * t83;
t146 = t167 * t59 - t56 * t83;
t61 = t87 - t155;
t62 = t100 - t155;
t145 = t61 + t62;
t143 = t113 * t84;
t52 = t57 * t113;
t139 = t57 * t117;
t136 = t100 + t87;
t134 = t113 * t117;
t132 = t131 * pkin(9);
t109 = t115 ^ 2;
t111 = t119 ^ 2;
t130 = t109 + t111;
t129 = -0.2e1 * t84 * t81;
t34 = pkin(4) * t143 + t57;
t127 = -pkin(3) * t84 - pkin(9) * t81;
t126 = -t81 * t97 + t84 * t99;
t19 = t113 * t50 + t142;
t9 = -t18 * t113 + t19 * t117;
t123 = pkin(4) ^ 2;
t120 = 0.2e1 * pkin(5);
t103 = t112 ^ 2 * t123;
t102 = -0.2e1 * t153;
t98 = t105 + pkin(5);
t93 = 0.2e1 * t134;
t78 = t84 ^ 2;
t77 = t83 ^ 2;
t75 = t167 ^ 2;
t72 = t83 * pkin(5);
t70 = t117 * t81;
t69 = t113 * t81;
t67 = t81 * t153;
t66 = t167 * t153;
t64 = t84 * t134;
t55 = t83 * t81;
t54 = t167 * t81;
t53 = t167 * t163;
t51 = (-t108 + t110) * t84;
t49 = -t83 * t105 + t66;
t46 = -t98 * t83 + t66;
t41 = t44 ^ 2;
t40 = t42 ^ 2;
t35 = t42 * t153;
t29 = t44 * t83;
t28 = t42 * t167;
t27 = t44 * t164;
t26 = t42 * t164;
t23 = t34 * t83;
t22 = t34 * t167;
t17 = -0.2e1 * t44 * t42;
t16 = t42 * pkin(5) + t34;
t14 = t16 * t83;
t13 = t16 * t167;
t10 = t167 * t44 - t83 * t42;
t1 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t109, t115 * t159, 0, t111, 0, 0, pkin(1) * t159, -0.2e1 * pkin(1) * t115, 0.2e1 * t130 * pkin(7), t130 * pkin(7) ^ 2 + pkin(1) ^ 2, t78, t129, 0, t76, 0, 0, t81 * t160, t84 * t160, 0.2e1 * t57 * t84 - 0.2e1 * t60 * t81, t101 ^ 2 + t60 ^ 2 + t166, t110 * t78, -0.2e1 * t78 * t134, t141 * t164, t108 * t78, t113 * t129, t76, 0.2e1 * t18 * t81 + 0.2e1 * t84 * t52, 0.2e1 * t84 * t139 - 0.2e1 * t19 * t81, 0.2e1 * (-t113 * t19 - t117 * t18) * t84, t18 ^ 2 + t19 ^ 2 + t166, t41, t17, t27, t40, -t26, t76, 0.2e1 * t34 * t42 + 0.2e1 * t7 * t81, 0.2e1 * t34 * t44 - 0.2e1 * t8 * t81, -0.2e1 * t8 * t42 - 0.2e1 * t7 * t44, t34 ^ 2 + t7 ^ 2 + t8 ^ 2, t41, t17, t27, t40, -t26, t76, 0.2e1 * t16 * t42 + 0.2e1 * t2 * t81, 0.2e1 * t16 * t44 - 0.2e1 * t4 * t81, -0.2e1 * t2 * t44 - 0.2e1 * t4 * t42, t16 ^ 2 + t2 ^ 2 + t4 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t115, 0, t119, 0, -t115 * pkin(7), -t119 * pkin(7), 0, 0, 0, 0, t84, 0, -t81, 0, -t57, -t60 (-t114 * t81 - t118 * t84) * pkin(2) (t114 * t60 - t118 * t57) * pkin(2), t64, t51, t69, -t64, t70, 0, t113 * t126 - t139, t117 * t126 + t52, t9, t57 * t99 + t9 * t97, t29, t10, t55, -t28, t54, 0, t87 * t42 + t47 * t81 - t22, t87 * t44 - t48 * t81 + t23, -t48 * t42 - t47 * t44 + t156, t34 * t87 + t7 * t47 + t8 * t48, t29, t10, t55, -t28, t54, 0, t30 * t81 + t61 * t42 - t13, -t31 * t81 + t61 * t44 + t14, -t30 * t44 - t31 * t42 + t157, t16 * t61 + t2 * t30 + t4 * t31; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t150, -0.2e1 * t152, 0 (t114 ^ 2 + t118 ^ 2) * pkin(2) ^ 2, t108, t93, 0, t110, 0, 0, -0.2e1 * t99 * t117, 0.2e1 * t99 * t113, 0.2e1 * t144, t131 * t97 ^ 2 + t99 ^ 2, t77, t53, 0, t75, 0, 0, -t167 * t162, t83 * t162, 0.2e1 * t147, t47 ^ 2 + t48 ^ 2 + t87 ^ 2, t77, t53, 0, t75, 0, 0, t61 * t165, t61 * t163, 0.2e1 * t149, t30 ^ 2 + t31 ^ 2 + t61 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t84, 0, -t81, 0, -t57, -t60, 0, 0, t64, t51, t69, -t64, t70, 0, t113 * t127 - t139, t117 * t127 + t52, t9, -t57 * pkin(3) + pkin(9) * t9, t29, t10, t55, -t28, t54, 0, t100 * t42 + t56 * t81 - t22, t100 * t44 - t59 * t81 + t23, -t59 * t42 - t56 * t44 + t156, t34 * t100 + t7 * t56 + t8 * t59, t29, t10, t55, -t28, t54, 0, t36 * t81 + t62 * t42 - t13, -t37 * t81 + t62 * t44 + t14, -t36 * t44 - t37 * t42 + t157, t16 * t62 + t2 * t36 + t4 * t37; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t150, -t152, 0, 0, t108, t93, 0, t110, 0, 0, t154 * t117, -t154 * t113, t132 + t144, -t99 * pkin(3) + pkin(9) * t144, t77, t53, 0, t75, 0, 0, -t136 * t167, t136 * t83, t146 + t147, t87 * t100 + t47 * t56 + t48 * t59, t77, t53, 0, t75, 0, 0, -t145 * t167, t145 * t83, t148 + t149, t30 * t36 + t31 * t37 + t61 * t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t108, t93, 0, t110, 0, 0, 0.2e1 * pkin(3) * t117, -0.2e1 * pkin(3) * t113, 0.2e1 * t132, t131 * pkin(9) ^ 2 + pkin(3) ^ 2, t77, t53, 0, t75, 0, 0, -t167 * t161, t83 * t161, 0.2e1 * t146, t100 ^ 2 + t56 ^ 2 + t59 ^ 2, t77, t53, 0, t75, 0, 0, t62 * t165, t62 * t163, 0.2e1 * t148, t36 ^ 2 + t37 ^ 2 + t62 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t141, 0, -t143, t81, t18, -t19, 0, 0, 0, 0, t44, 0, -t42, t81, t81 * t105 + t7, -t67 - t8, -t105 * t44 - t35 (t112 * t8 + t116 * t7) * pkin(4), 0, 0, t44, 0, -t42, t81, t98 * t81 + t2, -t4 - t67, -t98 * t44 - t35, t153 * t4 + t2 * t98; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t113, 0, t117, 0, -t113 * t97, -t140, 0, 0, 0, 0, t83, 0, t167, 0, t47, -t48, t49 (t112 * t48 + t116 * t47) * pkin(4), 0, 0, t83, 0, t167, 0, t30, -t31, t46, t153 * t31 + t30 * t98; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t113, 0, t117, 0, -t113 * pkin(9), -t151, 0, 0, 0, 0, t83, 0, t167, 0, t56, -t59, t49 (t112 * t59 + t116 * t56) * pkin(4), 0, 0, t83, 0, t167, 0, t36, -t37, t46, t153 * t37 + t36 * t98; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t105, t102, 0, t116 ^ 2 * t123 + t103, 0, 0, 0, 0, 0, 1, 0.2e1 * t98, t102, 0, t98 ^ 2 + t103; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t44, 0, -t42, t81, t7, -t8, 0, 0, 0, 0, t44, 0, -t42, t81, t125 + 0.2e1 * t71, -t4, -t44 * pkin(5), t2 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83, 0, t167, 0, t47, -t48, 0, 0, 0, 0, t83, 0, t167, 0, t30, -t31, -t72, t30 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83, 0, t167, 0, t56, -t59, 0, 0, 0, 0, t83, 0, t167, 0, t36, -t37, -t72, t36 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t105, -t153, 0, 0, 0, 0, 0, 0, 0, 1, t120 + t105, -t153, 0, t98 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t120, 0, 0, pkin(5) ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t42, t44, 0, t16; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t167, t83, 0, t61; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t167, t83, 0, t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1;];
MM_reg  = t1;
