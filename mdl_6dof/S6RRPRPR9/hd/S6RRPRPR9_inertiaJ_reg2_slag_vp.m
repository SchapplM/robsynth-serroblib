% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRPRPR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d6,theta3,theta5]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 11:03
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRPRPR9_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR9_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPRPR9_inertiaJ_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 15:18:29
% EndTime: 2019-05-06 15:18:37
% DurationCPUTime: 2.96s
% Computational Cost: add. (4592->225), mult. (10382->463), div. (0->0), fcn. (12252->12), ass. (0->137)
t101 = sin(pkin(11));
t104 = cos(pkin(11));
t107 = sin(qJ(4));
t157 = cos(qJ(4));
t82 = t157 * t101 + t107 * t104;
t167 = -0.2e1 * t82;
t100 = sin(pkin(12));
t103 = cos(pkin(12));
t106 = sin(qJ(6));
t156 = cos(qJ(6));
t166 = -t106 * t100 + t156 * t103;
t105 = cos(pkin(6));
t102 = sin(pkin(6));
t108 = sin(qJ(2));
t130 = t102 * t108;
t68 = -t101 * t130 + t105 * t104;
t69 = t105 * t101 + t104 * t130;
t42 = t107 * t69 - t157 * t68;
t41 = t42 ^ 2;
t149 = pkin(9) + qJ(3);
t118 = t149 * t101;
t85 = t149 * t104;
t54 = t107 * t85 + t157 * t118;
t165 = t54 ^ 2;
t79 = t107 * t101 - t157 * t104;
t73 = t79 ^ 2;
t164 = -0.2e1 * t42;
t163 = 0.2e1 * t42;
t162 = 0.2e1 * t79;
t93 = -t103 * pkin(5) - pkin(4);
t161 = 0.2e1 * t93;
t94 = -t104 * pkin(3) - pkin(2);
t160 = 0.2e1 * t94;
t159 = 0.2e1 * t102;
t158 = 0.2e1 * t104;
t155 = pkin(1) * t108;
t109 = cos(qJ(2));
t154 = pkin(1) * t109;
t129 = t102 * t109;
t44 = t107 * t68 + t157 * t69;
t33 = t100 * t44 + t103 * t129;
t35 = -t100 * t129 + t103 * t44;
t21 = -t106 * t33 + t156 * t35;
t153 = t21 * t166;
t32 = t42 * t79;
t47 = t166 * t82;
t152 = t47 * t166;
t81 = t156 * t100 + t106 * t103;
t151 = t81 * t42;
t150 = t81 * t79;
t148 = pkin(10) + qJ(5);
t123 = pkin(8) * t129;
t62 = t123 + (qJ(3) + t155) * t105;
t63 = (-pkin(2) * t109 - qJ(3) * t108 - pkin(1)) * t102;
t37 = -t101 * t62 + t104 * t63;
t24 = -pkin(3) * t129 - t69 * pkin(9) + t37;
t38 = t101 * t63 + t104 * t62;
t28 = t68 * pkin(9) + t38;
t14 = t107 * t24 + t157 * t28;
t11 = -qJ(5) * t129 + t14;
t88 = pkin(8) * t130;
t65 = t88 + (-pkin(2) - t154) * t105;
t50 = -t68 * pkin(3) + t65;
t18 = t42 * pkin(4) - t44 * qJ(5) + t50;
t6 = t100 * t18 + t103 * t11;
t51 = t79 * pkin(4) - t82 * qJ(5) + t94;
t57 = -t107 * t118 + t157 * t85;
t26 = t100 * t51 + t103 * t57;
t95 = t100 ^ 2;
t98 = t103 ^ 2;
t147 = t95 + t98;
t96 = t101 ^ 2;
t99 = t104 ^ 2;
t146 = t96 + t99;
t145 = t100 * t42;
t144 = t100 * t79;
t143 = t100 * t82;
t40 = t103 * t42;
t142 = t103 * t82;
t97 = t102 ^ 2;
t141 = t109 * t97;
t13 = -t107 * t28 + t157 * t24;
t12 = pkin(4) * t129 - t13;
t140 = t12 * t100;
t139 = t12 * t103;
t138 = t33 * t103;
t137 = t35 * t100;
t136 = t35 * t103;
t135 = t54 * t100;
t134 = t54 * t103;
t133 = t68 * t104;
t132 = t69 * t101;
t131 = t100 * t103;
t128 = t105 * t108;
t126 = t79 * t167;
t125 = -0.2e1 * t129;
t124 = 0.2e1 * t129;
t122 = t82 * t131;
t121 = t101 * t129;
t120 = t104 * t129;
t5 = -t100 * t11 + t103 * t18;
t25 = -t100 * t57 + t103 * t51;
t117 = -pkin(4) * t82 - qJ(5) * t79;
t116 = t6 * t100 + t5 * t103;
t115 = -t5 * t100 + t6 * t103;
t114 = t26 * t100 + t25 * t103;
t113 = -t25 * t100 + t26 * t103;
t112 = -t37 * t101 + t38 * t104;
t90 = t97 * t109 ^ 2;
t84 = t148 * t103;
t83 = t148 * t100;
t75 = t82 ^ 2;
t74 = t81 ^ 2;
t72 = t166 ^ 2;
t71 = pkin(1) * t128 + t123;
t70 = t105 * t154 - t88;
t67 = t103 * t79;
t58 = t166 * t79;
t56 = -t106 * t83 + t156 * t84;
t53 = -t106 * t84 - t156 * t83;
t45 = t81 * t82;
t39 = pkin(5) * t143 + t54;
t36 = t81 * t45;
t31 = t166 * t42;
t29 = t100 * t33;
t23 = -pkin(10) * t143 + t26;
t22 = t79 * pkin(5) - pkin(10) * t142 + t25;
t19 = t106 * t35 + t156 * t33;
t15 = t81 * t19;
t9 = t106 * t22 + t156 * t23;
t8 = -t106 * t23 + t156 * t22;
t7 = t33 * pkin(5) + t12;
t4 = -t33 * pkin(10) + t6;
t3 = t42 * pkin(5) - t35 * pkin(10) + t5;
t2 = t106 * t3 + t156 * t4;
t1 = -t106 * t4 + t156 * t3;
t10 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t97 * t108 ^ 2, 0.2e1 * t108 * t141, t128 * t159, t90, t105 * t124, t105 ^ 2, 0.2e1 * pkin(1) * t141 + 0.2e1 * t70 * t105, -0.2e1 * t71 * t105 - 0.2e1 * t97 * t155 (-t108 * t70 + t109 * t71) * t159, t97 * pkin(1) ^ 2 + t70 ^ 2 + t71 ^ 2, t69 ^ 2, 0.2e1 * t69 * t68, t69 * t125, t68 ^ 2, t68 * t125, t90, -0.2e1 * t129 * t37 - 0.2e1 * t65 * t68, 0.2e1 * t129 * t38 + 0.2e1 * t65 * t69, -0.2e1 * t37 * t69 + 0.2e1 * t38 * t68, t37 ^ 2 + t38 ^ 2 + t65 ^ 2, t44 ^ 2, t44 * t164, t44 * t125, t41, t42 * t124, t90, -0.2e1 * t129 * t13 + 0.2e1 * t50 * t42, 0.2e1 * t129 * t14 + 0.2e1 * t50 * t44, -0.2e1 * t13 * t44 - 0.2e1 * t14 * t42, t13 ^ 2 + t14 ^ 2 + t50 ^ 2, t35 ^ 2, -0.2e1 * t35 * t33, t35 * t163, t33 ^ 2, t33 * t164, t41, 0.2e1 * t12 * t33 + 0.2e1 * t5 * t42, 0.2e1 * t12 * t35 - 0.2e1 * t6 * t42, -0.2e1 * t6 * t33 - 0.2e1 * t5 * t35, t12 ^ 2 + t5 ^ 2 + t6 ^ 2, t21 ^ 2, -0.2e1 * t21 * t19, t21 * t163, t19 ^ 2, t19 * t164, t41, 0.2e1 * t1 * t42 + 0.2e1 * t7 * t19, -0.2e1 * t2 * t42 + 0.2e1 * t7 * t21, -0.2e1 * t1 * t21 - 0.2e1 * t2 * t19, t1 ^ 2 + t2 ^ 2 + t7 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t130, 0, t129, t105, t70, -t71, 0, 0, t132, t101 * t68 + t69 * t104, -t121, t133, -t120, 0, pkin(2) * t68 + qJ(3) * t121 - t65 * t104, -pkin(2) * t69 + qJ(3) * t120 + t65 * t101 (t132 + t133) * qJ(3) + t112, -t65 * pkin(2) + qJ(3) * t112, t44 * t82, -t82 * t42 - t44 * t79, -t82 * t129, t32, t79 * t129, 0, t129 * t54 + t94 * t42 + t50 * t79, t129 * t57 + t94 * t44 + t50 * t82, -t13 * t82 - t14 * t79 - t57 * t42 + t54 * t44, -t13 * t54 + t14 * t57 + t50 * t94, t82 * t136 (-t137 - t138) * t82, t42 * t142 + t35 * t79, t33 * t143, -t42 * t143 - t33 * t79, t32, t140 * t82 + t25 * t42 + t54 * t33 + t5 * t79, t139 * t82 - t26 * t42 + t54 * t35 - t6 * t79, -t116 * t82 - t25 * t35 - t26 * t33, t12 * t54 + t5 * t25 + t6 * t26, t21 * t47, -t47 * t19 - t21 * t45, t21 * t79 + t47 * t42, t19 * t45, -t19 * t79 - t45 * t42, t32, t1 * t79 + t39 * t19 + t8 * t42 + t7 * t45, -t2 * t79 + t39 * t21 - t9 * t42 + t7 * t47, -t1 * t47 - t9 * t19 - t2 * t45 - t8 * t21, t1 * t8 + t2 * t9 + t7 * t39; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t96, t101 * t158, 0, t99, 0, 0, pkin(2) * t158, -0.2e1 * pkin(2) * t101, 0.2e1 * t146 * qJ(3), t146 * qJ(3) ^ 2 + pkin(2) ^ 2, t75, t126, 0, t73, 0, 0, t79 * t160, t82 * t160, 0.2e1 * t54 * t82 - 0.2e1 * t57 * t79, t57 ^ 2 + t94 ^ 2 + t165, t98 * t75, -0.2e1 * t75 * t131, t142 * t162, t95 * t75, t100 * t126, t73, 0.2e1 * t135 * t82 + 0.2e1 * t25 * t79, 0.2e1 * t134 * t82 - 0.2e1 * t26 * t79, t114 * t167, t25 ^ 2 + t26 ^ 2 + t165, t47 ^ 2, -0.2e1 * t47 * t45, t47 * t162, t45 ^ 2, -t45 * t162, t73, 0.2e1 * t39 * t45 + 0.2e1 * t8 * t79, 0.2e1 * t39 * t47 - 0.2e1 * t9 * t79, -0.2e1 * t9 * t45 - 0.2e1 * t8 * t47, t39 ^ 2 + t8 ^ 2 + t9 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t68, t69, 0, t65, 0, 0, 0, 0, 0, 0, t42, t44, 0, t50, 0, 0, 0, 0, 0, 0, t40, -t145, -t29 - t136, t116, 0, 0, 0, 0, 0, 0, t31, -t151, -t15 - t153, t1 * t166 + t2 * t81; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t104, t101, 0, -pkin(2), 0, 0, 0, 0, 0, 0, t79, t82, 0, t94, 0, 0, 0, 0, 0, 0, t67, -t144, -t147 * t82, t114, 0, 0, 0, 0, 0, 0, t58, -t150, -t36 - t152, t166 * t8 + t9 * t81; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t147, 0, 0, 0, 0, 0, 0, 0, 0, 0, t74 + t72; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t44, 0, -t42, -t129, t13, -t14, 0, 0, t137, -t29 + t136, t145, -t138, t40, 0, -pkin(4) * t33 - qJ(5) * t145 - t139, -pkin(4) * t35 - qJ(5) * t40 + t140 (t137 - t138) * qJ(5) + t115, -t12 * pkin(4) + qJ(5) * t115, t21 * t81, -t15 + t153, t151, -t19 * t166, t31, 0, -t166 * t7 + t93 * t19 + t53 * t42, t93 * t21 - t56 * t42 + t7 * t81, -t1 * t81 + t166 * t2 - t56 * t19 - t53 * t21, t1 * t53 + t2 * t56 + t7 * t93; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t82, 0, -t79, 0, -t54, -t57, 0, 0, t122 (-t95 + t98) * t82, t144, -t122, t67, 0, t117 * t100 - t134, t103 * t117 + t135, t113, -t54 * pkin(4) + qJ(5) * t113, t47 * t81, -t36 + t152, t150, -t45 * t166, t58, 0, -t166 * t39 + t93 * t45 + t53 * t79, t39 * t81 + t93 * t47 - t56 * t79, t166 * t9 - t56 * t45 - t53 * t47 - t8 * t81, t39 * t93 + t8 * t53 + t9 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t166 * t53 + t81 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t95, 0.2e1 * t131, 0, t98, 0, 0, 0.2e1 * pkin(4) * t103, -0.2e1 * pkin(4) * t100, 0.2e1 * t147 * qJ(5), t147 * qJ(5) ^ 2 + pkin(4) ^ 2, t74, 0.2e1 * t81 * t166, 0, t72, 0, 0, -t166 * t161, t81 * t161, 0.2e1 * t166 * t56 - 0.2e1 * t53 * t81, t53 ^ 2 + t56 ^ 2 + t93 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t33, t35, 0, t12, 0, 0, 0, 0, 0, 0, t19, t21, 0, t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t143, t142, 0, t54, 0, 0, 0, 0, 0, 0, t45, t47, 0, t39; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t103, t100, 0, -pkin(4), 0, 0, 0, 0, 0, 0, -t166, t81, 0, t93; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t21, 0, -t19, t42, t1, -t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t47, 0, -t45, t79, t8, -t9, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t166, -t81, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t81, 0, t166, 0, t53, -t56, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t10;
