% Calculate minimal parameter regressor of coriolis matrix for
% S6PPRRRP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d3,d4,d5,theta1,theta2]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x23]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2021-01-16 00:51
% Revision: 24b2e7d74a0c1a3b64fa2f8f5ad758691ad61af3 (2021-01-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PPRRRP1_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PPRRRP1_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PPRRRP1_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PPRRRP1_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2021-01-16 00:50:16
% EndTime: 2021-01-16 00:50:37
% DurationCPUTime: 7.83s
% Computational Cost: add. (6995->464), mult. (19667->736), div. (0->0), fcn. (22631->12), ass. (0->381)
t400 = sin(qJ(5));
t401 = sin(qJ(4));
t404 = cos(qJ(4));
t455 = -t404 * pkin(4) - t401 * pkin(10);
t443 = -pkin(3) + t455;
t403 = cos(qJ(5));
t555 = t403 * t404;
t510 = pkin(9) * t555;
t303 = t400 * t443 + t510;
t395 = t401 ^ 2;
t557 = t403 * t395;
t269 = -pkin(9) * t557 - t303 * t404;
t399 = sin(pkin(7));
t405 = cos(qJ(3));
t552 = t404 * t405;
t471 = -t552 / 0.2e1;
t402 = sin(qJ(3));
t556 = t403 * t402;
t415 = (t400 * t471 + t556 / 0.2e1) * t399;
t568 = t399 * t402;
t596 = cos(pkin(7));
t326 = t401 * t568 - t404 * t596;
t561 = t401 * t403;
t475 = -t561 / 0.2e1;
t459 = t326 * t475;
t567 = t399 * t405;
t501 = t400 * t567;
t467 = t401 * t596;
t499 = t404 * t568;
t327 = t467 + t499;
t558 = t403 * t327;
t278 = -t501 + t558;
t616 = -t404 / 0.2e1;
t483 = t278 * t616;
t426 = t483 + t459;
t157 = t415 + t426;
t595 = sin(pkin(6));
t449 = cos(pkin(12)) * t595;
t597 = cos(pkin(6));
t410 = -t399 * t449 + t597 * t596;
t409 = t401 * t410;
t468 = sin(pkin(12)) * t595;
t640 = t597 * t399 + t596 * t449;
t271 = t640 * t402 + t405 * t468;
t553 = t404 * t271;
t206 = t409 + t553;
t559 = t403 * t206;
t270 = t402 * t468 - t640 * t405;
t589 = t270 * t400;
t138 = t559 + t589;
t452 = t589 / 0.2e1 - t138 / 0.2e1;
t205 = t401 * t271 - t404 * t410;
t619 = -t401 / 0.2e1;
t453 = t271 / 0.2e1 + t205 * t619;
t48 = t453 * t403 + t452 * t404;
t606 = t48 * qJD(1) + t157 * qJD(2);
t649 = t269 * qJD(3) + t606;
t337 = t403 * t443;
t560 = t403 * qJ(6);
t454 = -t401 * t560 + t337;
t562 = t400 * t404;
t512 = pkin(9) * t562;
t279 = -t454 + t512;
t498 = t400 * pkin(5) + pkin(9);
t353 = t498 * t401;
t396 = t403 ^ 2;
t564 = t400 * t401;
t204 = t396 * t395 * pkin(5) - t279 * t404 - t353 * t564;
t563 = t400 * t402;
t414 = (t403 * t471 - t563 / 0.2e1) * t399;
t477 = -t564 / 0.2e1;
t500 = t403 * t567;
t565 = t400 * t327;
t277 = t500 + t565;
t584 = t277 * t404;
t427 = -t584 / 0.2e1 + t326 * t477;
t158 = t414 - t427;
t566 = t400 * t206;
t588 = t270 * t403;
t137 = t566 - t588;
t484 = t588 / 0.2e1;
t451 = t484 + t137 / 0.2e1;
t49 = -t453 * t400 + t451 * t404;
t605 = t49 * qJD(1) + t158 * qJD(2);
t648 = t204 * qJD(3) - t605;
t611 = t404 * pkin(10);
t615 = t401 * pkin(4);
t365 = -t611 + t615;
t350 = t400 * t365;
t203 = t350 * t404 + (-t303 + t510) * t401;
t479 = t567 / 0.2e1;
t458 = t400 * t479;
t630 = t278 / 0.2e1;
t111 = (t458 + t630 - t558 / 0.2e1) * t401;
t36 = (-t559 / 0.2e1 - t452) * t401;
t609 = t36 * qJD(1) + t111 * qJD(2);
t647 = t203 * qJD(3) - t609;
t503 = t400 * t557;
t504 = t353 * t561;
t280 = -qJ(6) * t564 + t303;
t582 = t280 * t404;
t197 = -pkin(5) * t503 - t504 - t582;
t646 = t197 * qJD(3) + t606;
t511 = pkin(9) * t561;
t554 = t404 * qJ(6);
t281 = -t400 * t554 + t350 - t511;
t354 = t498 * t404;
t578 = t354 * t403;
t579 = t353 * t403;
t136 = (t281 + t579) * t404 + (-t280 + t578) * t401;
t645 = t136 * qJD(3) - t609;
t302 = -t337 + t512;
t351 = t403 * t365;
t387 = pkin(9) * t564;
t202 = t302 * t401 + (-t387 + t351) * t404;
t480 = -t567 / 0.2e1;
t457 = t403 * t480;
t112 = (t457 + t277 / 0.2e1 - t565 / 0.2e1) * t401;
t478 = t566 / 0.2e1;
t34 = (t478 - t451) * t401;
t598 = t34 * qJD(1) - t112 * qJD(2);
t644 = -t202 * qJD(3) + t598;
t267 = (-pkin(9) * t400 - pkin(5)) * t404 + t454;
t614 = t401 * pkin(5);
t272 = -t403 * t554 + t351 + t387 + t614;
t115 = -t267 * t401 + t272 * t404 - t353 * t562 - t354 * t564;
t643 = -t115 * qJD(3) + t598;
t569 = t395 * t400;
t268 = -pkin(9) * t569 - t302 * t404;
t642 = -t268 * qJD(3) + t605;
t641 = t279 + t267;
t394 = t400 ^ 2;
t469 = t394 / 0.2e1 - t396 / 0.2e1;
t634 = -t267 / 0.2e1;
t639 = -t279 / 0.2e1 + t634;
t380 = t396 + t394;
t638 = t380 * qJD(4);
t381 = t396 - t394;
t518 = t401 * qJD(3);
t488 = t403 * t518;
t637 = t381 * qJD(4) - 0.2e1 * t400 * t488;
t636 = -t137 / 0.2e1;
t586 = t271 * t403;
t167 = t270 * t562 + t586;
t635 = t167 / 0.2e1;
t633 = t267 / 0.2e1;
t632 = t272 / 0.2e1;
t631 = -t277 / 0.2e1;
t628 = t281 / 0.2e1;
t300 = (-t400 * t552 + t556) * t399;
t627 = t300 / 0.2e1;
t626 = t327 / 0.2e1;
t625 = t353 / 0.2e1;
t610 = pkin(10) + qJ(6);
t360 = t610 * t400;
t624 = t360 / 0.2e1;
t361 = t610 * t403;
t623 = -t361 / 0.2e1;
t620 = -t400 / 0.2e1;
t618 = -t403 / 0.2e1;
t617 = t403 / 0.2e1;
t613 = t403 * pkin(5);
t612 = t404 * pkin(9);
t594 = t137 * t400;
t593 = t137 * t404;
t592 = t138 * t403;
t591 = t138 * t404;
t98 = t205 * t400;
t590 = t267 * t403;
t173 = t270 * t401;
t587 = t271 * t400;
t585 = t277 * t400;
t583 = t278 * t403;
t219 = t326 * t400;
t580 = t353 * t400;
t576 = t360 * t401;
t575 = t360 * t404;
t574 = t361 * t401;
t573 = t361 * t404;
t391 = -pkin(4) - t613;
t572 = t391 * t400;
t571 = t391 * t401;
t570 = t391 * t403;
t470 = t279 / 0.2e1 + t633;
t505 = pkin(5) * t616;
t66 = (t505 + t470) * t403;
t549 = t66 * qJD(3);
t74 = t641 * t564;
t548 = t74 * qJD(3);
t397 = t404 ^ 2;
t382 = t397 - t395;
t547 = qJD(3) * t399;
t546 = qJD(4) * t401;
t545 = qJD(4) * t404;
t544 = qJD(4) * t405;
t543 = qJD(5) * t400;
t393 = qJD(5) * t403;
t542 = qJD(5) * t404;
t537 = t138 * qJD(5);
t528 = t278 * qJD(5);
t527 = t280 * qJD(5);
t346 = t380 * t395;
t526 = t346 * qJD(3);
t348 = t382 * t400;
t525 = t348 * qJD(3);
t349 = t403 * t397 - t557;
t524 = t349 * qJD(3);
t523 = t361 * qJD(5);
t521 = t382 * qJD(3);
t520 = t400 * qJD(4);
t519 = t400 * qJD(6);
t517 = t403 * qJD(4);
t516 = t403 * qJD(6);
t515 = t404 * qJD(3);
t335 = t351 / 0.2e1;
t514 = t335 + t387 / 0.2e1;
t513 = t400 * t613;
t509 = pkin(3) * t518;
t508 = pkin(3) * t515;
t507 = pkin(5) * t543;
t506 = pkin(5) * t393;
t502 = t401 * t567;
t497 = t400 * t542;
t496 = t403 * t542;
t495 = t405 * t547;
t494 = t400 * t393;
t493 = t400 * t517;
t492 = t404 * t519;
t491 = t401 * t545;
t490 = t401 * t515;
t489 = t401 * t517;
t487 = t401 * t516;
t486 = t403 * t515;
t485 = t404 * t516;
t482 = -t580 / 0.2e1;
t481 = t571 / 0.2e1;
t476 = t562 / 0.2e1;
t474 = t561 / 0.2e1;
t473 = -t555 / 0.2e1;
t472 = t554 / 0.2e1;
t464 = pkin(5) * t474;
t463 = -qJD(5) + t515;
t461 = t400 * t489;
t460 = t205 * t474;
t456 = -t401 * t513 + t575 / 0.2e1;
t450 = -t574 / 0.2e1 + t634;
t168 = -t270 * t555 + t587;
t301 = (t403 * t552 + t563) * t399;
t10 = t168 * t630 + t138 * t301 / 0.2e1 + t167 * t631 + t300 * t636 + (-t270 * t326 / 0.2e1 + t205 * t479) * t401;
t21 = -t137 * t167 + t138 * t168 - t205 * t173;
t448 = t21 * qJD(1) + t10 * qJD(2);
t79 = -t277 * t300 + t278 * t301 + t326 * t502;
t447 = t10 * qJD(1) + t79 * qJD(2);
t433 = t585 / 0.2e1 + t583 / 0.2e1;
t435 = t594 / 0.2e1 + t592 / 0.2e1;
t11 = (t206 / 0.2e1 - t435) * t326 + (t626 - t433) * t205;
t22 = (t206 - t592 - t594) * t205;
t446 = t22 * qJD(1) + t11 * qJD(2);
t76 = (t327 - t583 - t585) * t326;
t445 = t11 * qJD(1) + t76 * qJD(2);
t283 = t360 * t400 + t361 * t403;
t209 = pkin(5) * t572;
t425 = t391 * t475 + t482;
t54 = t470 * t361 + (t632 + t425) * pkin(5);
t444 = -t54 * qJD(3) + t209 * qJD(4);
t442 = t463 * t401;
t140 = t482 + (-t560 / 0.2e1 + t623) * t404 + (-t570 / 0.2e1 + (0.1e1 - t469) * pkin(5)) * t401 + t514;
t321 = t513 - t572;
t441 = -t140 * qJD(3) - t321 * qJD(4);
t334 = -t350 / 0.2e1;
t151 = t334 + (t401 * pkin(9) / 0.2e1 - t353 / 0.2e1) * t403 + (t472 + t481) * t400 + t456;
t332 = t394 * pkin(5) + t570;
t440 = -t151 * qJD(3) + t332 * qJD(4);
t439 = t611 / 0.2e1 - t615 / 0.2e1;
t430 = t439 * t400;
t275 = t350 / 0.2e1 - t430;
t438 = pkin(4) * t517 - t275 * qJD(3);
t429 = t439 * t403;
t276 = -t351 / 0.2e1 + t429;
t437 = pkin(4) * t520 - t276 * qJD(3);
t436 = (t280 / 0.2e1 + t576 / 0.2e1) * t403;
t434 = t137 * t617 + t138 * t620;
t432 = t277 * t617 + t278 * t620;
t312 = t403 * t442;
t331 = t469 * t401;
t431 = -t331 * qJD(3) + t493;
t345 = t488 + t520;
t344 = t400 * t518 - t517;
t424 = qJD(3) * t503 + t331 * qJD(4);
t347 = t381 * t395;
t423 = t347 * qJD(3) + 0.2e1 * t461;
t418 = t280 * t618 + t400 * t633 + t354 / 0.2e1;
t406 = t272 * t631 + t278 * t628 + t418 * t326 + t327 * t625;
t411 = t300 * t624 + t301 * t623 + t480 * t571;
t27 = t406 + t411;
t407 = t138 * t628 + t418 * t205 + t206 * t625 + t272 * t636;
t413 = t167 * t624 + t168 * t623 + t270 * t481;
t3 = t407 + t413;
t72 = t267 * t272 + t280 * t281 + t353 * t354;
t421 = t3 * qJD(1) + t27 * qJD(2) + t72 * qJD(3);
t38 = t470 * t278 + (t627 + t459) * pkin(5);
t6 = t470 * t138 + (t205 * t475 + t635) * pkin(5);
t75 = pkin(5) * t504 - t641 * t280;
t420 = -t6 * qJD(1) - t38 * qJD(2) + t75 * qJD(3);
t29 = (t593 / 0.2e1 - t168 / 0.2e1) * t403 + (-t591 / 0.2e1 + t635) * t400;
t73 = (t267 * t404 + t272 * t401) * t403 + (t281 * t401 + t582) * t400;
t95 = (t584 / 0.2e1 - t301 / 0.2e1) * t403 + (t483 + t627) * t400;
t419 = t29 * qJD(1) + t95 * qJD(2) - t73 * qJD(3);
t149 = (t479 - t432) * t401;
t169 = (t280 * t400 + t590) * t401;
t43 = (t270 / 0.2e1 + t434) * t401;
t417 = t43 * qJD(1) - t149 * qJD(2) - t169 * qJD(3);
t416 = t467 / 0.2e1 + t499 / 0.2e1;
t110 = -t612 / 0.2e1 + t436 + (t505 + t450) * t400;
t147 = t416 - t433;
t408 = t409 / 0.2e1 + t553 / 0.2e1;
t40 = t408 - t435;
t412 = -t40 * qJD(1) - t147 * qJD(2) + t110 * qJD(3) + t283 * qJD(4);
t389 = t546 / 0.2e1;
t336 = (t515 - qJD(5) / 0.2e1) * t401;
t328 = t345 * pkin(5);
t325 = t331 * qJD(5);
t311 = t345 * t404;
t310 = t344 * t404;
t309 = t400 * t442;
t249 = t387 + t335 + t429;
t248 = t334 - t430 + t511;
t220 = t326 * t403;
t174 = t270 * t404;
t160 = t415 - t426;
t159 = t414 + t427;
t152 = t391 * t477 + t579 / 0.2e1 + pkin(9) * t474 + t334 + t400 * t472 - t456;
t150 = t277 * t474 + t278 * t477 + t401 * t479;
t148 = t416 + t433;
t141 = t573 / 0.2e1 + qJ(6) * t473 - t425 + t514 + (0.1e1 + t469) * t614;
t114 = t278 * t619 + t327 * t474 + t401 * t458;
t113 = t277 * t619 + t401 * t457 + t564 * t626;
t109 = t612 / 0.2e1 + pkin(5) * t476 + t436 + t450 * t400;
t99 = t205 * t403;
t94 = t300 * t620 + t301 * t617 + t432 * t404;
t89 = t158 * qJD(3);
t88 = t157 * qJD(3);
t71 = t160 * qJD(3) + t219 * qJD(4) - t528;
t70 = t159 * qJD(3) + t220 * qJD(4) + t277 * qJD(5);
t69 = t112 * qJD(3);
t68 = t111 * qJD(3);
t67 = t279 * t618 - t590 / 0.2e1 + pkin(5) * t473;
t65 = t114 * qJD(3) + t220 * qJD(5) + t327 * t520;
t64 = t113 * qJD(3) + t219 * qJD(5) - t327 * t517;
t63 = -t111 * qJD(4) - t158 * qJD(5);
t62 = -t112 * qJD(4) - t157 * qJD(5);
t59 = pkin(5) * t219;
t55 = t391 * t464 + t641 * t623 + (t580 / 0.2e1 + t632) * pkin(5);
t53 = (t301 * t404 + t395 * t500) * qJD(3) + t114 * qJD(4) + t159 * qJD(5);
t52 = (-t300 * t404 + t395 * t501) * qJD(3) + t113 * qJD(4) + t160 * qJD(5);
t51 = t591 / 0.2e1 + t460 + t270 * t476 + t586 / 0.2e1;
t50 = -t593 / 0.2e1 + t205 * t477 + t404 * t484 - t587 / 0.2e1;
t42 = -t173 / 0.2e1 + t434 * t401;
t41 = t408 + t435;
t39 = pkin(5) * t627 + t639 * t278 + t326 * t464;
t37 = t138 * t619 + t206 * t474 + t270 * t477;
t35 = t270 * t474 + (t636 + t478) * t401;
t28 = t167 * t620 + t168 * t617 + t434 * t404;
t26 = t406 - t411;
t25 = t49 * qJD(3);
t24 = t48 * qJD(3);
t20 = t34 * qJD(3);
t19 = t36 * qJD(3);
t18 = t51 * qJD(3) + t98 * qJD(4) - t537;
t17 = t50 * qJD(3) + t99 * qJD(4) + t137 * qJD(5);
t15 = t37 * qJD(3) + t99 * qJD(5) + t206 * t520;
t14 = t35 * qJD(3) + t98 * qJD(5) - t206 * t517;
t13 = pkin(5) * t98;
t9 = -qJD(4) * t36 - qJD(5) * t49;
t8 = qJD(4) * t34 - qJD(5) * t48;
t7 = t639 * t138 + (t460 + t635) * pkin(5);
t5 = (t168 * t404 - t270 * t557) * qJD(3) + t37 * qJD(4) + t50 * qJD(5);
t4 = (-t167 * t404 - t270 * t569) * qJD(3) + t35 * qJD(4) + t51 * qJD(5);
t2 = t407 - t413;
t1 = qJD(3) * t10 + qJD(4) * t11;
t12 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t21 + qJD(4) * t22; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, -t271 * qJD(3), t270 * qJD(3), 0, 0, 0, 0, 0, t173 * qJD(4) - t271 * t515, t174 * qJD(4) + t271 * t518, 0, 0, 0, 0, 0, t4, t5, t4, t5, t28 * qJD(4) + (-t167 * t403 - t168 * t400) * t518, (t167 * t267 + t168 * t280 - t173 * t353) * qJD(3) + t2 * qJD(4) + t7 * qJD(5) + t42 * qJD(6) + t448; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t173 * qJD(3) - t206 * qJD(4), t174 * qJD(3) + t205 * qJD(4), 0, 0, 0, 0, 0, t14, t15, t14, t15, t28 * qJD(3) - t205 * t638, t2 * qJD(3) + (-t205 * t283 + t206 * t391) * qJD(4) + t13 * qJD(5) + t41 * qJD(6) + t446; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t18, t17, t18, t17, 0, -pkin(5) * t537 + t7 * qJD(3) + t13 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t42 + qJD(4) * t41; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t79 * qJD(3) + t76 * qJD(4); 0, 0, 0, -t402 * t547, -t495, 0, 0, 0, 0, 0, (-t401 * t544 - t402 * t515) * t399, (t402 * t518 - t404 * t544) * t399, 0, 0, 0, 0, 0, t52, t53, t52, t53, t94 * qJD(4) + (-t300 * t403 - t301 * t400) * t518, (t300 * t267 + t301 * t280 + t353 * t502) * qJD(3) + t26 * qJD(4) + t39 * qJD(5) + t150 * qJD(6) + t447; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t327 * qJD(4) - t401 * t495, t326 * qJD(4) - t404 * t495, 0, 0, 0, 0, 0, t64, t65, t64, t65, t94 * qJD(3) - t326 * t638, t26 * qJD(3) + (-t283 * t326 + t327 * t391) * qJD(4) + t59 * qJD(5) + t148 * qJD(6) + t445; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t71, t70, t71, t70, 0, -pkin(5) * t528 + t39 * qJD(3) + t59 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t150 * qJD(3) + t148 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t8, t9, t8, t9, qJD(4) * t29, qJD(4) * t3 - qJD(5) * t6 + qJD(6) * t43 - t448; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t62, t63, t62, t63, t95 * qJD(4), t27 * qJD(4) - t38 * qJD(5) - t149 * qJD(6) - t447; 0, 0, 0, 0, 0, t491, t382 * qJD(4), 0, 0, 0, -pkin(3) * t546, -pkin(3) * t545, -t395 * t494 + t396 * t491, -t347 * qJD(5) - 0.2e1 * t404 * t461, -t349 * qJD(4) + t401 * t497, t348 * qJD(4) + t401 * t496, -t491, -t202 * qJD(4) - t269 * qJD(5), t203 * qJD(4) + t268 * qJD(5), -t115 * qJD(4) - t197 * qJD(5) + t401 * t485, t136 * qJD(4) + t204 * qJD(5) - t401 * t492, -t73 * qJD(4) + t74 * qJD(5) + t346 * qJD(6), t72 * qJD(4) + t75 * qJD(5) - t169 * qJD(6); 0, 0, 0, 0, 0, t490, t521, t545, -t546, 0, -pkin(9) * t545 - t509, pkin(9) * t546 - t508, -t325 + (t396 * t518 + t493) * t404, -0.2e1 * t401 * t494 + t637 * t404, t401 * t520 - t524, t489 + t525, -t336, (t400 * t455 - t510) * qJD(4) + t249 * qJD(5) + t644, (t403 * t455 + t512) * qJD(4) + t248 * qJD(5) + t647, (t391 * t562 - t576 - t578) * qJD(4) + t141 * qJD(5) + t492 + t643, (t354 * t400 + t391 * t555 - t574) * qJD(4) + t152 * qJD(5) + t485 + t645, ((t281 + t575) * t403 + (-t272 - t573) * t400) * qJD(4) + t67 * qJD(5) + t419, (-t272 * t360 + t281 * t361 + t354 * t391) * qJD(4) + t55 * qJD(5) + t109 * qJD(6) + t421; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t424, -t423, t309, t312, t389, t249 * qJD(4) - t303 * qJD(5) - t649, t248 * qJD(4) + t302 * qJD(5) - t642, t141 * qJD(4) - t527 - t646, t152 * qJD(4) + t279 * qJD(5) + t648, t67 * qJD(4) + t401 * t507 + t548, -pkin(5) * t527 + t55 * qJD(4) + t420; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t311, -t310, t526, t109 * qJD(4) + t417; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t20, t19, -t20, t19, -qJD(3) * t29, -qJD(3) * t3 - qJD(6) * t40 - t446; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t69, t68, t69, t68, -t95 * qJD(3), -t27 * qJD(3) - t147 * qJD(6) - t445; 0, 0, 0, 0, 0, -t490, -t521, 0, 0, 0, t509, t508, -t396 * t490 - t325, 0.2e1 * t400 * t312, -t496 + t524, t497 - t525, t336, t276 * qJD(5) - t644, t275 * qJD(5) - t647, -t140 * qJD(5) - t643, -t151 * qJD(5) - t645, -t66 * qJD(5) - t419, -t54 * qJD(5) + t110 * qJD(6) - t421; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t494, t381 * qJD(5), 0, 0, 0, -pkin(4) * t543, -pkin(4) * t393, -t321 * qJD(5), t332 * qJD(5), t380 * qJD(6), t209 * qJD(5) + t283 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t431, t637, t393 - t486, t463 * t400, -t518 / 0.2e1, -pkin(10) * t393 - t437, pkin(10) * t543 - t438, t441 - t523, t360 * qJD(5) + t440, -t506 - t549, -pkin(5) * t523 + t444; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t638, t412; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t24, t25, t24, t25, 0, qJD(3) * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t88, t89, t88, t89, 0, t38 * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t424, t423, -t310, -t311, t389, -t276 * qJD(4) + t649, -t275 * qJD(4) + t642, t140 * qJD(4) - t487 + t646, t151 * qJD(4) + t401 * t519 - t648, t66 * qJD(4) - t548, -pkin(5) * t487 + t54 * qJD(4) - t420; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t431, -t637, t486, -t400 * t515, t518 / 0.2e1, t437, t438, -t441 - t519, -t440 - t516, t549, -pkin(5) * t519 - t444; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t345, t344, 0, -t328; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t43 + qJD(4) * t40; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t149 * qJD(3) + t147 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t312, t309, -t526, -t110 * qJD(4) + t401 * t506 - t417; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t543, t393, -t638, -t412 + t507; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t345, -t344, 0, t328; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t12;
