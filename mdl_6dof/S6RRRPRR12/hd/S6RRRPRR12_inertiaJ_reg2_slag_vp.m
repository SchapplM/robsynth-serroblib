% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRRPRR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5,d6,theta4]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 19:50
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRRPRR12_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR12_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRPRR12_inertiaJ_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 15:06:47
% EndTime: 2019-05-07 15:06:59
% DurationCPUTime: 3.79s
% Computational Cost: add. (5422->284), mult. (12412->569), div. (0->0), fcn. (14359->12), ass. (0->133)
t102 = sin(pkin(12));
t104 = cos(pkin(12));
t107 = sin(qJ(5));
t111 = cos(qJ(5));
t166 = -t102 * t107 + t104 * t111;
t105 = cos(pkin(6));
t108 = sin(qJ(3));
t112 = cos(qJ(3));
t103 = sin(pkin(6));
t109 = sin(qJ(2));
t134 = t103 * t109;
t70 = -t105 * t112 + t108 * t134;
t69 = t70 ^ 2;
t94 = -pkin(4) * t104 - pkin(3);
t61 = -pkin(5) * t166 + t94;
t165 = 0.2e1 * t61;
t164 = -0.2e1 * t70;
t163 = 0.2e1 * t70;
t72 = t105 * t108 + t112 * t134;
t162 = -0.2e1 * t72;
t161 = 0.2e1 * t94;
t160 = 0.2e1 * t103;
t159 = -0.2e1 * t112;
t158 = 0.2e1 * t112;
t157 = t70 * pkin(5);
t156 = pkin(1) * t109;
t113 = cos(qJ(2));
t155 = pkin(1) * t113;
t100 = t108 ^ 2;
t154 = t100 * pkin(9);
t106 = sin(qJ(6));
t153 = t106 * pkin(5);
t96 = t108 * pkin(9);
t110 = cos(qJ(6));
t152 = t110 * pkin(5);
t133 = t103 * t113;
t51 = t102 * t72 + t104 * t133;
t53 = -t102 * t133 + t104 * t72;
t28 = t107 * t53 + t111 * t51;
t88 = pkin(8) * t134;
t62 = t88 + (-pkin(2) - t155) * t105;
t34 = t70 * pkin(3) - t72 * qJ(4) + t62;
t124 = pkin(8) * t133;
t63 = t124 + (pkin(9) + t156) * t105;
t64 = (-pkin(2) * t113 - pkin(9) * t109 - pkin(1)) * t103;
t38 = t108 * t64 + t112 * t63;
t35 = -qJ(4) * t133 + t38;
t17 = -t102 * t35 + t104 * t34;
t11 = pkin(4) * t70 - pkin(10) * t53 + t17;
t18 = t102 * t34 + t104 * t35;
t13 = -pkin(10) * t51 + t18;
t7 = t107 * t11 + t111 * t13;
t5 = -pkin(11) * t28 + t7;
t151 = t110 * t5;
t150 = t112 * pkin(5);
t149 = pkin(10) + qJ(4);
t131 = t104 * t112;
t82 = -pkin(3) * t112 - qJ(4) * t108 - pkin(2);
t59 = pkin(9) * t131 + t102 * t82;
t136 = t102 * t108;
t81 = pkin(4) * t136 + t96;
t97 = t102 ^ 2;
t99 = t104 ^ 2;
t148 = t97 + t99;
t147 = t102 * t70;
t146 = t104 * t70;
t132 = t104 * t108;
t76 = t104 * t82;
t48 = -pkin(10) * t132 + t76 + (-pkin(9) * t102 - pkin(4)) * t112;
t54 = -pkin(10) * t136 + t59;
t27 = t107 * t48 + t111 * t54;
t80 = t102 * t111 + t104 * t107;
t65 = t80 * t108;
t23 = -pkin(11) * t65 + t27;
t145 = t110 * t23;
t98 = t103 ^ 2;
t144 = t113 * t98;
t37 = -t108 * t63 + t112 * t64;
t36 = pkin(3) * t133 - t37;
t143 = t36 * t102;
t142 = t36 * t104;
t141 = t51 * t104;
t140 = t53 * t102;
t139 = t70 * t112;
t138 = t72 * t108;
t137 = t102 * t104;
t135 = t102 * t112;
t130 = t105 * t109;
t128 = t108 * t112;
t126 = 0.2e1 * t133;
t125 = 0.2e1 * t128;
t123 = t108 * t133;
t122 = t112 * t133;
t121 = t102 * t132;
t30 = -t107 * t51 + t111 * t53;
t6 = -t107 * t13 + t11 * t111;
t4 = -pkin(11) * t30 + t157 + t6;
t1 = -t106 * t5 + t110 * t4;
t26 = -t107 * t54 + t111 * t48;
t67 = t166 * t108;
t20 = -pkin(11) * t67 - t150 + t26;
t8 = -t106 * t23 + t110 * t20;
t83 = t149 * t102;
t84 = t149 * t104;
t55 = -t107 * t84 - t111 * t83;
t120 = -pkin(3) * t108 + qJ(4) * t112;
t119 = -t17 * t102 + t18 * t104;
t58 = -pkin(9) * t135 + t76;
t118 = -t102 * t58 + t104 * t59;
t56 = -t107 * t83 + t111 * t84;
t117 = -t37 * t108 + t38 * t112;
t24 = pkin(4) * t51 + t36;
t115 = pkin(9) ^ 2;
t101 = t112 ^ 2;
t95 = t100 * t115;
t91 = t98 * t113 ^ 2;
t74 = pkin(1) * t130 + t124;
t73 = t105 * t155 - t88;
t50 = pkin(5) * t65 + t81;
t47 = t106 * t166 + t110 * t80;
t45 = t106 * t80 - t110 * t166;
t43 = pkin(11) * t166 + t56;
t42 = -pkin(11) * t80 + t55;
t41 = -t106 * t65 + t110 * t67;
t39 = t106 * t67 + t110 * t65;
t22 = t106 * t42 + t110 * t43;
t21 = -t106 * t43 + t110 * t42;
t16 = -t106 * t28 + t110 * t30;
t14 = t106 * t30 + t110 * t28;
t12 = pkin(5) * t28 + t24;
t9 = t106 * t20 + t145;
t2 = t106 * t4 + t151;
t3 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t98 * t109 ^ 2, 0.2e1 * t109 * t144, t130 * t160, t91, t105 * t126, t105 ^ 2, 0.2e1 * pkin(1) * t144 + 0.2e1 * t105 * t73, -0.2e1 * t105 * t74 - 0.2e1 * t156 * t98 (-t109 * t73 + t113 * t74) * t160, pkin(1) ^ 2 * t98 + t73 ^ 2 + t74 ^ 2, t72 ^ 2, t70 * t162, t133 * t162, t69, t70 * t126, t91, -0.2e1 * t133 * t37 + 0.2e1 * t62 * t70, 0.2e1 * t133 * t38 + 0.2e1 * t62 * t72, -0.2e1 * t37 * t72 - 0.2e1 * t38 * t70, t37 ^ 2 + t38 ^ 2 + t62 ^ 2, t53 ^ 2, -0.2e1 * t53 * t51, t53 * t163, t51 ^ 2, t51 * t164, t69, 0.2e1 * t17 * t70 + 0.2e1 * t36 * t51, -0.2e1 * t18 * t70 + 0.2e1 * t36 * t53, -0.2e1 * t17 * t53 - 0.2e1 * t18 * t51, t17 ^ 2 + t18 ^ 2 + t36 ^ 2, t30 ^ 2, -0.2e1 * t30 * t28, t30 * t163, t28 ^ 2, t28 * t164, t69, 0.2e1 * t24 * t28 + 0.2e1 * t6 * t70, 0.2e1 * t24 * t30 - 0.2e1 * t7 * t70, -0.2e1 * t28 * t7 - 0.2e1 * t30 * t6, t24 ^ 2 + t6 ^ 2 + t7 ^ 2, t16 ^ 2, -0.2e1 * t16 * t14, t16 * t163, t14 ^ 2, t14 * t164, t69, 0.2e1 * t1 * t70 + 0.2e1 * t12 * t14, 0.2e1 * t12 * t16 - 0.2e1 * t2 * t70, -0.2e1 * t1 * t16 - 0.2e1 * t14 * t2, t1 ^ 2 + t12 ^ 2 + t2 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t134, 0, t133, t105, t73, -t74, 0, 0, t138, -t108 * t70 + t112 * t72, -t123, -t139, -t122, 0, -pkin(2) * t70 + pkin(9) * t123 - t112 * t62, -pkin(2) * t72 + pkin(9) * t122 + t108 * t62 (t138 - t139) * pkin(9) + t117, -t62 * pkin(2) + pkin(9) * t117, t53 * t132 (-t140 - t141) * t108, -t112 * t53 + t132 * t70, t51 * t136, t112 * t51 - t136 * t70, -t139, -t17 * t112 + t58 * t70 + (pkin(9) * t51 + t143) * t108, t18 * t112 - t59 * t70 + (pkin(9) * t53 + t142) * t108, -t59 * t51 - t58 * t53 + (-t102 * t18 - t104 * t17) * t108, t17 * t58 + t18 * t59 + t36 * t96, t30 * t67, -t28 * t67 - t30 * t65, -t112 * t30 + t67 * t70, t28 * t65, t112 * t28 - t65 * t70, -t139, -t112 * t6 + t24 * t65 + t26 * t70 + t28 * t81, t112 * t7 + t24 * t67 - t27 * t70 + t30 * t81, -t26 * t30 - t27 * t28 - t6 * t67 - t65 * t7, t24 * t81 + t26 * t6 + t27 * t7, t16 * t41, -t14 * t41 - t16 * t39, -t112 * t16 + t41 * t70, t14 * t39, t112 * t14 - t39 * t70, -t139, -t1 * t112 + t12 * t39 + t14 * t50 + t70 * t8, t112 * t2 + t12 * t41 + t16 * t50 - t70 * t9, -t1 * t41 - t14 * t9 - t16 * t8 - t2 * t39, t1 * t8 + t12 * t50 + t2 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t100, t125, 0, t101, 0, 0, pkin(2) * t158, -0.2e1 * pkin(2) * t108, 0.2e1 * (t100 + t101) * pkin(9), pkin(2) ^ 2 + t101 * t115 + t95, t99 * t100, -0.2e1 * t100 * t137, -0.2e1 * t104 * t128, t97 * t100, t102 * t125, t101, 0.2e1 * t102 * t154 - 0.2e1 * t112 * t58, 0.2e1 * t104 * t154 + 0.2e1 * t112 * t59, 0.2e1 * (-t102 * t59 - t104 * t58) * t108, t58 ^ 2 + t59 ^ 2 + t95, t67 ^ 2, -0.2e1 * t67 * t65, t67 * t159, t65 ^ 2, -t65 * t159, t101, -0.2e1 * t112 * t26 + 0.2e1 * t65 * t81, 0.2e1 * t112 * t27 + 0.2e1 * t67 * t81, -0.2e1 * t26 * t67 - 0.2e1 * t27 * t65, t26 ^ 2 + t27 ^ 2 + t81 ^ 2, t41 ^ 2, -0.2e1 * t41 * t39, t41 * t159, t39 ^ 2, t39 * t158, t101, -0.2e1 * t112 * t8 + 0.2e1 * t39 * t50, 0.2e1 * t112 * t9 + 0.2e1 * t41 * t50, -0.2e1 * t39 * t9 - 0.2e1 * t41 * t8, t50 ^ 2 + t8 ^ 2 + t9 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t72, 0, -t70, -t133, t37, -t38, 0, 0, t140, -t102 * t51 + t104 * t53, t147, -t141, t146, 0, -pkin(3) * t51 - qJ(4) * t147 - t142, -pkin(3) * t53 - qJ(4) * t146 + t143 (t140 - t141) * qJ(4) + t119, -t36 * pkin(3) + qJ(4) * t119, t30 * t80, t166 * t30 - t28 * t80, t80 * t70, -t28 * t166, t166 * t70, 0, -t166 * t24 + t28 * t94 + t55 * t70, t24 * t80 + t30 * t94 - t56 * t70, t166 * t7 - t28 * t56 - t30 * t55 - t6 * t80, t24 * t94 + t55 * t6 + t56 * t7, t16 * t47, -t14 * t47 - t16 * t45, t47 * t70, t14 * t45, -t45 * t70, 0, t12 * t45 + t14 * t61 + t21 * t70, t12 * t47 + t16 * t61 - t22 * t70, -t1 * t47 - t14 * t22 - t16 * t21 - t2 * t45, t1 * t21 + t12 * t61 + t2 * t22; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t108, 0, t112, 0, -t96, -t112 * pkin(9), 0, 0, t121 (-t97 + t99) * t108, -t135, -t121, -t131, 0, -pkin(9) * t132 + t102 * t120, pkin(9) * t136 + t104 * t120, t118, -pkin(3) * t96 + qJ(4) * t118, t67 * t80, t166 * t67 - t65 * t80, -t80 * t112, -t65 * t166, -t166 * t112, 0, -t112 * t55 - t166 * t81 + t65 * t94, t112 * t56 + t67 * t94 + t80 * t81, t166 * t27 - t26 * t80 - t55 * t67 - t56 * t65, t26 * t55 + t27 * t56 + t81 * t94, t41 * t47, -t39 * t47 - t41 * t45, -t47 * t112, t39 * t45, t45 * t112, 0, -t112 * t21 + t39 * t61 + t45 * t50, t112 * t22 + t41 * t61 + t47 * t50, -t21 * t41 - t22 * t39 - t45 * t9 - t47 * t8, t21 * t8 + t22 * t9 + t50 * t61; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t97, 0.2e1 * t137, 0, t99, 0, 0, 0.2e1 * pkin(3) * t104, -0.2e1 * pkin(3) * t102, 0.2e1 * t148 * qJ(4), qJ(4) ^ 2 * t148 + pkin(3) ^ 2, t80 ^ 2, 0.2e1 * t80 * t166, 0, t166 ^ 2, 0, 0, -t166 * t161, t80 * t161, 0.2e1 * t166 * t56 - 0.2e1 * t55 * t80, t55 ^ 2 + t56 ^ 2 + t94 ^ 2, t47 ^ 2, -0.2e1 * t47 * t45, 0, t45 ^ 2, 0, 0, t45 * t165, t47 * t165, -0.2e1 * t21 * t47 - 0.2e1 * t22 * t45, t21 ^ 2 + t22 ^ 2 + t61 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t51, t53, 0, t36, 0, 0, 0, 0, 0, 0, t28, t30, 0, t24, 0, 0, 0, 0, 0, 0, t14, t16, 0, t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t136, t132, 0, t96, 0, 0, 0, 0, 0, 0, t65, t67, 0, t81, 0, 0, 0, 0, 0, 0, t39, t41, 0, t50; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t104, t102, 0, -pkin(3), 0, 0, 0, 0, 0, 0, -t166, t80, 0, t94, 0, 0, 0, 0, 0, 0, t45, t47, 0, t61; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t30, 0, -t28, t70, t6, -t7, 0, 0, 0, 0, t16, 0, -t14, t70, t152 * t70 + t1, -t151 + (-t4 - t157) * t106 (-t106 * t14 - t110 * t16) * pkin(5) (t1 * t110 + t106 * t2) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t67, 0, -t65, -t112, t26, -t27, 0, 0, 0, 0, t41, 0, -t39, -t112, -t110 * t150 + t8, -t145 + (-t20 + t150) * t106 (-t106 * t39 - t110 * t41) * pkin(5) (t106 * t9 + t110 * t8) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t80, 0, t166, 0, t55, -t56, 0, 0, 0, 0, t47, 0, -t45, 0, t21, -t22 (-t106 * t45 - t110 * t47) * pkin(5) (t106 * t22 + t110 * t21) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t152, -0.2e1 * t153, 0 (t106 ^ 2 + t110 ^ 2) * pkin(5) ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t16, 0, -t14, t70, t1, -t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t41, 0, -t39, -t112, t8, -t9, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t47, 0, -t45, 0, t21, -t22, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t152, -t153, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t3;
