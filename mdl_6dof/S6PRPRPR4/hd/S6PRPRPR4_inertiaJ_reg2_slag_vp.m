% Calculate inertial parameters regressor of joint inertia matrix for
% S6PRPRPR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d6,theta1,theta3,theta5]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 19:41
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6PRPRPR4_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRPR4_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRPRPR4_inertiaJ_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-04 22:47:51
% EndTime: 2019-05-04 22:47:56
% DurationCPUTime: 1.44s
% Computational Cost: add. (1241->132), mult. (2668->249), div. (0->0), fcn. (3302->12), ass. (0->86)
t60 = sin(pkin(11));
t63 = cos(pkin(11));
t66 = sin(qJ(4));
t96 = cos(qJ(4));
t45 = t96 * t60 + t66 * t63;
t103 = -0.2e1 * t45;
t59 = sin(pkin(12));
t62 = cos(pkin(12));
t65 = sin(qJ(6));
t95 = cos(qJ(6));
t102 = -t65 * t59 + t95 * t62;
t64 = cos(pkin(6));
t61 = sin(pkin(6));
t67 = sin(qJ(2));
t88 = t61 * t67;
t33 = -t60 * t88 + t64 * t63;
t34 = t64 * t60 + t63 * t88;
t14 = -t96 * t33 + t66 * t34;
t13 = t14 ^ 2;
t84 = pkin(8) + qJ(3);
t48 = t84 * t63;
t77 = t84 * t60;
t25 = t66 * t48 + t96 * t77;
t101 = t25 ^ 2;
t42 = t66 * t60 - t96 * t63;
t36 = t42 ^ 2;
t100 = 0.2e1 * t42;
t52 = -t62 * pkin(5) - pkin(4);
t99 = 0.2e1 * t52;
t53 = -t63 * pkin(3) - pkin(2);
t98 = 0.2e1 * t53;
t97 = 0.2e1 * t63;
t94 = t14 * t25;
t19 = t102 * t45;
t93 = t19 * t102;
t44 = t95 * t59 + t65 * t62;
t92 = t44 * t42;
t91 = t59 * t42;
t90 = t59 * t45;
t89 = t59 * t62;
t68 = cos(qJ(2));
t87 = t61 * t68;
t86 = t62 * t45;
t83 = pkin(9) + qJ(5);
t22 = t42 * pkin(4) - t45 * qJ(5) + t53;
t28 = t96 * t48 - t66 * t77;
t8 = t59 * t22 + t62 * t28;
t54 = t59 ^ 2;
t57 = t62 ^ 2;
t82 = t54 + t57;
t55 = t60 ^ 2;
t58 = t63 ^ 2;
t81 = t55 + t58;
t80 = t42 * t103;
t79 = t59 * t86;
t7 = t62 * t22 - t59 * t28;
t76 = t8 * t59 + t7 * t62;
t75 = -t7 * t59 + t8 * t62;
t16 = t66 * t33 + t96 * t34;
t10 = t62 * t16 - t59 * t87;
t9 = -t59 * t16 - t62 * t87;
t74 = t10 * t62 - t9 * t59;
t73 = t10 * t59 + t9 * t62;
t72 = -pkin(4) * t45 - qJ(5) * t42;
t71 = -t33 * t60 + t34 * t63;
t56 = t61 ^ 2;
t49 = t56 * t68 ^ 2;
t47 = t83 * t62;
t46 = t83 * t59;
t38 = t45 ^ 2;
t37 = t44 ^ 2;
t35 = t102 ^ 2;
t32 = t62 * t42;
t29 = t102 * t42;
t27 = -t65 * t46 + t95 * t47;
t24 = -t95 * t46 - t65 * t47;
t17 = t44 * t45;
t12 = pkin(5) * t90 + t25;
t11 = t44 * t17;
t6 = -pkin(9) * t90 + t8;
t5 = t42 * pkin(5) - pkin(9) * t86 + t7;
t4 = t95 * t10 + t65 * t9;
t3 = -t65 * t10 + t95 * t9;
t2 = t65 * t5 + t95 * t6;
t1 = t95 * t5 - t65 * t6;
t15 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t56 * t67 ^ 2 + t64 ^ 2 + t49, 0, 0, 0, 0, 0, 0, 0, 0, 0, t33 ^ 2 + t34 ^ 2 + t49, 0, 0, 0, 0, 0, 0, 0, 0, 0, t16 ^ 2 + t13 + t49, 0, 0, 0, 0, 0, 0, 0, 0, 0, t10 ^ 2 + t9 ^ 2 + t13, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3 ^ 2 + t4 ^ 2 + t13; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t87, -t88, 0, 0, 0, 0, 0, 0, 0, 0, t63 * t87, -t60 * t87, t71, pkin(2) * t87 + t71 * qJ(3), 0, 0, 0, 0, 0, 0, -t42 * t87, -t45 * t87, t14 * t45 - t16 * t42, t16 * t28 - t53 * t87 + t94, 0, 0, 0, 0, 0, 0, t14 * t90 + t9 * t42, -t10 * t42 + t14 * t86, -t73 * t45, t10 * t8 + t9 * t7 + t94, 0, 0, 0, 0, 0, 0, t14 * t17 + t3 * t42, t14 * t19 - t4 * t42, -t4 * t17 - t3 * t19, t3 * t1 + t14 * t12 + t4 * t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t55, t60 * t97, 0, t58, 0, 0, pkin(2) * t97, -0.2e1 * pkin(2) * t60, 0.2e1 * t81 * qJ(3), t81 * qJ(3) ^ 2 + pkin(2) ^ 2, t38, t80, 0, t36, 0, 0, t42 * t98, t45 * t98, 0.2e1 * t25 * t45 - 0.2e1 * t28 * t42, t28 ^ 2 + t53 ^ 2 + t101, t57 * t38, -0.2e1 * t38 * t89, t86 * t100, t54 * t38, t59 * t80, t36, 0.2e1 * t25 * t90 + 0.2e1 * t7 * t42, 0.2e1 * t25 * t86 - 0.2e1 * t8 * t42, t76 * t103, t7 ^ 2 + t8 ^ 2 + t101, t19 ^ 2, -0.2e1 * t19 * t17, t19 * t100, t17 ^ 2, -t17 * t100, t36, 0.2e1 * t1 * t42 + 0.2e1 * t12 * t17, 0.2e1 * t12 * t19 - 0.2e1 * t2 * t42, -0.2e1 * t1 * t19 - 0.2e1 * t2 * t17, t1 ^ 2 + t12 ^ 2 + t2 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t87, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t87, 0, 0, 0, 0, 0, 0, 0, 0, 0, t73, 0, 0, 0, 0, 0, 0, 0, 0, 0, t102 * t3 + t4 * t44; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t63, t60, 0, -pkin(2), 0, 0, 0, 0, 0, 0, t42, t45, 0, t53, 0, 0, 0, 0, 0, 0, t32, -t91, -t82 * t45, t76, 0, 0, 0, 0, 0, 0, t29, -t92, -t11 - t93, t1 * t102 + t2 * t44; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t82, 0, 0, 0, 0, 0, 0, 0, 0, 0, t37 + t35; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t14, -t16, 0, 0, 0, 0, 0, 0, 0, 0, -t14 * t62, t14 * t59, t74, -t14 * pkin(4) + t74 * qJ(5), 0, 0, 0, 0, 0, 0, -t14 * t102, t14 * t44, t102 * t4 - t3 * t44, t14 * t52 + t3 * t24 + t4 * t27; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t45, 0, -t42, 0, -t25, -t28, 0, 0, t79 (-t54 + t57) * t45, t91, -t79, t32, 0, -t25 * t62 + t72 * t59, t25 * t59 + t72 * t62, t75, -t25 * pkin(4) + t75 * qJ(5), t19 * t44, -t11 + t93, t92, -t17 * t102, t29, 0, -t102 * t12 + t52 * t17 + t24 * t42, t12 * t44 + t52 * t19 - t27 * t42, -t1 * t44 + t102 * t2 - t27 * t17 - t24 * t19, t1 * t24 + t12 * t52 + t2 * t27; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t102 * t24 + t44 * t27; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t54, 0.2e1 * t89, 0, t57, 0, 0, 0.2e1 * pkin(4) * t62, -0.2e1 * pkin(4) * t59, 0.2e1 * t82 * qJ(5), t82 * qJ(5) ^ 2 + pkin(4) ^ 2, t37, 0.2e1 * t44 * t102, 0, t35, 0, 0, -t102 * t99, t44 * t99, 0.2e1 * t102 * t27 - 0.2e1 * t24 * t44, t24 ^ 2 + t27 ^ 2 + t52 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t14, 0, 0, 0, 0, 0, 0, 0, 0, 0, t14; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t90, t86, 0, t25, 0, 0, 0, 0, 0, 0, t17, t19, 0, t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t62, t59, 0, -pkin(4), 0, 0, 0, 0, 0, 0, -t102, t44, 0, t52; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3, -t4, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t19, 0, -t17, t42, t1, -t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t102, -t44, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t44, 0, t102, 0, t24, -t27, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t15;
