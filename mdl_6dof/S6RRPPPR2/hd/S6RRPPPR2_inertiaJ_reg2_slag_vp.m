% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRPPPR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d6,theta3,theta5]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 08:12
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRPPPR2_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPPR2_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPPPR2_inertiaJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 08:24:29
% EndTime: 2019-05-06 08:24:34
% DurationCPUTime: 1.31s
% Computational Cost: add. (1315->110), mult. (2377->203), div. (0->0), fcn. (2817->8), ass. (0->89)
t64 = sin(pkin(9));
t66 = cos(pkin(9));
t68 = sin(qJ(2));
t69 = cos(qJ(2));
t39 = t64 * t68 - t66 * t69;
t63 = sin(pkin(10));
t65 = cos(pkin(10));
t67 = sin(qJ(6));
t98 = cos(qJ(6));
t41 = t98 * t63 + t67 * t65;
t18 = t41 * t39;
t109 = 0.2e1 * t18;
t36 = t41 ^ 2;
t45 = -t67 * t63 + t98 * t65;
t38 = t45 ^ 2;
t108 = t38 + t36;
t35 = t39 ^ 2;
t43 = t64 * t69 + t66 * t68;
t37 = t43 ^ 2;
t101 = t64 * pkin(2);
t53 = qJ(4) + t101;
t107 = t53 ^ 2;
t106 = -0.2e1 * t43;
t47 = t63 * pkin(5) + t53;
t105 = 0.2e1 * t47;
t104 = 0.2e1 * t53;
t58 = -t69 * pkin(2) - pkin(1);
t103 = 0.2e1 * t58;
t102 = 0.2e1 * t69;
t100 = t66 * pkin(2);
t57 = -pkin(3) - t100;
t52 = -qJ(5) + t57;
t99 = -pkin(8) + t52;
t73 = -t43 * qJ(4) + t58;
t11 = (pkin(3) + qJ(5)) * t39 + t73;
t86 = -qJ(3) - pkin(7);
t48 = t86 * t68;
t49 = t86 * t69;
t25 = -t66 * t48 - t64 * t49;
t14 = t43 * pkin(4) + t25;
t7 = t65 * t11 + t63 * t14;
t97 = t18 * t41;
t96 = t18 * t45;
t16 = t45 * t39;
t95 = t41 * t16;
t22 = t41 * t43;
t94 = t43 * t39;
t24 = t45 * t43;
t93 = t53 * t39;
t59 = t63 ^ 2;
t92 = t59 * t39;
t91 = t63 * t39;
t90 = t63 * t43;
t89 = t65 * t39;
t32 = t65 * t43;
t88 = t65 * t63;
t60 = t65 ^ 2;
t85 = t59 + t60;
t61 = t68 ^ 2;
t62 = t69 ^ 2;
t84 = t61 + t62;
t83 = -0.2e1 * t94;
t82 = 0.2e1 * t94;
t81 = t39 * t88;
t27 = t64 * t48 - t66 * t49;
t80 = t25 ^ 2 + t27 ^ 2;
t13 = t65 * t14;
t4 = t43 * pkin(5) + t13 + (-pkin(8) * t39 - t11) * t63;
t5 = pkin(8) * t89 + t7;
t1 = t98 * t4 - t67 * t5;
t2 = t67 * t4 + t98 * t5;
t77 = t1 * t45 + t2 * t41;
t6 = -t63 * t11 + t13;
t3 = t6 * t65 + t7 * t63;
t76 = -t6 * t63 + t7 * t65;
t33 = t99 * t63;
t34 = t99 * t65;
t19 = -t67 * t33 + t98 * t34;
t20 = t98 * t33 + t67 * t34;
t75 = t19 * t45 + t20 * t41;
t74 = -t43 * t52 + t93;
t72 = 0.2e1 * t25 * t43 - 0.2e1 * t27 * t39;
t31 = t60 * t39;
t29 = t85 * t52;
t21 = t39 * pkin(3) + t73;
t15 = -t39 * pkin(4) + t27;
t10 = t45 * t16;
t8 = (-pkin(5) * t65 - pkin(4)) * t39 + t27;
t9 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t61, t68 * t102, 0, t62, 0, 0, pkin(1) * t102, -0.2e1 * pkin(1) * t68, 0.2e1 * t84 * pkin(7), t84 * pkin(7) ^ 2 + pkin(1) ^ 2, t37, t83, 0, t35, 0, 0, t39 * t103, t43 * t103, t72, t58 ^ 2 + t80, 0, 0, 0, t37, t83, t35, t72, -0.2e1 * t21 * t39, t21 * t106, t21 ^ 2 + t80, t59 * t35, 0.2e1 * t35 * t88, t63 * t82, t60 * t35, t65 * t82, t37, -0.2e1 * t15 * t89 + 0.2e1 * t6 * t43, 0.2e1 * t15 * t91 - 0.2e1 * t7 * t43, 0.2e1 * t76 * t39, t15 ^ 2 + t6 ^ 2 + t7 ^ 2, t18 ^ 2, t16 * t109, t43 * t109, t16 ^ 2, -t16 * t106, t37, 0.2e1 * t1 * t43 - 0.2e1 * t8 * t16, 0.2e1 * t8 * t18 - 0.2e1 * t2 * t43, -0.2e1 * t1 * t18 + 0.2e1 * t2 * t16, t1 ^ 2 + t2 ^ 2 + t8 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t68, 0, t69, 0, -t68 * pkin(7), -t69 * pkin(7), 0, 0, 0, 0, t43, 0, -t39, 0, -t25, -t27 (-t39 * t64 - t43 * t66) * pkin(2) (-t25 * t66 + t27 * t64) * pkin(2), 0, -t43, t39, 0, 0, 0, t57 * t43 - t93, t25, t27, t25 * t57 + t27 * t53, t81, t31 - t92, t32, -t81, -t90, 0, t15 * t63 - t74 * t65, t15 * t65 + t74 * t63, -t3, t15 * t53 + t3 * t52, t96, t10 - t97, t24, -t95, -t22, 0, -t47 * t16 + t19 * t43 + t8 * t41, t47 * t18 - t20 * t43 + t8 * t45, t20 * t16 - t19 * t18 - t77, t1 * t19 + t2 * t20 + t8 * t47; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t100, -0.2e1 * t101, 0 (t64 ^ 2 + t66 ^ 2) * pkin(2) ^ 2, 1, 0, 0, 0, 0, 0, 0, 0.2e1 * t57, t104, t57 ^ 2 + t107, t60, -0.2e1 * t88, 0, t59, 0, 0, t63 * t104, t65 * t104, -0.2e1 * t29, t85 * t52 ^ 2 + t107, t38, -0.2e1 * t45 * t41, 0, t36, 0, 0, t41 * t105, t45 * t105, -0.2e1 * t75, t19 ^ 2 + t20 ^ 2 + t47 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t39, t43, 0, t58, 0, 0, 0, 0, 0, 0, 0, -t39, -t43, t21, 0, 0, 0, 0, 0, 0, -t90, -t32, t31 + t92, t76, 0, 0, 0, 0, 0, 0, -t22, -t24, t10 + t97, -t1 * t41 + t2 * t45; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t19 * t41 + t20 * t45; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t85, 0, 0, 0, 0, 0, 0, 0, 0, 0, t108; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t43, 0, 0, t25, 0, 0, 0, 0, 0, 0, t32, -t90, 0, t3, 0, 0, 0, 0, 0, 0, t24, -t22, t95 - t96, t77; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, t57, 0, 0, 0, 0, 0, 0, 0, 0, -t85, t29, 0, 0, 0, 0, 0, 0, 0, 0, -t108, t75; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t85, 0, 0, 0, 0, 0, 0, 0, 0, 0, t108; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t89, t91, 0, t15, 0, 0, 0, 0, 0, 0, -t16, t18, 0, t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t63, t65, 0, t53, 0, 0, 0, 0, 0, 0, t41, t45, 0, t47; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t18, 0, t16, t43, t1, -t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t45, 0, -t41, 0, t19, -t20, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t41, -t45, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t45, -t41, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t9;
