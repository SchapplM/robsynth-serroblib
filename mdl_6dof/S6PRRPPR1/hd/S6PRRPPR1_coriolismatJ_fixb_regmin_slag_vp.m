% Calculate minimal parameter regressor of coriolis matrix for
% S6PRRPPR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d6,theta1,theta4,theta5]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x26]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2021-01-16 02:08
% Revision: 24b2e7d74a0c1a3b64fa2f8f5ad758691ad61af3 (2021-01-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRPPR1_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPPR1_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPPR1_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRPPR1_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2021-01-16 02:06:10
% EndTime: 2021-01-16 02:06:34
% DurationCPUTime: 8.84s
% Computational Cost: add. (6321->467), mult. (15047->700), div. (0->0), fcn. (17902->12), ass. (0->371)
t326 = sin(qJ(3));
t329 = cos(qJ(3));
t323 = sin(pkin(6));
t327 = sin(qJ(2));
t489 = t323 * t327;
t524 = cos(pkin(6));
t277 = t326 * t489 - t524 * t329;
t278 = t524 * t326 + t329 * t489;
t322 = sin(pkin(11));
t523 = cos(pkin(11));
t198 = t523 * t277 + t322 * t278;
t542 = t198 / 0.2e1;
t530 = qJ(4) + pkin(8);
t304 = t530 * t329;
t300 = t523 * t304;
t303 = t530 * t326;
t492 = t322 * t303;
t551 = t300 - t492;
t559 = t542 * t551;
t407 = t523 * t326;
t490 = t322 * t329;
t290 = t407 + t490;
t330 = cos(qJ(2));
t488 = t323 * t330;
t242 = t290 * t488;
t310 = t322 * pkin(3) + qJ(5);
t316 = -t523 * pkin(3) - pkin(4);
t406 = t523 * t329;
t491 = t322 * t326;
t353 = t406 - t491;
t243 = t353 * t488;
t321 = sin(pkin(12));
t324 = cos(pkin(12));
t207 = -t321 * t243 + t324 * t489;
t209 = t324 * t243 + t321 * t489;
t548 = t209 * t324 / 0.2e1 - t207 * t321 / 0.2e1;
t558 = -t242 * t316 / 0.2e1 - t548 * t310;
t413 = t488 / 0.2e1;
t557 = t490 / 0.2e1;
t264 = t523 * t278;
t493 = t322 * t277;
t552 = t264 - t493;
t541 = -t552 / 0.2e1;
t237 = t523 * t303 + t322 * t304;
t556 = t237 * t321;
t555 = t237 * t324;
t554 = t321 * t551;
t505 = t551 * t324;
t328 = cos(qJ(6));
t481 = t328 * t321;
t325 = sin(qJ(6));
t484 = t325 * t324;
t292 = t481 + t484;
t144 = t292 * t290;
t453 = t144 * qJD(2);
t358 = -t484 / 0.2e1 - t481 / 0.2e1;
t440 = t353 * qJD(2);
t553 = t144 * t440;
t547 = t290 ^ 2;
t228 = t353 ^ 2 + t547;
t319 = t321 ^ 2;
t320 = t324 ^ 2;
t305 = t319 + t320;
t543 = -t198 / 0.2e1;
t549 = t542 + t543;
t449 = t144 * qJD(6);
t470 = t407 * t413 + t488 * t557;
t282 = t407 / 0.2e1 + t557;
t158 = -t321 * t552 - t324 * t488;
t546 = t158 / 0.2e1;
t159 = -t321 * t488 + t324 * t552;
t545 = t159 / 0.2e1;
t544 = t552 / 0.2e1;
t540 = t353 / 0.2e1;
t539 = -t353 / 0.2e1;
t480 = t328 * t324;
t485 = t325 * t321;
t288 = -t480 + t485;
t538 = -t288 / 0.2e1;
t537 = t288 / 0.2e1;
t536 = -t290 / 0.2e1;
t535 = t290 / 0.2e1;
t534 = t292 / 0.2e1;
t302 = -t324 * pkin(5) + t316;
t533 = t302 / 0.2e1;
t532 = t326 * pkin(3);
t531 = pkin(9) + t310;
t529 = qJD(3) * pkin(3);
t218 = t290 * pkin(4) - qJ(5) * t353 + t532;
t114 = t324 * t218 + t556;
t82 = -pkin(9) * t324 * t353 + t290 * pkin(5) + t114;
t528 = t325 * t82;
t115 = t321 * t218 - t555;
t213 = t321 * t353;
t86 = -pkin(9) * t213 + t115;
t527 = t325 * t86;
t526 = t328 * t82;
t525 = t328 * t86;
t317 = -t329 * pkin(3) - pkin(2);
t217 = -pkin(4) * t353 - t290 * qJ(5) + t317;
t112 = t324 * t217 - t554;
t522 = t112 * t321;
t113 = t321 * t217 + t505;
t521 = t113 * t324;
t520 = t114 * t324;
t519 = t115 * t321;
t518 = t158 * t321;
t517 = t159 * t324;
t191 = t292 * t353;
t516 = t191 * t353;
t195 = t288 * t353;
t515 = t195 * t353;
t262 = t290 * t485;
t196 = t290 * t480 - t262;
t514 = t196 * t290;
t512 = t198 * t242;
t511 = t198 * t288;
t510 = t198 * t292;
t508 = t207 * t324;
t507 = t209 * t321;
t503 = t237 * t290;
t502 = t242 * t237;
t500 = t242 * t321;
t499 = t242 * t324;
t25 = (t552 - t517 + t518) * t198;
t498 = t25 * qJD(1);
t497 = t290 * t144;
t496 = t290 * t288;
t495 = t290 * t324;
t32 = t158 * t207 + t159 * t209 + t512;
t494 = t32 * qJD(1);
t216 = t321 * t290;
t487 = t325 * t207;
t486 = t325 * t209;
t483 = t328 * t207;
t482 = t328 * t209;
t401 = t549 * t353;
t36 = (t541 + t544) * t290 - t401;
t479 = t36 * qJD(2);
t408 = -t319 / 0.2e1 - t320 / 0.2e1;
t342 = -t310 * t353 * t408 + t316 * t535;
t367 = -t520 / 0.2e1 - t519 / 0.2e1;
t38 = t342 + t367;
t478 = t38 * qJD(2);
t50 = t144 * t195 - t196 * t191;
t477 = t50 * qJD(2);
t58 = -t323 ^ 2 * t330 * t327 + t243 * t552 + t512;
t475 = t58 * qJD(1);
t73 = -t497 + t516;
t474 = t73 * qJD(2);
t74 = t497 + t516;
t473 = t74 * qJD(2);
t75 = t514 + t515;
t472 = t75 * qJD(2);
t76 = t514 - t515;
t471 = t76 * qJD(2);
t468 = qJD(2) * t196;
t467 = qJD(2) * t327;
t466 = qJD(2) * t329;
t465 = qJD(3) * t326;
t464 = qJD(3) * t329;
t463 = qJD(3) * t330;
t462 = qJD(5) * t353;
t116 = (t534 + t358) * t353;
t461 = t116 * qJD(2);
t460 = t116 * qJD(3);
t117 = (t534 - t358) * t353;
t109 = t117 * qJD(2);
t459 = t117 * qJD(3);
t412 = t485 / 0.2e1;
t357 = -t480 / 0.2e1 + t412;
t118 = (t537 + t357) * t353;
t458 = t118 * qJD(2);
t119 = (t538 + t357) * t353;
t457 = t119 * qJD(2);
t409 = t480 / 0.2e1;
t416 = t353 * t538;
t120 = -t353 * t409 + t485 * t540 - t416;
t456 = t120 * qJD(2);
t130 = t305 * t547;
t455 = t130 * qJD(2);
t454 = t496 * qJD(2);
t400 = t408 * t290;
t165 = t400 - t282;
t452 = t165 * qJD(2);
t168 = t228 * t321;
t451 = t168 * qJD(2);
t429 = -t523 / 0.2e1;
t350 = t290 * t429 + t322 * t540;
t188 = (-t326 / 0.2e1 + t350) * pkin(3);
t450 = t188 * qJD(2);
t448 = t552 * qJD(3);
t447 = t198 * qJD(3);
t446 = t216 * qJD(2);
t219 = t305 * t353;
t445 = t219 * qJD(2);
t220 = t228 * t324;
t444 = t220 * qJD(2);
t443 = t228 * qJD(2);
t442 = t551 * qJD(3);
t441 = t282 * qJD(2);
t439 = t288 * qJD(3);
t281 = t288 * qJD(6);
t438 = t290 * qJD(2);
t437 = t290 * qJD(3);
t436 = t290 * qJD(4);
t435 = t292 * qJD(3);
t434 = t292 * qJD(6);
t433 = t305 * qJD(3);
t309 = -t326 ^ 2 + t329 ^ 2;
t432 = t309 * qJD(2);
t431 = pkin(2) * t326 * qJD(2);
t430 = pkin(2) * t466;
t428 = t290 * t462;
t427 = t496 * t440;
t425 = t353 * t438;
t424 = t323 * t467;
t423 = qJD(2) * t488;
t422 = t324 * t438;
t421 = t326 * t466;
t420 = t159 * t536;
t419 = t198 * t535;
t418 = t242 * t537;
t417 = t242 * t534;
t415 = t489 / 0.2e1;
t414 = -t488 / 0.2e1;
t245 = t305 * t310;
t405 = -qJD(6) + t440;
t404 = qJD(3) * t302 + qJD(5);
t402 = t353 * t422;
t399 = t264 / 0.2e1 - t493 / 0.2e1;
t398 = t300 / 0.2e1 - t492 / 0.2e1;
t177 = pkin(5) * t213 + t551;
t178 = pkin(5) * t216 + t237;
t343 = -pkin(5) * t353 - pkin(9) * t495 + t112;
t85 = -pkin(9) * t216 + t113;
t40 = t325 * t85 - t328 * t343;
t3 = -(t526 - t527) * t353 - t40 * t290 + t177 * t144 + t178 * t191;
t379 = t328 * t158 - t325 * t159;
t332 = -t144 * t544 + t191 * t549 + t379 * t536;
t5 = t418 + t332;
t397 = -t5 * qJD(1) + t3 * qJD(2);
t41 = t325 * t343 + t328 * t85;
t4 = (t525 + t528) * t353 - t41 * t290 + t177 * t196 - t178 * t195;
t378 = t325 * t158 + t328 * t159;
t331 = -t195 * t543 + t196 * t541 + t198 * t416 + t378 * t535;
t6 = t417 + t331;
t396 = -t6 * qJD(1) + t4 * qJD(2);
t16 = t112 * t114 + t113 * t115 + t237 * t551;
t364 = t237 * t544 + t559;
t368 = t521 / 0.2e1 - t522 / 0.2e1;
t333 = t114 * t546 + t115 * t545 - t198 * t368 + t364;
t2 = t333 + t558;
t395 = t2 * qJD(1) + t16 * qJD(2);
t347 = t358 * t198;
t54 = -t510 / 0.2e1 - t347;
t279 = t531 * t321;
t280 = t531 * t324;
t210 = -t325 * t279 + t328 * t280;
t340 = t178 * t534 + t196 * t533 + t210 * t540;
t369 = -t527 / 0.2e1 + t526 / 0.2e1;
t9 = -t340 + t369;
t394 = t54 * qJD(1) + t9 * qJD(2);
t208 = t328 * t279 + t325 * t280;
t341 = -t144 * t533 + t178 * t538 + t208 * t539;
t370 = -t528 / 0.2e1 - t525 / 0.2e1;
t10 = -t341 + t370;
t346 = t357 * t198;
t55 = t511 / 0.2e1 - t346;
t393 = t55 * qJD(1) + t10 * qJD(2);
t381 = -t112 * t324 - t113 * t321;
t13 = (t519 + t520) * t290 - t381 * t353;
t366 = t321 * t545 + t324 * t546;
t348 = t366 * t353;
t34 = -t348 - t548;
t392 = t34 * qJD(1) - t13 * qJD(2);
t336 = -t237 * t541 - t364 + t559;
t351 = t243 * t322 / 0.2e1 + t242 * t429;
t14 = (t326 * t413 + t351) * pkin(3) + t336;
t66 = t317 * t532;
t391 = -t14 * qJD(1) + t66 * qJD(2);
t17 = -t144 * t178 - t353 * t40;
t339 = -t144 * t543 + t379 * t539;
t360 = -t487 / 0.2e1 - t482 / 0.2e1;
t20 = t339 + t360;
t390 = t20 * qJD(1) - t17 * qJD(2);
t18 = t178 * t196 + t353 * t41;
t338 = t196 * t543 + t378 * t539;
t359 = -t486 / 0.2e1 + t483 / 0.2e1;
t19 = t338 + t359;
t389 = t19 * qJD(1) - t18 * qJD(2);
t365 = -t517 / 0.2e1 + t518 / 0.2e1;
t337 = -t353 * t365 + t419;
t362 = -t508 / 0.2e1 - t507 / 0.2e1;
t24 = t337 + t362;
t39 = t503 - (-t521 + t522) * t353;
t388 = t24 * qJD(1) + t39 * qJD(2);
t344 = t535 * t552 - t401;
t335 = t158 * t535 + t344 * t321;
t26 = t499 / 0.2e1 + t335;
t30 = (t112 + t554) * t290 - (t114 - t556) * t353;
t387 = t26 * qJD(1) + t30 * qJD(2);
t334 = t324 * t344 + t420;
t29 = -t500 / 0.2e1 + t334;
t31 = (-t113 + t505) * t290 - (-t115 - t555) * t353;
t386 = t29 * qJD(1) + t31 * qJD(2);
t385 = t36 * qJD(1);
t44 = t381 * t290;
t45 = t290 * t366 + t470;
t384 = -t45 * qJD(1) + t44 * qJD(2);
t363 = t540 * t552 + t419;
t67 = t415 - t363;
t88 = t353 * t551 + t503;
t383 = -t67 * qJD(1) + t88 * qJD(2);
t49 = t144 * t288 - t292 * t196;
t65 = t144 ^ 2 - t196 ^ 2;
t382 = t65 * qJD(2) + t49 * qJD(3);
t380 = -t114 * t321 + t115 * t324;
t377 = -t290 * t310 + t316 * t353;
t189 = t288 ^ 2 - t292 ^ 2;
t376 = t49 * qJD(2) + t189 * qJD(3);
t375 = -t439 - t453;
t89 = t262 / 0.2e1 + (t412 - t480) * t290;
t374 = t89 * qJD(2) - t435;
t173 = t290 * t413 - t470;
t211 = t317 * t290 - t353 * t532;
t372 = -t173 * qJD(1) + t211 * qJD(2);
t349 = -t406 / 0.2e1 + t491 / 0.2e1;
t174 = (t540 + t349) * t488;
t212 = t290 * t532 + t317 * t353;
t371 = -t174 * qJD(1) + t212 * qJD(2);
t72 = -t144 * t534 + t196 * t538;
t356 = t72 * qJD(3) - t144 * t468;
t355 = -t72 * qJD(2) + t288 * t435;
t354 = t282 * qJD(6) - t425;
t42 = -t368 + t398;
t52 = t365 + t399;
t345 = t52 * qJD(1) + t42 * qJD(2) - t245 * qJD(3);
t276 = t282 * qJD(3);
t187 = t532 / 0.2e1 + t350 * pkin(3);
t176 = t290 * t414 - t470;
t175 = t349 * t488 - t353 * t413;
t164 = t400 + t282;
t121 = -t353 * t357 - t416;
t111 = t116 * qJD(6);
t110 = t117 * qJD(6);
t92 = -t262 / 0.2e1 + (t409 + t357) * t290;
t87 = -t434 + t109;
t71 = t72 * qJD(6);
t68 = t415 + t363;
t57 = t510 / 0.2e1 - t347;
t56 = -t511 / 0.2e1 - t346;
t53 = -t365 + t399;
t47 = t49 * qJD(6);
t46 = t321 * t420 - t158 * t495 / 0.2e1 + t470;
t43 = t368 + t398;
t37 = t342 - t367;
t35 = t36 * qJD(3);
t33 = -t348 + t548;
t28 = t500 / 0.2e1 + t334;
t27 = -t499 / 0.2e1 + t335;
t23 = t337 - t362;
t22 = -t338 + t359;
t21 = -t339 + t360;
t15 = pkin(3) * t351 + t414 * t532 - t336;
t12 = t340 + t369;
t11 = t341 + t370;
t8 = t417 - t331;
t7 = t418 - t332;
t1 = t333 - t558;
t48 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t58 * qJD(2), 0, 0, 0, t32 * qJD(2) + t25 * qJD(3), 0, 0, 0, 0, 0, 0, 0; 0, 0, -t424, -t423, 0, 0, 0, 0, 0, (-t326 * t463 - t327 * t466) * t323, (t326 * t467 - t329 * t463) * t323, t176 * qJD(3) - t353 * t424, t175 * qJD(3) + t290 * t424, (t242 * t290 + t243 * t353) * qJD(2) + t35, t475 + (t243 * t551 + t317 * t489 + t502) * qJD(2) + t15 * qJD(3) + t68 * qJD(4), (-t207 * t353 + t216 * t242) * qJD(2) + t27 * qJD(3), (t209 * t353 + t242 * t495) * qJD(2) + t28 * qJD(3), t33 * qJD(3) + (-t507 - t508) * t438, t494 + (t207 * t112 + t209 * t113 + t502) * qJD(2) + t1 * qJD(3) + t23 * qJD(4) + t46 * qJD(5), 0, 0, 0, 0, 0, (-(t483 - t486) * t353 + t242 * t144) * qJD(2) + t7 * qJD(3) + t22 * qJD(6), ((t482 + t487) * t353 + t242 * t196) * qJD(2) + t8 * qJD(3) + t21 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, -t278 * qJD(3) - t326 * t423, t277 * qJD(3) - t329 * t423, t176 * qJD(2) - t448, t175 * qJD(2) + t447, t479, t15 * qJD(2) + (-t198 * t322 - t523 * t552) * t529, t27 * qJD(2) - t324 * t448, t28 * qJD(2) + t321 * t448, t33 * qJD(2) - t305 * t447, t498 + t1 * qJD(2) + (-t198 * t245 + t316 * t552) * qJD(3) + t53 * qJD(5), 0, 0, 0, 0, 0, t7 * qJD(2) + t57 * qJD(6) + t439 * t552, t8 * qJD(2) + t56 * qJD(6) + t435 * t552; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t68 * qJD(2), 0, 0, 0, t23 * qJD(2), 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t46 * qJD(2) + t53 * qJD(3), 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t22 * qJD(2) + t57 * qJD(3) - qJD(6) * t378, t21 * qJD(2) + t56 * qJD(3) - qJD(6) * t379; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t173 * qJD(3), -t174 * qJD(3), t35, -t14 * qJD(3) - t67 * qJD(4) - t475, t26 * qJD(3), t29 * qJD(3), t34 * qJD(3), t2 * qJD(3) + t24 * qJD(4) - t45 * qJD(5) - t494, 0, 0, 0, 0, 0, -t5 * qJD(3) - t19 * qJD(6), -t6 * qJD(3) - t20 * qJD(6); 0, 0, 0, 0, t326 * t464, t309 * qJD(3), 0, 0, 0, -pkin(2) * t465, -pkin(2) * t464, t211 * qJD(3), t212 * qJD(3), t228 * qJD(4), t66 * qJD(3) + t88 * qJD(4), t30 * qJD(3) + t168 * qJD(4) + t324 * t428, t31 * qJD(3) + t220 * qJD(4) - t321 * t428, -t13 * qJD(3) + t130 * qJD(5), t16 * qJD(3) + t39 * qJD(4) + t44 * qJD(5), (-qJD(3) * t195 - t449) * t196, t50 * qJD(3) + t65 * qJD(6), t75 * qJD(3) + t353 * t449, qJD(6) * t196 * t353 + t73 * qJD(3), -t353 * t437, t3 * qJD(3) + t74 * qJD(4) + t18 * qJD(6) - t462 * t496, t4 * qJD(3) + t76 * qJD(4) + t17 * qJD(6) - t144 * t462; 0, 0, 0, 0, t421, t432, t464, -t465, 0, -pkin(8) * t464 - t431, pkin(8) * t465 - t430, t372 - t442, qJD(3) * t237 + t371, (-t290 * t322 - t353 * t523) * t529 + t385, (-t237 * t322 - t523 * t551) * t529 + t187 * qJD(4) + t391, (t321 * t377 - t505) * qJD(3) + t213 * qJD(5) + t387, t321 * t442 + (qJD(3) * t377 + t462) * t324 + t386, qJD(3) * t380 + t392, (t310 * t380 + t316 * t551) * qJD(3) + t37 * qJD(4) + t43 * qJD(5) + t395, t71 - (t435 + t468) * t195, t477 + (-t292 * t191 + t195 * t288) * qJD(3) + t47, t121 * qJD(6) + t290 * t435 + t472, -t288 * t437 + t111 + t474, t354, (t177 * t288 + t302 * t191 - t208 * t290) * qJD(3) + t117 * qJD(5) + t12 * qJD(6) + t397, (t177 * t292 - t302 * t195 - t210 * t290) * qJD(3) - t120 * qJD(5) + t11 * qJD(6) + t396; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t443, t187 * qJD(3) + t383, t451, t444, 0, t37 * qJD(3) + t164 * qJD(5) + t388, 0, 0, 0, 0, 0, t111 + t473, t119 * qJD(6) + t471; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t213 * qJD(3) + t402, -(-qJD(3) * t324 + t321 * t438) * t353, t455, t43 * qJD(3) + t164 * qJD(4) + t384, 0, 0, 0, 0, 0, t92 * qJD(6) - t427 + t459, -t120 * qJD(3) - t553; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t356, t382, t121 * qJD(3) + t144 * t405, t196 * t405 + t460, t276, t12 * qJD(3) + t116 * qJD(4) + t92 * qJD(5) - t41 * qJD(6) - t389, t11 * qJD(3) + t119 * qJD(4) + t40 * qJD(6) - t390; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t173 * qJD(2), t174 * qJD(2), -t479, t14 * qJD(2), -t26 * qJD(2), -t29 * qJD(2), -t34 * qJD(2), -t2 * qJD(2) - t52 * qJD(5) - t498, 0, 0, 0, 0, 0, t5 * qJD(2) - t54 * qJD(6), t6 * qJD(2) - t55 * qJD(6); 0, 0, 0, 0, -t421, -t432, 0, 0, 0, t431, t430, -t372 - t436, -qJD(4) * t353 - t371, -t385, t188 * qJD(4) - t391, -t324 * t436 - t387, t216 * qJD(4) - t386, t219 * qJD(4) - t392, t38 * qJD(4) - t42 * qJD(5) - t395, t195 * t468 + t71, t47 - t477, t118 * qJD(6) - t472, t110 - t474, -t354, qJD(4) * t496 + t116 * qJD(5) - t9 * qJD(6) - t397, t144 * qJD(4) + t119 * qJD(5) - t10 * qJD(6) - t396; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t305 * qJD(5), t245 * qJD(5), -t288 * t434, t189 * qJD(6), 0, 0, 0, t302 * t434, -t302 * t281; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t438, -t440, 0, t450, -t422, t446, t445, t478, 0, 0, 0, 0, 0, t454, t453; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t433, -t345, 0, 0, 0, 0, 0, t461, t457; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t355, t376, -t281 + t458, t87, -t441, -t210 * qJD(6) + t302 * t435 - t394, t208 * qJD(6) - t302 * t439 - t393; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t67 * qJD(2), 0, 0, 0, -t24 * qJD(2), 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t437, t353 * qJD(3), -t443, -t188 * qJD(3) - t383, t324 * t437 - t451, -t216 * qJD(3) - t444, -t219 * qJD(3), -t38 * qJD(3) + t165 * qJD(5) - t388, 0, 0, 0, 0, 0, -qJD(3) * t496 + t110 - t473, -t144 * qJD(3) - t120 * qJD(6) - t471; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t438, t440, 0, -t450, t422, -t446, -t445, -t478, 0, 0, 0, 0, 0, -t454, -t453; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t452, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t87, t281 - t456; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t45 * qJD(2) + t52 * qJD(3), 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t402, t321 * t425, -t455, t42 * qJD(3) - t165 * qJD(4) - t384, 0, 0, 0, 0, 0, -t89 * qJD(6) + t427 - t460, -t119 * qJD(3) - t449 + t553; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t433, t345, 0, 0, 0, 0, 0, t434 - t461, -t281 - t457; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t452, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t374, t375; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t19 * qJD(2) + t54 * qJD(3), t20 * qJD(2) + t55 * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t356, -t382, -t118 * qJD(3) - t553, -t196 * t440 - t459, t276, t9 * qJD(3) - t117 * qJD(4) + t89 * qJD(5) + t389, t10 * qJD(3) + t120 * qJD(4) + qJD(5) * t144 + t390; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t355, -t376, -t458, -t109, t441, -t292 * t404 + t394, t288 * t404 + t393; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t109, t456; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t374, -t375; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t48;
