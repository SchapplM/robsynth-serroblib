% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRPRPR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d6,theta3]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 11:10
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRPRPR10_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR10_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRPR10_inertiaJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 15:43:26
% EndTime: 2019-05-06 15:43:33
% DurationCPUTime: 2.32s
% Computational Cost: add. (2742->198), mult. (6171->363), div. (0->0), fcn. (7173->10), ass. (0->128)
t139 = cos(qJ(4));
t78 = sin(pkin(6));
t83 = sin(qJ(2));
t131 = t78 * t83;
t77 = sin(pkin(11));
t79 = cos(pkin(11));
t80 = cos(pkin(6));
t49 = t77 * t131 - t80 * t79;
t51 = t79 * t131 + t80 * t77;
t82 = sin(qJ(4));
t32 = t139 * t49 + t82 * t51;
t150 = t32 ^ 2;
t34 = t139 * t51 - t82 * t49;
t31 = t34 ^ 2;
t59 = -t139 * t79 + t82 * t77;
t56 = t59 ^ 2;
t61 = t139 * t77 + t82 * t79;
t57 = t61 ^ 2;
t149 = -0.2e1 * t34;
t70 = -t79 * pkin(3) - pkin(2);
t91 = -t61 * qJ(5) + t70;
t37 = t59 * pkin(4) + t91;
t148 = -0.2e1 * t37;
t147 = -0.2e1 * t51;
t146 = 0.2e1 * t70;
t145 = 0.2e1 * t78;
t144 = 0.2e1 * t79;
t143 = 0.2e1 * qJ(5);
t142 = pkin(4) + pkin(10);
t141 = pkin(1) * t83;
t85 = cos(qJ(2));
t140 = pkin(1) * t85;
t130 = t78 * t85;
t81 = sin(qJ(6));
t84 = cos(qJ(6));
t21 = t81 * t130 + t84 * t32;
t138 = t21 * t81;
t137 = t32 * t59;
t20 = t34 * t61;
t136 = t49 * t79;
t135 = t51 * t77;
t134 = t61 * t59;
t72 = t78 ^ 2;
t133 = t72 * t85;
t74 = t81 ^ 2;
t132 = t74 * t59;
t129 = t80 * t83;
t22 = t84 * t130 - t81 * t32;
t128 = t81 * t22;
t127 = t81 * t34;
t126 = t81 * t59;
t125 = t81 * t61;
t124 = t81 * t142;
t123 = t84 * t22;
t28 = t84 * t34;
t122 = t84 * t59;
t53 = t84 * t61;
t121 = t84 * t81;
t120 = t84 * t142;
t119 = pkin(9) + qJ(3);
t111 = pkin(8) * t130;
t45 = t111 + (qJ(3) + t141) * t80;
t46 = (-pkin(2) * t85 - qJ(3) * t83 - pkin(1)) * t78;
t25 = -t77 * t45 + t79 * t46;
t15 = -pkin(3) * t130 - t51 * pkin(9) + t25;
t26 = t79 * t45 + t77 * t46;
t18 = -t49 * pkin(9) + t26;
t10 = t139 * t18 + t82 * t15;
t71 = t77 ^ 2;
t73 = t79 ^ 2;
t118 = t71 + t73;
t75 = t84 ^ 2;
t117 = t74 + t75;
t116 = qJ(5) * t59;
t115 = t32 * t149;
t114 = -0.2e1 * t134;
t113 = 0.2e1 * t134;
t112 = 0.2e1 * t130;
t110 = t34 * t130;
t100 = t119 * t77;
t64 = t119 * t79;
t38 = t139 * t100 + t82 * t64;
t109 = t38 * t130;
t40 = -t82 * t100 + t139 * t64;
t108 = t40 * t130;
t107 = t61 * t130;
t106 = t32 * t130;
t105 = t59 * t130;
t104 = t59 * t121;
t103 = qJ(3) * t130;
t102 = qJ(5) * t130;
t101 = t38 ^ 2 + t40 ^ 2;
t67 = pkin(4) * t130;
t97 = -t139 * t15 + t82 * t18;
t8 = t67 + t97;
t4 = t34 * pkin(5) + pkin(10) * t130 + t8;
t66 = pkin(8) * t131;
t48 = t66 + (-pkin(2) - t140) * t80;
t36 = t49 * pkin(3) + t48;
t89 = -t34 * qJ(5) + t36;
t6 = t142 * t32 + t89;
t1 = t84 * t4 - t81 * t6;
t2 = t81 * t4 + t84 * t6;
t99 = t1 * t84 + t2 * t81;
t98 = -t1 * t81 + t2 * t84;
t24 = t142 * t59 + t91;
t29 = t61 * pkin(5) + t38;
t12 = -t81 * t24 + t84 * t29;
t13 = t84 * t24 + t81 * t29;
t3 = t12 * t84 + t13 * t81;
t96 = -t12 * t81 + t13 * t84;
t95 = -t25 * t77 + t26 * t79;
t94 = -t40 * t32 + t38 * t34;
t93 = -t61 * t32 - t34 * t59;
t92 = t142 * t61 + t116;
t7 = t102 - t10;
t90 = 0.2e1 * t38 * t61 - 0.2e1 * t40 * t59;
t87 = qJ(5) ^ 2;
t68 = t72 * t85 ^ 2;
t63 = t117 * t142;
t55 = pkin(1) * t129 + t111;
t54 = t80 * t140 - t66;
t52 = t75 * t59;
t30 = -t59 * pkin(5) + t40;
t19 = t84 * t21;
t11 = t32 * pkin(4) + t89;
t5 = -t32 * pkin(5) - t7;
t9 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t72 * t83 ^ 2, 0.2e1 * t83 * t133, t129 * t145, t68, t80 * t112, t80 ^ 2, 0.2e1 * pkin(1) * t133 + 0.2e1 * t54 * t80, -0.2e1 * t72 * t141 - 0.2e1 * t55 * t80 (-t54 * t83 + t55 * t85) * t145, t72 * pkin(1) ^ 2 + t54 ^ 2 + t55 ^ 2, t51 ^ 2, t49 * t147, t130 * t147, t49 ^ 2, t49 * t112, t68, -0.2e1 * t25 * t130 + 0.2e1 * t48 * t49, 0.2e1 * t26 * t130 + 0.2e1 * t48 * t51, -0.2e1 * t25 * t51 - 0.2e1 * t26 * t49, t25 ^ 2 + t26 ^ 2 + t48 ^ 2, t31, t115, -0.2e1 * t110, t150, 0.2e1 * t106, t68, 0.2e1 * t130 * t97 + 0.2e1 * t36 * t32, 0.2e1 * t10 * t130 + 0.2e1 * t36 * t34, -0.2e1 * t10 * t32 + 0.2e1 * t34 * t97, t10 ^ 2 + t36 ^ 2 + t97 ^ 2, t68, 0.2e1 * t110, -0.2e1 * t106, t31, t115, t150, 0.2e1 * t7 * t32 + 0.2e1 * t8 * t34, -0.2e1 * t11 * t32 - 0.2e1 * t8 * t130, -0.2e1 * t11 * t34 + 0.2e1 * t7 * t130, t11 ^ 2 + t7 ^ 2 + t8 ^ 2, t22 ^ 2, -0.2e1 * t22 * t21, t22 * t149, t21 ^ 2, 0.2e1 * t21 * t34, t31, 0.2e1 * t1 * t34 - 0.2e1 * t5 * t21, -0.2e1 * t2 * t34 - 0.2e1 * t5 * t22, 0.2e1 * t1 * t22 + 0.2e1 * t2 * t21, t1 ^ 2 + t2 ^ 2 + t5 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t131, 0, t130, t80, t54, -t55, 0, 0, t135, -t77 * t49 + t51 * t79, -t77 * t130, -t136, -t79 * t130, 0, -pkin(2) * t49 + t77 * t103 - t48 * t79, -pkin(2) * t51 + t79 * t103 + t48 * t77 (t135 - t136) * qJ(3) + t95, -t48 * pkin(2) + t95 * qJ(3), t20, t93, -t107, t137, t105, 0, t70 * t32 + t36 * t59 + t109, t70 * t34 + t36 * t61 + t108, -t10 * t59 + t61 * t97 + t94, t10 * t40 + t36 * t70 + t38 * t97, 0, t107, -t105, t20, t93, t137, t7 * t59 + t8 * t61 + t94, -t11 * t59 - t37 * t32 - t109, -t11 * t61 - t37 * t34 - t108, t11 * t37 + t8 * t38 - t7 * t40, -t22 * t126 (-t123 + t138) * t59, t34 * t126 - t22 * t61, t21 * t122, t122 * t34 + t21 * t61, t20, t1 * t61 + t12 * t34 - t122 * t5 - t30 * t21, t126 * t5 - t13 * t34 - t2 * t61 - t30 * t22, t12 * t22 + t13 * t21 + t59 * t98, t1 * t12 + t2 * t13 + t5 * t30; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t71, t77 * t144, 0, t73, 0, 0, pkin(2) * t144, -0.2e1 * pkin(2) * t77, 0.2e1 * t118 * qJ(3), t118 * qJ(3) ^ 2 + pkin(2) ^ 2, t57, t114, 0, t56, 0, 0, t59 * t146, t61 * t146, t90, t70 ^ 2 + t101, 0, 0, 0, t57, t114, t56, t90, t59 * t148, t61 * t148, t37 ^ 2 + t101, t74 * t56, 0.2e1 * t56 * t121, t81 * t113, t75 * t56, t84 * t113, t57, 0.2e1 * t12 * t61 - 0.2e1 * t122 * t30, 0.2e1 * t126 * t30 - 0.2e1 * t13 * t61, 0.2e1 * t96 * t59, t12 ^ 2 + t13 ^ 2 + t30 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t49, t51, 0, t48, 0, 0, 0, 0, 0, 0, t32, t34, 0, t36, 0, 0, 0, 0, 0, 0, 0, -t32, -t34, t11, 0, 0, 0, 0, 0, 0, -t127, -t28, t19 - t128, t98; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t79, t77, 0, -pkin(2), 0, 0, 0, 0, 0, 0, t59, t61, 0, t70, 0, 0, 0, 0, 0, 0, 0, -t59, -t61, t37, 0, 0, 0, 0, 0, 0, -t125, -t53, t52 + t132, t96; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t117; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t34, 0, -t32, -t130, -t97, -t10, 0, 0, -t130, -t34, t32, 0, 0, 0, -pkin(4) * t34 - qJ(5) * t32, 0.2e1 * t67 + t97, -0.2e1 * t102 + t10, -t8 * pkin(4) - t7 * qJ(5), -t123, t19 + t128, t28, -t138, -t127, 0, -qJ(5) * t21 - t120 * t34 + t5 * t81, -qJ(5) * t22 + t124 * t34 + t5 * t84 (-t142 * t22 - t1) * t84 + (-t142 * t21 - t2) * t81, t5 * qJ(5) - t142 * t99; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t61, 0, -t59, 0, -t38, -t40, 0, 0, 0, -t61, t59, 0, 0, 0, -pkin(4) * t61 - t116, t38, t40, -t38 * pkin(4) + t40 * qJ(5), t104, t52 - t132, t53, -t104, -t125, 0, t30 * t81 - t84 * t92, t30 * t84 + t81 * t92, -t3, t30 * qJ(5) - t142 * t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, -0.2e1 * pkin(4), t143, pkin(4) ^ 2 + t87, t75, -0.2e1 * t121, 0, t74, 0, 0, t81 * t143, t84 * t143, 0.2e1 * t63, t117 * t142 ^ 2 + t87; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t34, -t130, 0, t8, 0, 0, 0, 0, 0, 0, t28, -t127, t123 + t138, t99; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t61, 0, 0, t38, 0, 0, 0, 0, 0, 0, t53, -t125, 0, t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, -pkin(4), 0, 0, 0, 0, 0, 0, 0, 0, -t117, -t63; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t117; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t22, 0, t21, t34, t1, -t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t126, 0, t122, t61, t12, -t13, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t81, -t84, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t84, 0, -t81, 0, -t120, t124, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t84, -t81, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t9;
