% Calculate minimal parameter regressor of coriolis matrix for
% S6PRRPRP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d5,theta1]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x26]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2021-01-16 03:14
% Revision: 24b2e7d74a0c1a3b64fa2f8f5ad758691ad61af3 (2021-01-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRPRP4_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRP4_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRP4_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6PRRPRP4_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2021-01-16 03:12:53
% EndTime: 2021-01-16 03:13:12
% DurationCPUTime: 6.41s
% Computational Cost: add. (4012->452), mult. (8799->643), div. (0->0), fcn. (8478->8), ass. (0->359)
t313 = sin(qJ(5));
t511 = -t313 / 0.2e1;
t519 = pkin(4) + pkin(8);
t317 = cos(qJ(3));
t319 = -pkin(3) - pkin(9);
t314 = sin(qJ(3));
t497 = qJ(4) * t314;
t353 = -t317 * t319 + t497;
t216 = -pkin(2) - t353;
t316 = cos(qJ(5));
t257 = t519 * t314;
t469 = t313 * t257;
t153 = t216 * t316 + t469;
t461 = t316 * t317;
t129 = -qJ(6) * t461 + t153;
t239 = t316 * t257;
t152 = t216 * t313 - t239;
t467 = t313 * t317;
t128 = -qJ(6) * t467 + t152;
t120 = t314 * pkin(5) - t128;
t495 = t120 * t313;
t44 = (-t129 * t316 + t495) * t314;
t526 = t120 + t128;
t299 = t313 * qJD(3);
t414 = t317 * qJD(2);
t388 = t316 * t414;
t233 = t299 + t388;
t300 = t316 * qJD(3);
t337 = t313 * t414 - t300;
t306 = t317 * pkin(8);
t307 = t317 * pkin(4);
t258 = t306 + t307;
t305 = t314 * pkin(3);
t496 = qJ(4) * t317;
t256 = t305 - t496;
t223 = pkin(9) * t314 + t256;
t200 = t316 * t223;
t240 = t258 * t313;
t444 = t200 + t240;
t468 = t313 * t314;
t41 = t444 * t314 - t258 * t468 + (t153 - t469) * t317;
t312 = sin(pkin(6));
t318 = cos(qJ(2));
t460 = t316 * t318;
t372 = t460 / 0.2e1;
t498 = cos(pkin(6));
t289 = t498 * t317;
t315 = sin(qJ(2));
t473 = t312 * t315;
t402 = t314 * t473;
t205 = -t289 + t402;
t484 = t205 * t313;
t399 = t312 * t460;
t159 = t399 - t484;
t517 = -t159 / 0.2e1;
t82 = (t312 * t372 + t517 - t484 / 0.2e1) * t317;
t448 = t82 * qJD(1);
t524 = -t41 * qJD(2) - t448;
t465 = t314 * t316;
t130 = qJ(6) * t465 + t444;
t204 = pkin(5) * t461 + t258;
t504 = t316 * pkin(5);
t203 = (-t504 - t519) * t314;
t487 = t203 * t313;
t30 = t130 * t314 - t204 * t468 + (t129 + t487) * t317;
t523 = -t30 * qJD(2) - t448;
t462 = t315 * t316;
t464 = t314 * t318;
t178 = (t313 * t464 + t462) * t312;
t509 = -t314 / 0.2e1;
t383 = t159 * t509;
t472 = t312 * t318;
t400 = t313 * t472;
t483 = t205 * t316;
t158 = t400 + t483;
t384 = t158 * t509;
t463 = t315 * t313;
t177 = (t314 * t460 - t463) * t312;
t515 = t177 / 0.2e1;
t33 = (t383 + t515) * t316 + (t384 + t178 / 0.2e1) * t313;
t459 = t33 * qJD(1);
t522 = -t44 * qJD(2) + t459;
t241 = t258 * t316;
t466 = t314 * qJ(6);
t503 = t317 * pkin(5);
t126 = t503 + t241 + (-t223 - t466) * t313;
t13 = -t126 * t467 + t130 * t461 + t44;
t521 = -t13 * qJD(2) + t459;
t520 = t128 * t511 - t495 / 0.2e1;
t308 = t313 ^ 2;
t310 = t316 ^ 2;
t272 = t308 - t310;
t330 = qJD(3) * t272 + 0.2e1 * t313 * t388;
t518 = t126 / 0.2e1;
t471 = t313 * qJ(6);
t244 = t313 * t319 - t471;
t514 = -t244 / 0.2e1;
t513 = -t308 / 0.2e1;
t512 = t310 / 0.2e1;
t510 = t313 / 0.2e1;
t508 = -t316 / 0.2e1;
t507 = t316 / 0.2e1;
t506 = t317 / 0.2e1;
t505 = t313 * pkin(5);
t377 = -t468 / 0.2e1;
t265 = pkin(5) * t377;
t7 = t265 + t520;
t502 = t7 * qJD(2);
t416 = t314 * qJD(4);
t325 = (-t463 / 0.2e1 + t314 * t372) * t312;
t367 = t498 * t314;
t401 = t317 * t473;
t206 = t367 + t401;
t376 = t467 / 0.2e1;
t359 = t206 * t376;
t335 = t383 + t359;
t58 = t325 + t335;
t453 = t58 * qJD(1);
t501 = t313 * t416 + t453;
t324 = (-t462 / 0.2e1 + t318 * t377) * t312;
t374 = -t461 / 0.2e1;
t336 = t206 * t374 + t384;
t59 = t324 - t336;
t452 = t59 * qJD(1);
t500 = t316 * t416 + t452;
t439 = qJD(4) * t317;
t378 = t472 / 0.2e1;
t81 = (t313 * t378 - t158 / 0.2e1 + t483 / 0.2e1) * t317;
t449 = t81 * qJD(1);
t499 = t316 * t439 - t449;
t15 = t526 * t461;
t491 = t15 * qJD(2);
t490 = t158 * t316;
t489 = t159 * t313;
t264 = pkin(5) * t468 / 0.2e1;
t16 = t264 - t520;
t488 = t16 * qJD(2);
t486 = t203 * t316;
t485 = t204 * t316;
t482 = t244 * t314;
t481 = t244 * t317;
t245 = (-qJ(6) + t319) * t316;
t480 = t245 * t314;
t479 = t245 * t317;
t25 = (t120 + t486) * t317 + (t126 - t485) * t314;
t478 = t25 * qJD(2);
t28 = (-t205 - t489 + t490) * t206;
t477 = t28 * qJD(1);
t398 = t317 * t472;
t29 = t158 * t177 - t159 * t178 + t206 * t398;
t476 = t29 * qJD(1);
t290 = qJ(4) + t505;
t475 = t290 * t313;
t470 = t313 * t223;
t458 = t33 * qJD(2);
t344 = t158 * t511 + t159 * t508;
t34 = t177 * t508 + t178 * t511 + t314 * t344;
t457 = t34 * qJD(2);
t40 = (-t152 - t239) * t317 - t470 * t314;
t456 = t40 * qJD(2);
t311 = t317 ^ 2;
t63 = -t129 * t314 + (-t204 * t317 - t311 * t504) * t313;
t451 = t63 * qJD(2);
t67 = -pkin(5) * t308 * t311 - t128 * t314 + t204 * t461;
t450 = t67 * qJD(2);
t89 = -t205 * t312 * t464 + (-t206 * t317 + t473) * t472;
t447 = t89 * qJD(1);
t98 = -t152 * t314 + t258 * t461;
t446 = t98 * qJD(2);
t99 = -t153 * t314 - t258 * t467;
t445 = t99 * qJD(2);
t271 = t308 + t310;
t309 = t314 ^ 2;
t273 = t311 - t309;
t443 = qJD(2) * t314;
t442 = qJD(2) * t315;
t441 = qJD(2) * t316;
t440 = qJD(3) * qJ(4);
t438 = qJD(5) * t313;
t437 = qJD(5) * t314;
t436 = qJD(5) * t316;
t435 = qJD(5) * t319;
t434 = t129 * qJD(5);
t433 = t159 * qJD(5);
t357 = -pkin(3) * t317 - t497;
t246 = -pkin(2) + t357;
t160 = t246 * t317 + t256 * t314;
t432 = t160 * qJD(2);
t161 = -t246 * t314 + t256 * t317;
t431 = t161 * qJD(2);
t197 = t271 * t317 * t314;
t430 = t197 * qJD(2);
t429 = t206 * qJD(3);
t235 = t273 * t313;
t428 = t235 * qJD(2);
t236 = t271 * t311;
t427 = t236 * qJD(2);
t238 = t273 * t316;
t426 = t238 * qJD(2);
t425 = t244 * qJD(5);
t369 = t513 - t310 / 0.2e1;
t253 = -0.1e1 / 0.2e1 + t369;
t424 = t253 * qJD(3);
t423 = t271 * qJD(3);
t422 = t273 * qJD(2);
t421 = t290 * qJD(3);
t420 = t309 * qJD(2);
t419 = t309 * qJD(4);
t418 = t313 * qJD(6);
t417 = t314 * qJD(3);
t415 = t316 * qJD(6);
t301 = t317 * qJD(3);
t413 = t317 * qJD(5);
t191 = -t470 / 0.2e1;
t412 = t191 + t241 / 0.2e1;
t192 = -t200 / 0.2e1;
t411 = t192 - t240 / 0.2e1;
t410 = pkin(5) * t467;
t409 = pkin(2) * t443;
t408 = pkin(2) * t414;
t407 = pkin(5) * t438;
t406 = pkin(8) * t417;
t405 = t504 / 0.2e1;
t404 = -t503 / 0.2e1;
t403 = t503 / 0.2e1;
t397 = t313 * t413;
t396 = t316 * t413;
t395 = t246 * t443;
t394 = qJD(2) * t472;
t393 = t313 * t301;
t391 = t317 * t418;
t280 = t314 * t301;
t279 = t314 * t414;
t390 = t313 * t436;
t389 = t313 * t300;
t387 = t317 * t415;
t382 = -t485 / 0.2e1;
t381 = -t482 / 0.2e1;
t380 = t480 / 0.2e1;
t379 = -t472 / 0.2e1;
t375 = -t466 / 0.2e1;
t373 = t461 / 0.2e1;
t371 = t128 / 0.2e1 + t120 / 0.2e1;
t370 = t306 / 0.2e1 + t307 / 0.2e1;
t368 = t512 + t513;
t366 = qJD(2) * (t309 + t311);
t365 = t313 * t404;
t364 = qJD(5) + t443;
t360 = t317 * t389;
t358 = t317 * t378;
t320 = (t129 * t510 + t120 * t507 + t203 / 0.2e1) * t206 + t158 * t518 + t130 * t517 - t205 * t204 / 0.2e1;
t322 = -t177 * t245 / 0.2e1 + t178 * t514 + t317 * t290 * t379;
t2 = t320 + t322;
t9 = t120 * t126 + t129 * t130 + t203 * t204;
t356 = qJD(1) * t2 + qJD(2) * t9;
t14 = -t129 * t526 - t204 * t410;
t3 = -t371 * t159 + (t515 + t359) * pkin(5);
t355 = -qJD(1) * t3 + qJD(2) * t14;
t334 = t290 * t376 + t382;
t5 = t371 * t244 + (t518 + t334) * pkin(5);
t93 = t290 * t504;
t354 = -qJD(2) * t5 + qJD(3) * t93;
t45 = -t120 * t467 + t129 * t461;
t48 = (t378 + t344) * t317;
t352 = -qJD(1) * t48 - qJD(2) * t45;
t155 = t244 * t313 + t245 * t316;
t199 = (t290 + t505) * t316;
t38 = t382 + (-t471 / 0.2e1 + t244 / 0.2e1) * t314 + (t475 / 0.2e1 + (0.1e1 - t368) * pkin(5)) * t317 + t412;
t350 = -qJD(2) * t38 + qJD(3) * t199;
t218 = t310 * pkin(5) - t475;
t343 = t204 * t510 + t380;
t42 = (t375 + (t505 + t290 / 0.2e1) * t317) * t316 + t343 + t411;
t349 = -qJD(2) * t42 + qJD(3) * t218;
t348 = -t420 - t437;
t347 = t289 / 0.2e1 - t402 / 0.2e1;
t346 = t496 / 0.2e1 - t305 / 0.2e1;
t345 = -t490 / 0.2e1 + t489 / 0.2e1;
t342 = t319 * t509 - t496 / 0.2e1;
t50 = (t256 / 0.2e1 + t346) * t472;
t341 = -t246 * t256 * qJD(2) + t50 * qJD(1);
t194 = t364 * t467;
t137 = (t223 / 0.2e1 + t342) * t313;
t340 = -qJ(4) * t300 - qJD(2) * t137;
t329 = t342 * t316;
t138 = t200 / 0.2e1 + t329;
t339 = qJ(4) * t299 - qJD(2) * t138;
t220 = t368 * t317;
t338 = qJD(2) * t220 + t389;
t333 = -qJD(3) * t205 + t317 * t394;
t157 = t314 * t394 + t429;
t332 = t311 * t313 * t441 - qJD(3) * t220;
t237 = t272 * t311;
t331 = -qJD(2) * t237 + 0.2e1 * t360;
t321 = (-t481 / 0.2e1 - t120 / 0.2e1) * t316 + (-t129 / 0.2e1 + t479 / 0.2e1) * t313;
t21 = (pkin(8) / 0.2e1 + pkin(4) / 0.2e1 + t405) * t314 + t321;
t46 = -t345 + t347;
t328 = -qJD(1) * t46 + qJD(2) * t21 - qJD(3) * t155;
t24 = (t380 - t130 / 0.2e1) * t313 + (t381 + t403 - t126 / 0.2e1) * t316 + t370;
t326 = t401 / 0.2e1 + t367 / 0.2e1;
t92 = t206 * t369 + t326;
t327 = qJD(1) * t92 + qJD(2) * t24 + t421;
t323 = qJD(3) * t357 + t439;
t303 = qJD(4) * t316;
t302 = qJD(4) * t313;
t296 = pkin(8) * t301;
t291 = t301 / 0.2e1;
t284 = t316 * t301;
t283 = t314 * t441;
t281 = t316 * t419;
t278 = t313 * t443;
t276 = t313 * t419;
t252 = 0.1e1 / 0.2e1 + t369;
t232 = -t283 - t436;
t231 = -t278 - t438;
t224 = t279 + t413 / 0.2e1;
t217 = t337 * pkin(5);
t214 = t348 * t316;
t213 = t316 * t420 - t393;
t212 = t348 * t313;
t211 = t313 * t420 + t284;
t202 = t220 * qJD(5);
t196 = t364 * t461;
t195 = t233 * t314;
t193 = t337 * t314;
t176 = (t315 * t414 + t318 * t417) * t312;
t175 = (-t301 * t318 + t314 * t442) * t312;
t103 = -t240 + t192 + t329;
t102 = t313 * t342 + t191 + t241;
t91 = t326 + (t308 / 0.2e1 + t512) * t206;
t84 = t159 * t506 + t205 * t376 + t316 * t358;
t83 = t158 * t506 + t205 * t374 + t313 * t358;
t70 = t82 * qJD(2);
t68 = t81 * qJD(2);
t61 = t325 - t335;
t60 = t324 + t336;
t54 = t59 * qJD(2);
t52 = t58 * qJD(2);
t51 = t256 * t379 + t346 * t472;
t49 = t158 * t376 + t159 * t373 + t358;
t47 = t345 + t347;
t43 = t290 * t374 + (t375 - t410) * t316 - t343 + t411;
t39 = t308 * t404 + t310 * t403 + t313 * t375 - t334 + t381 + t412 + t503;
t37 = qJD(2) * t84 - t205 * t300 - t206 * t438;
t36 = qJD(2) * t83 - t205 * t299 + t206 * t436;
t27 = qJD(2) * t61 + t206 * t300 + t433;
t26 = qJD(2) * t60 - qJD(5) * t158 - t206 * t299;
t23 = pkin(5) * t373 + t130 * t510 + t126 * t507 + (t244 * t508 + t245 * t510) * t314 + t370;
t22 = -pkin(5) * t465 / 0.2e1 + t321 + t519 * t509;
t20 = -qJD(3) * t82 - qJD(5) * t59;
t19 = -qJD(3) * t81 - qJD(5) * t58;
t17 = t264 + t520;
t12 = t206 * t504;
t11 = (-t178 * t314 - t311 * t400) * qJD(2) + t84 * qJD(3) + t60 * qJD(5);
t10 = (t177 * t314 + t311 * t399) * qJD(2) + t83 * qJD(3) + t61 * qJD(5);
t8 = t265 - t520;
t6 = pkin(5) * t518 + t204 * t405 + t290 * t365 + t514 * t526;
t4 = pkin(5) * t515 + t206 * t365 + t526 * t159 / 0.2e1;
t1 = t320 - t322;
t18 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t89 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t29 + qJD(3) * t28; 0, 0, -t312 * t442, -t394, 0, 0, 0, 0, 0, -t176, t175, t366 * t472, t176, -t175, -t447 + t51 * qJD(3) + (t246 * t442 + (pkin(8) * t366 + t416) * t318) * t312, 0, 0, 0, 0, 0, t10, t11, t10, t11, t34 * qJD(3) + (t177 * t313 - t178 * t316) * t414, t476 + (t120 * t177 + t129 * t178 + t204 * t398) * qJD(2) + t1 * qJD(3) - t34 * qJD(4) + t4 * qJD(5) + t49 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, -t157, -t333, 0, t157, t333, t51 * qJD(2) + (-pkin(3) * t206 - qJ(4) * t205) * qJD(3) + t206 * qJD(4), 0, 0, 0, 0, 0, t36, t37, t36, t37, -t271 * t429 + t457, t477 + t1 * qJD(2) + (t155 * t206 - t205 * t290) * qJD(3) + t91 * qJD(4) + t12 * qJD(5) + t47 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t157, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t91 - t457; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t27, t26, t27, t26, 0, pkin(5) * t433 + qJD(2) * t4 + qJD(3) * t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t49 + qJD(3) * t47; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t50 + t447, 0, 0, 0, 0, 0, t19, t20, t19, t20, t33 * qJD(3), qJD(3) * t2 - qJD(4) * t33 - qJD(5) * t3 - qJD(6) * t48 - t476; 0, 0, 0, 0, t280, t273 * qJD(3), 0, 0, 0, -pkin(2) * t417, -pkin(2) * t301, 0, qJD(3) * t161 - t317 * t416, -qJD(3) * t160 + t419, (qJD(3) * t256 - t416) * t246, -t280 * t308 + t311 * t390, -qJD(5) * t237 - 0.2e1 * t314 * t360, -qJD(3) * t235 - t314 * t396, -qJD(3) * t238 + t314 * t397, t280, qJD(3) * t40 + qJD(5) * t99 + t276, -qJD(3) * t41 - qJD(5) * t98 + t281, qJD(3) * t25 + qJD(5) * t63 + t314 * t391 + t276, -qJD(3) * t30 - qJD(5) * t67 + t314 * t387 + t281, -qJD(3) * t13 + qJD(4) * t197 + qJD(5) * t15 + qJD(6) * t236, qJD(3) * t9 + qJD(4) * t44 + qJD(5) * t14 - qJD(6) * t45; 0, 0, 0, 0, t279, t422, t301, -t417, 0, -t296 - t409, t406 - t408, t323, t296 + t431, -t406 - t432, pkin(8) * t323 - t341, -t202 + (-t308 * t414 + t389) * t314, -t314 * t330 + 0.2e1 * t317 * t390, t284 - t428, -t393 - t426, t224, t456 + (-t316 * t353 - t469) * qJD(3) + t102 * qJD(5) + t499, -t257 * t300 + t103 * qJD(5) + (qJD(3) * t353 - t439) * t313 + t524, t478 + (-t290 * t465 + t479 + t487) * qJD(3) + t39 * qJD(5) - t314 * t415 + t499, (-t481 + t486) * qJD(3) + t43 * qJD(5) + (-t439 + (qJD(6) + t421) * t314) * t313 + t523, ((-t126 + t482) * t316 + (-t130 - t480) * t313) * qJD(3) + t8 * qJD(5) + t521, (t126 * t245 + t130 * t244 + t203 * t290) * qJD(3) + t23 * qJD(4) + t6 * qJD(5) + t22 * qJD(6) + t356; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t301, -t279, t420, t296 - t395, 0, 0, 0, 0, 0, t211, t213, t211, t213, t430, qJD(3) * t23 + qJD(5) * t17 - t522; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t332, t331, -t196, t194, t291, qJD(3) * t102 - qJD(5) * t153 + t445 - t453, qJD(3) * t103 + qJD(5) * t152 - t446 - t452, qJD(3) * t39 - t434 + t451 - t453, qJD(3) * t43 + qJD(5) * t128 - t450 - t452, pkin(5) * t396 + qJD(3) * t8 + t491, -pkin(5) * t434 + qJD(3) * t6 + qJD(4) * t17 + t355; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t193, t195, t427, qJD(3) * t22 + t352; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t50 * qJD(2), 0, 0, 0, 0, 0, t68, t70, t68, t70, -t458, -qJD(2) * t2 + qJD(4) * t92 - qJD(6) * t46 - t477; 0, 0, 0, 0, -t279, -t422, 0, 0, 0, t409, t408, 0, -t431, t432, t341, t279 * t308 - t202, 0.2e1 * t316 * t194, -t313 * t437 + t428, -t314 * t436 + t426, -t224, qJD(5) * t137 + t449 - t456, qJD(5) * t138 - t524, -qJD(5) * t38 + t449 - t478, -qJD(5) * t42 - t523, -qJD(5) * t7 - t521, qJD(4) * t24 - qJD(5) * t5 + qJD(6) * t21 - t356; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), qJ(4) * qJD(4), -t390, t272 * qJD(5), 0, 0, 0, qJ(4) * t436 + t302, -qJ(4) * t438 + t303, qJD(5) * t199 + t302, qJD(5) * t218 + t303, t271 * qJD(6), qJD(4) * t290 + qJD(5) * t93 - qJD(6) * t155; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t440, 0, 0, 0, 0, 0, t299, t300, t299, t300, 0, qJD(6) * t252 + t327; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t338, t330, t231, t232, -t414 / 0.2e1, -t313 * t435 - t340, -t316 * t435 - t339, t350 - t425, -qJD(5) * t245 + t349, t407 - t502, -pkin(5) * t425 + t354; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t423, qJD(4) * t252 + t328; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t92 + t458; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t279, -t420, t395, 0, 0, 0, 0, 0, t212, t214, t212, t214, -t430, -qJD(3) * t24 - qJD(5) * t16 + t522; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3), -t440, 0, 0, 0, 0, 0, -t299, -t300, -t299, -t300, 0, qJD(6) * t253 - t327; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t231, t232, t231, t232, 0, -t407 - t488; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t424; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t52, t54, t52, t54, 0, t3 * qJD(2); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t332, -t331, t195, -t193, t291, -qJD(3) * t137 - t445 + t501, -qJD(3) * t138 + t446 + t500, qJD(3) * t38 + t391 - t451 + t501, qJD(3) * t42 + t387 + t450 + t500, qJD(3) * t7 - t491, pkin(5) * t391 + qJD(3) * t5 + qJD(4) * t16 - t355; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t338, -t330, t278, t283, t414 / 0.2e1, t340, t339, -t350 - t415, -t349 + t418, t502, -pkin(5) * t415 - t354; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t278, t283, t278, t283, 0, t488; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t337, t233, 0, t217; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t48 + qJD(3) * t46; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t194, -t196, -t427, -pkin(5) * t397 - qJD(3) * t21 - t352; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t436, -t438, -t423, pkin(5) * t436 - qJD(4) * t253 - t328; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t424; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t337, -t233, 0, -t217; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t18;
