% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRRRPR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d6,theta5]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 22:59
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRRRPR9_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR9_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRPR9_inertiaJ_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 22:22:29
% EndTime: 2019-05-07 22:22:49
% DurationCPUTime: 4.27s
% Computational Cost: add. (5470->283), mult. (12245->543), div. (0->0), fcn. (14349->12), ass. (0->166)
t147 = sin(qJ(4));
t198 = t147 * pkin(3);
t129 = qJ(5) + t198;
t142 = sin(pkin(12));
t137 = t142 ^ 2;
t144 = cos(pkin(12));
t139 = t144 ^ 2;
t172 = t137 + t139;
t174 = t172 * t129;
t143 = sin(pkin(6));
t152 = cos(qJ(2));
t181 = t143 * t152;
t150 = cos(qJ(4));
t148 = sin(qJ(3));
t151 = cos(qJ(3));
t145 = cos(pkin(6));
t166 = pkin(8) * t181;
t149 = sin(qJ(2));
t200 = pkin(1) * t149;
t91 = t166 + (pkin(9) + t200) * t145;
t92 = (-pkin(2) * t152 - pkin(9) * t149 - pkin(1)) * t143;
t59 = t148 * t92 + t151 * t91;
t182 = t143 * t149;
t98 = t145 * t151 - t148 * t182;
t42 = t98 * pkin(10) + t59;
t190 = t150 * t42;
t167 = pkin(3) * t181;
t58 = -t148 * t91 + t151 * t92;
t99 = t145 * t148 + t151 * t182;
t38 = -t99 * pkin(10) - t167 + t58;
t24 = t147 * t38 + t190;
t20 = -qJ(5) * t181 + t24;
t66 = t147 * t99 - t150 * t98;
t68 = t147 * t98 + t150 * t99;
t124 = pkin(8) * t182;
t199 = pkin(1) * t152;
t90 = t124 + (-pkin(2) - t199) * t145;
t76 = -t98 * pkin(3) + t90;
t29 = t66 * pkin(4) - t68 * qJ(5) + t76;
t8 = -t142 * t20 + t144 * t29;
t9 = t142 * t29 + t144 * t20;
t214 = -t8 * t142 + t9 * t144;
t146 = sin(qJ(6));
t201 = cos(qJ(6));
t213 = -t146 * t142 + t201 * t144;
t65 = t66 ^ 2;
t203 = -pkin(10) - pkin(9);
t121 = t203 * t151;
t165 = t203 * t148;
t86 = -t147 * t121 - t150 * t165;
t212 = t86 ^ 2;
t211 = -0.2e1 * t66;
t210 = 0.2e1 * t66;
t111 = t147 * t148 - t150 * t151;
t109 = t111 ^ 2;
t209 = 0.2e1 * t111;
t130 = -t144 * pkin(5) - pkin(4);
t197 = t150 * pkin(3);
t115 = t130 - t197;
t208 = 0.2e1 * t115;
t207 = 0.2e1 * t130;
t133 = -t151 * pkin(3) - pkin(2);
t206 = 0.2e1 * t133;
t205 = 0.2e1 * t143;
t204 = 0.2e1 * t151;
t108 = t201 * t142 + t146 * t144;
t52 = -t142 * t181 + t144 * t68;
t5 = t66 * pkin(5) - t52 * pkin(11) + t8;
t50 = t142 * t68 + t144 * t181;
t6 = -t50 * pkin(11) + t9;
t3 = -t146 * t6 + t201 * t5;
t4 = t146 * t5 + t201 * t6;
t202 = -t3 * t108 + t213 * t4;
t132 = -pkin(4) - t197;
t195 = pkin(4) - t132;
t113 = t147 * t151 + t150 * t148;
t179 = t144 * t113;
t77 = t111 * pkin(4) - t113 * qJ(5) + t133;
t88 = -t150 * t121 + t147 * t165;
t39 = -t142 * t88 + t144 * t77;
t35 = t111 * pkin(5) - pkin(11) * t179 + t39;
t184 = t142 * t113;
t40 = t142 * t77 + t144 * t88;
t36 = -pkin(11) * t184 + t40;
t16 = -t146 * t36 + t201 * t35;
t17 = t146 * t35 + t201 * t36;
t194 = -t16 * t108 + t17 * t213;
t193 = t147 * t42 - t150 * t38;
t102 = (-pkin(11) - t129) * t142;
t136 = t144 * pkin(11);
t178 = t144 * t129;
t103 = t136 + t178;
t74 = t201 * t102 - t146 * t103;
t75 = t146 * t102 + t201 * t103;
t192 = -t74 * t108 + t213 * t75;
t116 = (-pkin(11) - qJ(5)) * t142;
t180 = t144 * qJ(5);
t117 = t136 + t180;
t82 = t201 * t116 - t146 * t117;
t83 = t146 * t116 + t201 * t117;
t191 = -t82 * t108 + t213 * t83;
t60 = t142 * t66;
t21 = pkin(4) * t181 + t193;
t189 = t21 * t144;
t45 = t50 * t144;
t46 = t52 * t142;
t55 = t66 * t111;
t188 = t86 * t144;
t187 = t98 * t151;
t186 = t99 * t148;
t138 = t143 ^ 2;
t185 = t138 * t152;
t183 = t142 * t144;
t177 = t145 * t149;
t175 = t115 + t130;
t173 = t172 * qJ(5);
t140 = t148 ^ 2;
t141 = t151 ^ 2;
t171 = t140 + t141;
t170 = -0.2e1 * t113 * t111;
t169 = -0.2e1 * t181;
t168 = 0.2e1 * t181;
t164 = t148 * t181;
t163 = t151 * t181;
t159 = -pkin(4) * t113 - qJ(5) * t111;
t22 = -t39 * t142 + t40 * t144;
t158 = t46 - t45;
t157 = -t58 * t148 + t59 * t151;
t156 = -t111 * t129 + t113 * t132;
t127 = t138 * t152 ^ 2;
t123 = 0.2e1 * t183;
t110 = t113 ^ 2;
t105 = t108 ^ 2;
t104 = t213 ^ 2;
t101 = pkin(1) * t177 + t166;
t100 = t145 * t199 - t124;
t97 = t144 * t111;
t96 = t142 * t111;
t93 = t142 * t179;
t85 = t108 * t111;
t84 = t213 * t111;
t81 = 0.2e1 * t108 * t213;
t80 = t86 * t142;
t78 = (-t137 + t139) * t113;
t71 = t213 * t113;
t69 = t108 * t113;
t62 = pkin(5) * t184 + t86;
t61 = t144 * t66;
t54 = t71 * t108;
t53 = t69 * t213;
t49 = t108 * t66;
t48 = t213 * t66;
t44 = t62 * t108;
t43 = t62 * t213;
t34 = -t108 * t69 + t213 * t71;
t33 = -t146 * t50 + t201 * t52;
t31 = t146 * t52 + t201 * t50;
t30 = -t142 * t50 + t52 * t144;
t26 = t33 * t108;
t25 = t31 * t213;
t19 = t21 * t142;
t15 = t50 * pkin(5) + t21;
t12 = t15 * t108;
t11 = t15 * t213;
t10 = -t108 * t31 + t213 * t33;
t1 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t138 * t149 ^ 2, 0.2e1 * t149 * t185, t177 * t205, t127, t145 * t168, t145 ^ 2, 0.2e1 * pkin(1) * t185 + 0.2e1 * t100 * t145, -0.2e1 * t101 * t145 - 0.2e1 * t138 * t200 (-t100 * t149 + t101 * t152) * t205, t138 * pkin(1) ^ 2 + t100 ^ 2 + t101 ^ 2, t99 ^ 2, 0.2e1 * t99 * t98, t99 * t169, t98 ^ 2, t98 * t169, t127, -0.2e1 * t58 * t181 - 0.2e1 * t90 * t98, 0.2e1 * t59 * t181 + 0.2e1 * t90 * t99, -0.2e1 * t58 * t99 + 0.2e1 * t59 * t98, t58 ^ 2 + t59 ^ 2 + t90 ^ 2, t68 ^ 2, t68 * t211, t68 * t169, t65, t66 * t168, t127, 0.2e1 * t181 * t193 + 0.2e1 * t76 * t66, 0.2e1 * t181 * t24 + 0.2e1 * t76 * t68, 0.2e1 * t193 * t68 - 0.2e1 * t24 * t66, t193 ^ 2 + t24 ^ 2 + t76 ^ 2, t52 ^ 2, -0.2e1 * t52 * t50, t52 * t210, t50 ^ 2, t50 * t211, t65, 0.2e1 * t21 * t50 + 0.2e1 * t8 * t66, 0.2e1 * t21 * t52 - 0.2e1 * t9 * t66, -0.2e1 * t9 * t50 - 0.2e1 * t8 * t52, t21 ^ 2 + t8 ^ 2 + t9 ^ 2, t33 ^ 2, -0.2e1 * t33 * t31, t33 * t210, t31 ^ 2, t31 * t211, t65, 0.2e1 * t15 * t31 + 0.2e1 * t3 * t66, 0.2e1 * t15 * t33 - 0.2e1 * t4 * t66, -0.2e1 * t3 * t33 - 0.2e1 * t4 * t31, t15 ^ 2 + t3 ^ 2 + t4 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t182, 0, t181, t145, t100, -t101, 0, 0, t186, t148 * t98 + t99 * t151, -t164, t187, -t163, 0, pkin(2) * t98 + pkin(9) * t164 - t90 * t151, -pkin(2) * t99 + pkin(9) * t163 + t90 * t148 (t186 + t187) * pkin(9) + t157, -t90 * pkin(2) + t157 * pkin(9), t68 * t113, -t68 * t111 - t113 * t66, -t113 * t181, t55, t111 * t181, 0, t76 * t111 + t133 * t66 + t86 * t181, t76 * t113 + t133 * t68 + t181 * t88, -t24 * t111 + t113 * t193 - t88 * t66 + t86 * t68, t76 * t133 + t193 * t86 + t24 * t88, t52 * t179 (-t46 - t45) * t113, t52 * t111 + t179 * t66, t50 * t184, -t50 * t111 - t184 * t66, t55, t8 * t111 + t184 * t21 + t39 * t66 + t86 * t50, -t9 * t111 + t179 * t21 - t40 * t66 + t86 * t52, -t39 * t52 - t40 * t50 + (-t142 * t9 - t144 * t8) * t113, t21 * t86 + t8 * t39 + t9 * t40, t33 * t71, -t71 * t31 - t33 * t69, t33 * t111 + t71 * t66, t31 * t69, -t31 * t111 - t69 * t66, t55, t3 * t111 + t15 * t69 + t16 * t66 + t62 * t31, -t4 * t111 + t15 * t71 - t17 * t66 + t62 * t33, -t16 * t33 - t17 * t31 - t3 * t71 - t4 * t69, t15 * t62 + t3 * t16 + t4 * t17; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t140, t148 * t204, 0, t141, 0, 0, pkin(2) * t204, -0.2e1 * pkin(2) * t148, 0.2e1 * t171 * pkin(9), t171 * pkin(9) ^ 2 + pkin(2) ^ 2, t110, t170, 0, t109, 0, 0, t111 * t206, t113 * t206, -0.2e1 * t88 * t111 + 0.2e1 * t86 * t113, t133 ^ 2 + t88 ^ 2 + t212, t139 * t110, -0.2e1 * t110 * t183, t179 * t209, t137 * t110, t142 * t170, t109, 0.2e1 * t39 * t111 + 0.2e1 * t184 * t86, -0.2e1 * t40 * t111 + 0.2e1 * t179 * t86, 0.2e1 * (-t142 * t40 - t144 * t39) * t113, t39 ^ 2 + t40 ^ 2 + t212, t71 ^ 2, -0.2e1 * t71 * t69, t71 * t209, t69 ^ 2, -t69 * t209, t109, 0.2e1 * t16 * t111 + 0.2e1 * t62 * t69, -0.2e1 * t17 * t111 + 0.2e1 * t62 * t71, -0.2e1 * t16 * t71 - 0.2e1 * t17 * t69, t16 ^ 2 + t17 ^ 2 + t62 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t99, 0, t98, -t181, t58, -t59, 0, 0, 0, 0, t68, 0, -t66, -t181, -t150 * t167 - t193, -t190 + (-t38 + t167) * t147 (-t147 * t66 - t150 * t68) * pkin(3) (t147 * t24 - t150 * t193) * pkin(3), t46, t30, t60, -t45, t61, 0, -t129 * t60 + t132 * t50 - t189, t132 * t52 - t178 * t66 + t19, t129 * t158 + t214, t129 * t214 + t21 * t132, t26, t10, t49, -t25, t48, 0, t115 * t31 + t74 * t66 - t11, t115 * t33 - t75 * t66 + t12, -t75 * t31 - t74 * t33 + t202, t15 * t115 + t3 * t74 + t4 * t75; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t148, 0, t151, 0, -t148 * pkin(9), -t151 * pkin(9), 0, 0, 0, 0, t113, 0, -t111, 0, -t86, -t88 (-t111 * t147 - t113 * t150) * pkin(3) (t147 * t88 - t150 * t86) * pkin(3), t93, t78, t96, -t93, t97, 0, t142 * t156 - t188, t144 * t156 + t80, t22, t129 * t22 + t86 * t132, t54, t34, t85, -t53, t84, 0, t74 * t111 + t115 * t69 - t43, -t75 * t111 + t115 * t71 + t44, -t75 * t69 - t74 * t71 + t194, t62 * t115 + t16 * t74 + t17 * t75; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t197, -0.2e1 * t198, 0 (t147 ^ 2 + t150 ^ 2) * pkin(3) ^ 2, t137, t123, 0, t139, 0, 0, -0.2e1 * t132 * t144, 0.2e1 * t132 * t142, 0.2e1 * t174, t129 ^ 2 * t172 + t132 ^ 2, t105, t81, 0, t104, 0, 0, -t213 * t208, t108 * t208, 0.2e1 * t192, t115 ^ 2 + t74 ^ 2 + t75 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t68, 0, -t66, -t181, -t193, -t24, 0, 0, t46, t30, t60, -t45, t61, 0, -pkin(4) * t50 - qJ(5) * t60 - t189, -pkin(4) * t52 - t180 * t66 + t19, qJ(5) * t158 + t214, -t21 * pkin(4) + qJ(5) * t214, t26, t10, t49, -t25, t48, 0, t130 * t31 + t82 * t66 - t11, t130 * t33 - t83 * t66 + t12, -t83 * t31 - t82 * t33 + t202, t15 * t130 + t3 * t82 + t4 * t83; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t113, 0, -t111, 0, -t86, -t88, 0, 0, t93, t78, t96, -t93, t97, 0, t142 * t159 - t188, t144 * t159 + t80, t22, -t86 * pkin(4) + qJ(5) * t22, t54, t34, t85, -t53, t84, 0, t82 * t111 + t130 * t69 - t43, -t83 * t111 + t130 * t71 + t44, -t83 * t69 - t82 * t71 + t194, t62 * t130 + t16 * t82 + t17 * t83; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t197, -t198, 0, 0, t137, t123, 0, t139, 0, 0, t195 * t144, -t195 * t142, t173 + t174, -t132 * pkin(4) + qJ(5) * t174, t105, t81, 0, t104, 0, 0, -t175 * t213, t175 * t108, t191 + t192, t115 * t130 + t74 * t82 + t75 * t83; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t137, t123, 0, t139, 0, 0, 0.2e1 * pkin(4) * t144, -0.2e1 * pkin(4) * t142, 0.2e1 * t173, qJ(5) ^ 2 * t172 + pkin(4) ^ 2, t105, t81, 0, t104, 0, 0, -t213 * t207, t108 * t207, 0.2e1 * t191, t130 ^ 2 + t82 ^ 2 + t83 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t50, t52, 0, t21, 0, 0, 0, 0, 0, 0, t31, t33, 0, t15; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t184, t179, 0, t86, 0, 0, 0, 0, 0, 0, t69, t71, 0, t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t144, t142, 0, t132, 0, 0, 0, 0, 0, 0, -t213, t108, 0, t115; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t144, t142, 0, -pkin(4), 0, 0, 0, 0, 0, 0, -t213, t108, 0, t130; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t33, 0, -t31, t66, t3, -t4, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t71, 0, -t69, t111, t16, -t17, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t108, 0, t213, 0, t74, -t75, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t108, 0, t213, 0, t82, -t83, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t1;
