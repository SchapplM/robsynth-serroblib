% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRRPRP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5,theta4]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 17:02
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRRPRP6_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP6_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPRP6_inertiaJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 08:08:00
% EndTime: 2019-05-07 08:08:10
% DurationCPUTime: 2.76s
% Computational Cost: add. (3485->227), mult. (7903->438), div. (0->0), fcn. (9160->10), ass. (0->146)
t104 = sin(pkin(11));
t106 = cos(pkin(11));
t109 = sin(qJ(3));
t112 = cos(qJ(3));
t83 = t104 * t112 + t106 * t109;
t170 = -0.2e1 * t83;
t107 = cos(pkin(6));
t105 = sin(pkin(6));
t110 = sin(qJ(2));
t138 = t105 * t110;
t73 = t107 * t112 - t109 * t138;
t74 = t107 * t109 + t112 * t138;
t47 = t104 * t74 - t106 * t73;
t46 = t47 ^ 2;
t157 = -qJ(4) - pkin(9);
t125 = t157 * t109;
t86 = t157 * t112;
t57 = -t104 * t86 - t106 * t125;
t169 = t57 ^ 2;
t81 = t104 * t109 - t106 * t112;
t79 = t81 ^ 2;
t168 = -0.2e1 * t47;
t98 = -t112 * pkin(3) - pkin(2);
t167 = 0.2e1 * t98;
t166 = 0.2e1 * t105;
t165 = 0.2e1 * t112;
t164 = t47 * pkin(5);
t163 = t81 * pkin(5);
t162 = pkin(1) * t110;
t113 = cos(qJ(2));
t161 = pkin(1) * t113;
t160 = t104 * pkin(3);
t159 = t106 * pkin(3);
t111 = cos(qJ(5));
t158 = t111 * pkin(5);
t34 = t47 * t81;
t137 = t105 * t113;
t130 = pkin(3) * t137;
t129 = pkin(8) * t137;
t63 = t129 + (pkin(9) + t162) * t107;
t64 = (-pkin(2) * t113 - pkin(9) * t110 - pkin(1)) * t105;
t40 = -t109 * t63 + t112 * t64;
t24 = -t74 * qJ(4) - t130 + t40;
t41 = t109 * t64 + t112 * t63;
t30 = t73 * qJ(4) + t41;
t156 = t104 * t30 - t106 * t24;
t9 = t104 * t24 + t106 * t30;
t108 = sin(qJ(5));
t155 = t108 * t47;
t154 = t108 * t81;
t153 = t108 * t83;
t96 = pkin(10) + t160;
t152 = t108 * t96;
t59 = t104 * t125 - t106 * t86;
t151 = t111 * t59;
t72 = t111 * t83;
t150 = t111 * t96;
t99 = t105 ^ 2;
t149 = t113 * t99;
t49 = t104 * t73 + t106 * t74;
t37 = t108 * t49 + t111 * t137;
t32 = t37 * t111;
t39 = -t108 * t137 + t111 * t49;
t33 = t39 * t108;
t148 = t39 * t111;
t42 = pkin(5) * t153 + t57;
t147 = t42 * t108;
t146 = t42 * t111;
t145 = t57 * t108;
t144 = t57 * t111;
t143 = t73 * t112;
t142 = t74 * t109;
t97 = -pkin(4) - t159;
t85 = t97 - t158;
t141 = t85 * t108;
t140 = t85 * t111;
t139 = qJ(6) + t96;
t136 = t107 * t110;
t135 = t108 * t111;
t100 = t108 ^ 2;
t102 = t111 ^ 2;
t89 = t100 + t102;
t101 = t109 ^ 2;
t103 = t112 ^ 2;
t134 = t101 + t103;
t133 = t81 * t170;
t132 = -0.2e1 * t137;
t131 = 0.2e1 * t137;
t6 = pkin(4) * t137 + t156;
t128 = t37 * t153;
t127 = t109 * t137;
t126 = t112 * t137;
t90 = pkin(8) * t138;
t62 = t90 + (-pkin(2) - t161) * t107;
t51 = -t73 * pkin(3) + t62;
t14 = t47 * pkin(4) - t49 * pkin(10) + t51;
t7 = -pkin(10) * t137 + t9;
t3 = -t108 * t7 + t111 * t14;
t52 = t81 * pkin(4) - t83 * pkin(10) + t98;
t25 = -t108 * t59 + t111 * t52;
t117 = -t39 * qJ(6) + t3;
t1 = t117 + t164;
t4 = t108 * t14 + t111 * t7;
t2 = -t37 * qJ(6) + t4;
t124 = t1 * t111 + t2 * t108;
t123 = t4 * t108 + t3 * t111;
t122 = -t81 * t96 + t83 * t97;
t116 = -qJ(6) * t72 + t25;
t18 = t116 + t163;
t21 = t151 + (-qJ(6) * t83 + t52) * t108;
t121 = t21 * t108 + t18 * t111;
t26 = t108 * t52 + t151;
t120 = t26 * t108 + t25 * t111;
t119 = -t25 * t108 + t26 * t111;
t118 = -t40 * t109 + t41 * t112;
t94 = t99 * t113 ^ 2;
t93 = 0.2e1 * t135;
t80 = t83 ^ 2;
t78 = t139 * t111;
t77 = t139 * t108;
t76 = pkin(1) * t136 + t129;
t75 = t107 * t161 - t90;
t71 = t111 * t81;
t70 = t102 * t80;
t67 = t100 * t80;
t66 = t83 * t135;
t61 = -0.2e1 * t80 * t135;
t56 = 0.2e1 * t81 * t72;
t55 = t108 * t133;
t54 = t89 * t83;
t53 = (-t100 + t102) * t83;
t45 = t111 * t47;
t36 = t39 ^ 2;
t35 = t37 ^ 2;
t31 = t108 * t37;
t27 = t83 * t148;
t20 = 0.2e1 * t39 * t47;
t19 = t37 * t168;
t17 = -0.2e1 * t39 * t37;
t16 = -t31 + t148;
t15 = -t31 - t148;
t12 = t39 * t81 + t47 * t72;
t11 = -t47 * t153 - t37 * t81;
t10 = (-t33 - t32) * t83;
t5 = t37 * pkin(5) + t6;
t8 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t99 * t110 ^ 2, 0.2e1 * t110 * t149, t136 * t166, t94, t107 * t131, t107 ^ 2, 0.2e1 * pkin(1) * t149 + 0.2e1 * t75 * t107, -0.2e1 * t76 * t107 - 0.2e1 * t99 * t162 (-t110 * t75 + t113 * t76) * t166, t99 * pkin(1) ^ 2 + t75 ^ 2 + t76 ^ 2, t74 ^ 2, 0.2e1 * t74 * t73, t74 * t132, t73 ^ 2, t73 * t132, t94, -0.2e1 * t40 * t137 - 0.2e1 * t62 * t73, 0.2e1 * t41 * t137 + 0.2e1 * t62 * t74, -0.2e1 * t40 * t74 + 0.2e1 * t41 * t73, t40 ^ 2 + t41 ^ 2 + t62 ^ 2, t49 ^ 2, t49 * t168, t49 * t132, t46, t47 * t131, t94, 0.2e1 * t137 * t156 + 0.2e1 * t51 * t47, 0.2e1 * t9 * t137 + 0.2e1 * t51 * t49, 0.2e1 * t156 * t49 - 0.2e1 * t9 * t47, t156 ^ 2 + t51 ^ 2 + t9 ^ 2, t36, t17, t20, t35, t19, t46, 0.2e1 * t3 * t47 + 0.2e1 * t6 * t37, 0.2e1 * t6 * t39 - 0.2e1 * t4 * t47, -0.2e1 * t3 * t39 - 0.2e1 * t4 * t37, t3 ^ 2 + t4 ^ 2 + t6 ^ 2, t36, t17, t20, t35, t19, t46, 0.2e1 * t1 * t47 + 0.2e1 * t5 * t37, -0.2e1 * t2 * t47 + 0.2e1 * t5 * t39, -0.2e1 * t1 * t39 - 0.2e1 * t2 * t37, t1 ^ 2 + t2 ^ 2 + t5 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t138, 0, t137, t107, t75, -t76, 0, 0, t142, t109 * t73 + t74 * t112, -t127, t143, -t126, 0, pkin(2) * t73 + pkin(9) * t127 - t62 * t112, -pkin(2) * t74 + pkin(9) * t126 + t62 * t109 (t142 + t143) * pkin(9) + t118, -t62 * pkin(2) + t118 * pkin(9), t49 * t83, -t83 * t47 - t49 * t81, -t83 * t137, t34, t81 * t137, 0, t57 * t137 + t98 * t47 + t51 * t81, t59 * t137 + t98 * t49 + t51 * t83, t156 * t83 - t59 * t47 + t57 * t49 - t9 * t81, t156 * t57 + t51 * t98 + t9 * t59, t27, t10, t12, t128, t11, t34, t6 * t153 + t25 * t47 + t3 * t81 + t57 * t37, -t26 * t47 + t57 * t39 - t4 * t81 + t6 * t72, -t123 * t83 - t25 * t39 - t26 * t37, t3 * t25 + t4 * t26 + t6 * t57, t27, t10, t12, t128, t11, t34, t1 * t81 + t5 * t153 + t18 * t47 + t42 * t37, -t2 * t81 - t21 * t47 + t42 * t39 + t5 * t72, -t124 * t83 - t18 * t39 - t21 * t37, t1 * t18 + t2 * t21 + t5 * t42; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t101, t109 * t165, 0, t103, 0, 0, pkin(2) * t165, -0.2e1 * pkin(2) * t109, 0.2e1 * t134 * pkin(9), t134 * pkin(9) ^ 2 + pkin(2) ^ 2, t80, t133, 0, t79, 0, 0, t81 * t167, t83 * t167, 0.2e1 * t57 * t83 - 0.2e1 * t59 * t81, t59 ^ 2 + t98 ^ 2 + t169, t70, t61, t56, t67, t55, t79, 0.2e1 * t83 * t145 + 0.2e1 * t25 * t81, 0.2e1 * t83 * t144 - 0.2e1 * t26 * t81, t120 * t170, t25 ^ 2 + t26 ^ 2 + t169, t70, t61, t56, t67, t55, t79, 0.2e1 * t147 * t83 + 0.2e1 * t18 * t81, 0.2e1 * t146 * t83 - 0.2e1 * t21 * t81, t121 * t170, t18 ^ 2 + t21 ^ 2 + t42 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t74, 0, t73, -t137, t40, -t41, 0, 0, 0, 0, t49, 0, -t47, -t137, -t106 * t130 - t156, t104 * t130 - t9 (-t104 * t47 - t106 * t49) * pkin(3) (t104 * t9 - t106 * t156) * pkin(3), t33, t16, t155, -t32, t45, 0, -t6 * t111 - t47 * t152 + t97 * t37, t6 * t108 - t47 * t150 + t97 * t39 (-t37 * t96 + t4) * t111 + (t39 * t96 - t3) * t108, t6 * t97 + (-t3 * t108 + t4 * t111) * t96, t33, t16, t155, -t32, t45, 0, -t5 * t111 + t85 * t37 - t77 * t47, t5 * t108 + t85 * t39 - t78 * t47, -t1 * t108 + t2 * t111 - t78 * t37 + t77 * t39, -t1 * t77 + t2 * t78 + t5 * t85; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t109, 0, t112, 0, -t109 * pkin(9), -t112 * pkin(9), 0, 0, 0, 0, t83, 0, -t81, 0, -t57, -t59 (-t104 * t81 - t106 * t83) * pkin(3) (t104 * t59 - t106 * t57) * pkin(3), t66, t53, t154, -t66, t71, 0, t122 * t108 - t144, t122 * t111 + t145, t119, t119 * t96 + t57 * t97, t66, t53, t154, -t66, t71, 0, t141 * t83 - t77 * t81 - t146, t140 * t83 - t78 * t81 + t147 (t77 * t83 + t21) * t111 + (-t78 * t83 - t18) * t108, -t18 * t77 + t21 * t78 + t42 * t85; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t159, -0.2e1 * t160, 0 (t104 ^ 2 + t106 ^ 2) * pkin(3) ^ 2, t100, t93, 0, t102, 0, 0, -0.2e1 * t97 * t111, 0.2e1 * t97 * t108, 0.2e1 * t89 * t96, t89 * t96 ^ 2 + t97 ^ 2, t100, t93, 0, t102, 0, 0, -0.2e1 * t140, 0.2e1 * t141, 0.2e1 * t77 * t108 + 0.2e1 * t78 * t111, t77 ^ 2 + t78 ^ 2 + t85 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t47, t49, 0, t51, 0, 0, 0, 0, 0, 0, t45, -t155, t15, t123, 0, 0, 0, 0, 0, 0, t45, -t155, t15, t124; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t81, t83, 0, t98, 0, 0, 0, 0, 0, 0, t71, -t154, -t54, t120, 0, 0, 0, 0, 0, 0, t71, -t154, -t54, t121; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t78 * t108 - t77 * t111; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t89, 0, 0, 0, 0, 0, 0, 0, 0, 0, t89; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t39, 0, -t37, t47, t3, -t4, 0, 0, 0, 0, t39, 0, -t37, t47, t117 + 0.2e1 * t164, -t2, -t39 * pkin(5), t1 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t72, 0, -t153, t81, t25, -t26, 0, 0, 0, 0, t72, 0, -t153, t81, t116 + 0.2e1 * t163, -t21, -pkin(5) * t72, t18 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t108, 0, t111, 0, -t152, -t150, 0, 0, 0, 0, t108, 0, t111, 0, -t77, -t78, -t108 * pkin(5), -t77 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t111, -t108, 0, 0, 0, 0, 0, 0, 0, 0, t111, -t108, 0, t158; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * pkin(5), 0, 0, pkin(5) ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t37, t39, 0, t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t153, t72, 0, t42; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t111, t108, 0, t85; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1;];
MM_reg  = t8;
