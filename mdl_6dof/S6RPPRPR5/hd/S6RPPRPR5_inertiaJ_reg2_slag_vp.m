% Calculate inertial parameters regressor of joint inertia matrix for
% S6RPPRPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d6,theta5]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 01:49
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RPPRPR5_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRPR5_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPPRPR5_inertiaJ_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 14:21:54
% EndTime: 2019-05-05 14:21:58
% DurationCPUTime: 1.15s
% Computational Cost: add. (564->105), mult. (1003->182), div. (0->0), fcn. (1073->6), ass. (0->69)
t45 = sin(qJ(4));
t39 = sin(pkin(9));
t40 = cos(pkin(9));
t44 = sin(qJ(6));
t75 = cos(qJ(6));
t50 = -t44 * t39 + t75 * t40;
t84 = t50 * t45;
t46 = cos(qJ(4));
t13 = t50 * t46;
t83 = t50 ^ 2;
t19 = t75 * t39 + t44 * t40;
t82 = t19 ^ 2;
t42 = pkin(1) + qJ(3);
t81 = (t42 ^ 2);
t32 = -t40 * pkin(5) - pkin(4);
t80 = 0.2e1 * t32;
t79 = 0.2e1 * t40;
t78 = 0.2e1 * t45;
t77 = 0.2e1 * t46;
t76 = t46 * pkin(4);
t74 = t50 * t13;
t62 = t46 * t19;
t72 = t19 * t62;
t71 = t19 * t45;
t34 = t39 ^ 2;
t70 = t34 * t46;
t38 = t46 ^ 2;
t41 = -pkin(7) + qJ(2);
t69 = t38 * t41;
t68 = t39 * t40;
t67 = t39 * t41;
t66 = t39 * t46;
t65 = t40 * t45;
t30 = t40 * t46;
t63 = t45 * t41;
t61 = t46 * t41;
t60 = t46 * t45;
t59 = pkin(8) + qJ(5);
t22 = t45 * pkin(4) - t46 * qJ(5) + t42;
t8 = t39 * t22 + t40 * t63;
t35 = t40 ^ 2;
t58 = t34 + t35;
t37 = t45 ^ 2;
t27 = t37 + t38;
t57 = -0.2e1 * t60;
t56 = t39 * t30;
t54 = t58 * qJ(5);
t15 = t40 * t22;
t7 = -t39 * t63 + t15;
t53 = -t8 * t39 - t7 * t40;
t52 = -t7 * t39 + t8 * t40;
t51 = -qJ(5) * t45 - t76;
t49 = (qJ(2) ^ 2);
t47 = 2 * qJ(2);
t36 = t41 ^ 2;
t33 = t38 * t36;
t29 = t35 * t46;
t28 = t39 * t45;
t24 = t59 * t40;
t23 = t59 * t39;
t21 = t27 * t41;
t16 = (pkin(5) * t39 - t41) * t46;
t6 = -t44 * t23 + t75 * t24;
t5 = -t75 * t23 - t44 * t24;
t4 = -pkin(8) * t66 + t8;
t3 = -pkin(8) * t30 + t15 + (pkin(5) - t67) * t45;
t2 = t44 * t3 + t75 * t4;
t1 = t75 * t3 - t44 * t4;
t9 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, -2 * pkin(1), t47, pkin(1) ^ 2 + t49, 1, 0, 0, 0, 0, 0, 0, t47, 0.2e1 * t42, t49 + t81, t38, t57, 0, t37, 0, 0, t42 * t78, t42 * t77, -0.2e1 * t21, t37 * t36 + t33 + t81, t35 * t38, -0.2e1 * t38 * t68, t60 * t79, t34 * t38, t39 * t57, t37, -0.2e1 * t38 * t67 + 0.2e1 * t7 * t45, -0.2e1 * t40 * t69 - 0.2e1 * t8 * t45, t53 * t77, t7 ^ 2 + t8 ^ 2 + t33, t13 ^ 2, -0.2e1 * t13 * t62, t13 * t78, t62 ^ 2, -t62 * t78, t37, 0.2e1 * t1 * t45 + 0.2e1 * t16 * t62, 0.2e1 * t16 * t13 - 0.2e1 * t2 * t45, -0.2e1 * t1 * t13 - 0.2e1 * t2 * t62, t1 ^ 2 + t16 ^ 2 + t2 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, -pkin(1), 0, 0, 0, 0, 0, 0, 0, 0, -1, -t42, 0, 0, 0, 0, 0, 0, -t45, -t46, 0, -t42, 0, 0, 0, 0, 0, 0, -t65, t28, t29 + t70, t53, 0, 0, 0, 0, 0, 0, -t84, t71, t72 + t74, -t1 * t50 - t2 * t19; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t58, 0, 0, 0, 0, 0, 0, 0, 0, 0, t82 + t83; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, qJ(2), 0, 0, 0, 0, 0, 0, 0, 0, -t27, t21, 0, 0, 0, 0, 0, 0, -t27 * t39, -t27 * t40, 0, t45 * t52 + t69, 0, 0, 0, 0, 0, 0, -t45 * t71 - t46 * t62, -t46 * t13 - t45 * t84, t13 * t71 - t62 * t84, -t1 * t71 - t16 * t46 + t2 * t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t19 * t84 + t50 * t71; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t27, 0, 0, 0, 0, 0, 0, 0, 0, 0, t37 * t58 + t38, 0, 0, 0, 0, 0, 0, 0, 0, 0, t71 ^ 2 + t84 ^ 2 + t38; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t46, 0, -t45, 0, t61, -t63, 0, 0, t56, t29 - t70, t28, -t56, t65, 0, t39 * t51 + t40 * t61, -t39 * t61 + t40 * t51, t52, pkin(4) * t61 + qJ(5) * t52, t13 * t19, -t72 + t74, t71, -t62 * t50, t84, 0, -t16 * t50 + t32 * t62 + t5 * t45, t32 * t13 + t16 * t19 - t6 * t45, -t1 * t19 - t5 * t13 + t2 * t50 - t6 * t62, t1 * t5 + t16 * t32 + t2 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t19 * t6 - t5 * t50; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t46, -t45, 0, 0, 0, 0, 0, 0, 0, 0, t30, -t66, t58 * t45, t45 * t54 + t76, 0, 0, 0, 0, 0, 0, t13, -t62, t19 * t71 + t50 * t84, -t46 * t32 - t5 * t71 + t6 * t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t34, 0.2e1 * t68, 0, t35, 0, 0, pkin(4) * t79, -0.2e1 * pkin(4) * t39, 0.2e1 * t54, qJ(5) ^ 2 * t58 + pkin(4) ^ 2, t82, 0.2e1 * t19 * t50, 0, t83, 0, 0, -t50 * t80, t19 * t80, -0.2e1 * t5 * t19 + 0.2e1 * t50 * t6, t32 ^ 2 + t5 ^ 2 + t6 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t66, t30, 0, -t61, 0, 0, 0, 0, 0, 0, t62, t13, 0, t16; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t46, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t46; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t40, t39, 0, -pkin(4), 0, 0, 0, 0, 0, 0, -t50, t19, 0, t32; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t13, 0, -t62, t45, t1, -t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t50, t19, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t71, -t84, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t19, 0, t50, 0, t5, -t6, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t9;
