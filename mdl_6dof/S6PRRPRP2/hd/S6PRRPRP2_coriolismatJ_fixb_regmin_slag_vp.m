% Calculate minimal parameter regressor of coriolis matrix for
% S6PRRPRP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d5,theta1,theta4]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x26]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2021-01-16 02:57
% Revision: 24b2e7d74a0c1a3b64fa2f8f5ad758691ad61af3 (2021-01-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRPRP2_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRP2_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRP2_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRPRP2_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2021-01-16 02:54:54
% EndTime: 2021-01-16 02:55:23
% DurationCPUTime: 10.71s
% Computational Cost: add. (8191->538), mult. (18455->754), div. (0->0), fcn. (21115->10), ass. (0->421)
t377 = cos(qJ(5));
t378 = cos(qJ(3));
t611 = cos(pkin(11));
t473 = t611 * t378;
t372 = sin(pkin(11));
t375 = sin(qJ(3));
t574 = t372 * t375;
t407 = t473 - t574;
t337 = t407 ^ 2;
t474 = t611 * t375;
t573 = t372 * t378;
t341 = t474 + t573;
t338 = t341 ^ 2;
t510 = -t338 - t337;
t656 = t510 * t377;
t661 = qJD(2) * t656;
t374 = sin(qJ(5));
t657 = t510 * t374;
t660 = qJD(2) * t657;
t659 = qJD(4) * t656;
t658 = qJD(4) * t657;
t334 = t341 * qJ(6);
t617 = t375 * pkin(3);
t251 = pkin(4) * t341 - pkin(9) * t407 + t617;
t230 = t374 * t251;
t615 = qJ(4) + pkin(8);
t354 = t615 * t375;
t356 = t615 * t378;
t282 = t611 * t354 + t356 * t372;
t653 = t282 * t377;
t558 = t230 / 0.2e1 - t653 / 0.2e1;
t655 = -t334 - t558;
t373 = sin(pkin(6));
t376 = sin(qJ(2));
t572 = t373 * t376;
t612 = cos(pkin(6));
t329 = t375 * t572 - t612 * t378;
t330 = t612 * t375 + t378 * t572;
t221 = t611 * t329 + t330 * t372;
t248 = t377 * t407;
t481 = t248 / 0.2e1;
t654 = t221 * t481;
t651 = -t372 * t354 + t611 * t356;
t586 = t651 * t374;
t585 = t651 * t377;
t652 = 0.2e1 * t374;
t244 = t374 * t407;
t522 = t244 * qJD(2);
t527 = qJD(5) * t374;
t650 = -t522 + t527;
t366 = -t611 * pkin(3) - pkin(4);
t634 = t221 / 0.2e1;
t475 = t634 - t221 / 0.2e1;
t109 = t475 * t377;
t524 = t109 * qJD(1);
t536 = qJD(3) * t377;
t576 = t366 * t341;
t365 = pkin(3) * t372 + pkin(9);
t577 = t365 * t407;
t388 = (-t577 / 0.2e1 - t576 / 0.2e1) * t374 + t653 / 0.2e1;
t64 = t388 + t558;
t649 = -qJD(2) * t64 - t366 * t536 - t524;
t567 = t377 * qJ(6);
t619 = pkin(5) * t374;
t355 = t567 - t619;
t570 = t374 * qJ(6);
t616 = t377 * pkin(5);
t455 = t570 + t616;
t241 = t455 * t341;
t456 = -t241 / 0.2e1 + t577 / 0.2e1;
t335 = -t455 + t366;
t628 = t341 / 0.2e1;
t487 = t335 * t628;
t246 = t374 * t341;
t249 = t377 * t341;
t461 = pkin(5) * t246 - qJ(6) * t249;
t158 = t282 + t461;
t636 = -t158 / 0.2e1;
t383 = (t355 * t628 + t636) * t377 + (t487 + t456) * t374;
t25 = t383 + t655;
t578 = t355 * t374;
t259 = t335 * t377 - t578;
t648 = -qJD(2) * t25 + qJD(3) * t259 + t524;
t107 = t475 * t374;
t525 = t107 * qJD(1);
t526 = qJD(5) * t377;
t459 = -t365 * t526 + t525;
t408 = -t372 * t329 + t611 * t330;
t379 = cos(qJ(2));
t571 = t373 * t379;
t185 = t374 * t408 + t377 * t571;
t458 = t475 * t407;
t629 = -t341 / 0.2e1;
t386 = (t408 * t628 + t458) * t374 + t185 * t629;
t286 = t341 * t571;
t581 = t286 * t377;
t382 = t581 / 0.2e1 + t386;
t647 = qJD(1) * t382;
t479 = -t249 / 0.2e1;
t186 = -t374 * t571 + t377 * t408;
t596 = t186 * t407;
t406 = -t596 / 0.2e1 + t221 * t479;
t485 = t572 / 0.2e1;
t287 = t407 * t571;
t568 = t374 * t287;
t553 = -t568 / 0.2e1 + t377 * t485;
t393 = t406 + t553;
t646 = qJD(1) * t393;
t565 = t377 * t287;
t232 = t374 * t572 + t565;
t645 = qJD(2) * (t232 * t407 + t286 * t249);
t516 = t407 * qJD(2);
t468 = qJD(5) - t516;
t644 = -qJD(2) * t382 + t107 * qJD(5);
t98 = t107 * qJD(3);
t643 = qJD(2) * t393 - t98;
t623 = t374 / 0.2e1;
t488 = t221 * t623;
t624 = -t374 / 0.2e1;
t108 = -t221 * t624 + t488;
t384 = -t581 / 0.2e1 + t386;
t642 = qJD(2) * t384 + t108 * qJD(5) - t408 * t536;
t478 = t249 / 0.2e1;
t463 = t221 * t478 + t596 / 0.2e1;
t422 = t463 + t553;
t613 = t108 * qJD(3) - t186 * qJD(5);
t641 = qJD(2) * t422 + t613;
t640 = qJD(3) * t382 - qJD(5) * t393;
t231 = -t377 * t572 + t568;
t639 = qJD(3) * t384 + qJD(5) * t422 + (t231 * t407 + t286 * t246) * qJD(2);
t638 = -qJ(6) / 0.2e1;
t566 = t377 * t251;
t569 = t282 * t374;
t618 = t341 * pkin(5);
t119 = -t566 - t569 - t618;
t637 = t119 / 0.2e1;
t635 = t408 / 0.2e1;
t632 = t241 / 0.2e1;
t631 = -t251 / 0.2e1;
t630 = t407 / 0.2e1;
t370 = t374 ^ 2;
t626 = -t370 / 0.2e1;
t371 = t377 ^ 2;
t625 = -t371 / 0.2e1;
t622 = -t377 / 0.2e1;
t621 = t377 / 0.2e1;
t620 = pkin(5) * t407;
t614 = qJD(3) * pkin(3);
t367 = -pkin(3) * t378 - pkin(2);
t401 = -pkin(4) * t407 - pkin(9) * t341 + t367;
t137 = t374 * t401 + t585;
t580 = t407 * qJ(6);
t116 = t137 - t580;
t477 = -t116 / 0.2e1 + t137 / 0.2e1;
t415 = -t580 / 0.2e1 - t477;
t136 = -t377 * t401 + t586;
t117 = t136 + t620;
t476 = -t136 / 0.2e1 + t117 / 0.2e1;
t423 = -t620 / 0.2e1 - t476;
t12 = t374 * t423 - t377 * t415;
t610 = qJD(2) * t12;
t606 = t116 * t377;
t10 = -t137 * t249 + (t606 + (t117 - t136) * t374) * t341;
t609 = t10 * qJD(2);
t11 = t374 * t415 + t377 * t423;
t608 = t11 * qJD(2);
t607 = t116 * t407;
t605 = t117 * t374;
t604 = t136 * t407;
t603 = t137 * t407;
t157 = -t355 * t407 + t651;
t602 = t157 * t374;
t601 = t157 * t377;
t600 = t158 * t374;
t599 = t158 * t377;
t598 = t185 * t407;
t597 = t185 * t374;
t595 = t186 * t377;
t593 = t221 * t286;
t592 = t221 * t355;
t591 = t231 * t374;
t590 = t231 * t377;
t589 = t232 * t374;
t588 = t232 * t377;
t26 = (t408 - t595 - t597) * t221;
t587 = t26 * qJD(1);
t583 = t286 * t335;
t582 = t286 * t374;
t579 = t341 * t365;
t392 = -(t625 + t626) * t577 + t487;
t555 = -t653 + t230;
t118 = t334 + t555;
t419 = t118 * t624 + t119 * t621;
t40 = t392 + t419;
t564 = t40 * qJD(2);
t41 = t185 * t231 + t186 * t232 + t593;
t563 = t41 * qJD(1);
t45 = (t635 - t408 / 0.2e1) * t341 + t458;
t562 = t45 * qJD(2);
t71 = -t373 ^ 2 * t376 * t379 + t287 * t408 + t593;
t560 = t71 * qJD(1);
t559 = t600 / 0.2e1 + t335 * t478;
t556 = t566 / 0.2e1 + t569 / 0.2e1;
t486 = -t572 / 0.2e1;
t554 = t568 / 0.2e1 + t377 * t486;
t552 = t565 / 0.2e1 + t374 * t485;
t551 = -t565 / 0.2e1 + t374 * t486;
t549 = t341 * t626 + t371 * t628;
t360 = t371 - t370;
t509 = t338 - t337;
t192 = t509 * t374;
t547 = qJD(2) * t192;
t194 = t509 * t377;
t545 = qJD(2) * t194;
t541 = qJD(2) * t376;
t540 = qJD(2) * t378;
t539 = qJD(3) * t109;
t538 = qJD(3) * t374;
t537 = qJD(3) * t375;
t535 = qJD(3) * t378;
t534 = qJD(3) * t379;
t533 = qJD(4) * t244;
t532 = qJD(4) * t374;
t531 = qJD(4) * t377;
t530 = qJD(5) * t109;
t529 = qJD(5) * t136;
t528 = qJD(5) * t407;
t506 = -t611 / 0.2e1;
t399 = t341 * t506 + t372 * t630;
t209 = (-t375 / 0.2e1 + t399) * pkin(3);
t523 = t209 * qJD(2);
t521 = t246 * qJD(2);
t240 = t248 * qJD(2);
t520 = t249 * qJD(2);
t324 = t370 * t407;
t325 = t371 * t407;
t252 = -t324 - t325;
t519 = t252 * qJD(2);
t518 = t510 * qJD(2);
t336 = t474 / 0.2e1 + t573 / 0.2e1;
t517 = t336 * qJD(2);
t331 = t407 * qJD(6);
t515 = t341 * qJD(2);
t514 = t341 * qJD(3);
t361 = -t375 ^ 2 + t378 ^ 2;
t513 = t361 * qJD(2);
t512 = t374 * qJD(6);
t511 = t377 * qJD(6);
t508 = pkin(2) * t375 * qJD(2);
t507 = pkin(2) * t540;
t326 = t618 / 0.2e1;
t480 = -t248 / 0.2e1;
t505 = -t600 / 0.2e1 + t335 * t479 + t365 * t480;
t504 = t326 + t556;
t503 = t371 * t515;
t502 = t407 * t527;
t501 = t407 * t526;
t500 = t365 * t527;
t498 = t374 * t511;
t497 = t407 * t514;
t496 = t373 * t541;
t495 = qJD(2) * t571;
t494 = t374 * t526;
t493 = t374 * t515;
t492 = t341 * t512;
t362 = t374 * t536;
t491 = t375 * t540;
t490 = t377 * t515;
t321 = t377 * t514;
t489 = t221 * t628;
t484 = -t571 / 0.2e1;
t483 = t571 / 0.2e1;
t482 = -t246 / 0.2e1;
t472 = (t370 + t371) * t221;
t188 = t336 + t549;
t471 = qJD(2) * t188 + t362;
t242 = (t370 / 0.2e1 + t625) * t341;
t470 = qJD(2) * t242 - t362;
t300 = t377 * t338 * t374 * qJD(2);
t469 = qJD(3) * t242 + t300;
t467 = t374 * t490;
t466 = t374 * t321;
t465 = t341 * t488 + t598 / 0.2e1;
t464 = t221 * t482 - t598 / 0.2e1;
t462 = -t618 / 0.2e1 - t569 / 0.2e1;
t457 = 0.2e1 * t466;
t420 = t606 / 0.2e1 + t605 / 0.2e1;
t380 = -t420 * t221 + t185 * t637 + t186 * t118 / 0.2e1 + t158 * t635 + t157 * t634;
t416 = -t588 / 0.2e1 - t591 / 0.2e1;
t2 = -t583 / 0.2e1 + t416 * t365 + t380;
t7 = t116 * t118 + t117 * t119 + t157 * t158;
t454 = t2 * qJD(1) + t7 * qJD(2);
t385 = t477 * t185 + t476 * t186 + t221 * t632;
t425 = t231 * pkin(5) / 0.2e1 + t232 * t638;
t4 = t385 + t425;
t8 = -t116 * t136 + t117 * t137 + t158 * t241;
t453 = t4 * qJD(1) + t8 * qJD(2);
t397 = (t185 * t622 + t186 * t623) * t407;
t43 = -t397 + t416;
t9 = -t117 * t248 - t119 * t249 + (t118 * t341 + t607) * t374;
t452 = t43 * qJD(1) - t9 * qJD(2);
t15 = (t116 - t601) * t341 - (t118 + t599) * t407;
t275 = t582 / 0.2e1;
t405 = t186 * t629 - t654;
t394 = t221 * t480 + t408 * t479 - t405;
t29 = t275 + t394;
t451 = t29 * qJD(1) + t15 * qJD(2);
t16 = (-t117 + t602) * t341 - (-t119 - t600) * t407;
t450 = t16 * qJD(2) + t647;
t400 = t287 * t372 / 0.2e1 + t286 * t506;
t17 = (t375 * t483 + t400) * pkin(3);
t81 = t367 * t617;
t449 = -t17 * qJD(1) + t81 * qJD(2);
t21 = t158 * t341 - (-t605 - t606) * t407;
t389 = -(-t595 / 0.2e1 - t597 / 0.2e1) * t407 + t489;
t417 = t590 / 0.2e1 - t589 / 0.2e1;
t23 = t389 + t417;
t448 = qJD(1) * t23 + qJD(2) * t21;
t37 = (-t136 + t586) * t341 - t566 * t407;
t447 = t37 * qJD(2) + t647;
t276 = -t582 / 0.2e1;
t395 = t408 * t478 + t405 + t654;
t32 = t276 + t395;
t38 = (-t137 + t585) * t341 - (-t555 - t653) * t407;
t446 = t32 * qJD(1) + t38 * qJD(2);
t445 = t45 * qJD(1);
t46 = t603 + (t241 * t374 + t599) * t341;
t444 = qJD(2) * t46 - t646;
t47 = t604 + (-t241 * t377 + t600) * t341;
t56 = t464 + t552;
t443 = qJD(1) * t56 - qJD(2) * t47;
t51 = -t158 * t249 - t607;
t53 = t463 + t554;
t442 = -qJD(1) * t53 + qJD(2) * t51;
t78 = t282 * t249 + t603;
t441 = qJD(2) * t78 - t646;
t57 = t465 + t551;
t77 = -t282 * t246 - t604;
t440 = -qJD(1) * t57 + qJD(2) * t77;
t439 = t118 * t377 + t119 * t374;
t438 = -t335 * t407 + t579;
t437 = t366 * t407 - t579;
t120 = t282 * t341 + t407 * t651;
t418 = t408 * t630 + t489;
t82 = t485 - t418;
t435 = -qJD(1) * t82 + qJD(2) * t120;
t19 = (-t578 / 0.2e1 - pkin(5) / 0.2e1) * t341 + (t631 + t456) * t377 + t462 + t559;
t260 = -t335 * t374 - t355 * t377;
t434 = -qJD(2) * t19 + qJD(3) * t260;
t432 = t468 * t374;
t431 = t468 * t377;
t196 = (t628 - t336) * t571;
t228 = t341 * t367 - t407 * t617;
t430 = -qJD(1) * t196 + qJD(2) * t228;
t398 = -t473 / 0.2e1 + t574 / 0.2e1;
t197 = (t630 + t398) * t571;
t229 = t341 * t617 + t367 * t407;
t429 = -qJD(1) * t197 + qJD(2) * t229;
t110 = (t621 - t622) * t221;
t428 = -qJD(3) * t110 - qJD(5) * t185;
t427 = -qJD(5) * t355 - t512;
t426 = pkin(5) * t637 + t118 * t638;
t424 = t567 / 0.2e1 - t619 / 0.2e1;
t50 = t504 + t505;
t414 = -qJD(2) * t50 + t335 * t538;
t293 = t365 * t481;
t66 = t293 + (t576 / 0.2e1 + t631) * t377;
t413 = -qJD(2) * t66 - t366 * t538;
t411 = t341 * t431;
t410 = qJD(5) * t336 - t407 * t515;
t409 = -qJD(5) * t110 - t408 * t538;
t253 = t360 * t338;
t404 = qJD(2) * t253 + t457;
t403 = -qJD(3) * t360 + 0.2e1 * t467;
t402 = t424 * t221;
t35 = t592 / 0.2e1 - t402;
t381 = (t374 * t477 + t377 * t476) * t365 + t355 * t636 + t335 * t632;
t6 = t381 + t426;
t396 = t335 * t355 * qJD(3) + t35 * qJD(1) - t6 * qJD(2);
t391 = -qJD(5) * t455 + t511;
t266 = t338 * t371 + t337;
t390 = qJD(2) * t266 + t466 - t528;
t323 = t336 * qJD(3);
t320 = t374 * t514;
t301 = t377 * t492;
t299 = t468 * qJ(6);
t285 = qJD(3) * t370 + t467;
t239 = t248 * qJD(5);
t235 = t244 * qJD(5);
t233 = t242 * qJD(5);
t208 = t617 / 0.2e1 + t399 * pkin(3);
t207 = -t240 + t526;
t199 = -t336 * t571 + t341 * t484;
t198 = t398 * t571 - t407 * t483;
t189 = -t336 + t549;
t138 = qJD(3) * t248 - t407 * t493;
t129 = t137 * qJD(5);
t112 = t341 * t432;
t83 = t485 + t418;
t67 = t282 * t623 + t366 * t478 + t293 + t556;
t65 = t388 - t558;
t60 = t406 + t554;
t59 = t464 + t551;
t58 = t465 + t552;
t49 = -t566 / 0.2e1 + t462 + t505;
t44 = t45 * qJD(3);
t42 = -t397 - t416;
t39 = t392 - t419;
t36 = -t592 / 0.2e1 - t402;
t31 = t275 + t395;
t30 = t276 + t394;
t24 = t383 - t655;
t22 = t389 - t417;
t20 = t355 * t482 + t377 * t456 + t326 + t504 + t559;
t18 = pkin(3) * t400 + t484 * t617;
t14 = t136 * t622 + t116 * t624 + t137 * t623 + t117 * t621 - (t570 / 0.2e1 + t616 / 0.2e1) * t407;
t13 = t136 * t624 + t137 * t622 + t407 * t424 + t420;
t5 = t381 - t426;
t3 = t385 - t425;
t1 = t583 / 0.2e1 + t380 + (t588 + t591) * t365 / 0.2e1;
t27 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t41 + qJD(3) * t26; 0, 0, -t496, -t495, 0, 0, 0, 0, 0, (-t375 * t534 - t376 * t540) * t373, (t375 * t541 - t378 * t534) * t373, qJD(3) * t199 - t407 * t496, qJD(3) * t198 + t341 * t496, (t286 * t341 + t287 * t407) * qJD(2) + t44, t560 + (t282 * t286 + t287 * t651 + t367 * t572) * qJD(2) + t18 * qJD(3) + t83 * qJD(4), 0, 0, 0, 0, 0, t639, t31 * qJD(3) + t59 * qJD(5) + t645, t639, t42 * qJD(3) + (-t589 + t590) * t515, t30 * qJD(3) + t58 * qJD(5) - t645, t563 + (t116 * t232 + t117 * t231 + t158 * t286) * qJD(2) + t1 * qJD(3) + t22 * qJD(4) + t3 * qJD(5) + t60 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, -t330 * qJD(3) - t375 * t495, t329 * qJD(3) - t378 * t495, qJD(2) * t199 - qJD(3) * t408, qJD(2) * t198 + qJD(3) * t221, t562, t18 * qJD(2) + (-t221 * t372 - t408 * t611) * t614, 0, 0, 0, 0, 0, t642, qJD(2) * t31 - t409, t642, t42 * qJD(2) - qJD(3) * t472, qJD(2) * t30 + t409, t587 + t1 * qJD(2) + (t335 * t408 - t365 * t472) * qJD(3) + t36 * qJD(5) - t108 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t22; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t641, qJD(2) * t59 - t428, t641, 0, qJD(2) * t58 + t428, t3 * qJD(2) + t36 * qJD(3) + (-pkin(5) * t186 - qJ(6) * t185) * qJD(5) + t186 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t60 - t613; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t196 * qJD(3), -t197 * qJD(3), t44, -qJD(3) * t17 - qJD(4) * t82 - t560, 0, 0, 0, 0, 0, t640, qJD(3) * t32 - qJD(5) * t57, t640, qJD(3) * t43, qJD(3) * t29 - qJD(5) * t56, qJD(3) * t2 + qJD(4) * t23 + qJD(5) * t4 - qJD(6) * t53 - t563; 0, 0, 0, 0, t375 * t535, t361 * qJD(3), 0, 0, 0, -pkin(2) * t537, -pkin(2) * t535, t228 * qJD(3), t229 * qJD(3), -qJD(4) * t510, qJD(3) * t81 + qJD(4) * t120, -t338 * t494 + t371 * t497, -qJD(5) * t253 - t407 * t457, qJD(3) * t194 + t341 * t502, -qJD(3) * t192 + t341 * t501, -t497, qJD(3) * t37 + qJD(5) * t78 - t658, qJD(3) * t38 + qJD(5) * t77 - t659, qJD(3) * t16 + qJD(5) * t46 - t338 * t498 - t658, -qJD(3) * t9 - qJD(5) * t10 + t407 * t492, qJD(3) * t15 + qJD(5) * t47 + qJD(6) * t266 + t659, qJD(3) * t7 + qJD(4) * t21 + qJD(5) * t8 + qJD(6) * t51; 0, 0, 0, 0, t491, t513, t535, -t537, 0, -pkin(8) * t535 - t508, pkin(8) * t537 - t507, -qJD(3) * t651 + t430, qJD(3) * t282 + t429, (-t341 * t372 - t407 * t611) * t614 + t445, (-t282 * t372 - t611 * t651) * t614 + t208 * qJD(4) + t449, -t233 - (-t362 - t503) * t407, (-t324 + t325) * qJD(3) + (-t516 - qJD(5)) * t249 * t652, t320 + t545, t321 - t547, t410, (t374 * t437 - t585) * qJD(3) + t67 * qJD(5) + t447, (t377 * t437 + t586) * qJD(3) + t65 * qJD(5) + t446, (-t374 * t438 - t601) * qJD(3) + t20 * qJD(5) + t189 * qJD(6) + t450, qJD(3) * t439 + t14 * qJD(5) + t452, (t377 * t438 - t602) * qJD(3) + t24 * qJD(5) + t301 + t451, (t157 * t335 + t365 * t439) * qJD(3) + t39 * qJD(4) + t5 * qJD(5) + t49 * qJD(6) + t454; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t518, qJD(3) * t208 + t435, 0, 0, 0, 0, 0, -t660, -t661, -t660, 0, t661, qJD(3) * t39 + qJD(5) * t13 + t448; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t469, -t404, -t112, -t411, t323, qJD(3) * t67 - t129 + t441, qJD(3) * t65 + t440 + t529, qJD(3) * t20 - t129 + t444, t14 * qJD(3) + qJD(5) * t461 - t492 - t609, qJD(3) * t24 - t331 - t443 - t529, t5 * qJD(3) + t13 * qJD(4) + (-pkin(5) * t137 - qJ(6) * t136) * qJD(5) + t116 * qJD(6) + t453; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t189 - t300, -t112, t390, qJD(3) * t49 + qJD(5) * t116 + t442; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t196 * qJD(2), t197 * qJD(2), -t562, qJD(2) * t17, 0, 0, 0, 0, 0, t644, -qJD(2) * t32 + t530, t644, -qJD(2) * t43, -qJD(2) * t29 - t530, -qJD(2) * t2 - qJD(5) * t35 - qJD(6) * t107 - t587; 0, 0, 0, 0, -t491, -t513, 0, 0, 0, t508, t507, -qJD(4) * t341 - t430, -qJD(4) * t407 - t429, -t445, qJD(4) * t209 - t449, -t407 * t503 - t233, -t411 * t652, -t239 - t545, t235 + t547, -t410, qJD(5) * t66 - t341 * t531 - t447, qJD(4) * t246 + qJD(5) * t64 - t446, -qJD(4) * t249 + qJD(5) * t19 + qJD(6) * t188 - t450, -qJD(4) * t252 - qJD(5) * t11 - qJD(6) * t248 - t452, qJD(5) * t25 - t341 * t532 + t301 - t451, qJD(4) * t40 + qJD(5) * t6 + qJD(6) * t50 - t454; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t494, t360 * qJD(5), 0, 0, 0, t366 * t527, t366 * t526, -qJD(5) * t260 + t498, 0, -qJD(5) * t259 + qJD(6) * t370, t427 * t335; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t515, -t516, 0, t523, 0, 0, 0, 0, 0, -t490, t521, -t520, -t519, -t493, t564; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t470, -t403, t207, -t650, -t517, -t413 + t459, t500 - t649, -t434 + t459, t391 - t608, -t500 - t648, t365 * t391 - t396; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t471, t207, t285, -t414 - t459; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t82 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t23; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t514, t407 * qJD(3), t518, -qJD(3) * t209 - t435, 0, 0, 0, 0, 0, t235 + t321 + t660, -qJD(3) * t246 + t501 + t661, qJD(3) * t249 + t502 + t660, t252 * qJD(3), -t239 + t320 - t661, -qJD(3) * t40 - qJD(5) * t12 - qJD(6) * t244 - t448; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t515, t516, 0, -t523, 0, 0, 0, 0, 0, t490, -t521, t520, t519, t493, -t564; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t650, -t431, -t432, 0, t207, -t427 - t610; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t650; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t643, qJD(2) * t57 - t539, t643, 0, qJD(2) * t56 + t539, -qJD(2) * t4 + qJD(3) * t35; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t469, t404, t138, -qJD(3) * t244 - t407 * t490, t323, -qJD(3) * t66 - t441 - t533, -qJD(3) * t64 - t407 * t531 - t440, -qJD(3) * t19 - t407 * t532 - t444, qJD(3) * t11 + t609, -qJD(3) * t25 + qJD(4) * t248 - t331 + t443, -qJ(6) * t331 - qJD(3) * t6 + qJD(4) * t12 - t453; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t470, t403, t240, -t522, t517, t413 - t525, t649, t434 - t525, t608, t648, t396; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t522, -t377 * t516, -t374 * t516, 0, t240, t610; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6), qJ(6) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t468, t299; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t53 + t98; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t188 + t300, t138, -t390, qJ(6) * t528 - qJD(3) * t50 - t442 + t533; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t471, t240, -t285, t414 + t525; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t522; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t468, -t299; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t27;
