% Calculate minimal parameter regressor of coriolis matrix for
% S6PRRPRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d5,d6,theta1,theta4]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x29]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2021-01-16 03:31
% Revision: 24b2e7d74a0c1a3b64fa2f8f5ad758691ad61af3 (2021-01-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRPRR1_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRR1_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRR1_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRPRR1_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2021-01-16 03:28:29
% EndTime: 2021-01-16 03:29:02
% DurationCPUTime: 12.50s
% Computational Cost: add. (8638->472), mult. (19554->714), div. (0->0), fcn. (23870->12), ass. (0->381)
t360 = cos(pkin(12));
t366 = cos(qJ(3));
t563 = t360 * t366;
t358 = sin(pkin(12));
t363 = sin(qJ(3));
t569 = t358 * t363;
t326 = t563 - t569;
t564 = t360 * t363;
t568 = t358 * t366;
t327 = t564 + t568;
t362 = sin(qJ(5));
t593 = cos(qJ(5));
t284 = -t593 * t326 + t362 * t327;
t365 = cos(qJ(6));
t633 = t365 * t284;
t646 = t633 / 0.2e1;
t647 = -t633 / 0.2e1;
t652 = t647 + t646;
t657 = qJD(6) * t652;
t572 = t284 ^ 2;
t323 = t593 * t327;
t547 = t362 * t326;
t616 = t323 + t547;
t639 = t616 ^ 2;
t640 = t639 - t572;
t655 = t640 * t365;
t659 = qJD(2) * t655;
t662 = t657 + t659;
t492 = qJD(3) + qJD(5);
t361 = sin(qJ(6));
t588 = qJ(4) + pkin(8);
t340 = t588 * t363;
t341 = t588 * t366;
t446 = -t360 * t340 - t358 * t341;
t406 = -t327 * pkin(9) + t446;
t622 = t362 * t406;
t298 = -t358 * t340 + t360 * t341;
t237 = t326 * pkin(9) + t298;
t644 = t593 * t237;
t653 = t644 + t622;
t661 = t653 * t361;
t660 = t653 * t365;
t656 = t640 * t361;
t658 = qJD(2) * t656;
t438 = -t644 / 0.2e1;
t624 = t616 * qJD(2);
t474 = t284 * t624;
t436 = t323 / 0.2e1;
t615 = t436 + t547 / 0.2e1;
t654 = qJD(6) * t615 + t474;
t619 = t593 * t406;
t645 = t362 * t237;
t132 = t619 - t645;
t359 = sin(pkin(6));
t367 = cos(qJ(2));
t566 = t359 * t367;
t299 = t327 * t566;
t479 = t593 * t299;
t300 = t326 * t566;
t548 = t362 * t300;
t389 = t548 / 0.2e1 + t479 / 0.2e1;
t467 = -t566 / 0.2e1;
t631 = t616 * t467;
t642 = t631 + t389;
t651 = qJD(1) * t642;
t650 = qJD(2) * t642;
t643 = t631 - t389;
t649 = qJD(2) * t643;
t648 = t640 * qJD(2);
t364 = sin(qJ(2));
t567 = t359 * t364;
t584 = cos(pkin(6));
t324 = t363 * t567 - t584 * t366;
t325 = t584 * t363 + t366 * t567;
t244 = t358 * t324 - t360 * t325;
t632 = t593 * t244;
t437 = t632 / 0.2e1;
t635 = t361 * t616;
t463 = t635 / 0.2e1;
t589 = t616 * pkin(5);
t590 = t284 * pkin(10);
t173 = t589 + t590;
t415 = -t360 * t324 - t358 * t325;
t618 = t593 * t415;
t634 = t362 * t244;
t138 = t618 + t634;
t621 = t362 * t415;
t641 = -t632 + t621;
t638 = -t284 / 0.2e1;
t605 = t284 / 0.2e1;
t637 = -t616 / 0.2e1;
t636 = t616 / 0.2e1;
t610 = -t618 / 0.2e1;
t611 = -t619 / 0.2e1;
t591 = pkin(10) * t616;
t499 = t284 * qJD(5);
t629 = -t284 * qJD(3) - t499;
t628 = qJD(2) * t284;
t627 = qJD(4) * t284;
t625 = t615 * qJD(2);
t623 = 0.2e1 * t616;
t356 = t361 ^ 2;
t357 = t365 ^ 2;
t345 = t357 - t356;
t620 = t492 * t345;
t167 = 0.2e1 * t647;
t486 = t360 * pkin(3) + pkin(4);
t592 = pkin(3) * t358;
t320 = t362 * t592 - t593 * t486;
t314 = -pkin(5) + t320;
t617 = t314 + t320;
t321 = t362 * t486 + t593 * t592;
t315 = pkin(10) + t321;
t601 = -t314 / 0.2e1;
t449 = t320 / 0.2e1 + t601;
t372 = (-t315 / 0.2e1 + t321 / 0.2e1) * t616 + t449 * t284;
t614 = -t591 / 0.2e1 + t372;
t478 = t593 * t300;
t549 = t362 * t299;
t536 = t549 / 0.2e1 - t478 / 0.2e1;
t448 = t356 / 0.2e1 - t357 / 0.2e1;
t150 = t448 * t616;
t558 = t361 * t365;
t476 = qJD(2) * t558;
t613 = t150 * t492 + t476 * t639;
t600 = t326 / 0.2e1;
t599 = -t327 / 0.2e1;
t598 = t358 / 0.2e1;
t597 = -t361 / 0.2e1;
t596 = t361 / 0.2e1;
t595 = -t365 / 0.2e1;
t594 = t365 / 0.2e1;
t355 = t363 * pkin(3);
t587 = qJD(3) * pkin(3);
t561 = t361 * t641;
t95 = t365 * t566 + t561;
t586 = t95 * t284;
t545 = t365 * t641;
t96 = -t361 * t566 + t545;
t585 = t96 * t284;
t418 = t639 + t572;
t62 = t418 * t361;
t581 = qJD(2) * t62;
t64 = t418 * t365;
t579 = qJD(2) * t64;
t574 = t361 * t132;
t573 = t365 * t132;
t192 = t478 - t549;
t560 = t361 * t192;
t155 = t361 * t284;
t544 = t365 * t192;
t542 = t365 * t616;
t65 = -t359 ^ 2 * t367 * t364 - t244 * t300 - t299 * t415;
t540 = t65 * qJD(1);
t450 = 0.2e1 * t636;
t162 = t450 * t365;
t526 = qJD(3) * t365;
t537 = t162 * qJD(5) + t526 * t616;
t143 = (t638 + t605) * t558;
t534 = qJD(2) * t143;
t350 = -t366 * pkin(3) - pkin(2);
t308 = -t326 * pkin(4) + t350;
t532 = qJD(2) * t308;
t531 = qJD(2) * t364;
t530 = qJD(2) * t366;
t529 = qJD(3) * t616;
t528 = qJD(3) * t361;
t527 = qJD(3) * t363;
t525 = qJD(3) * t366;
t524 = qJD(3) * t367;
t523 = qJD(4) * t616;
t522 = qJD(5) * t616;
t521 = qJD(5) * t361;
t520 = qJD(5) * t365;
t519 = qJD(6) * t361;
t354 = qJD(6) * t365;
t518 = t150 * qJD(2);
t517 = t635 * qJD(2);
t451 = t636 + t637;
t153 = t451 * t361;
t516 = t153 * qJD(2);
t154 = t450 * t361;
t515 = t154 * qJD(2);
t514 = t155 * qJD(2);
t157 = 0.2e1 * t638 * t361;
t147 = t157 * qJD(2);
t161 = t451 * t365;
t513 = t161 * qJD(2);
t512 = t162 * qJD(2);
t511 = t633 * qJD(2);
t166 = 0.2e1 * t646;
t510 = t166 * qJD(2);
t509 = t167 * qJD(2);
t172 = t345 * t639;
t508 = t172 * qJD(2);
t204 = 0.2e1 * t436 + t547;
t506 = t204 * qJD(2);
t388 = (t326 * t598 + t360 * t599) * pkin(3);
t232 = -t355 / 0.2e1 + t388;
t505 = t232 * qJD(2);
t281 = t436 - t323 / 0.2e1;
t502 = t281 * qJD(2);
t501 = t281 * qJD(5);
t294 = t326 ^ 2 + t327 ^ 2;
t496 = t294 * qJD(2);
t311 = t321 * qJD(5);
t495 = t326 * qJD(2);
t494 = t327 * qJD(2);
t346 = -t363 ^ 2 + t366 ^ 2;
t493 = t346 * qJD(2);
t490 = pkin(2) * t363 * qJD(2);
t489 = pkin(2) * t530;
t487 = t361 * t567;
t477 = t357 * t624;
t475 = qJD(6) * t284 * t616;
t473 = t616 * t628;
t472 = t359 * t531;
t471 = qJD(2) * t566;
t347 = t361 * t354;
t470 = t363 * t530;
t469 = t365 * t624;
t128 = t138 * t596;
t129 = t138 * t594;
t468 = t567 / 0.2e1;
t466 = t566 / 0.2e1;
t465 = t561 / 0.2e1;
t464 = -t560 / 0.2e1;
t462 = t284 * t597;
t461 = -t635 / 0.2e1;
t459 = -t544 / 0.2e1;
t309 = t327 * pkin(4) + t355;
t445 = t492 * t365;
t443 = t616 * t476;
t441 = t284 * t466;
t440 = t284 * t467;
t435 = pkin(5) / 0.2e1 + t449;
t434 = pkin(5) * t284 - t591;
t432 = -0.2e1 * t443;
t431 = 0.2e1 * t443;
t430 = t361 * t445;
t429 = t492 * t558;
t134 = t309 + t173;
t373 = t308 + t434;
t35 = -t365 * t373 + t661;
t387 = t653 * t616;
t1 = t134 * t633 - t35 * t616 + t361 * t387;
t374 = t641 * t636;
t370 = t374 * t361 + t637 * t95;
t397 = t479 + t548;
t385 = t397 * t365;
t375 = t385 / 0.2e1;
t7 = t375 + t370;
t428 = t7 * qJD(1) + t1 * qJD(2);
t3 = t173 * t633 + (-t35 + t661) * t616;
t405 = (-t95 / 0.2e1 + t465) * t616;
t5 = t375 + t405;
t427 = t5 * qJD(1) + t3 * qJD(2);
t386 = t397 * t361;
t376 = -t386 / 0.2e1;
t404 = (-t96 / 0.2e1 + t545 / 0.2e1) * t616;
t10 = t376 + t404;
t36 = t361 * t373 + t660;
t4 = -t173 * t155 + (-t36 + t660) * t616;
t426 = t10 * qJD(1) + t4 * qJD(2);
t369 = t374 * t365 + t637 * t96;
t12 = t376 + t369;
t2 = -t134 * t155 - t36 * t616 + t365 * t387;
t425 = t12 * qJD(1) + t2 * qJD(2);
t368 = t591 / 0.2e1 + pkin(5) * t638 + t372;
t13 = t368 * t361;
t424 = t13 * qJD(2);
t21 = t132 * t635 + t284 * t35;
t399 = -t138 * t637 + t468;
t30 = t459 - t586 / 0.2e1 - t399 * t361;
t423 = qJD(1) * t30 - qJD(2) * t21;
t22 = -t132 * t542 - t284 * t36;
t29 = t464 + t585 / 0.2e1 + t399 * t365;
t422 = qJD(1) * t29 - qJD(2) * t22;
t402 = t300 * t598 - t299 * t360 / 0.2e1;
t27 = (t363 * t466 + t402) * pkin(3);
t87 = t350 * t355;
t421 = -t27 * qJD(1) + t87 * qJD(2);
t90 = t309 * t284 + t308 * t616;
t419 = qJD(2) * t90 + t651;
t416 = -t314 * t284 - t315 * t616;
t101 = -t440 - t536;
t91 = -t284 * t308 + t309 * t616;
t414 = qJD(1) * t101 + qJD(2) * t91;
t141 = t298 * t326 - t327 * t446;
t403 = -t244 * t600 + t415 * t599;
t88 = t468 - t403;
t413 = -qJD(1) * t88 + qJD(2) * t141;
t412 = t616 * (-qJD(6) - t628);
t400 = -t568 / 0.2e1 - t564 / 0.2e1;
t217 = (t327 / 0.2e1 + t400) * t566;
t275 = -t326 * t355 + t350 * t327;
t411 = -qJD(1) * t217 + qJD(2) * t275;
t398 = -t563 / 0.2e1 + t569 / 0.2e1;
t218 = (t600 + t398) * t566;
t276 = t350 * t326 + t327 * t355;
t410 = -qJD(1) * t218 + qJD(2) * t276;
t409 = qJD(5) * t204 + t529;
t407 = t590 / 0.2e1 + t589 / 0.2e1;
t401 = t315 * t605 + t616 * t601;
t99 = t441 - t536;
t396 = -qJD(1) * t99 + t284 * t532;
t395 = -t532 * t616 - t651;
t392 = t629 * t616;
t391 = t173 / 0.2e1 + t407;
t384 = t134 / 0.2e1 + t401;
t38 = t611 + t619 / 0.2e1;
t54 = t610 + t618 / 0.2e1;
t383 = -qJD(1) * t54 - qJD(2) * t38 - qJD(3) * t320;
t37 = t438 + t644 / 0.2e1;
t53 = t437 - t632 / 0.2e1;
t382 = qJD(1) * t53 + qJD(2) * t37 + qJD(3) * t321;
t205 = t435 * t361;
t25 = t391 * t365;
t381 = pkin(5) * t521 + qJD(2) * t25 + qJD(3) * t205;
t206 = t435 * t365;
t23 = t391 * t361;
t380 = pkin(5) * t520 - qJD(2) * t23 + qJD(3) * t206;
t16 = t368 * t365;
t379 = -qJD(2) * t16 - t321 * t528;
t17 = t384 * t361;
t378 = -qJD(2) * t17 - t314 * t526;
t19 = t384 * t365;
t377 = qJD(2) * t19 - t314 * t528;
t343 = t345 * qJD(6);
t310 = t320 * qJD(5);
t305 = t361 * t311;
t233 = -0.2e1 * t616 * t347;
t231 = t355 / 0.2e1 + t388;
t220 = t327 * t467 + t400 * t566;
t219 = t326 * t467 + t398 * t566;
t208 = pkin(5) * t595 + t617 * t594;
t207 = pkin(5) * t597 + t617 * t596;
t183 = t432 + t620;
t182 = t431 - t620;
t181 = -t385 / 0.2e1;
t180 = t386 / 0.2e1;
t171 = t492 * t615;
t160 = t463 + t461;
t159 = 0.2e1 * t463;
t158 = -t155 / 0.2e1 - t462;
t149 = t161 * qJD(5);
t146 = t158 * qJD(6);
t145 = t157 * qJD(6);
t144 = t150 * qJD(6);
t142 = t167 * t361;
t140 = t147 - t519;
t119 = t429 - t518;
t118 = -t430 + t518;
t102 = -t440 + t536;
t100 = t441 + t536;
t89 = t468 + t403;
t60 = t448 * t284 + t356 * t605 + t357 * t638;
t56 = 0.2e1 * t437 - t621;
t55 = -t634 + 0.2e1 * t610;
t52 = t138 * t595 - t129;
t51 = -0.2e1 * t129;
t50 = t138 * t597 - t128;
t49 = -0.2e1 * t128;
t48 = -t545 / 0.2e1 + t641 * t595;
t43 = t596 * t641 + t465;
t40 = 0.2e1 * t438 - t622;
t39 = t645 + 0.2e1 * t611;
t32 = -t585 / 0.2e1 - t616 * t129 + t464 + t365 * t468;
t31 = t586 / 0.2e1 - t138 * t461 + t459 - t487 / 0.2e1;
t28 = t402 * pkin(3) + t467 * t355;
t26 = t173 * t594 - t407 * t365 - t574;
t24 = t173 * t597 + t407 * t361 - t573;
t20 = -t574 / 0.2e1 + t132 * t597 + t134 * t594 - t401 * t365;
t18 = -t573 / 0.2e1 + t132 * t595 + t134 * t597 + t401 * t361;
t15 = pkin(5) * t646 + t614 * t365 + t661;
t14 = -pkin(5) * t462 + t614 * t361 - t660;
t11 = t180 + t369;
t9 = t180 + t404;
t8 = t181 + t370;
t6 = t181 + t405;
t33 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, -t472, -t471, 0, 0, 0, 0, 0, (-t363 * t524 - t364 * t530) * t359, (t363 * t531 - t366 * t524) * t359, qJD(3) * t220 - t326 * t472, qJD(3) * t219 + t327 * t472, (t299 * t327 + t300 * t326) * qJD(2), t540 + (t298 * t300 - t299 * t446 + t350 * t567) * qJD(2) + t28 * qJD(3) + t89 * qJD(4), 0, 0, 0, 0, 0, t284 * t472 + t492 * t643, qJD(3) * t102 + qJD(5) * t100 + t472 * t616, 0, 0, 0, 0, 0, ((t365 * t567 - t560) * t284 + t616 * t386) * qJD(2) + t8 * qJD(3) + t6 * qJD(5) + t32 * qJD(6), (-(t487 + t544) * t284 + t616 * t385) * qJD(2) + t11 * qJD(3) + t9 * qJD(5) + t31 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, -t325 * qJD(3) - t363 * t471, t324 * qJD(3) - t366 * t471, qJD(2) * t220 + qJD(3) * t244, qJD(2) * t219 - qJD(3) * t415, 0, t28 * qJD(2) + (t244 * t360 + t358 * t415) * t587, 0, 0, 0, 0, 0, -qJD(3) * t641 + qJD(5) * t56 + t649, qJD(2) * t102 - qJD(3) * t138 + qJD(5) * t55, 0, 0, 0, 0, 0, qJD(2) * t8 + qJD(5) * t48 + qJD(6) * t50 - t526 * t641, qJD(2) * t11 + qJD(5) * t43 + qJD(6) * t52 + t528 * t641; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t89 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t56 - qJD(5) * t641 + t649, qJD(2) * t100 + qJD(3) * t55 - qJD(5) * t138, 0, 0, 0, 0, 0, qJD(2) * t6 + qJD(3) * t48 + qJD(6) * t49 - t520 * t641, qJD(2) * t9 + qJD(3) * t43 + qJD(6) * t51 + t521 * t641; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t32 + qJD(3) * t50 + qJD(5) * t49 - qJD(6) * t96, qJD(2) * t31 + qJD(3) * t52 + qJD(5) * t51 + qJD(6) * t95; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t217 * qJD(3), -t218 * qJD(3), 0, -qJD(3) * t27 - qJD(4) * t88 - t540, 0, 0, 0, 0, 0, t492 * t642, qJD(3) * t101 + qJD(5) * t99, 0, 0, 0, 0, 0, qJD(3) * t7 + qJD(5) * t5 - qJD(6) * t29, qJD(3) * t12 + qJD(5) * t10 - qJD(6) * t30; 0, 0, 0, 0, t363 * t525, t346 * qJD(3), 0, 0, 0, -pkin(2) * t527, -pkin(2) * t525, t275 * qJD(3), t276 * qJD(3), qJD(4) * t294, qJD(3) * t87 + qJD(4) * t141, t392, -t492 * t640, 0, 0, 0, qJD(3) * t90 + t308 * t522, qJD(3) * t91 - t308 * t499, -t347 * t639 + t357 * t392, -0.2e1 * t361 * t542 * t629 - t172 * qJD(6), -t361 * t475 + t492 * t655, -t365 * t475 - t492 * t656, (t522 + t529) * t284, qJD(3) * t1 + qJD(4) * t62 + qJD(5) * t3 + qJD(6) * t22, qJD(3) * t2 + qJD(4) * t64 + qJD(5) * t4 + qJD(6) * t21; 0, 0, 0, 0, t470, t493, t525, -t527, 0, -pkin(8) * t525 - t490, pkin(8) * t527 - t489, -qJD(3) * t298 + t411, -qJD(3) * t446 + t410, (-t326 * t360 - t327 * t358) * t587, t231 * qJD(4) + (-t298 * t360 + t358 * t446) * t587 + t421, -t473, -t648, t629, -t409, 0, -qJD(3) * t653 + qJD(5) * t40 + t419, -qJD(3) * t132 + qJD(5) * t39 + t414, t142 * qJD(5) - t144 - (t361 * t526 + t477) * t284, t60 * qJD(5) + t233 - (qJD(3) * t345 + t432) * t284, qJD(5) * t159 + t528 * t616 + t662, t146 + t537 - t658, t654, (t361 * t416 - t660) * qJD(3) + t14 * qJD(5) + t20 * qJD(6) + t428, (t365 * t416 + t661) * qJD(3) + t15 * qJD(5) + t18 * qJD(6) + t425; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t496, qJD(3) * t231 + t413, 0, 0, 0, 0, 0, t501, 0, 0, 0, 0, 0, 0, t146 - t149 + t581, qJD(5) * t160 + t579 + t657; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t474, -t648, t629, -qJD(3) * t204 - t522, 0, qJD(3) * t40 + qJD(4) * t281 - qJD(5) * t653 - t395, qJD(3) * t39 - qJD(5) * t132 - t396, t142 * qJD(3) - t144 + (-t361 * t520 - t477) * t284, t60 * qJD(3) + t233 + (-qJD(5) * t345 + t431) * t284, qJD(3) * t159 + t521 * t616 + t662, qJD(3) * t162 + t520 * t616 - t658, t654, t14 * qJD(3) - t161 * qJD(4) + (t361 * t434 - t660) * qJD(5) + t26 * qJD(6) + t427, t15 * qJD(3) + t160 * qJD(4) + (t365 * t434 + t661) * qJD(5) + t24 * qJD(6) + t426; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t613, -t430 * t623 - t508, t361 * t412 + t492 * t652, t158 * qJD(3) + t365 * t412, t171, qJD(3) * t20 + qJD(4) * t158 + qJD(5) * t26 - qJD(6) * t36 - t422, qJD(3) * t18 + qJD(4) * t652 + qJD(5) * t24 + qJD(6) * t35 - t423; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t217 * qJD(2), t218 * qJD(2), 0, qJD(2) * t27, 0, 0, 0, 0, 0, -qJD(5) * t53 - t650, -qJD(2) * t101 + qJD(5) * t54, 0, 0, 0, 0, 0, -qJD(2) * t7, -qJD(2) * t12; 0, 0, 0, 0, -t470, -t493, 0, 0, 0, t490, t489, -qJD(4) * t327 - t411, -qJD(4) * t326 - t410, 0, qJD(4) * t232 - t421, t473, t648, 0, -t501, 0, -qJD(5) * t37 - t419 - t523, qJD(5) * t38 - t414 + t627, qJD(5) * t143 + t357 * t473 - t144, -t284 * t431 + t233, -qJD(5) * t153 + qJD(6) * t166 - t659, t145 - t149 + t658, -t654, qJD(5) * t13 - qJD(6) * t19 - t365 * t523 - t428, qJD(4) * t635 + qJD(5) * t16 + qJD(6) * t17 - t425; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t311, t310, t347, t343, 0, 0, 0, -t311 * t365 + t314 * t519, t314 * t354 + t305; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t494, -t495, 0, t505, 0, 0, 0, 0, 0, -t624, t628, 0, 0, 0, 0, 0, -t469, t517; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t502, 0, -t311 - t382, t310 - t383, t347 + t534, t343, -t516, -t513, 0, t207 * qJD(6) - t321 * t445 + t424, qJD(6) * t208 + t305 - t379; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t119, t183, t354 + t510, t140, -t625, qJD(5) * t207 - t315 * t354 - t377, qJD(5) * t208 + t315 * t519 - t378; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t88 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t327 * qJD(3), t326 * qJD(3), -t496, -qJD(3) * t232 - t413, 0, 0, 0, 0, 0, t409, t629, 0, 0, 0, 0, 0, t145 + t537 - t581, -qJD(3) * t635 - qJD(5) * t154 + qJD(6) * t167 - t579; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t494, t495, 0, -t505, 0, 0, 0, 0, 0, t624, -t628, 0, 0, 0, 0, 0, t469, -t517; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t506, -t628, 0, 0, 0, 0, 0, t512, -t515; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t140, -t354 + t509; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t53 - t650, -qJD(2) * t99 - qJD(3) * t54, 0, 0, 0, 0, 0, -qJD(2) * t5, -qJD(2) * t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t474, t648, 0, t281 * qJD(3), 0, qJD(3) * t37 - qJD(4) * t204 + t395, -qJD(3) * t38 + t396 + t627, -qJD(3) * t143 + t357 * t474 - t144, t284 * t432 + t233, qJD(3) * t153 + qJD(6) * t633 - t659, qJD(3) * t161 - qJD(6) * t155 + t658, -t654, -qJD(3) * t13 - qJD(4) * t162 - qJD(6) * t25 - t427, -qJD(3) * t16 + qJD(4) * t154 + qJD(6) * t23 - t426; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t502, 0, t382, t383, t347 - t534, t343, t516, t513, 0, -qJD(6) * t205 + t321 * t526 - t424, -qJD(6) * t206 + t379; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t506, t628, 0, 0, 0, 0, 0, -t512, t515; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t347, t343, 0, 0, 0, -pkin(5) * t519, -pkin(5) * t354; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t119, t183, t354 + t511, -t514 - t519, -t625, -pkin(10) * t354 - t381, pkin(10) * t519 - t380; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t29, qJD(2) * t30; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t613, t429 * t623 + t508, -qJD(3) * t166 - qJD(5) * t633 + t361 * t474, -qJD(3) * t157 + qJD(5) * t155 + t365 * t474, t171, qJD(3) * t19 - qJD(4) * t157 + qJD(5) * t25 + t422, -qJD(3) * t17 - qJD(4) * t167 - qJD(5) * t23 + t423; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t118, t182, -t510, -t147, t625, qJD(5) * t205 + t377, qJD(5) * t206 + t378; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t147, -t509; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t118, t182, -t511, t514, t625, t381, t380; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t33;
