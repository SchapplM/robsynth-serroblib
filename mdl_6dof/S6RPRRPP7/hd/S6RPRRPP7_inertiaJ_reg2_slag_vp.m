% Calculate inertial parameters regressor of joint inertia matrix for
% S6RPRRPP7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 04:52
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RPRRPP7_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPP7_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S6RPRRPP7_inertiaJ_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 21:48:31
% EndTime: 2019-05-05 21:48:36
% DurationCPUTime: 1.41s
% Computational Cost: add. (509->127), mult. (932->193), div. (0->0), fcn. (863->4), ass. (0->90)
t53 = sin(qJ(4));
t48 = t53 ^ 2;
t55 = cos(qJ(4));
t50 = t55 ^ 2;
t79 = t48 + t50;
t77 = t55 * qJ(5);
t57 = pkin(4) + pkin(5);
t83 = t57 * t53;
t101 = t77 - t83;
t78 = t53 * qJ(5);
t100 = t55 * t57 + t78;
t99 = -0.2e1 * t53;
t98 = 0.2e1 * t55;
t56 = cos(qJ(3));
t97 = 0.2e1 * t56;
t96 = 0.2e1 * t57;
t95 = 2 * qJ(2);
t54 = sin(qJ(3));
t94 = pkin(8) * t54;
t93 = t53 * pkin(8);
t92 = t54 * pkin(4);
t91 = t56 * pkin(3);
t51 = t56 ^ 2;
t59 = -pkin(1) - pkin(7);
t90 = t51 * t59;
t36 = t53 * t54;
t89 = t53 * t55;
t37 = t53 * t56;
t88 = t54 * t59;
t40 = t55 * t56;
t87 = t55 * t59;
t10 = pkin(3) + t100;
t86 = t56 * t10;
t67 = -t55 * pkin(4) - t78;
t20 = -pkin(3) + t67;
t85 = t56 * t20;
t84 = t56 * t54;
t42 = t56 * t59;
t19 = t54 * pkin(3) - t56 * pkin(8) + qJ(2);
t82 = -t55 * t19 + t53 * t88;
t7 = t53 * t19 + t54 * t87;
t81 = t79 * t94;
t80 = t79 * pkin(8) ^ 2;
t49 = t54 ^ 2;
t29 = t49 + t51;
t76 = t55 * qJ(6);
t75 = t53 * t84;
t74 = t51 * t89;
t73 = t55 * t84;
t44 = t54 * qJ(5);
t4 = t44 + t7;
t72 = 0.2e1 * t44 + t7;
t71 = -t91 - t94;
t5 = t82 - t92;
t70 = t4 * t55 + t5 * t53;
t69 = t53 * t82 + t7 * t55;
t68 = -t85 + t94;
t66 = pkin(4) * t53 - t77;
t21 = (pkin(8) - qJ(6)) * t53;
t47 = t55 * pkin(8);
t22 = t47 - t76;
t65 = t21 * t53 + t22 * t55;
t64 = -t56 * t76 + t82;
t62 = qJ(2) ^ 2;
t61 = qJ(5) ^ 2;
t60 = 0.2e1 * qJ(5);
t52 = t59 ^ 2;
t41 = t51 * t52;
t39 = t55 * t54;
t38 = t50 * t51;
t35 = t48 * t51;
t34 = -0.2e1 * t89;
t31 = t54 * t77;
t30 = qJ(6) * t37;
t26 = t53 * t40;
t25 = 0.2e1 * t73;
t24 = 0.2e1 * t74;
t23 = -0.2e1 * t75;
t18 = 0.2e1 * t79 * pkin(8);
t17 = t29 * t59;
t16 = t29 * t55;
t15 = t79 * t54;
t14 = t29 * t53;
t13 = (t48 - t50) * t56;
t9 = t79 * t49 + t51;
t8 = t66 * t56 - t42;
t3 = t101 * t56 + t42;
t2 = t30 + t4;
t1 = -t57 * t54 + t64;
t6 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, -2 * pkin(1), t95, pkin(1) ^ 2 + t62, t51, -0.2e1 * t84, 0, t49, 0, 0, t54 * t95, t56 * t95, -0.2e1 * t17, t49 * t52 + t41 + t62, t38, -0.2e1 * t74, t25, t35, t23, t49, -0.2e1 * t53 * t90 - 0.2e1 * t54 * t82, -0.2e1 * t51 * t87 - 0.2e1 * t7 * t54 (-t53 * t7 + t55 * t82) * t97, t7 ^ 2 + t82 ^ 2 + t41, t38, t25, t24, t49, 0.2e1 * t75, t35, 0.2e1 * t37 * t8 - 0.2e1 * t5 * t54 (-t4 * t53 + t5 * t55) * t97, 0.2e1 * t4 * t54 - 0.2e1 * t40 * t8, t4 ^ 2 + t5 ^ 2 + t8 ^ 2, t38, t24, -0.2e1 * t73, t35, t23, t49, -0.2e1 * t1 * t54 - 0.2e1 * t3 * t37, 0.2e1 * t2 * t54 + 0.2e1 * t3 * t40 (-t1 * t55 + t2 * t53) * t97, t1 ^ 2 + t2 ^ 2 + t3 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, -pkin(1), 0, 0, 0, 0, 0, 0, 0, 0, -t29, t17, 0, 0, 0, 0, 0, 0, -t14, -t16, 0, t54 * t69 + t90, 0, 0, 0, 0, 0, 0, -t14, 0, t16, t54 * t70 - t8 * t56, 0, 0, 0, 0, 0, 0, -t14, t16, 0, t3 * t56 + (t1 * t53 + t2 * t55) * t54; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t29, 0, 0, 0, 0, 0, 0, 0, 0, 0, t9, 0, 0, 0, 0, 0, 0, 0, 0, 0, t9, 0, 0, 0, 0, 0, 0, 0, 0, 0, t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t56, 0, -t54, 0, t42, -t88, 0, 0, t26, -t13, t36, -t26, t39, 0, t55 * t42 + t71 * t53, -t53 * t42 + t71 * t55, t69, pkin(3) * t42 + pkin(8) * t69, t26, t36, t13, 0, -t39, -t26, -t68 * t53 - t8 * t55, t70, -t8 * t53 + t55 * t68, pkin(8) * t70 + t8 * t20, t26, t13, -t36, -t26, t39, 0, -t21 * t54 + t3 * t55 - t53 * t86, t22 * t54 + t3 * t53 + t55 * t86 (-t21 * t56 - t2) * t55 + (t22 * t56 - t1) * t53, t1 * t21 + t3 * t10 + t2 * t22; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t56, -t54, 0, 0, 0, 0, 0, 0, 0, 0, t40, -t37, t15, t81 + t91, 0, 0, 0, 0, 0, 0, t40, t15, t37, t81 - t85, 0, 0, 0, 0, 0, 0, t40, t37, -t15, t54 * t65 + t86; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t48, 0.2e1 * t89, 0, t50, 0, 0, pkin(3) * t98, pkin(3) * t99, t18, pkin(3) ^ 2 + t80, t48, 0, t34, 0, 0, t50, -0.2e1 * t20 * t55, t18, t20 * t99, t20 ^ 2 + t80, t48, t34, 0, t50, 0, 0, t10 * t98, 0.2e1 * t10 * t53, -0.2e1 * t65, t10 ^ 2 + t21 ^ 2 + t22 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t40, 0, -t37, t54, -t82, -t7, 0, 0, 0, t40, 0, t54, t37, 0, -t82 + 0.2e1 * t92, t67 * t56, t72, -t5 * pkin(4) + t4 * qJ(5), 0, 0, -t40, 0, -t37, t54, t54 * t96 - t64, t30 + t72, t100 * t56, t2 * qJ(5) - t1 * t57; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t36, -t39, 0, 0, 0, 0, 0, 0, 0, 0, -t36, 0, t39, -pkin(4) * t36 + t31, 0, 0, 0, 0, 0, 0, -t36, t39, 0, -t54 * t83 + t31; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t53, 0, t55, 0, -t93, -t47, 0, 0, 0, t53, 0, 0, -t55, 0, -t93, -t66, t47, -t66 * pkin(8), 0, 0, -t53, 0, t55, 0, -t21, t22, -t101, t22 * qJ(5) - t21 * t57; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0.2e1 * pkin(4), 0, t60, pkin(4) ^ 2 + t61, 0, 0, 0, 0, 0, 1, t96, t60, 0, t57 ^ 2 + t61; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t54, t40, 0, t5, 0, 0, 0, 0, 0, 0, -t54, 0, -t40, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t36, 0, 0, 0, 0, 0, 0, 0, 0, 0, t36; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t53, 0, t93, 0, 0, 0, 0, 0, 0, 0, 0, -t53, t21; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, -pkin(4), 0, 0, 0, 0, 0, 0, -1, 0, 0, -t57; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t37, t40, 0, t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t55, t53, 0, t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1;];
MM_reg  = t6;
