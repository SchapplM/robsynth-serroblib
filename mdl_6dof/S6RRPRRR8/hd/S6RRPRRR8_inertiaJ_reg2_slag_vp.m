% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRPRRR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5,d6,theta3]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 14:07
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRPRRR8_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR8_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRRR8_inertiaJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 22:40:42
% EndTime: 2019-05-06 22:40:53
% DurationCPUTime: 2.28s
% Computational Cost: add. (3570->192), mult. (7305->370), div. (0->0), fcn. (8400->10), ass. (0->94)
t108 = cos(qJ(4));
t79 = sin(pkin(11));
t80 = cos(pkin(11));
t83 = sin(qJ(4));
t57 = -t108 * t80 + t79 * t83;
t59 = t108 * t79 + t80 * t83;
t82 = sin(qJ(5));
t86 = cos(qJ(5));
t36 = t57 * t86 + t59 * t82;
t69 = -pkin(3) * t80 - pkin(2);
t47 = pkin(4) * t57 + t69;
t26 = pkin(5) * t36 + t47;
t119 = 0.2e1 * t26;
t118 = 0.2e1 * t47;
t117 = 0.2e1 * t69;
t87 = cos(qJ(2));
t116 = -0.2e1 * t87;
t115 = 0.2e1 * t87;
t84 = sin(qJ(2));
t77 = t84 ^ 2;
t114 = t77 * pkin(7);
t81 = sin(qJ(6));
t113 = t81 * pkin(5);
t112 = t82 * pkin(4);
t72 = t84 * pkin(7);
t48 = t59 * t84;
t50 = t57 * t84;
t29 = t48 * t86 - t50 * t82;
t104 = t80 * t84;
t61 = -pkin(2) * t87 - qJ(3) * t84 - pkin(1);
t55 = t80 * t61;
t39 = -pkin(8) * t104 + t55 + (-pkin(7) * t79 - pkin(3)) * t87;
t106 = t79 * t84;
t103 = t80 * t87;
t45 = pkin(7) * t103 + t61 * t79;
t41 = -pkin(8) * t106 + t45;
t25 = t108 * t41 + t39 * t83;
t19 = -pkin(9) * t48 + t25;
t100 = t86 * t19;
t110 = t87 * pkin(4);
t24 = t108 * t39 - t41 * t83;
t16 = pkin(9) * t50 - t110 + t24;
t9 = t16 * t82 + t100;
t7 = -pkin(10) * t29 + t9;
t85 = cos(qJ(6));
t111 = t85 * t7;
t109 = t87 * pkin(5);
t107 = t79 * t80;
t105 = t79 * t87;
t101 = t84 * t87;
t99 = pkin(8) + qJ(3);
t60 = pkin(3) * t106 + t72;
t75 = t79 ^ 2;
t76 = t80 ^ 2;
t98 = t75 + t76;
t97 = 0.2e1 * t101;
t96 = t85 * t112;
t95 = t79 * t104;
t31 = -t48 * t82 - t50 * t86;
t8 = t16 * t86 - t19 * t82;
t6 = -pkin(10) * t31 - t109 + t8;
t1 = t6 * t85 - t7 * t81;
t62 = t99 * t79;
t63 = t99 * t80;
t42 = -t108 * t62 - t63 * t83;
t32 = -pkin(9) * t59 + t42;
t43 = t108 * t63 - t62 * t83;
t33 = -pkin(9) * t57 + t43;
t17 = t32 * t86 - t33 * t82;
t74 = t86 * pkin(4);
t70 = t74 + pkin(5);
t51 = -t112 * t81 + t70 * t85;
t40 = pkin(4) * t48 + t60;
t2 = t6 * t81 + t111;
t93 = -pkin(2) * t84 + qJ(3) * t87;
t18 = t32 * t82 + t33 * t86;
t44 = -pkin(7) * t105 + t55;
t92 = -t44 * t79 + t45 * t80;
t89 = pkin(7) ^ 2;
t78 = t87 ^ 2;
t73 = t85 * pkin(5);
t71 = t77 * t89;
t52 = t70 * t81 + t96;
t38 = -t57 * t82 + t59 * t86;
t23 = -t36 * t81 + t38 * t85;
t21 = t36 * t85 + t38 * t81;
t20 = pkin(5) * t29 + t40;
t15 = -t29 * t81 + t31 * t85;
t13 = t29 * t85 + t31 * t81;
t11 = -pkin(10) * t36 + t18;
t10 = -pkin(10) * t38 + t17;
t4 = t10 * t81 + t11 * t85;
t3 = t10 * t85 - t11 * t81;
t5 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t77, t97, 0, t78, 0, 0, pkin(1) * t115, -0.2e1 * pkin(1) * t84, 0.2e1 * (t77 + t78) * pkin(7), pkin(1) ^ 2 + t78 * t89 + t71, t76 * t77, -0.2e1 * t77 * t107, -0.2e1 * t80 * t101, t75 * t77, t79 * t97, t78, 0.2e1 * t114 * t79 - 0.2e1 * t44 * t87, 0.2e1 * t114 * t80 + 0.2e1 * t45 * t87, 0.2e1 * (-t44 * t80 - t45 * t79) * t84, t44 ^ 2 + t45 ^ 2 + t71, t50 ^ 2, 0.2e1 * t50 * t48, -t50 * t116, t48 ^ 2, -t48 * t116, t78, -0.2e1 * t24 * t87 + 0.2e1 * t48 * t60, 0.2e1 * t25 * t87 - 0.2e1 * t50 * t60, 0.2e1 * t24 * t50 - 0.2e1 * t25 * t48, t24 ^ 2 + t25 ^ 2 + t60 ^ 2, t31 ^ 2, -0.2e1 * t31 * t29, t31 * t116, t29 ^ 2, t29 * t115, t78, 0.2e1 * t29 * t40 - 0.2e1 * t8 * t87, 0.2e1 * t31 * t40 + 0.2e1 * t87 * t9, -0.2e1 * t29 * t9 - 0.2e1 * t31 * t8, t40 ^ 2 + t8 ^ 2 + t9 ^ 2, t15 ^ 2, -0.2e1 * t15 * t13, t15 * t116, t13 ^ 2, t13 * t115, t78, -0.2e1 * t1 * t87 + 0.2e1 * t13 * t20, 0.2e1 * t15 * t20 + 0.2e1 * t2 * t87, -0.2e1 * t1 * t15 - 0.2e1 * t13 * t2, t1 ^ 2 + t2 ^ 2 + t20 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t84, 0, t87, 0, -t72, -t87 * pkin(7), 0, 0, t95 (-t75 + t76) * t84, -t105, -t95, -t103, 0, -pkin(7) * t104 + t79 * t93, pkin(7) * t106 + t80 * t93, t92, -pkin(2) * t72 + qJ(3) * t92, -t50 * t59, -t48 * t59 + t50 * t57, -t59 * t87, t48 * t57, t57 * t87, 0, -t42 * t87 + t48 * t69 + t57 * t60, t43 * t87 - t50 * t69 + t59 * t60, -t24 * t59 - t25 * t57 + t42 * t50 - t43 * t48, t24 * t42 + t25 * t43 + t60 * t69, t31 * t38, -t29 * t38 - t31 * t36, -t38 * t87, t29 * t36, t36 * t87, 0, -t17 * t87 + t29 * t47 + t36 * t40, t18 * t87 + t31 * t47 + t38 * t40, -t17 * t31 - t18 * t29 - t36 * t9 - t38 * t8, t17 * t8 + t18 * t9 + t40 * t47, t15 * t23, -t13 * t23 - t15 * t21, -t23 * t87, t13 * t21, t21 * t87, 0, t13 * t26 + t20 * t21 - t3 * t87, t15 * t26 + t20 * t23 + t4 * t87, -t1 * t23 - t13 * t4 - t15 * t3 - t2 * t21, t1 * t3 + t2 * t4 + t20 * t26; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t75, 0.2e1 * t107, 0, t76, 0, 0, 0.2e1 * pkin(2) * t80, -0.2e1 * pkin(2) * t79, 0.2e1 * t98 * qJ(3), qJ(3) ^ 2 * t98 + pkin(2) ^ 2, t59 ^ 2, -0.2e1 * t59 * t57, 0, t57 ^ 2, 0, 0, t57 * t117, t59 * t117, -0.2e1 * t42 * t59 - 0.2e1 * t43 * t57, t42 ^ 2 + t43 ^ 2 + t69 ^ 2, t38 ^ 2, -0.2e1 * t38 * t36, 0, t36 ^ 2, 0, 0, t36 * t118, t38 * t118, -0.2e1 * t17 * t38 - 0.2e1 * t18 * t36, t17 ^ 2 + t18 ^ 2 + t47 ^ 2, t23 ^ 2, -0.2e1 * t23 * t21, 0, t21 ^ 2, 0, 0, t21 * t119, t23 * t119, -0.2e1 * t21 * t4 - 0.2e1 * t23 * t3, t26 ^ 2 + t3 ^ 2 + t4 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t106, t104, 0, t72, 0, 0, 0, 0, 0, 0, t48, -t50, 0, t60, 0, 0, 0, 0, 0, 0, t29, t31, 0, t40, 0, 0, 0, 0, 0, 0, t13, t15, 0, t20; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t80, t79, 0, -pkin(2), 0, 0, 0, 0, 0, 0, t57, t59, 0, t69, 0, 0, 0, 0, 0, 0, t36, t38, 0, t47, 0, 0, 0, 0, 0, 0, t21, t23, 0, t26; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t50, 0, -t48, -t87, t24, -t25, 0, 0, 0, 0, t31, 0, -t29, -t87, -t110 * t86 + t8, -t100 + (-t16 + t110) * t82 (-t29 * t82 - t31 * t86) * pkin(4) (t8 * t86 + t82 * t9) * pkin(4), 0, 0, t15, 0, -t13, -t87, -t51 * t87 + t1, t52 * t87 - t2, -t13 * t52 - t15 * t51, t1 * t51 + t2 * t52; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t59, 0, -t57, 0, t42, -t43, 0, 0, 0, 0, t38, 0, -t36, 0, t17, -t18 (-t36 * t82 - t38 * t86) * pkin(4) (t17 * t86 + t18 * t82) * pkin(4), 0, 0, t23, 0, -t21, 0, t3, -t4, -t21 * t52 - t23 * t51, t3 * t51 + t4 * t52; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t74, -0.2e1 * t112, 0 (t82 ^ 2 + t86 ^ 2) * pkin(4) ^ 2, 0, 0, 0, 0, 0, 1, 0.2e1 * t51, -0.2e1 * t52, 0, t51 ^ 2 + t52 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t31, 0, -t29, -t87, t8, -t9, 0, 0, 0, 0, t15, 0, -t13, -t87, -t109 * t85 + t1, -t111 + (-t6 + t109) * t81 (-t13 * t81 - t15 * t85) * pkin(5) (t1 * t85 + t2 * t81) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t38, 0, -t36, 0, t17, -t18, 0, 0, 0, 0, t23, 0, -t21, 0, t3, -t4 (-t21 * t81 - t23 * t85) * pkin(5) (t3 * t85 + t4 * t81) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t74, -t112, 0, 0, 0, 0, 0, 0, 0, 1, t51 + t73, -t96 + (-pkin(5) - t70) * t81, 0 (t51 * t85 + t52 * t81) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t73, -0.2e1 * t113, 0 (t81 ^ 2 + t85 ^ 2) * pkin(5) ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t15, 0, -t13, -t87, t1, -t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t23, 0, -t21, 0, t3, -t4, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t51, -t52, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t73, -t113, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t5;
