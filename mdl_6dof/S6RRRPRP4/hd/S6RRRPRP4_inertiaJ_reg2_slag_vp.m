% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRRPRP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 16:46
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRRPRP4_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP4_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRRPRP4_inertiaJ_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 07:47:27
% EndTime: 2019-05-07 07:47:35
% DurationCPUTime: 1.87s
% Computational Cost: add. (1177->139), mult. (2090->208), div. (0->0), fcn. (2309->6), ass. (0->102)
t72 = sin(qJ(5));
t67 = t72 ^ 2;
t75 = cos(qJ(5));
t69 = t75 ^ 2;
t53 = t67 + t69;
t76 = cos(qJ(3));
t116 = t76 * pkin(2);
t61 = -pkin(3) - t116;
t55 = -pkin(9) + t61;
t27 = t53 * t55;
t129 = -t72 * pkin(5) + t75 * qJ(6);
t73 = sin(qJ(3));
t74 = sin(qJ(2));
t77 = cos(qJ(2));
t39 = t73 * t74 - t76 * t77;
t37 = t39 ^ 2;
t41 = t73 * t77 + t76 * t74;
t38 = t41 ^ 2;
t117 = t73 * pkin(2);
t58 = qJ(4) + t117;
t128 = t58 ^ 2;
t127 = 0.2e1 * t39;
t126 = -0.2e1 * t41;
t125 = 0.2e1 * t58;
t62 = -t77 * pkin(2) - pkin(1);
t124 = 0.2e1 * t62;
t123 = 0.2e1 * t72;
t122 = -0.2e1 * t75;
t121 = 0.2e1 * t77;
t79 = 0.2e1 * qJ(4);
t120 = pkin(3) + pkin(9);
t119 = -pkin(8) - pkin(7);
t118 = t41 * pkin(5);
t52 = t119 * t77;
t93 = t119 * t74;
t24 = -t76 * t52 + t73 * t93;
t51 = pkin(5) * t75 + t72 * qJ(6);
t9 = (-pkin(4) - t51) * t39 + t24;
t115 = t9 * t75;
t114 = t41 * t55;
t113 = t41 * t120;
t111 = t58 * t39;
t31 = t72 * t39;
t32 = t72 * t41;
t110 = t72 * t55;
t109 = t72 * t120;
t108 = t75 * t39;
t34 = t75 * t41;
t107 = t75 * t72;
t85 = -t41 * qJ(4) + t62;
t11 = t120 * t39 + t85;
t22 = -t73 * t52 - t76 * t93;
t16 = t41 * pkin(4) + t22;
t7 = t75 * t11 + t72 * t16;
t47 = qJ(4) - t129;
t35 = t47 + t117;
t106 = t35 + t47;
t105 = t120 * t27;
t104 = t53 * t55 ^ 2;
t103 = t53 * t120 ^ 2;
t68 = t74 ^ 2;
t70 = t77 ^ 2;
t102 = t68 + t70;
t101 = qJ(4) * t39;
t100 = t41 * qJ(6);
t99 = t58 * qJ(4);
t97 = qJ(4) + t58;
t96 = t39 * t126;
t95 = t37 * t107;
t94 = t39 * t34;
t92 = t22 ^ 2 + t24 ^ 2;
t91 = t72 * t11 - t75 * t16;
t4 = t100 + t7;
t5 = t91 - t118;
t1 = t4 * t72 - t5 * t75;
t90 = t7 * t72 - t75 * t91;
t89 = -t35 * t39 + t114;
t88 = -t39 * t47 - t113;
t87 = t111 - t114;
t86 = t101 + t113;
t84 = 0.2e1 * t22 * t41 - 0.2e1 * t24 * t39;
t81 = -0.2e1 * pkin(3);
t80 = qJ(4) ^ 2;
t65 = t75 * t120;
t57 = -0.2e1 * t107;
t56 = 0.2e1 * t107;
t50 = t75 * t55;
t46 = t53 * t120;
t36 = -0.2e1 * t46;
t33 = t69 * t37;
t29 = t67 * t37;
t28 = t39 * t107;
t26 = 0.2e1 * t27;
t21 = t32 * t127;
t20 = (-t55 + t120) * t53;
t19 = (-t67 + t69) * t39;
t18 = t39 * pkin(3) + t85;
t17 = -t39 * pkin(4) + t24;
t15 = t17 * t75;
t14 = t17 * t72;
t8 = t9 * t72;
t2 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t68, t74 * t121, 0, t70, 0, 0, pkin(1) * t121, -0.2e1 * pkin(1) * t74, 0.2e1 * t102 * pkin(7), t102 * pkin(7) ^ 2 + pkin(1) ^ 2, t38, t96, 0, t37, 0, 0, t39 * t124, t41 * t124, t84, t62 ^ 2 + t92, 0, 0, 0, t38, t96, t37, t84, -0.2e1 * t18 * t39, t18 * t126, t18 ^ 2 + t92, t29, 0.2e1 * t95, t21, t33, 0.2e1 * t94, t38, -0.2e1 * t17 * t108 - 0.2e1 * t41 * t91, 0.2e1 * t17 * t31 - 0.2e1 * t7 * t41 (t7 * t75 + t72 * t91) * t127, t17 ^ 2 + t7 ^ 2 + t91 ^ 2, t29, t21, -0.2e1 * t95, t38, -0.2e1 * t94, t33, -0.2e1 * t9 * t108 - 0.2e1 * t5 * t41 (t4 * t75 + t5 * t72) * t127, -0.2e1 * t9 * t31 + 0.2e1 * t4 * t41, t4 ^ 2 + t5 ^ 2 + t9 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t74, 0, t77, 0, -t74 * pkin(7), -t77 * pkin(7), 0, 0, 0, 0, t41, 0, -t39, 0, -t22, -t24 (-t39 * t73 - t41 * t76) * pkin(2) (-t22 * t76 + t24 * t73) * pkin(2), 0, -t41, t39, 0, 0, 0, t61 * t41 - t111, t22, t24, t22 * t61 + t24 * t58, t28, t19, t34, -t28, -t32, 0, -t87 * t75 + t14, t87 * t72 + t15, -t90, t17 * t58 + t90 * t55, t28, t34, -t19, 0, t32, -t28, t89 * t75 + t8, -t1, t89 * t72 - t115, t1 * t55 + t9 * t35; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t116, -0.2e1 * t117, 0 (t73 ^ 2 + t76 ^ 2) * pkin(2) ^ 2, 1, 0, 0, 0, 0, 0, 0, 0.2e1 * t61, t125, t61 ^ 2 + t128, t69, t57, 0, t67, 0, 0, t58 * t123, t75 * t125, -t26, t104 + t128, t69, 0, t56, 0, 0, t67, t35 * t123, -t26, t35 * t122, t35 ^ 2 + t104; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t41, 0, -t39, 0, -t22, -t24, 0, 0, 0, -t41, t39, 0, 0, 0, -pkin(3) * t41 - t101, t22, t24, -t22 * pkin(3) + t24 * qJ(4), t28, t19, t34, -t28, -t32, 0, -t86 * t75 + t14, t86 * t72 + t15, -t90, t17 * qJ(4) - t120 * t90, t28, t34, -t19, 0, t32, -t28, t88 * t75 + t8, -t1, t88 * t72 - t115, -t1 * t120 + t9 * t47; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t116, -t117, 0, 0, 1, 0, 0, 0, 0, 0, 0, t81 - t116, t79 + t117, -t61 * pkin(3) + t99, t69, t57, 0, t67, 0, 0, t97 * t72, t97 * t75, t20, t99 - t105, t69, 0, t56, 0, 0, t67, t106 * t72, t20, -t106 * t75, t35 * t47 - t105; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, t81, t79, pkin(3) ^ 2 + t80, t69, t57, 0, t67, 0, 0, t72 * t79, t75 * t79, -t36, t80 + t103, t69, 0, t56, 0, 0, t67, t47 * t123, -t36, t47 * t122, t47 ^ 2 + t103; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t41, 0, 0, t22, 0, 0, 0, 0, 0, 0, t34, -t32, 0, t90, 0, 0, 0, 0, 0, 0, t34, 0, t32, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, t61, 0, 0, 0, 0, 0, 0, 0, 0, -t53, t27, 0, 0, 0, 0, 0, 0, 0, -t53, 0, t27; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, -pkin(3), 0, 0, 0, 0, 0, 0, 0, 0, -t53, -t46, 0, 0, 0, 0, 0, 0, 0, -t53, 0, -t46; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t53, 0, 0, 0, 0, 0, 0, 0, 0, 0, t53; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t31, 0, t108, t41, -t91, -t7, 0, 0, 0, t31, 0, t41, -t108, 0, -t91 + 0.2e1 * t118, t129 * t39, 0.2e1 * t100 + t7, -t5 * pkin(5) + t4 * qJ(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t75, 0, -t72, 0, t50, -t110, 0, 0, 0, t75, 0, 0, t72, 0, t50, -t51, t110, t51 * t55; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t75, 0, -t72, 0, -t65, t109, 0, 0, 0, t75, 0, 0, t72, 0, -t65, -t51, -t109, -t51 * t120; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t75, -t72, 0, 0, 0, 0, 0, 0, 0, 0, t75, 0, t72, t51; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0.2e1 * pkin(5), 0, 0.2e1 * qJ(6), pkin(5) ^ 2 + qJ(6) ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t41, t31, 0, t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t75, 0, -t50; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t75, 0, t65; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t75; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, -pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1;];
MM_reg  = t2;
