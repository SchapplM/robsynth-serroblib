% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRRRRP11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d4,d5]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 02:58
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRRRRP11_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP11_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRRP11_inertiaJ_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-08 07:07:51
% EndTime: 2019-05-08 07:08:12
% DurationCPUTime: 4.94s
% Computational Cost: add. (7060->366), mult. (18687->688), div. (0->0), fcn. (21388->12), ass. (0->189)
t138 = sin(qJ(3));
t142 = cos(qJ(3));
t132 = sin(pkin(7));
t134 = cos(pkin(7));
t135 = cos(pkin(6));
t143 = cos(qJ(2));
t117 = t135 * t143 * pkin(1);
t133 = sin(pkin(6));
t139 = sin(qJ(2));
t174 = t133 * t139;
t74 = t135 * pkin(2) + t117 + (-pkin(10) * t134 - pkin(9)) * t174;
t83 = (-pkin(10) * t132 * t139 - pkin(2) * t143 - pkin(1)) * t133;
t151 = t132 * t83 + t134 * t74;
t173 = t133 * t143;
t196 = pkin(1) * t139;
t100 = pkin(9) * t173 + t135 * t196;
t171 = t134 * t143;
t157 = t133 * t171;
t67 = (t132 * t135 + t157) * pkin(10) + t100;
t32 = -t138 * t67 + t151 * t142;
t137 = sin(qJ(4));
t141 = cos(qJ(4));
t176 = t132 * t138;
t73 = t135 * t176 + (t138 * t171 + t139 * t142) * t133;
t92 = -t132 * t173 + t135 * t134;
t54 = t73 * t137 - t92 * t141;
t51 = t54 ^ 2;
t175 = t132 * t142;
t71 = -t135 * t175 + t138 * t174 - t142 * t157;
t208 = t71 ^ 2;
t94 = -t141 * t134 + t137 * t176;
t93 = t94 ^ 2;
t207 = -0.2e1 * t54;
t206 = -0.2e1 * t71;
t136 = sin(qJ(5));
t140 = cos(qJ(5));
t96 = t137 * t134 + t141 * t176;
t77 = t136 * t96 + t140 * t175;
t205 = -0.2e1 * t77;
t204 = -0.2e1 * t96;
t203 = 0.2e1 * t132;
t202 = 0.2e1 * t133;
t201 = -0.2e1 * t137;
t200 = 0.2e1 * t137;
t199 = 0.2e1 * t141;
t198 = t54 * pkin(5);
t197 = t94 * pkin(5);
t195 = pkin(2) * t138;
t194 = pkin(2) * t142;
t193 = pkin(4) * t140;
t192 = pkin(11) * t136;
t191 = t136 * pkin(5);
t190 = t137 * pkin(11);
t43 = t54 * t94;
t46 = -t132 * t74 + t134 * t83;
t24 = t71 * pkin(3) - t73 * pkin(11) + t46;
t33 = t151 * t138 + t142 * t67;
t29 = t92 * pkin(11) + t33;
t8 = -t137 * t29 + t141 * t24;
t6 = -t71 * pkin(4) - t8;
t189 = t6 * t136;
t188 = t6 * t140;
t187 = -qJ(6) - pkin(12);
t48 = t136 * t54;
t161 = pkin(10) * t175;
t88 = t161 + (pkin(11) + t195) * t134;
t89 = (-pkin(3) * t142 - pkin(11) * t138 - pkin(2)) * t132;
t60 = -t137 * t88 + t141 * t89;
t58 = pkin(4) * t175 - t60;
t186 = t136 * t58;
t90 = t136 * t94;
t185 = t137 * t71;
t49 = t140 * t54;
t184 = t140 * t58;
t91 = t140 * t94;
t183 = t141 * t71;
t56 = t92 * t137 + t73 * t141;
t39 = t56 * t136 - t71 * t140;
t35 = t39 * t140;
t41 = t71 * t136 + t56 * t140;
t36 = t41 * t136;
t182 = t54 * t141;
t181 = t56 * t137;
t69 = t77 * t140;
t79 = -t136 * t175 + t140 * t96;
t70 = t79 * t136;
t180 = t94 * t141;
t179 = t96 * t137;
t126 = t132 ^ 2;
t178 = t126 * t142;
t127 = t133 ^ 2;
t177 = t127 * t143;
t172 = t134 * t138;
t170 = t136 * t137;
t169 = t136 * t140;
t168 = t136 * t141;
t123 = t140 * t137;
t167 = t140 * t141;
t128 = t136 ^ 2;
t130 = t140 ^ 2;
t166 = t128 + t130;
t165 = 0.2e1 * t175;
t164 = t135 * t202;
t163 = t137 * t199;
t162 = pkin(11) * t167;
t160 = t39 * t170;
t159 = t71 * t175;
t158 = t77 * t170;
t156 = t137 * t175;
t155 = t141 * t175;
t28 = -t92 * pkin(3) - t32;
t12 = t54 * pkin(4) - t56 * pkin(12) + t28;
t9 = t137 * t24 + t141 * t29;
t7 = t71 * pkin(12) + t9;
t3 = t140 * t12 - t136 * t7;
t115 = pkin(10) * t176;
t87 = t115 + (-pkin(3) - t194) * t134;
t57 = t94 * pkin(4) - t96 * pkin(12) + t87;
t61 = t137 * t89 + t141 * t88;
t59 = -pkin(12) * t175 + t61;
t30 = -t136 * t59 + t140 * t57;
t105 = -t141 * pkin(4) - t137 * pkin(12) - pkin(3);
t101 = t140 * t105;
t154 = -qJ(6) * t123 + t101;
t4 = t136 * t12 + t140 * t7;
t153 = -t3 * t136 + t4 * t140;
t152 = -t8 * t137 + t9 * t141;
t31 = t136 * t57 + t140 * t59;
t150 = -t30 * t136 + t31 * t140;
t84 = -pkin(11) * t168 + t101;
t85 = t136 * t105 + t162;
t149 = -t136 * t84 + t140 * t85;
t148 = -t60 * t137 + t61 * t141;
t147 = -t41 * qJ(6) + t3;
t146 = -t79 * qJ(6) + t30;
t145 = pkin(11) ^ 2;
t131 = t141 ^ 2;
t129 = t137 ^ 2;
t125 = t129 * t145;
t124 = -t140 * pkin(5) - pkin(4);
t122 = t130 * t129;
t121 = t128 * t129;
t119 = t126 * t142 ^ 2;
t118 = 0.2e1 * t169;
t114 = t136 * t123;
t110 = t167 * t201;
t109 = -0.2e1 * t129 * t169;
t108 = t136 * t163;
t107 = t187 * t140;
t106 = t187 * t136;
t104 = (pkin(11) + t191) * t137;
t102 = (-t128 + t130) * t137;
t99 = pkin(2) * t172 + t161;
t98 = -pkin(9) * t174 + t117;
t97 = t134 * t194 - t115;
t80 = t162 + (-qJ(6) * t137 + t105) * t136;
t76 = t79 ^ 2;
t75 = t77 ^ 2;
t68 = (-pkin(5) - t192) * t141 + t154;
t65 = t79 * t123;
t63 = 0.2e1 * t79 * t94;
t62 = t94 * t205;
t53 = t94 * t123 - t79 * t141;
t52 = t77 * t141 - t94 * t170;
t47 = t79 * t205;
t45 = -t136 * t77 + t79 * t140;
t44 = (-t70 - t69) * t137;
t42 = t77 * pkin(5) + t58;
t38 = t41 ^ 2;
t37 = t39 ^ 2;
t34 = t41 * t123;
t27 = t41 * t79;
t26 = t39 * t77;
t23 = -t77 * qJ(6) + t31;
t22 = 0.2e1 * t41 * t54;
t21 = t39 * t207;
t20 = t54 * t123 - t41 * t141;
t19 = t39 * t141 - t54 * t170;
t18 = t146 + t197;
t17 = -0.2e1 * t41 * t39;
t16 = -t136 * t39 + t41 * t140;
t15 = t41 * t94 + t79 * t54;
t14 = -t39 * t94 - t77 * t54;
t13 = (-t36 - t35) * t137;
t10 = -t79 * t39 - t41 * t77;
t5 = t39 * pkin(5) + t6;
t2 = -t39 * qJ(6) + t4;
t1 = t147 + t198;
t11 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t127 * t139 ^ 2, 0.2e1 * t139 * t177, t139 * t164, t127 * t143 ^ 2, t143 * t164, t135 ^ 2, 0.2e1 * pkin(1) * t177 + 0.2e1 * t98 * t135, -0.2e1 * t100 * t135 - 0.2e1 * t127 * t196 (t100 * t143 - t139 * t98) * t202, t127 * pkin(1) ^ 2 + t100 ^ 2 + t98 ^ 2, t73 ^ 2, t73 * t206, 0.2e1 * t73 * t92, t208, t92 * t206, t92 ^ 2, 0.2e1 * t32 * t92 + 0.2e1 * t46 * t71, -0.2e1 * t33 * t92 + 0.2e1 * t46 * t73, -0.2e1 * t32 * t73 - 0.2e1 * t33 * t71, t32 ^ 2 + t33 ^ 2 + t46 ^ 2, t56 ^ 2, t56 * t207, 0.2e1 * t56 * t71, t51, t54 * t206, t208, 0.2e1 * t28 * t54 + 0.2e1 * t8 * t71, 0.2e1 * t28 * t56 - 0.2e1 * t9 * t71, -0.2e1 * t9 * t54 - 0.2e1 * t8 * t56, t28 ^ 2 + t8 ^ 2 + t9 ^ 2, t38, t17, t22, t37, t21, t51, 0.2e1 * t3 * t54 + 0.2e1 * t6 * t39, -0.2e1 * t4 * t54 + 0.2e1 * t6 * t41, -0.2e1 * t3 * t41 - 0.2e1 * t4 * t39, t3 ^ 2 + t4 ^ 2 + t6 ^ 2, t38, t17, t22, t37, t21, t51, 0.2e1 * t1 * t54 + 0.2e1 * t5 * t39, -0.2e1 * t2 * t54 + 0.2e1 * t5 * t41, -0.2e1 * t1 * t41 - 0.2e1 * t2 * t39, t1 ^ 2 + t2 ^ 2 + t5 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t174, 0, t173, t135, t98, -t100, 0, 0, t73 * t176 (-t138 * t71 + t142 * t73) * t132, t73 * t134 + t92 * t176, -t159, -t71 * t134 + t92 * t175, t92 * t134, t32 * t134 + t97 * t92 + (-pkin(2) * t71 - t142 * t46) * t132, -t33 * t134 - t99 * t92 + (-pkin(2) * t73 + t138 * t46) * t132, -t99 * t71 - t97 * t73 + (-t138 * t32 + t142 * t33) * t132, -t46 * t132 * pkin(2) + t32 * t97 + t33 * t99, t56 * t96, -t96 * t54 - t56 * t94, -t56 * t175 + t96 * t71, t43, t54 * t175 - t94 * t71, -t159, -t8 * t175 + t28 * t94 + t87 * t54 + t60 * t71, t9 * t175 + t28 * t96 + t87 * t56 - t61 * t71, -t61 * t54 - t60 * t56 - t8 * t96 - t9 * t94, t28 * t87 + t8 * t60 + t9 * t61, t27, t10, t15, t26, t14, t43, t3 * t94 + t30 * t54 + t58 * t39 + t6 * t77, -t31 * t54 - t4 * t94 + t58 * t41 + t6 * t79, -t3 * t79 - t30 * t41 - t31 * t39 - t4 * t77, t3 * t30 + t4 * t31 + t6 * t58, t27, t10, t15, t26, t14, t43, t1 * t94 + t18 * t54 + t42 * t39 + t5 * t77, -t2 * t94 - t23 * t54 + t42 * t41 + t5 * t79, -t1 * t79 - t18 * t41 - t2 * t77 - t23 * t39, t1 * t18 + t2 * t23 + t5 * t42; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t126 * t138 ^ 2, 0.2e1 * t138 * t178, t172 * t203, t119, t134 * t165, t134 ^ 2, 0.2e1 * pkin(2) * t178 + 0.2e1 * t97 * t134, -0.2e1 * t126 * t195 - 0.2e1 * t99 * t134 (-t138 * t97 + t142 * t99) * t203, t126 * pkin(2) ^ 2 + t97 ^ 2 + t99 ^ 2, t96 ^ 2, t94 * t204, t175 * t204, t93, t94 * t165, t119, -0.2e1 * t60 * t175 + 0.2e1 * t87 * t94, 0.2e1 * t61 * t175 + 0.2e1 * t87 * t96, -0.2e1 * t60 * t96 - 0.2e1 * t61 * t94, t60 ^ 2 + t61 ^ 2 + t87 ^ 2, t76, t47, t63, t75, t62, t93, 0.2e1 * t30 * t94 + 0.2e1 * t58 * t77, -0.2e1 * t31 * t94 + 0.2e1 * t58 * t79, -0.2e1 * t30 * t79 - 0.2e1 * t31 * t77, t30 ^ 2 + t31 ^ 2 + t58 ^ 2, t76, t47, t63, t75, t62, t93, 0.2e1 * t18 * t94 + 0.2e1 * t42 * t77, -0.2e1 * t23 * t94 + 0.2e1 * t42 * t79, -0.2e1 * t18 * t79 - 0.2e1 * t23 * t77, t18 ^ 2 + t23 ^ 2 + t42 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t73, 0, -t71, t92, t32, -t33, 0, 0, t181, -t137 * t54 + t56 * t141, t185, -t182, t183, 0, -pkin(3) * t54 - pkin(11) * t185 - t28 * t141, -pkin(3) * t56 - pkin(11) * t183 + t28 * t137 (t181 - t182) * pkin(11) + t152, -t28 * pkin(3) + pkin(11) * t152, t34, t13, t20, t160, t19, -t182, -t3 * t141 + t84 * t54 + (pkin(11) * t39 + t189) * t137, t4 * t141 - t85 * t54 + (pkin(11) * t41 + t188) * t137, -t85 * t39 - t84 * t41 + (-t136 * t4 - t140 * t3) * t137, t190 * t6 + t3 * t84 + t4 * t85, t34, t13, t20, t160, t19, -t182, -t1 * t141 + t104 * t39 + t170 * t5 + t68 * t54, t104 * t41 + t123 * t5 + t2 * t141 - t80 * t54, -t80 * t39 - t68 * t41 + (-t1 * t140 - t136 * t2) * t137, t1 * t68 + t5 * t104 + t2 * t80; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t176, 0, t175, t134, t97, -t99, 0, 0, t179, -t137 * t94 + t96 * t141, -t156, -t180, -t155, 0, -pkin(3) * t94 + pkin(11) * t156 - t87 * t141, -pkin(3) * t96 + pkin(11) * t155 + t87 * t137 (t179 - t180) * pkin(11) + t148, -t87 * pkin(3) + pkin(11) * t148, t65, t44, t53, t158, t52, -t180, -t30 * t141 + t84 * t94 + (pkin(11) * t77 + t186) * t137, t31 * t141 - t85 * t94 + (pkin(11) * t79 + t184) * t137, -t85 * t77 - t84 * t79 + (-t136 * t31 - t140 * t30) * t137, t190 * t58 + t30 * t84 + t31 * t85, t65, t44, t53, t158, t52, -t180, t104 * t77 - t141 * t18 + t170 * t42 + t68 * t94, t104 * t79 + t123 * t42 + t141 * t23 - t80 * t94, -t68 * t79 - t80 * t77 + (-t136 * t23 - t140 * t18) * t137, t104 * t42 + t18 * t68 + t23 * t80; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t129, t163, 0, t131, 0, 0, pkin(3) * t199, pkin(3) * t201, 0.2e1 * (t129 + t131) * pkin(11), pkin(3) ^ 2 + t131 * t145 + t125, t122, t109, t110, t121, t108, t131, 0.2e1 * t129 * t192 - 0.2e1 * t84 * t141, 0.2e1 * pkin(11) * t129 * t140 + 0.2e1 * t141 * t85 (-t136 * t85 - t140 * t84) * t200, t84 ^ 2 + t85 ^ 2 + t125, t122, t109, t110, t121, t108, t131, 0.2e1 * t104 * t170 - 0.2e1 * t141 * t68, 0.2e1 * t104 * t123 + 0.2e1 * t141 * t80 (-t136 * t80 - t140 * t68) * t200, t104 ^ 2 + t68 ^ 2 + t80 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t56, 0, -t54, t71, t8, -t9, 0, 0, t36, t16, t48, -t35, t49, 0, -pkin(4) * t39 - pkin(12) * t48 - t188, -pkin(4) * t41 - pkin(12) * t49 + t189 (t36 - t35) * pkin(12) + t153, -t6 * pkin(4) + pkin(12) * t153, t36, t16, t48, -t35, t49, 0, t106 * t54 + t124 * t39 - t140 * t5, t107 * t54 + t124 * t41 + t136 * t5, -t1 * t136 - t106 * t41 + t107 * t39 + t140 * t2, t1 * t106 - t107 * t2 + t124 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t96, 0, -t94, -t175, t60, -t61, 0, 0, t70, t45, t90, -t69, t91, 0, -pkin(4) * t77 - pkin(12) * t90 - t184, -pkin(4) * t79 - pkin(12) * t91 + t186 (t70 - t69) * pkin(12) + t150, -t58 * pkin(4) + pkin(12) * t150, t70, t45, t90, -t69, t91, 0, t106 * t94 + t124 * t77 - t140 * t42, t107 * t94 + t124 * t79 + t136 * t42, -t106 * t79 + t107 * t77 - t136 * t18 + t140 * t23, t106 * t18 - t107 * t23 + t124 * t42; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t137, 0, t141, 0, -t190, -t141 * pkin(11), 0, 0, t114, t102, -t168, -t114, -t167, 0, -pkin(11) * t123 + (-pkin(4) * t137 + pkin(12) * t141) * t136, pkin(12) * t167 + (t192 - t193) * t137, t149, -pkin(4) * t190 + pkin(12) * t149, t114, t102, -t168, -t114, -t167, 0, -t104 * t140 - t106 * t141 + t124 * t170, t104 * t136 - t107 * t141 + t123 * t124 (-t106 * t137 + t80) * t140 + (t107 * t137 - t68) * t136, t104 * t124 + t106 * t68 - t107 * t80; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t128, t118, 0, t130, 0, 0, 0.2e1 * t193, -0.2e1 * pkin(4) * t136, 0.2e1 * t166 * pkin(12), pkin(12) ^ 2 * t166 + pkin(4) ^ 2, t128, t118, 0, t130, 0, 0, -0.2e1 * t124 * t140, 0.2e1 * t124 * t136, -0.2e1 * t106 * t136 - 0.2e1 * t107 * t140, t106 ^ 2 + t107 ^ 2 + t124 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t41, 0, -t39, t54, t3, -t4, 0, 0, 0, 0, t41, 0, -t39, t54, t147 + 0.2e1 * t198, -t2, -t41 * pkin(5), t1 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t79, 0, -t77, t94, t30, -t31, 0, 0, 0, 0, t79, 0, -t77, t94, t146 + 0.2e1 * t197, -t23, -t79 * pkin(5), t18 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t123, 0, -t170, -t141, t84, -t85, 0, 0, 0, 0, t123, 0, -t170, -t141 (-0.2e1 * pkin(5) - t192) * t141 + t154, -t80, -pkin(5) * t123, t68 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t136, 0, t140, 0, -t136 * pkin(12), -t140 * pkin(12), 0, 0, 0, 0, t136, 0, t140, 0, t106, t107, -t191, t106 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * pkin(5), 0, 0, pkin(5) ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t39, t41, 0, t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t77, t79, 0, t42; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t170, t123, 0, t104; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t140, t136, 0, t124; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1;];
MM_reg  = t11;
