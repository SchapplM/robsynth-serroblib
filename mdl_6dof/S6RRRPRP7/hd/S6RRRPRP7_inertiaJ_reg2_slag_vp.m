% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRRPRP7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5,theta4]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 17:13
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRRPRP7_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP7_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPRP7_inertiaJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 08:22:09
% EndTime: 2019-05-07 08:22:22
% DurationCPUTime: 3.22s
% Computational Cost: add. (3524->228), mult. (7964->432), div. (0->0), fcn. (9221->10), ass. (0->150)
t101 = sin(qJ(5));
t93 = t101 ^ 2;
t104 = cos(qJ(5));
t95 = t104 ^ 2;
t83 = t93 + t95;
t102 = sin(qJ(3));
t105 = cos(qJ(3));
t97 = sin(pkin(11));
t99 = cos(pkin(11));
t76 = t102 * t99 + t105 * t97;
t179 = -0.2e1 * t76;
t106 = cos(qJ(2));
t98 = sin(pkin(6));
t139 = t98 * t106;
t100 = cos(pkin(6));
t103 = sin(qJ(2));
t140 = t98 * t103;
t67 = t100 * t105 - t102 * t140;
t68 = t100 * t102 + t105 * t140;
t43 = t67 * t97 + t68 * t99;
t33 = t101 * t43 + t104 * t139;
t148 = t33 * t104;
t35 = -t101 * t139 + t104 * t43;
t30 = t35 * t101;
t178 = (t30 + t148) * t76;
t147 = t35 * t104;
t29 = t101 * t33;
t177 = -t29 + t147;
t176 = t33 ^ 2;
t41 = -t67 * t99 + t68 * t97;
t40 = t41 ^ 2;
t158 = -qJ(4) - pkin(9);
t124 = t158 * t102;
t78 = t158 * t105;
t52 = -t124 * t99 - t97 * t78;
t175 = t52 ^ 2;
t74 = t102 * t97 - t105 * t99;
t72 = t74 ^ 2;
t91 = -pkin(3) * t105 - pkin(2);
t174 = 0.2e1 * t91;
t173 = 0.2e1 * t98;
t172 = -0.2e1 * t104;
t171 = 0.2e1 * t105;
t170 = t41 * pkin(5);
t169 = t74 * pkin(5);
t168 = t97 * pkin(3);
t167 = t99 * pkin(3);
t165 = pkin(1) * t106;
t84 = pkin(8) * t140;
t57 = t84 + (-pkin(2) - t165) * t100;
t46 = -t67 * pkin(3) + t57;
t14 = t41 * pkin(4) - t43 * pkin(10) + t46;
t133 = pkin(3) * t139;
t134 = pkin(8) * t139;
t166 = pkin(1) * t103;
t58 = t134 + (pkin(9) + t166) * t100;
t59 = (-pkin(2) * t106 - pkin(9) * t103 - pkin(1)) * t98;
t36 = -t102 * t58 + t105 * t59;
t20 = -qJ(4) * t68 - t133 + t36;
t37 = t102 * t59 + t105 * t58;
t26 = qJ(4) * t67 + t37;
t10 = t20 * t97 + t26 * t99;
t8 = -pkin(10) * t139 + t10;
t4 = t101 * t14 + t104 * t8;
t146 = t41 * qJ(6);
t1 = t146 + t4;
t164 = t1 * t104;
t163 = t35 * t33;
t89 = pkin(10) + t168;
t162 = t35 * t89;
t161 = t4 * t104;
t160 = t41 * t33;
t31 = t41 * t74;
t159 = t74 * t89;
t157 = -t20 * t99 + t26 * t97;
t47 = pkin(4) * t74 - pkin(10) * t76 + t91;
t54 = t124 * t97 - t99 * t78;
t22 = t101 * t47 + t104 * t54;
t156 = t83 * t89 ^ 2;
t94 = t102 ^ 2;
t96 = t105 ^ 2;
t155 = t94 + t96;
t38 = t101 * t41;
t63 = t101 * t74;
t154 = t101 * t76;
t153 = t101 * t89;
t39 = t104 * t41;
t65 = t104 * t74;
t66 = t104 * t76;
t152 = t104 * t89;
t92 = t98 ^ 2;
t151 = t106 * t92;
t116 = pkin(5) * t101 - qJ(6) * t104;
t27 = t116 * t76 + t52;
t150 = t27 * t101;
t149 = t27 * t104;
t145 = t52 * t101;
t144 = t52 * t104;
t143 = t67 * t105;
t142 = t68 * t102;
t141 = t74 * qJ(6);
t138 = t100 * t103;
t137 = t101 * t104;
t136 = -0.2e1 * t139;
t135 = 0.2e1 * t139;
t7 = pkin(4) * t139 + t157;
t132 = t74 * t154;
t131 = t41 * t153;
t130 = t41 * t152;
t129 = t33 * t154;
t73 = t76 ^ 2;
t128 = t73 * t137;
t127 = t102 * t139;
t126 = t105 * t139;
t90 = -pkin(4) - t167;
t125 = t101 * t8 - t104 * t14;
t123 = t101 * t54 - t104 * t47;
t122 = -t29 - t147;
t2 = t125 - t170;
t121 = t1 * t101 - t104 * t2;
t120 = t101 * t4 - t104 * t125;
t117 = pkin(5) * t104 + qJ(6) * t101;
t71 = -t117 + t90;
t119 = t71 * t76 - t159;
t118 = t76 * t90 - t159;
t16 = t141 + t22;
t17 = t123 - t169;
t115 = t101 * t17 + t104 * t16;
t114 = t101 * t16 - t104 * t17;
t113 = t101 * t22 - t104 * t123;
t112 = t101 * t123 + t104 * t22;
t110 = -t36 * t102 + t37 * t105;
t109 = t154 * t41 + t33 * t74;
t87 = t92 * t106 ^ 2;
t70 = pkin(1) * t138 + t134;
t69 = t100 * t165 - t84;
t64 = t95 * t73;
t62 = t93 * t73;
t61 = t76 * t137;
t56 = 0.2e1 * t83 * t89;
t50 = 0.2e1 * t74 * t66;
t49 = t83 * t76;
t48 = (t93 - t95) * t76;
t32 = t35 ^ 2;
t28 = t89 * t148;
t23 = t76 * t147;
t15 = 0.2e1 * t35 * t41;
t11 = t35 * t74 + t41 * t66;
t5 = pkin(5) * t33 - qJ(6) * t35 + t7;
t3 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t92 * t103 ^ 2, 0.2e1 * t103 * t151, t138 * t173, t87, t100 * t135, t100 ^ 2, 0.2e1 * pkin(1) * t151 + 0.2e1 * t100 * t69, -0.2e1 * t100 * t70 - 0.2e1 * t166 * t92 (-t103 * t69 + t106 * t70) * t173, pkin(1) ^ 2 * t92 + t69 ^ 2 + t70 ^ 2, t68 ^ 2, 0.2e1 * t68 * t67, t68 * t136, t67 ^ 2, t67 * t136, t87, -0.2e1 * t139 * t36 - 0.2e1 * t57 * t67, 0.2e1 * t139 * t37 + 0.2e1 * t57 * t68, -0.2e1 * t36 * t68 + 0.2e1 * t37 * t67, t36 ^ 2 + t37 ^ 2 + t57 ^ 2, t43 ^ 2, -0.2e1 * t43 * t41, t43 * t136, t40, t41 * t135, t87, 0.2e1 * t139 * t157 + 0.2e1 * t41 * t46, 0.2e1 * t10 * t139 + 0.2e1 * t43 * t46, -0.2e1 * t10 * t41 + 0.2e1 * t157 * t43, t10 ^ 2 + t157 ^ 2 + t46 ^ 2, t32, -0.2e1 * t163, t15, t176, -0.2e1 * t160, t40, -0.2e1 * t125 * t41 + 0.2e1 * t33 * t7, 0.2e1 * t35 * t7 - 0.2e1 * t4 * t41, 0.2e1 * t125 * t35 - 0.2e1 * t33 * t4, t125 ^ 2 + t4 ^ 2 + t7 ^ 2, t32, t15, 0.2e1 * t163, t40, 0.2e1 * t160, t176, -0.2e1 * t2 * t41 + 0.2e1 * t33 * t5, -0.2e1 * t1 * t33 + 0.2e1 * t2 * t35, 0.2e1 * t1 * t41 - 0.2e1 * t35 * t5, t1 ^ 2 + t2 ^ 2 + t5 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t140, 0, t139, t100, t69, -t70, 0, 0, t142, t102 * t67 + t105 * t68, -t127, t143, -t126, 0, pkin(2) * t67 + pkin(9) * t127 - t105 * t57, -pkin(2) * t68 + pkin(9) * t126 + t102 * t57 (t142 + t143) * pkin(9) + t110, -t57 * pkin(2) + pkin(9) * t110, t43 * t76, -t41 * t76 - t43 * t74, -t76 * t139, t31, t74 * t139, 0, t139 * t52 + t41 * t91 + t46 * t74, t139 * t54 + t43 * t91 + t46 * t76, -t10 * t74 + t157 * t76 - t41 * t54 + t43 * t52, t10 * t54 + t157 * t52 + t46 * t91, t23, -t178, t11, t129, -t109, t31, -t123 * t41 - t125 * t74 + t154 * t7 + t33 * t52, -t22 * t41 + t35 * t52 - t4 * t74 + t66 * t7, -t120 * t76 + t123 * t35 - t22 * t33, t123 * t125 + t22 * t4 + t52 * t7, t23, t11, t178, t31, t109, t129, t154 * t5 - t17 * t41 - t2 * t74 + t27 * t33, -t121 * t76 - t16 * t33 + t17 * t35, t1 * t74 + t16 * t41 - t27 * t35 - t5 * t66, t1 * t16 + t17 * t2 + t27 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t94, t102 * t171, 0, t96, 0, 0, pkin(2) * t171, -0.2e1 * pkin(2) * t102, 0.2e1 * t155 * pkin(9), pkin(9) ^ 2 * t155 + pkin(2) ^ 2, t73, t74 * t179, 0, t72, 0, 0, t74 * t174, t76 * t174, 0.2e1 * t52 * t76 - 0.2e1 * t54 * t74, t54 ^ 2 + t91 ^ 2 + t175, t64, -0.2e1 * t128, t50, t62, -0.2e1 * t132, t72, -0.2e1 * t123 * t74 + 0.2e1 * t145 * t76, 0.2e1 * t144 * t76 - 0.2e1 * t22 * t74, t113 * t179, t123 ^ 2 + t22 ^ 2 + t175, t64, t50, 0.2e1 * t128, t72, 0.2e1 * t132, t62, 0.2e1 * t150 * t76 - 0.2e1 * t17 * t74, t114 * t179, -0.2e1 * t149 * t76 + 0.2e1 * t16 * t74, t16 ^ 2 + t17 ^ 2 + t27 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t68, 0, t67, -t139, t36, -t37, 0, 0, 0, 0, t43, 0, -t41, -t139, -t133 * t99 - t157, t133 * t97 - t10 (-t41 * t97 - t43 * t99) * pkin(3) (t10 * t97 - t157 * t99) * pkin(3), t30, t177, t38, -t148, t39, 0, -t104 * t7 + t33 * t90 - t131, t101 * t7 + t35 * t90 - t130, t161 - t28 + (t125 + t162) * t101, t7 * t90 + (t101 * t125 + t161) * t89, t30, t38, -t177, 0, -t39, -t148, -t104 * t5 + t33 * t71 - t131, t164 - t28 + (t2 + t162) * t101, -t101 * t5 - t35 * t71 + t130, t5 * t71 + (t101 * t2 + t164) * t89; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t102, 0, t105, 0, -t102 * pkin(9), -t105 * pkin(9), 0, 0, 0, 0, t76, 0, -t74, 0, -t52, -t54 (-t74 * t97 - t76 * t99) * pkin(3) (-t52 * t99 + t54 * t97) * pkin(3), t61, -t48, t63, -t61, t65, 0, t101 * t118 - t144, t104 * t118 + t145, t112, t112 * t89 + t52 * t90, t61, t63, t48, 0, -t65, -t61, t101 * t119 - t149, t115, -t104 * t119 - t150, t115 * t89 + t27 * t71; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t167, -0.2e1 * t168, 0 (t97 ^ 2 + t99 ^ 2) * pkin(3) ^ 2, t93, 0.2e1 * t137, 0, t95, 0, 0, t90 * t172, 0.2e1 * t90 * t101, t56, t90 ^ 2 + t156, t93, 0, -0.2e1 * t137, 0, 0, t95, t71 * t172, t56, -0.2e1 * t71 * t101, t71 ^ 2 + t156; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t41, t43, 0, t46, 0, 0, 0, 0, 0, 0, t39, -t38, t122, t120, 0, 0, 0, 0, 0, 0, t39, t122, t38, t121; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t74, t76, 0, t91, 0, 0, 0, 0, 0, 0, t65, -t63, -t49, t113, 0, 0, 0, 0, 0, 0, t65, -t49, t63, t114; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t35, 0, -t33, t41, -t125, -t4, 0, 0, 0, t35, 0, t41, t33, 0, -t125 + 0.2e1 * t170, -pkin(5) * t35 - qJ(6) * t33, 0.2e1 * t146 + t4, -pkin(5) * t2 + qJ(6) * t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t66, 0, -t154, t74, -t123, -t22, 0, 0, 0, t66, 0, t74, t154, 0, -t123 + 0.2e1 * t169, -t117 * t76, 0.2e1 * t141 + t22, -pkin(5) * t17 + qJ(6) * t16; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t101, 0, t104, 0, -t153, -t152, 0, 0, 0, t101, 0, 0, -t104, 0, -t153, -t116, t152, -t116 * t89; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t104, -t101, 0, 0, 0, 0, 0, 0, 0, 0, t104, 0, t101, t117; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0.2e1 * pkin(5), 0, 0.2e1 * qJ(6), pkin(5) ^ 2 + qJ(6) ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t41, t35, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t74, t66, 0, t17; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t101, 0, t153; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t104; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, -pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1;];
MM_reg  = t3;
