% Calculate inertial parameters regressor of joint inertia matrix for
% S6PRPRPR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d6,theta1,theta5]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 19:50
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6PRPRPR6_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRPR6_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRPRPR6_inertiaJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-04 23:10:51
% EndTime: 2019-05-04 23:10:55
% DurationCPUTime: 1.44s
% Computational Cost: add. (666->134), mult. (1445->240), div. (0->0), fcn. (1668->10), ass. (0->77)
t57 = cos(qJ(4));
t49 = sin(pkin(11));
t51 = cos(pkin(11));
t53 = sin(qJ(6));
t56 = cos(qJ(6));
t90 = -t53 * t49 + t56 * t51;
t18 = t90 * t57;
t52 = cos(pkin(6));
t54 = sin(qJ(4));
t50 = sin(pkin(6));
t58 = cos(qJ(2));
t76 = t50 * t58;
t21 = t52 * t54 + t57 * t76;
t20 = t21 ^ 2;
t41 = -t51 * pkin(5) - pkin(4);
t89 = 0.2e1 * t41;
t88 = 0.2e1 * t51;
t87 = 0.2e1 * t54;
t86 = 2 * qJ(3);
t85 = t57 * pkin(4);
t84 = t21 * t57;
t83 = t90 * t54;
t29 = t56 * t49 + t53 * t51;
t82 = t29 * t54;
t47 = t57 ^ 2;
t59 = -pkin(2) - pkin(8);
t81 = t47 * t59;
t80 = t49 * t51;
t79 = t49 * t57;
t78 = t49 * t59;
t55 = sin(qJ(2));
t77 = t50 * t55;
t39 = t51 * t57;
t74 = t54 * t59;
t72 = t57 * t29;
t71 = t57 * t54;
t70 = t57 * t59;
t69 = pkin(9) + qJ(5);
t31 = t54 * pkin(4) - t57 * qJ(5) + qJ(3);
t13 = t49 * t31 + t51 * t74;
t43 = t49 ^ 2;
t45 = t51 ^ 2;
t68 = t43 + t45;
t46 = t54 ^ 2;
t37 = t46 + t47;
t67 = -0.2e1 * t71;
t66 = t49 * t39;
t65 = t68 * qJ(5);
t23 = t52 * t57 - t54 * t76;
t8 = -t23 * t49 + t51 * t77;
t9 = t23 * t51 + t49 * t77;
t64 = -t8 * t49 + t9 * t51;
t63 = -qJ(5) * t54 - t85;
t25 = t51 * t31;
t12 = -t49 * t74 + t25;
t62 = -t12 * t49 + t13 * t51;
t5 = t23 * t54 - t84;
t61 = qJ(3) ^ 2;
t48 = t59 ^ 2;
t44 = t50 ^ 2;
t42 = t47 * t48;
t38 = t44 * t55 ^ 2;
t36 = qJ(3) * t77;
t33 = t69 * t51;
t32 = t69 * t49;
t30 = t37 * t59;
t26 = (pkin(5) * t49 - t59) * t57;
t19 = t44 * t58 ^ 2 + t52 ^ 2 + t38;
t11 = -t53 * t32 + t56 * t33;
t10 = -t56 * t32 - t53 * t33;
t7 = -pkin(9) * t79 + t13;
t6 = -pkin(9) * t39 + t25 + (pkin(5) - t78) * t54;
t4 = t53 * t8 + t56 * t9;
t3 = -t53 * t9 + t56 * t8;
t2 = t53 * t6 + t56 * t7;
t1 = -t53 * t7 + t56 * t6;
t14 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t19, 0, 0, 0, 0, 0, 0, 0, 0, 0, t19, 0, 0, 0, 0, 0, 0, 0, 0, 0, t23 ^ 2 + t20 + t38, 0, 0, 0, 0, 0, 0, 0, 0, 0, t8 ^ 2 + t9 ^ 2 + t20, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3 ^ 2 + t4 ^ 2 + t20; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t76, -t77, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t76, t77, pkin(2) * t76 + t36, 0, 0, 0, 0, 0, 0, t54 * t77, t57 * t77, -t5, t5 * t59 + t36, 0, 0, 0, 0, 0, 0, t21 * t79 + t8 * t54, t21 * t39 - t9 * t54 (-t49 * t9 - t51 * t8) * t57, t8 * t12 + t9 * t13 - t21 * t70, 0, 0, 0, 0, 0, 0, t21 * t72 + t3 * t54, t21 * t18 - t4 * t54, -t3 * t18 - t4 * t72, t3 * t1 + t4 * t2 + t21 * t26; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, -0.2e1 * pkin(2), t86, pkin(2) ^ 2 + t61, t47, t67, 0, t46, 0, 0, t54 * t86, t57 * t86, -0.2e1 * t30, t46 * t48 + t42 + t61, t45 * t47, -0.2e1 * t47 * t80, t71 * t88, t43 * t47, t49 * t67, t46, 0.2e1 * t12 * t54 - 0.2e1 * t47 * t78, -0.2e1 * t13 * t54 - 0.2e1 * t51 * t81, 0.2e1 * (-t12 * t51 - t13 * t49) * t57, t12 ^ 2 + t13 ^ 2 + t42, t18 ^ 2, -0.2e1 * t18 * t72, t18 * t87, t72 ^ 2, -t72 * t87, t46, 0.2e1 * t1 * t54 + 0.2e1 * t26 * t72, 0.2e1 * t26 * t18 - 0.2e1 * t2 * t54, -0.2e1 * t1 * t18 - 0.2e1 * t2 * t72, t1 ^ 2 + t2 ^ 2 + t26 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t76, 0, 0, 0, 0, 0, 0, 0, 0, 0, t5, 0, 0, 0, 0, 0, 0, 0, 0, 0, t54 * t64 - t84, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t3 * t82 + t4 * t83 - t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, -pkin(2), 0, 0, 0, 0, 0, 0, 0, 0, -t37, t30, 0, 0, 0, 0, 0, 0, -t37 * t49, -t37 * t51, 0, t54 * t62 + t81, 0, 0, 0, 0, 0, 0, -t54 * t82 - t57 * t72, -t57 * t18 - t54 * t83, t18 * t82 - t72 * t83, -t1 * t82 + t2 * t83 - t26 * t57; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t37, 0, 0, 0, 0, 0, 0, 0, 0, 0, t68 * t46 + t47, 0, 0, 0, 0, 0, 0, 0, 0, 0, t82 ^ 2 + t83 ^ 2 + t47; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t21, -t23, 0, 0, 0, 0, 0, 0, 0, 0, -t21 * t51, t21 * t49, t64, -t21 * pkin(4) + qJ(5) * t64, 0, 0, 0, 0, 0, 0, -t21 * t90, t21 * t29, -t3 * t29 + t4 * t90, t3 * t10 + t4 * t11 + t21 * t41; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t57, 0, -t54, 0, t70, -t74, 0, 0, t66 (-t43 + t45) * t57, t49 * t54, -t66, t51 * t54, 0, t49 * t63 + t51 * t70, -t49 * t70 + t51 * t63, t62, pkin(4) * t70 + qJ(5) * t62, t18 * t29, t18 * t90 - t29 * t72, t82, -t72 * t90, t83, 0, t10 * t54 - t26 * t90 + t41 * t72, -t11 * t54 + t41 * t18 + t26 * t29, -t1 * t29 - t10 * t18 - t11 * t72 + t2 * t90, t1 * t10 + t2 * t11 + t26 * t41; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t57, -t54, 0, 0, 0, 0, 0, 0, 0, 0, t39, -t79, t68 * t54, t54 * t65 + t85, 0, 0, 0, 0, 0, 0, t18, -t72, t29 * t82 + t83 * t90, -t10 * t82 + t11 * t83 - t57 * t41; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t43, 0.2e1 * t80, 0, t45, 0, 0, pkin(4) * t88, -0.2e1 * pkin(4) * t49, 0.2e1 * t65, t68 * qJ(5) ^ 2 + pkin(4) ^ 2, t29 ^ 2, 0.2e1 * t29 * t90, 0, t90 ^ 2, 0, 0, -t90 * t89, t29 * t89, -0.2e1 * t10 * t29 + 0.2e1 * t11 * t90, t10 ^ 2 + t11 ^ 2 + t41 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t21, 0, 0, 0, 0, 0, 0, 0, 0, 0, t21; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t79, t39, 0, -t70, 0, 0, 0, 0, 0, 0, t72, t18, 0, t26; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t57, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t57; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t51, t49, 0, -pkin(4), 0, 0, 0, 0, 0, 0, -t90, t29, 0, t41; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3, -t4, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t18, 0, -t72, t54, t1, -t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t82, -t83, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t29, 0, t90, 0, t10, -t11, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t14;
