% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRPRPP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,theta3]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 09:53
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRPRPP2_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPP2_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRPRPP2_inertiaJ_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 12:25:54
% EndTime: 2019-05-06 12:25:59
% DurationCPUTime: 1.50s
% Computational Cost: add. (1049->124), mult. (1971->213), div. (0->0), fcn. (2219->6), ass. (0->91)
t63 = sin(qJ(4));
t57 = t63 ^ 2;
t65 = cos(qJ(4));
t59 = t65 ^ 2;
t48 = t57 + t59;
t61 = sin(pkin(9));
t62 = cos(pkin(9));
t64 = sin(qJ(2));
t66 = cos(qJ(2));
t42 = t61 * t66 + t62 * t64;
t111 = -0.2e1 * t42;
t55 = t63 * qJ(5);
t92 = t65 * pkin(4) + t55;
t67 = pkin(4) + pkin(5);
t110 = t65 * t67 + t55;
t90 = t65 * qJ(5);
t109 = t67 * t63 - t90;
t94 = -qJ(3) - pkin(7);
t44 = t94 * t66;
t84 = t94 * t64;
t17 = -t61 * t44 - t62 * t84;
t108 = t17 ^ 2;
t40 = t61 * t64 - t62 * t66;
t107 = t40 ^ 2;
t54 = -t66 * pkin(2) - pkin(1);
t106 = 0.2e1 * t54;
t105 = 0.2e1 * t63;
t104 = -0.2e1 * t65;
t103 = 0.2e1 * t66;
t34 = t40 * pkin(4);
t102 = t61 * pkin(2);
t101 = t62 * pkin(2);
t11 = t40 * pkin(3) - t42 * pkin(8) + t54;
t19 = -t62 * t44 + t61 * t84;
t7 = t63 * t11 + t65 * t19;
t52 = pkin(8) + t102;
t100 = t40 * t52;
t99 = t63 * t40;
t98 = t63 * t42;
t97 = t63 * t52;
t96 = t63 * t65;
t29 = t65 * t40;
t30 = t65 * t42;
t6 = t65 * t11 - t63 * t19;
t93 = t48 * t52 ^ 2;
t58 = t64 ^ 2;
t60 = t66 ^ 2;
t91 = t58 + t60;
t89 = t65 * qJ(6);
t32 = t40 * qJ(5);
t3 = t32 + t7;
t88 = 0.2e1 * t32 + t7;
t87 = t40 * t98;
t39 = t42 ^ 2;
t86 = t39 * t96;
t85 = t40 * t30;
t4 = -t34 - t6;
t53 = -pkin(3) - t101;
t83 = -0.2e1 * t87;
t73 = t42 * t89 - t4;
t1 = -t40 * pkin(5) - t73;
t24 = qJ(6) * t98;
t2 = t24 + t3;
t82 = -t1 * t65 + t2 * t63;
t81 = t3 * t65 + t4 * t63;
t80 = t3 * t63 - t4 * t65;
t79 = t6 * t65 + t7 * t63;
t78 = -t6 * t63 + t7 * t65;
t77 = pkin(4) * t63 - t90;
t33 = t53 - t92;
t76 = t33 * t42 - t100;
t35 = (-qJ(6) + t52) * t63;
t47 = t65 * t52;
t36 = t47 - t89;
t75 = -t35 * t65 + t36 * t63;
t74 = t42 * t53 - t100;
t70 = qJ(5) ^ 2;
t69 = 0.2e1 * qJ(5);
t50 = -0.2e1 * t96;
t28 = t59 * t39;
t25 = t57 * t39;
t23 = t65 * pkin(5) - t33;
t22 = t63 * t30;
t21 = 0.2e1 * t86;
t20 = 0.2e1 * t48 * t52;
t14 = 0.2e1 * t85;
t13 = (t57 - t59) * t42;
t12 = t48 * t42;
t8 = t42 * t77 + t17;
t5 = -t109 * t42 - t17;
t9 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t58, t64 * t103, 0, t60, 0, 0, pkin(1) * t103, -0.2e1 * pkin(1) * t64, 0.2e1 * t91 * pkin(7), t91 * pkin(7) ^ 2 + pkin(1) ^ 2, t39, t40 * t111, 0, t107, 0, 0, t40 * t106, t42 * t106, 0.2e1 * t17 * t42 - 0.2e1 * t19 * t40, t19 ^ 2 + t54 ^ 2 + t108, t28, -0.2e1 * t86, t14, t25, t83, t107, 0.2e1 * t17 * t98 + 0.2e1 * t6 * t40, 0.2e1 * t17 * t30 - 0.2e1 * t7 * t40, t79 * t111, t6 ^ 2 + t7 ^ 2 + t108, t28, t14, t21, t107, 0.2e1 * t87, t25, -0.2e1 * t4 * t40 + 0.2e1 * t8 * t98, t80 * t111, 0.2e1 * t3 * t40 - 0.2e1 * t8 * t30, t3 ^ 2 + t4 ^ 2 + t8 ^ 2, t28, t21, -0.2e1 * t85, t25, t83, t107, -0.2e1 * t1 * t40 - 0.2e1 * t5 * t98, 0.2e1 * t2 * t40 + 0.2e1 * t5 * t30, 0.2e1 * t82 * t42, t1 ^ 2 + t2 ^ 2 + t5 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t64, 0, t66, 0, -t64 * pkin(7), -t66 * pkin(7), 0, 0, 0, 0, t42, 0, -t40, 0, -t17, -t19 (-t40 * t61 - t42 * t62) * pkin(2) (-t17 * t62 + t19 * t61) * pkin(2), t22, -t13, t99, -t22, t29, 0, -t17 * t65 + t63 * t74, t17 * t63 + t65 * t74, t78, t17 * t53 + t52 * t78, t22, t99, t13, 0, -t29, -t22, t63 * t76 - t8 * t65, t81, -t8 * t63 - t65 * t76, t8 * t33 + t81 * t52, t22, t13, -t99, -t22, t29, 0, -t23 * t98 - t35 * t40 + t5 * t65, t23 * t30 + t36 * t40 + t5 * t63, -t1 * t63 - t2 * t65 + t42 * t75, t1 * t35 + t2 * t36 + t5 * t23; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t101, -0.2e1 * t102, 0 (t61 ^ 2 + t62 ^ 2) * pkin(2) ^ 2, t57, 0.2e1 * t96, 0, t59, 0, 0, t53 * t104, t53 * t105, t20, t53 ^ 2 + t93, t57, 0, t50, 0, 0, t59, t33 * t104, t20, -0.2e1 * t33 * t63, t33 ^ 2 + t93, t57, t50, 0, t59, 0, 0, 0.2e1 * t23 * t65, t23 * t105, -0.2e1 * t35 * t63 - 0.2e1 * t36 * t65, t23 ^ 2 + t35 ^ 2 + t36 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t40, t42, 0, t54, 0, 0, 0, 0, 0, 0, t29, -t99, -t12, t79, 0, 0, 0, 0, 0, 0, t29, -t12, t99, t80, 0, 0, 0, 0, 0, 0, t29, t99, t12, t82; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t75; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t48, 0, 0, 0, 0, 0, 0, 0, 0, 0, t48, 0, 0, 0, 0, 0, 0, 0, 0, 0, t48; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t30, 0, -t98, t40, t6, -t7, 0, 0, 0, t30, 0, t40, t98, 0, -t4 + t34, -t92 * t42, t88, -t4 * pkin(4) + t3 * qJ(5), 0, 0, -t30, 0, -t98, t40 (pkin(5) + t67) * t40 + t73, t24 + t88, t110 * t42, t2 * qJ(5) - t1 * t67; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t63, 0, t65, 0, -t97, -t47, 0, 0, 0, t63, 0, 0, -t65, 0, -t97, -t77, t47, -t77 * t52, 0, 0, -t63, 0, t65, 0, -t35, t36, t109, t36 * qJ(5) - t35 * t67; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t65, -t63, 0, 0, 0, 0, 0, 0, 0, 0, t65, 0, t63, t92, 0, 0, 0, 0, 0, 0, t65, t63, 0, t110; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0.2e1 * pkin(4), 0, t69, pkin(4) ^ 2 + t70, 0, 0, 0, 0, 0, 1, 0.2e1 * t67, t69, 0, t67 ^ 2 + t70; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t40, t30, 0, t4, 0, 0, 0, 0, 0, 0, -t40, 0, -t30, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t63, 0, t97, 0, 0, 0, 0, 0, 0, 0, 0, -t63, t35; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t65, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t65; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, -pkin(4), 0, 0, 0, 0, 0, 0, -1, 0, 0, -t67; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t98, t30, 0, t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t65, t63, 0, t23; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1;];
MM_reg  = t9;
