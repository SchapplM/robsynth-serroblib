% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRRRPP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 20:57
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRRRPP3_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPP3_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRRRPP3_inertiaJ_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 18:10:58
% EndTime: 2019-05-07 18:11:05
% DurationCPUTime: 2.49s
% Computational Cost: add. (1356->169), mult. (2554->269), div. (0->0), fcn. (2800->6), ass. (0->117)
t90 = sin(qJ(4));
t84 = t90 ^ 2;
t93 = cos(qJ(4));
t86 = t93 ^ 2;
t153 = t84 + t86;
t91 = sin(qJ(3));
t134 = t91 * pkin(2);
t73 = pkin(9) + t134;
t119 = t153 * t73;
t76 = qJ(5) * t93;
t152 = -pkin(4) * t90 + t76;
t115 = t90 * qJ(5);
t88 = pkin(4) + qJ(6);
t151 = -t88 * t93 - t115;
t142 = -pkin(8) - pkin(7);
t92 = sin(qJ(2));
t110 = t142 * t92;
t95 = cos(qJ(2));
t62 = t142 * t95;
t94 = cos(qJ(3));
t24 = -t110 * t94 - t91 * t62;
t150 = t24 ^ 2;
t48 = t91 * t92 - t94 * t95;
t46 = t48 ^ 2;
t50 = t91 * t95 + t92 * t94;
t149 = 0.2e1 * t50;
t75 = -pkin(2) * t95 - pkin(1);
t148 = 0.2e1 * t75;
t147 = 0.2e1 * t88;
t146 = -0.2e1 * t90;
t145 = -0.2e1 * t93;
t144 = 0.2e1 * t93;
t143 = 0.2e1 * t95;
t16 = pkin(3) * t48 - pkin(9) * t50 + t75;
t26 = t110 * t91 - t94 * t62;
t126 = -t16 * t93 + t26 * t90;
t40 = t93 * t50;
t101 = -pkin(5) * t40 - t126;
t4 = -t48 * t88 - t101;
t11 = t16 * t90 + t26 * t93;
t37 = t90 * t50;
t102 = -pkin(5) * t37 + t11;
t43 = t48 * qJ(5);
t6 = t102 + t43;
t141 = t4 * t90 + t6 * t93;
t139 = pkin(9) * t48;
t138 = t48 * pkin(4);
t109 = pkin(4) * t37 + t24;
t9 = (qJ(6) * t90 - t76) * t50 + t109;
t137 = t9 * t90;
t136 = t9 * t93;
t135 = t90 * pkin(5);
t133 = t94 * pkin(2);
t74 = -pkin(3) - t133;
t132 = pkin(3) - t74;
t13 = -t50 * t76 + t109;
t131 = t13 * t90;
t130 = t24 * t93;
t129 = t48 * t73;
t127 = t90 * t93;
t41 = -pkin(3) + t151;
t29 = t41 - t133;
t125 = -t29 - t41;
t65 = t90 * t73;
t44 = t65 + t135;
t68 = t93 * t73;
t83 = t93 * pkin(5);
t45 = t68 + t83;
t124 = t44 * t90 + t45 * t93;
t106 = -pkin(4) * t93 - t115;
t56 = -pkin(3) + t106;
t42 = t56 - t133;
t123 = t42 + t56;
t79 = t90 * pkin(9);
t60 = t79 + t135;
t82 = t93 * pkin(9);
t61 = t82 + t83;
t122 = t60 * t90 + t61 * t93;
t121 = t119 * pkin(9);
t120 = t153 * t73 ^ 2;
t118 = t153 * pkin(9) ^ 2;
t117 = t153 * pkin(9);
t85 = t92 ^ 2;
t87 = t95 ^ 2;
t116 = t85 + t87;
t114 = t48 * t37;
t47 = t50 ^ 2;
t113 = t47 * t127;
t112 = t48 * t40;
t111 = t43 + t11;
t108 = -pkin(3) * t50 - t139;
t8 = t126 - t138;
t1 = t111 * t93 + t8 * t90;
t107 = -t50 * t56 + t139;
t2 = t11 * t93 + t126 * t90;
t104 = -t42 * t50 + t129;
t103 = t50 * t74 - t129;
t97 = qJ(5) ^ 2;
t96 = 0.2e1 * qJ(5);
t70 = -0.2e1 * t127;
t69 = 0.2e1 * t127;
t55 = -t88 * t90 + t76;
t54 = 0.2e1 * t117;
t39 = t93 * t48;
t38 = t86 * t47;
t36 = t90 * t48;
t34 = t84 * t47;
t30 = t90 * t40;
t28 = -0.2e1 * t113;
t27 = 0.2e1 * t119;
t23 = t117 + t119;
t22 = t24 * t90;
t19 = 0.2e1 * t112;
t18 = 0.2e1 * t114;
t17 = (-t84 + t86) * t50;
t12 = t13 * t93;
t3 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t85, t92 * t143, 0, t87, 0, 0, pkin(1) * t143, -0.2e1 * pkin(1) * t92, 0.2e1 * t116 * pkin(7), pkin(7) ^ 2 * t116 + pkin(1) ^ 2, t47, -0.2e1 * t50 * t48, 0, t46, 0, 0, t48 * t148, t50 * t148, 0.2e1 * t24 * t50 - 0.2e1 * t26 * t48, t26 ^ 2 + t75 ^ 2 + t150, t38, t28, t19, t34, -0.2e1 * t114, t46, -0.2e1 * t126 * t48 + 0.2e1 * t24 * t37, -0.2e1 * t11 * t48 + 0.2e1 * t24 * t40 (-t11 * t90 + t126 * t93) * t149, t11 ^ 2 + t126 ^ 2 + t150, t46, -0.2e1 * t112, t18, t38, t28, t34 (-t111 * t90 + t8 * t93) * t149, -0.2e1 * t13 * t37 + 0.2e1 * t48 * t8, 0.2e1 * t111 * t48 - 0.2e1 * t13 * t40, t111 ^ 2 + t13 ^ 2 + t8 ^ 2, t46, t18, t19, t34, 0.2e1 * t113, t38 (t4 * t93 - t6 * t90) * t149, -0.2e1 * t40 * t9 + 0.2e1 * t48 * t6, 0.2e1 * t37 * t9 - 0.2e1 * t4 * t48, t4 ^ 2 + t6 ^ 2 + t9 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t92, 0, t95, 0, -t92 * pkin(7), -t95 * pkin(7), 0, 0, 0, 0, t50, 0, -t48, 0, -t24, -t26 (-t48 * t91 - t50 * t94) * pkin(2) (-t24 * t94 + t26 * t91) * pkin(2), t30, t17, t36, -t30, t39, 0, t103 * t90 - t130, t103 * t93 + t22, t2, t2 * t73 + t24 * t74, 0, -t36, -t39, t30, t17, -t30, t1, t104 * t90 + t12, t104 * t93 - t131, t1 * t73 + t13 * t42, 0, -t39, t36, -t30, -t17, t30 (t44 * t93 - t45 * t90) * t50 + t141, -t29 * t40 + t45 * t48 - t137, t29 * t37 - t44 * t48 - t136, t29 * t9 + t4 * t44 + t45 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t133, -0.2e1 * t134, 0 (t91 ^ 2 + t94 ^ 2) * pkin(2) ^ 2, t84, t69, 0, t86, 0, 0, t74 * t145, 0.2e1 * t74 * t90, t27, t74 ^ 2 + t120, 0, 0, 0, t84, t69, t86, t27, t42 * t144, t42 * t146, t42 ^ 2 + t120, 0, 0, 0, t86, t70, t84, 0.2e1 * t124, t29 * t146, t29 * t145, t29 ^ 2 + t44 ^ 2 + t45 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t50, 0, -t48, 0, -t24, -t26, 0, 0, t30, t17, t36, -t30, t39, 0, t108 * t90 - t130, t108 * t93 + t22, t2, -t24 * pkin(3) + pkin(9) * t2, 0, -t36, -t39, t30, t17, -t30, t1, t107 * t90 + t12, t107 * t93 - t131, pkin(9) * t1 + t13 * t56, 0, -t39, t36, -t30, -t17, t30 (t60 * t93 - t61 * t90) * t50 + t141, -t40 * t41 + t48 * t61 - t137, t37 * t41 - t48 * t60 - t136, t4 * t60 + t41 * t9 + t6 * t61; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t133, -t134, 0, 0, t84, t69, 0, t86, 0, 0, t132 * t93, -t132 * t90, t23, -pkin(3) * t74 + t121, 0, 0, 0, t84, t69, t86, t23, t123 * t93, -t123 * t90, t42 * t56 + t121, 0, 0, 0, t86, t70, t84, t122 + t124, t125 * t90, t125 * t93, t29 * t41 + t44 * t60 + t45 * t61; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t84, t69, 0, t86, 0, 0, pkin(3) * t144, pkin(3) * t146, t54, pkin(3) ^ 2 + t118, 0, 0, 0, t84, t69, t86, t54, t56 * t144, t56 * t146, t56 ^ 2 + t118, 0, 0, 0, t86, t70, t84, 0.2e1 * t122, t41 * t146, t41 * t145, t41 ^ 2 + t60 ^ 2 + t61 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t40, 0, -t37, t48, -t126, -t11, 0, 0, t48, -t40, t37, 0, 0, 0, t106 * t50, t126 - 0.2e1 * t138, t111 + t43, -pkin(4) * t8 + qJ(5) * t111, t48, t37, t40, 0, 0, 0, t151 * t50, t102 + 0.2e1 * t43, t147 * t48 + t101, qJ(5) * t6 - t4 * t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t90, 0, t93, 0, -t65, -t68, 0, 0, 0, -t90, -t93, 0, 0, 0, t152, t65, t68, t152 * t73, 0, -t93, t90, 0, 0, 0, t55, t45, -t44, qJ(5) * t45 - t44 * t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t90, 0, t93, 0, -t79, -t82, 0, 0, 0, -t90, -t93, 0, 0, 0, t152, t79, t82, t152 * pkin(9), 0, -t93, t90, 0, 0, 0, t55, t61, -t60, qJ(5) * t61 - t60 * t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, -0.2e1 * pkin(4), t96, pkin(4) ^ 2 + t97, 1, 0, 0, 0, 0, 0, 0, t96, t147, t88 ^ 2 + t97; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t40, t48, 0, t8, 0, 0, 0, 0, 0, 0, t40, 0, -t48, t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t90, 0, 0, t65, 0, 0, 0, 0, 0, 0, t90, 0, 0, t44; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t90, 0, 0, t79, 0, 0, 0, 0, 0, 0, t90, 0, 0, t60; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, -pkin(4), 0, 0, 0, 0, 0, 0, 0, 0, -1, -t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t37, t48, 0, t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t93, 0, 0, t45; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t93, 0, 0, t61; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, qJ(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1;];
MM_reg  = t3;
