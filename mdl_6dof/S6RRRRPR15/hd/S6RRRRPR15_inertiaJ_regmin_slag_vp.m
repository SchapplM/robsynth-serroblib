% Calculate minimal parameter regressor of joint inertia matrix for
% S6RRRRPR15
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d4,d6]';
% 
% Output:
% MM_reg [((6+1)*6/2)x35]
%   minimal parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 00:54
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRRRPR15_inertiaJ_regmin_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR15_inertiaJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRPR15_inertiaJ_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-08 03:39:36
% EndTime: 2019-05-08 03:39:46
% DurationCPUTime: 2.23s
% Computational Cost: add. (3169->240), mult. (8474->479), div. (0->0), fcn. (9729->12), ass. (0->143)
t90 = sin(pkin(6));
t159 = 0.2e1 * t90;
t96 = sin(qJ(2));
t139 = t90 * t96;
t146 = cos(qJ(2));
t92 = cos(pkin(6));
t113 = t92 * t146;
t77 = pkin(1) * t113;
t91 = cos(pkin(7));
t46 = t92 * pkin(2) + t77 + (-pkin(10) * t91 - pkin(9)) * t139;
t89 = sin(pkin(7));
t53 = (-pkin(10) * t89 * t96 - t146 * pkin(2) - pkin(1)) * t90;
t105 = t46 * t91 + t53 * t89;
t114 = t91 * t146;
t109 = t90 * t114;
t115 = t90 * t146;
t137 = t92 * t96;
t68 = pkin(1) * t137 + pkin(9) * t115;
t40 = (t89 * t92 + t109) * pkin(10) + t68;
t95 = sin(qJ(3));
t99 = cos(qJ(3));
t19 = t105 * t99 - t95 * t40;
t141 = t89 * t95;
t45 = t92 * t141 + (t95 * t114 + t96 * t99) * t90;
t60 = t89 * t115 - t92 * t91;
t94 = sin(qJ(4));
t98 = cos(qJ(4));
t34 = t45 * t98 - t60 * t94;
t158 = -0.2e1 * t34;
t140 = t89 * t99;
t44 = -t99 * t109 + t95 * t139 - t92 * t140;
t157 = 0.2e1 * t44;
t156 = -0.2e1 * t45;
t64 = t98 * t141 + t94 * t91;
t155 = -0.2e1 * t64;
t154 = 0.2e1 * t64;
t153 = -0.2e1 * t94;
t152 = 0.2e1 * t98;
t151 = 2 * qJ(5);
t150 = pkin(4) + pkin(12);
t149 = pkin(2) * t95;
t148 = pkin(2) * t99;
t147 = t44 * pkin(4);
t33 = t45 * t94 + t60 * t98;
t93 = sin(qJ(6));
t97 = cos(qJ(6));
t22 = t33 * t93 + t44 * t97;
t145 = t22 * t97;
t144 = t34 * t93;
t29 = t34 * t94;
t63 = t94 * t141 - t98 * t91;
t48 = -t97 * t140 + t93 * t63;
t143 = t48 * t97;
t59 = t64 * t94;
t83 = t89 ^ 2;
t142 = t83 * t99;
t138 = t91 * t95;
t136 = t93 * t64;
t135 = t93 * t94;
t134 = t93 * t98;
t133 = t94 * t44;
t132 = t94 * t98;
t131 = t97 * t93;
t130 = t97 * t98;
t129 = t98 * t44;
t27 = -t89 * t46 + t91 * t53;
t14 = t44 * pkin(3) - t45 * pkin(11) + t27;
t20 = t105 * t95 + t99 * t40;
t18 = -t60 * pkin(11) + t20;
t9 = t94 * t14 + t98 * t18;
t120 = pkin(10) * t140;
t56 = t120 + (pkin(11) + t149) * t91;
t57 = (-pkin(3) * t99 - pkin(11) * t95 - pkin(2)) * t89;
t38 = t98 * t56 + t94 * t57;
t86 = t94 ^ 2;
t88 = t98 ^ 2;
t128 = t86 + t88;
t127 = qJ(5) * t98;
t41 = t44 * qJ(5);
t126 = t93 * t150;
t125 = t97 * t150;
t124 = 0.2e1 * t140;
t123 = -0.2e1 * t132;
t122 = pkin(11) * t133;
t121 = pkin(11) * t129;
t119 = t94 * t140;
t118 = t98 * t140;
t6 = -t41 - t9;
t117 = qJ(5) * t140;
t84 = t90 ^ 2;
t116 = t84 * t146;
t112 = -t94 * qJ(5) - pkin(3);
t8 = t98 * t14 - t94 * t18;
t37 = -t94 * t56 + t98 * t57;
t111 = pkin(11) * t119;
t110 = pkin(11) * t118;
t76 = pkin(4) * t140;
t36 = -t37 + t76;
t7 = -t8 - t147;
t108 = -t6 * t98 + t7 * t94;
t107 = -pkin(4) * t94 + t127;
t35 = t117 - t38;
t106 = -t35 * t98 + t36 * t94;
t104 = -t150 * t94 + t127;
t75 = pkin(10) * t141;
t55 = t75 + (-pkin(3) - t148) * t91;
t103 = -t64 * qJ(5) + t55;
t17 = t60 * pkin(3) - t19;
t102 = -t34 * qJ(5) + t17;
t87 = t97 ^ 2;
t85 = t93 ^ 2;
t82 = t98 * pkin(11);
t81 = t94 * pkin(11);
t80 = t97 * t94;
t74 = t98 * pkin(5) + t82;
t73 = t94 * pkin(5) + t81;
t71 = -t98 * pkin(4) + t112;
t69 = -t150 * t98 + t112;
t67 = pkin(2) * t138 + t120;
t66 = -pkin(9) * t139 + t77;
t65 = t91 * t148 - t75;
t62 = t64 ^ 2;
t58 = t97 * t64;
t47 = t93 * t140 + t97 * t63;
t43 = t97 * t69 + t93 * t73;
t42 = -t93 * t69 + t97 * t73;
t32 = t63 * pkin(4) + t103;
t31 = t34 ^ 2;
t30 = t34 * t97;
t26 = t34 * t64;
t25 = -t63 * pkin(5) - t35;
t24 = t150 * t63 + t103;
t23 = t64 * pkin(5) + pkin(12) * t140 + t36;
t21 = -t33 * t97 + t44 * t93;
t12 = t93 * t23 + t97 * t24;
t11 = t97 * t23 - t93 * t24;
t10 = t33 * pkin(4) + t102;
t5 = t150 * t33 + t102;
t4 = -t33 * pkin(5) - t6;
t3 = t34 * pkin(5) - t150 * t44 - t8;
t2 = t93 * t3 + t97 * t5;
t1 = t97 * t3 - t93 * t5;
t13 = [1, 0, 0, t84 * t96 ^ 2, 0.2e1 * t96 * t116, t137 * t159, t113 * t159, t92 ^ 2, 0.2e1 * pkin(1) * t116 + 0.2e1 * t66 * t92, -0.2e1 * t84 * pkin(1) * t96 - 0.2e1 * t68 * t92, t45 ^ 2, t44 * t156, t60 * t156, t60 * t157, t60 ^ 2, -0.2e1 * t19 * t60 + 0.2e1 * t27 * t44, 0.2e1 * t20 * t60 + 0.2e1 * t27 * t45, t31, t33 * t158, t34 * t157, -0.2e1 * t33 * t44, t44 ^ 2, 0.2e1 * t17 * t33 + 0.2e1 * t8 * t44, 0.2e1 * t17 * t34 - 0.2e1 * t9 * t44, 0.2e1 * t6 * t33 + 0.2e1 * t7 * t34, -0.2e1 * t10 * t33 + 0.2e1 * t7 * t44, -0.2e1 * t10 * t34 - 0.2e1 * t6 * t44, t10 ^ 2 + t6 ^ 2 + t7 ^ 2, t22 ^ 2, -0.2e1 * t22 * t21, 0.2e1 * t22 * t34, t21 * t158, t31, 0.2e1 * t1 * t34 + 0.2e1 * t4 * t21, -0.2e1 * t2 * t34 + 0.2e1 * t4 * t22; 0, 0, 0, 0, 0, t139, t115, t92, t66, -t68, t45 * t141 (-t44 * t95 + t45 * t99) * t89, -t60 * t141 + t45 * t91, -t60 * t140 - t44 * t91, -t60 * t91, t19 * t91 - t65 * t60 + (-pkin(2) * t44 - t27 * t99) * t89, -t20 * t91 + t67 * t60 + (-pkin(2) * t45 + t27 * t95) * t89, t26, -t64 * t33 - t34 * t63, -t34 * t140 + t64 * t44, t140 * t33 - t63 * t44, -t44 * t140, -t140 * t8 + t17 * t63 + t55 * t33 + t37 * t44, t140 * t9 + t17 * t64 + t55 * t34 - t38 * t44, t35 * t33 + t36 * t34 + t6 * t63 + t7 * t64, -t10 * t63 - t140 * t7 - t32 * t33 + t36 * t44, -t10 * t64 + t140 * t6 - t32 * t34 - t35 * t44, t10 * t32 + t6 * t35 + t7 * t36, t22 * t48, -t48 * t21 + t22 * t47, t22 * t64 + t48 * t34, -t21 * t64 + t47 * t34, t26, t1 * t64 + t11 * t34 + t25 * t21 - t4 * t47, -t12 * t34 - t2 * t64 + t25 * t22 + t4 * t48; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, t83 * t95 ^ 2, 0.2e1 * t95 * t142, 0.2e1 * t89 * t138, t91 * t124, t91 ^ 2, 0.2e1 * pkin(2) * t142 + 0.2e1 * t65 * t91, -0.2e1 * t83 * t149 - 0.2e1 * t67 * t91, t62, t63 * t155, t140 * t155, t63 * t124, t83 * t99 ^ 2, -0.2e1 * t140 * t37 + 0.2e1 * t55 * t63, 0.2e1 * t140 * t38 + 0.2e1 * t55 * t64, 0.2e1 * t35 * t63 + 0.2e1 * t36 * t64, -0.2e1 * t140 * t36 - 0.2e1 * t32 * t63, 0.2e1 * t140 * t35 - 0.2e1 * t32 * t64, t32 ^ 2 + t35 ^ 2 + t36 ^ 2, t48 ^ 2, 0.2e1 * t48 * t47, t48 * t154, t47 * t154, t62, 0.2e1 * t11 * t64 - 0.2e1 * t25 * t47, -0.2e1 * t12 * t64 + 0.2e1 * t25 * t48; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t45, -t44, -t60, t19, -t20, t29, -t94 * t33 + t34 * t98, t133, t129, 0, -pkin(3) * t33 - t17 * t98 - t122, -pkin(3) * t34 + t17 * t94 - t121 (-t33 * t98 + t29) * pkin(11) + t108, t10 * t98 - t71 * t33 + t122, -t10 * t94 - t71 * t34 + t121, pkin(11) * t108 + t10 * t71, -t22 * t134 (t21 * t93 - t145) * t98, -t34 * t134 + t22 * t94, -t34 * t130 - t21 * t94, t29, t1 * t94 + t130 * t4 + t74 * t21 + t42 * t34, -t134 * t4 - t2 * t94 + t74 * t22 - t43 * t34; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t141, t140, t91, t65, -t67, t59, -t94 * t63 + t64 * t98, -t119, -t118, 0, -pkin(3) * t63 - t55 * t98 + t111, -pkin(3) * t64 + t55 * t94 + t110 (-t63 * t98 + t59) * pkin(11) + t106, t32 * t98 - t71 * t63 - t111, -t32 * t94 - t71 * t64 - t110, pkin(11) * t106 + t32 * t71, -t48 * t134 (-t47 * t93 - t143) * t98, -t134 * t64 + t48 * t94, -t130 * t64 + t47 * t94, t59, t11 * t94 + t130 * t25 + t42 * t64 - t74 * t47, -t12 * t94 - t134 * t25 - t43 * t64 + t74 * t48; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, t86, 0.2e1 * t132, 0, 0, 0, pkin(3) * t152, pkin(3) * t153, 0.2e1 * t128 * pkin(11), t71 * t152, t71 * t153, pkin(11) ^ 2 * t128 + t71 ^ 2, t85 * t88, 0.2e1 * t88 * t131, t93 * t123, t97 * t123, t86, 0.2e1 * t130 * t74 + 0.2e1 * t42 * t94, -0.2e1 * t134 * t74 - 0.2e1 * t43 * t94; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t34, -t33, t44, t8, -t9, -t34 * pkin(4) - qJ(5) * t33, -t8 - 0.2e1 * t147, -t6 + t41, -t7 * pkin(4) - t6 * qJ(5), t145, -t97 * t21 - t22 * t93, t30, -t144, 0, qJ(5) * t21 - t125 * t34 + t4 * t93, qJ(5) * t22 + t126 * t34 + t4 * t97; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t64, -t63, -t140, t37, -t38, -pkin(4) * t64 - qJ(5) * t63, -t37 + 0.2e1 * t76, -0.2e1 * t117 + t38, -t36 * pkin(4) - t35 * qJ(5), t143, t97 * t47 - t48 * t93, t58, -t136, 0, -qJ(5) * t47 - t125 * t64 + t25 * t93, qJ(5) * t48 + t126 * t64 + t25 * t97; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t94, t98, 0, -t81, -t82, t107, t81, t82, t107 * pkin(11), -t93 * t130 (t85 - t87) * t98, t80, -t135, 0, t104 * t97 + t74 * t93, -t104 * t93 + t74 * t97; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, -0.2e1 * pkin(4), t151, pkin(4) ^ 2 + (qJ(5) ^ 2) t87, -0.2e1 * t131, 0, 0, 0, t93 * t151, t97 * t151; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t34, t44, 0, t7, 0, 0, 0, 0, 0, t30, -t144; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t64, -t140, 0, t36, 0, 0, 0, 0, 0, t58, -t136; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t94, 0, 0, t81, 0, 0, 0, 0, 0, t80, -t135; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, -pkin(4), 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t22, -t21, t34, t1, -t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t48, t47, t64, t11, -t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t134, -t130, t94, t42, -t43; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t97, -t93, 0, -t125, t126; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t97, -t93; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0;];
MM_reg  = t13;
