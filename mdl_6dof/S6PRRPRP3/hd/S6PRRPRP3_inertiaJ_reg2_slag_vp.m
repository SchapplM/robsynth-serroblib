% Calculate inertial parameters regressor of joint inertia matrix for
% S6PRRPRP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d5,theta1,theta4]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 21:39
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6PRRPRP3_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRP3_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRPRP3_inertiaJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 03:56:02
% EndTime: 2019-05-05 03:56:07
% DurationCPUTime: 1.68s
% Computational Cost: add. (988->150), mult. (2253->271), div. (0->0), fcn. (2604->10), ass. (0->97)
t73 = cos(qJ(3));
t123 = 0.2e1 * t73;
t117 = cos(qJ(5));
t66 = sin(pkin(11));
t68 = cos(pkin(11));
t70 = sin(qJ(5));
t46 = -t117 * t68 + t70 * t66;
t48 = t117 * t66 + t70 * t68;
t71 = sin(qJ(3));
t35 = t48 * t71;
t122 = t35 ^ 2;
t67 = sin(pkin(6));
t72 = sin(qJ(2));
t105 = t67 * t72;
t69 = cos(pkin(6));
t39 = t71 * t105 - t69 * t73;
t38 = t39 ^ 2;
t121 = t46 ^ 2;
t58 = -t68 * pkin(4) - pkin(3);
t120 = 0.2e1 * t58;
t64 = t71 ^ 2;
t119 = t64 * pkin(8);
t60 = t71 * pkin(8);
t118 = t73 * pkin(5);
t97 = pkin(9) + qJ(4);
t51 = t97 * t68;
t85 = t97 * t66;
t28 = t117 * t85 + t70 * t51;
t116 = t28 * t73;
t30 = t117 * t51 - t70 * t85;
t115 = t30 * t73;
t114 = t35 * t46;
t37 = t46 * t71;
t113 = t37 * t35;
t112 = t39 * t48;
t111 = t39 * t71;
t110 = t48 * t46;
t109 = t48 * t73;
t108 = t66 * t68;
t107 = t66 * t71;
t106 = t66 * t73;
t74 = cos(qJ(2));
t104 = t67 * t74;
t103 = t68 * t71;
t102 = t68 * t73;
t100 = t71 * t73;
t99 = t73 * t35;
t98 = t73 * t46;
t50 = -t73 * pkin(3) - t71 * qJ(4) - pkin(2);
t43 = t68 * t50;
t19 = -pkin(9) * t103 + t43 + (-pkin(8) * t66 - pkin(4)) * t73;
t33 = pkin(8) * t102 + t66 * t50;
t26 = -pkin(9) * t107 + t33;
t7 = t117 * t26 + t70 * t19;
t49 = pkin(4) * t107 + t60;
t61 = t66 ^ 2;
t63 = t68 ^ 2;
t96 = t61 + t63;
t95 = t73 * qJ(6);
t94 = 0.2e1 * t100;
t93 = t28 ^ 2 + t30 ^ 2;
t92 = t66 * t103;
t41 = t73 * t105 + t69 * t71;
t24 = -t68 * t104 - t41 * t66;
t25 = -t66 * t104 + t41 * t68;
t11 = t117 * t25 + t70 * t24;
t9 = -t117 * t24 + t70 * t25;
t91 = t11 * t30 + t9 * t28;
t90 = -t11 * t35 - t9 * t37;
t89 = -t11 * t46 + t9 * t48;
t88 = t11 ^ 2 + t9 ^ 2 + t38;
t86 = t39 * t35 + t9 * t73;
t84 = -t28 * t37 - t30 * t35;
t6 = t117 * t19 - t70 * t26;
t83 = -pkin(3) * t71 + qJ(4) * t73;
t82 = t11 * t73 - t39 * t37;
t81 = -t24 * t66 + t25 * t68;
t32 = -pkin(8) * t106 + t43;
t80 = -t32 * t66 + t33 * t68;
t79 = -t48 * t35 + t37 * t46;
t78 = t41 * t73 + t111;
t77 = 0.2e1 * t28 * t48 - 0.2e1 * t30 * t46;
t76 = pkin(8) ^ 2;
t65 = t73 ^ 2;
t62 = t67 ^ 2;
t59 = t64 * t76;
t55 = t62 * t74 ^ 2;
t44 = t48 ^ 2;
t34 = t37 ^ 2;
t31 = t37 * t123;
t23 = t39 * t46;
t21 = t37 * t48;
t17 = t46 * pkin(5) - t48 * qJ(6) + t58;
t12 = t35 * pkin(5) + t37 * qJ(6) + t49;
t5 = -t6 + t118;
t4 = -t95 + t7;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t62 * t72 ^ 2 + t69 ^ 2 + t55, 0, 0, 0, 0, 0, 0, 0, 0, 0, t41 ^ 2 + t38 + t55, 0, 0, 0, 0, 0, 0, 0, 0, 0, t24 ^ 2 + t25 ^ 2 + t38, 0, 0, 0, 0, 0, 0, 0, 0, 0, t88, 0, 0, 0, 0, 0, 0, 0, 0, 0, t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t104, -t105, 0, 0, 0, 0, 0, 0, 0, 0, t73 * t104, -t71 * t104, t78, pkin(2) * t104 + t78 * pkin(8), 0, 0, 0, 0, 0, 0, t39 * t107 - t24 * t73, t39 * t103 + t25 * t73 (-t24 * t68 - t25 * t66) * t71, pkin(8) * t111 + t24 * t32 + t25 * t33, 0, 0, 0, 0, 0, 0, t86, t82, t90, t11 * t7 + t39 * t49 - t9 * t6, 0, 0, 0, 0, 0, 0, t86, t90, -t82, t11 * t4 + t39 * t12 + t9 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t64, t94, 0, t65, 0, 0, pkin(2) * t123, -0.2e1 * pkin(2) * t71, 0.2e1 * (t64 + t65) * pkin(8), pkin(2) ^ 2 + t65 * t76 + t59, t63 * t64, -0.2e1 * t64 * t108, -0.2e1 * t68 * t100, t61 * t64, t66 * t94, t65, 0.2e1 * t66 * t119 - 0.2e1 * t32 * t73, 0.2e1 * t68 * t119 + 0.2e1 * t33 * t73, 0.2e1 * (-t32 * t68 - t33 * t66) * t71, t32 ^ 2 + t33 ^ 2 + t59, t34, 0.2e1 * t113, t31, t122, 0.2e1 * t99, t65, 0.2e1 * t49 * t35 - 0.2e1 * t6 * t73, -0.2e1 * t49 * t37 + 0.2e1 * t7 * t73, -0.2e1 * t7 * t35 + 0.2e1 * t6 * t37, t49 ^ 2 + t6 ^ 2 + t7 ^ 2, t34, t31, -0.2e1 * t113, t65, -0.2e1 * t99, t122, 0.2e1 * t12 * t35 + 0.2e1 * t5 * t73, -0.2e1 * t4 * t35 - 0.2e1 * t5 * t37, 0.2e1 * t12 * t37 - 0.2e1 * t4 * t73, t12 ^ 2 + t4 ^ 2 + t5 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t39, -t41, 0, 0, 0, 0, 0, 0, 0, 0, -t39 * t68, t39 * t66, t81, -t39 * pkin(3) + t81 * qJ(4), 0, 0, 0, 0, 0, 0, t23, t112, t89, t39 * t58 + t91, 0, 0, 0, 0, 0, 0, t23, t89, -t112, t39 * t17 + t91; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t71, 0, t73, 0, -t60, -t73 * pkin(8), 0, 0, t92 (-t61 + t63) * t71, -t106, -t92, -t102, 0, -pkin(8) * t103 + t83 * t66, pkin(8) * t107 + t83 * t68, t80, -pkin(3) * t60 + t80 * qJ(4), -t21, t79, -t109, t114, t98, 0, t58 * t35 + t49 * t46 + t116, -t58 * t37 + t49 * t48 + t115, -t7 * t46 - t6 * t48 + t84, -t6 * t28 + t7 * t30 + t49 * t58, -t21, -t109, -t79, 0, -t98, t114, t12 * t46 + t17 * t35 + t116, -t4 * t46 + t5 * t48 + t84, -t12 * t48 + t17 * t37 - t115, t12 * t17 + t5 * t28 + t4 * t30; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t61, 0.2e1 * t108, 0, t63, 0, 0, 0.2e1 * pkin(3) * t68, -0.2e1 * pkin(3) * t66, 0.2e1 * t96 * qJ(4), t96 * qJ(4) ^ 2 + pkin(3) ^ 2, t44, -0.2e1 * t110, 0, t121, 0, 0, t46 * t120, t48 * t120, t77, t58 ^ 2 + t93, t44, 0, 0.2e1 * t110, 0, 0, t121, 0.2e1 * t17 * t46, t77, -0.2e1 * t17 * t48, t17 ^ 2 + t93; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t39, 0, 0, 0, 0, 0, 0, 0, 0, 0, t39, 0, 0, 0, 0, 0, 0, 0, 0, 0, t39; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t107, t103, 0, t60, 0, 0, 0, 0, 0, 0, t35, -t37, 0, t49, 0, 0, 0, 0, 0, 0, t35, 0, t37, t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t68, t66, 0, -pkin(3), 0, 0, 0, 0, 0, 0, t46, t48, 0, t58, 0, 0, 0, 0, 0, 0, t46, 0, -t48, t17; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t9, -t11, 0, 0, 0, 0, 0, 0, 0, 0, -t9, 0, t11, -t9 * pkin(5) + t11 * qJ(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t37, 0, -t35, -t73, t6, -t7, 0, 0, 0, -t37, 0, -t73, t35, 0, t6 - 0.2e1 * t118, pkin(5) * t37 - t35 * qJ(6), -0.2e1 * t95 + t7, -t5 * pkin(5) + t4 * qJ(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t48, 0, -t46, 0, -t28, -t30, 0, 0, 0, t48, 0, 0, t46, 0, -t28, -pkin(5) * t48 - t46 * qJ(6), t30, -t28 * pkin(5) + t30 * qJ(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0.2e1 * pkin(5), 0, 0.2e1 * qJ(6), pkin(5) ^ 2 + qJ(6) ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t73, -t37, 0, t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t48, 0, t28; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, -pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1;];
MM_reg  = t1;
