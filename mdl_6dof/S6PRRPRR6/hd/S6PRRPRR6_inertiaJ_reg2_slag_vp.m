% Calculate inertial parameters regressor of joint inertia matrix for
% S6PRRPRR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d5,d6,theta1,theta4]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 22:29
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6PRRPRR6_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRR6_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PRRPRR6_inertiaJ_reg2_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 05:44:23
% EndTime: 2019-05-05 05:44:31
% DurationCPUTime: 2.32s
% Computational Cost: add. (2567->206), mult. (6336->415), div. (0->0), fcn. (7614->14), ass. (0->117)
t126 = cos(qJ(5));
t73 = sin(pkin(13));
t76 = cos(pkin(13));
t80 = sin(qJ(5));
t57 = t126 * t73 + t80 * t76;
t137 = -0.2e1 * t57;
t77 = cos(pkin(7));
t85 = cos(qJ(2));
t112 = t77 * t85;
t74 = sin(pkin(7));
t81 = sin(qJ(3));
t117 = t74 * t81;
t75 = sin(pkin(6));
t78 = cos(pkin(6));
t82 = sin(qJ(2));
t84 = cos(qJ(3));
t35 = t78 * t117 + (t81 * t112 + t82 * t84) * t75;
t114 = t75 * t85;
t48 = -t74 * t114 + t78 * t77;
t19 = -t35 * t73 + t48 * t76;
t20 = t35 * t76 + t48 * t73;
t10 = -t126 * t19 + t80 * t20;
t136 = t10 ^ 2;
t46 = t73 * t117 - t76 * t77;
t49 = t76 * t117 + t73 * t77;
t27 = t126 * t46 + t80 * t49;
t135 = t27 ^ 2;
t115 = t75 * t82;
t116 = t74 * t84;
t33 = -t75 * t84 * t112 + t81 * t115 - t78 * t116;
t32 = t33 ^ 2;
t106 = pkin(10) + qJ(4);
t59 = t106 * t76;
t97 = t106 * t73;
t36 = t126 * t97 + t80 * t59;
t134 = t36 ^ 2;
t55 = -t126 * t76 + t80 * t73;
t133 = t55 ^ 2;
t132 = -0.2e1 * t27;
t66 = -t76 * pkin(4) - pkin(3);
t131 = 0.2e1 * t66;
t130 = 0.2e1 * t74;
t129 = 0.2e1 * t76;
t128 = pkin(2) * t81;
t127 = pkin(2) * t84;
t125 = t10 * t36;
t29 = t126 * t49 - t80 * t46;
t79 = sin(qJ(6));
t83 = cos(qJ(6));
t21 = t83 * t116 + t79 * t29;
t124 = t21 * t83;
t23 = -t79 * t116 + t83 * t29;
t123 = t23 * t79;
t122 = t23 * t83;
t121 = t27 * t55;
t120 = t46 * t76;
t119 = t49 * t73;
t68 = t74 ^ 2;
t118 = t68 * t84;
t113 = t77 * t81;
t111 = t79 * t27;
t110 = t79 * t55;
t109 = t79 * t57;
t108 = t79 * t83;
t26 = t83 * t27;
t107 = t83 * t57;
t100 = pkin(9) * t116;
t42 = t100 + (qJ(4) + t128) * t77;
t43 = (-pkin(3) * t84 - qJ(4) * t81 - pkin(2)) * t74;
t25 = t76 * t42 + t73 * t43;
t67 = t73 ^ 2;
t70 = t76 ^ 2;
t105 = t67 + t70;
t71 = t79 ^ 2;
t72 = t83 ^ 2;
t104 = t71 + t72;
t103 = t55 * t137;
t102 = -0.2e1 * t116;
t101 = 0.2e1 * t116;
t99 = t79 * t107;
t98 = qJ(4) * t116;
t24 = -t73 * t42 + t76 * t43;
t96 = -pkin(5) * t57 - pkin(11) * t55;
t13 = -pkin(4) * t116 - t49 * pkin(10) + t24;
t16 = -t46 * pkin(10) + t25;
t8 = t126 * t16 + t80 * t13;
t6 = -pkin(11) * t116 + t8;
t63 = pkin(9) * t117;
t45 = t63 + (-pkin(3) - t127) * t77;
t30 = t46 * pkin(4) + t45;
t9 = t27 * pkin(5) - t29 * pkin(11) + t30;
t1 = -t79 * t6 + t83 * t9;
t2 = t83 * t6 + t79 * t9;
t95 = t1 * t83 + t2 * t79;
t94 = -t1 * t79 + t2 * t83;
t12 = t126 * t20 + t80 * t19;
t3 = -t79 * t12 + t33 * t83;
t4 = t83 * t12 + t33 * t79;
t93 = t3 * t83 + t4 * t79;
t92 = -t3 * t79 + t4 * t83;
t31 = t55 * pkin(5) - t57 * pkin(11) + t66;
t38 = t126 * t59 - t80 * t97;
t14 = t83 * t31 - t79 * t38;
t15 = t79 * t31 + t83 * t38;
t91 = t14 * t83 + t15 * t79;
t90 = -t14 * t79 + t15 * t83;
t89 = -t19 * t73 + t20 * t76;
t88 = -t24 * t73 + t25 * t76;
t7 = t126 * t13 - t80 * t16;
t64 = t68 * t84 ^ 2;
t53 = t57 ^ 2;
t52 = pkin(2) * t113 + t100;
t51 = t77 * t127 - t63;
t50 = t83 * t55;
t18 = t79 * t21;
t5 = pkin(5) * t116 - t7;
t11 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t78 ^ 2 + (t82 ^ 2 + t85 ^ 2) * t75 ^ 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, t35 ^ 2 + t48 ^ 2 + t32, 0, 0, 0, 0, 0, 0, 0, 0, 0, t19 ^ 2 + t20 ^ 2 + t32, 0, 0, 0, 0, 0, 0, 0, 0, 0, t12 ^ 2 + t136 + t32, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3 ^ 2 + t4 ^ 2 + t136; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t114, -t115, 0, 0, 0, 0, 0, 0, 0, 0, -t48 * t116 - t33 * t77, t48 * t117 - t35 * t77 (t33 * t81 + t35 * t84) * t74, -t48 * t74 * pkin(2) - t33 * t51 + t35 * t52, 0, 0, 0, 0, 0, 0, -t19 * t116 + t33 * t46, t20 * t116 + t33 * t49, -t19 * t49 - t20 * t46, t19 * t24 + t20 * t25 + t33 * t45, 0, 0, 0, 0, 0, 0, t10 * t116 + t33 * t27, t12 * t116 + t33 * t29, t10 * t29 - t12 * t27, -t10 * t7 + t12 * t8 + t33 * t30, 0, 0, 0, 0, 0, 0, t10 * t21 + t3 * t27, t10 * t23 - t4 * t27, -t4 * t21 - t3 * t23, t3 * t1 + t10 * t5 + t4 * t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t68 * t81 ^ 2, 0.2e1 * t81 * t118, t113 * t130, t64, t77 * t101, t77 ^ 2, 0.2e1 * pkin(2) * t118 + 0.2e1 * t51 * t77, -0.2e1 * t68 * t128 - 0.2e1 * t52 * t77 (-t51 * t81 + t52 * t84) * t130, t68 * pkin(2) ^ 2 + t51 ^ 2 + t52 ^ 2, t49 ^ 2, -0.2e1 * t49 * t46, t49 * t102, t46 ^ 2, t46 * t101, t64, -0.2e1 * t24 * t116 + 0.2e1 * t45 * t46, 0.2e1 * t25 * t116 + 0.2e1 * t45 * t49, -0.2e1 * t24 * t49 - 0.2e1 * t25 * t46, t24 ^ 2 + t25 ^ 2 + t45 ^ 2, t29 ^ 2, t29 * t132, t29 * t102, t135, t27 * t101, t64, -0.2e1 * t7 * t116 + 0.2e1 * t30 * t27, 0.2e1 * t8 * t116 + 0.2e1 * t30 * t29, -0.2e1 * t8 * t27 - 0.2e1 * t7 * t29, t30 ^ 2 + t7 ^ 2 + t8 ^ 2, t23 ^ 2, -0.2e1 * t23 * t21, 0.2e1 * t23 * t27, t21 ^ 2, t21 * t132, t135, 0.2e1 * t1 * t27 + 0.2e1 * t5 * t21, -0.2e1 * t2 * t27 + 0.2e1 * t5 * t23, -0.2e1 * t1 * t23 - 0.2e1 * t2 * t21, t1 ^ 2 + t2 ^ 2 + t5 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t33, -t35, 0, 0, 0, 0, 0, 0, 0, 0, -t33 * t76, t33 * t73, t89, -t33 * pkin(3) + qJ(4) * t89, 0, 0, 0, 0, 0, 0, t33 * t55, t33 * t57, t10 * t57 - t12 * t55, t12 * t38 + t33 * t66 + t125, 0, 0, 0, 0, 0, 0, t10 * t109 + t3 * t55, t10 * t107 - t4 * t55, -t93 * t57, t3 * t14 + t4 * t15 + t125; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t117, 0, t116, t77, t51, -t52, 0, 0, t119, -t73 * t46 + t49 * t76, -t73 * t116, -t120, -t76 * t116, 0, -pkin(3) * t46 - t45 * t76 + t73 * t98, -pkin(3) * t49 + t45 * t73 + t76 * t98 (t119 - t120) * qJ(4) + t88, -t45 * pkin(3) + qJ(4) * t88, t29 * t57, -t57 * t27 - t29 * t55, -t57 * t116, t121, t55 * t116, 0, t36 * t116 + t66 * t27 + t30 * t55, t38 * t116 + t66 * t29 + t30 * t57, -t38 * t27 + t36 * t29 - t8 * t55 - t7 * t57, t30 * t66 - t7 * t36 + t8 * t38, t23 * t107 (-t123 - t124) * t57, t27 * t107 + t23 * t55, t21 * t109, -t27 * t109 - t21 * t55, t121, t1 * t55 + t5 * t109 + t14 * t27 + t36 * t21, t5 * t107 - t15 * t27 - t2 * t55 + t36 * t23, -t14 * t23 - t15 * t21 - t57 * t95, t1 * t14 + t2 * t15 + t5 * t36; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t67, t73 * t129, 0, t70, 0, 0, pkin(3) * t129, -0.2e1 * pkin(3) * t73, 0.2e1 * t105 * qJ(4), t105 * qJ(4) ^ 2 + pkin(3) ^ 2, t53, t103, 0, t133, 0, 0, t55 * t131, t57 * t131, 0.2e1 * t36 * t57 - 0.2e1 * t38 * t55, t38 ^ 2 + t66 ^ 2 + t134, t72 * t53, -0.2e1 * t53 * t108, 0.2e1 * t55 * t107, t71 * t53, t79 * t103, t133, 0.2e1 * t36 * t109 + 0.2e1 * t14 * t55, 0.2e1 * t36 * t107 - 0.2e1 * t15 * t55, t91 * t137, t14 ^ 2 + t15 ^ 2 + t134; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t33, 0, 0, 0, 0, 0, 0, 0, 0, 0, t33, 0, 0, 0, 0, 0, 0, 0, 0, 0, t93; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t46, t49, 0, t45, 0, 0, 0, 0, 0, 0, t27, t29, 0, t30, 0, 0, 0, 0, 0, 0, t26, -t111, -t18 - t122, t95; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t76, t73, 0, -pkin(3), 0, 0, 0, 0, 0, 0, t55, t57, 0, t66, 0, 0, 0, 0, 0, 0, t50, -t110, -t104 * t57, t91; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t104; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t10, -t12, 0, 0, 0, 0, 0, 0, 0, 0, -t10 * t83, t10 * t79, t92, -t10 * pkin(5) + pkin(11) * t92; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t29, 0, -t27, -t116, t7, -t8, 0, 0, t123, -t18 + t122, t111, -t124, t26, 0, -pkin(5) * t21 - pkin(11) * t111 - t5 * t83, -pkin(5) * t23 - pkin(11) * t26 + t5 * t79 (t123 - t124) * pkin(11) + t94, -t5 * pkin(5) + pkin(11) * t94; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t57, 0, -t55, 0, -t36, -t38, 0, 0, t99 (-t71 + t72) * t57, t110, -t99, t50, 0, -t36 * t83 + t79 * t96, t36 * t79 + t83 * t96, t90, -t36 * pkin(5) + pkin(11) * t90; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t71, 0.2e1 * t108, 0, t72, 0, 0, 0.2e1 * pkin(5) * t83, -0.2e1 * pkin(5) * t79, 0.2e1 * t104 * pkin(11), pkin(11) ^ 2 * t104 + pkin(5) ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3, -t4, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t23, 0, -t21, t27, t1, -t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t107, 0, -t109, t55, t14, -t15, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83, -t79, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t79, 0, t83, 0, -t79 * pkin(11), -t83 * pkin(11), 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t11;
