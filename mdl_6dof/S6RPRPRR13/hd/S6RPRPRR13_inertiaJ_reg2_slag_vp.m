% Calculate inertial parameters regressor of joint inertia matrix for
% S6RPRPRR13
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d5,d6,theta2]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 04:26
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RPRPRR13_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRR13_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RPRPRR13_inertiaJ_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 20:57:05
% EndTime: 2019-05-05 20:57:14
% DurationCPUTime: 2.73s
% Computational Cost: add. (3639->209), mult. (9767->410), div. (0->0), fcn. (11245->12), ass. (0->129)
t76 = sin(pkin(6));
t77 = cos(pkin(12));
t124 = t76 * t77;
t78 = cos(pkin(7));
t104 = t78 * t124;
t108 = qJ(2) * t76;
t79 = cos(pkin(6));
t142 = pkin(1) * t79;
t74 = sin(pkin(12));
t50 = t77 * t108 + t74 * t142;
t75 = sin(pkin(7));
t30 = (t75 * t79 + t104) * pkin(9) + t50;
t127 = t74 * t76;
t61 = t77 * t142;
t36 = t79 * pkin(2) + t61 + (-pkin(9) * t78 - qJ(2)) * t127;
t41 = (-pkin(9) * t74 * t75 - pkin(2) * t77 - pkin(1)) * t76;
t82 = sin(qJ(3));
t85 = cos(qJ(3));
t14 = -t82 * t30 + (t36 * t78 + t41 * t75) * t85;
t125 = t75 * t85;
t32 = -t85 * t104 - t79 * t125 + t82 * t127;
t47 = t75 * t124 - t79 * t78;
t81 = sin(qJ(5));
t84 = cos(qJ(5));
t20 = -t32 * t84 - t47 * t81;
t151 = t20 ^ 2;
t150 = t32 ^ 2;
t123 = t78 * t82;
t126 = t75 * t82;
t34 = t79 * t126 - (-t77 * t123 - t74 * t85) * t76;
t31 = t34 ^ 2;
t51 = t84 * t125 + t81 * t78;
t149 = t51 ^ 2;
t148 = -0.2e1 * t20;
t147 = -0.2e1 * t34;
t146 = 0.2e1 * t76;
t83 = cos(qJ(6));
t145 = 0.2e1 * t83;
t144 = 2 * qJ(4);
t143 = pkin(3) + pkin(10);
t8 = t34 * pkin(4) + t143 * t47 - t14;
t19 = -t75 * t36 + t78 * t41;
t91 = -t34 * qJ(4) + t19;
t9 = t143 * t32 + t91;
t5 = t84 * t8 - t81 * t9;
t3 = -t34 * pkin(5) - t5;
t80 = sin(qJ(6));
t141 = t3 * t80;
t140 = t3 * t83;
t139 = t47 * pkin(3);
t138 = t84 * pkin(5);
t22 = t32 * t81 - t47 * t84;
t16 = t22 * t80 - t34 * t83;
t137 = t16 * t83;
t18 = t22 * t83 + t34 * t80;
t136 = t18 * t80;
t135 = t20 * t81;
t134 = t22 * t84;
t133 = t34 * t47;
t132 = t34 * t81;
t131 = t47 * t32;
t130 = t51 * t84;
t68 = t76 ^ 2;
t129 = t68 * t77;
t72 = t84 ^ 2;
t128 = t72 * t143;
t122 = t80 * t20;
t121 = t80 * t81;
t120 = t80 * t83;
t119 = t80 * t84;
t118 = t81 * t143;
t117 = t83 * t20;
t116 = t83 * t81;
t65 = t83 * t84;
t115 = t83 * t143;
t114 = t84 * t16;
t113 = t84 * t18;
t112 = t84 * t20;
t111 = t84 * t81;
t110 = t84 * t143;
t69 = t80 ^ 2;
t71 = t83 ^ 2;
t109 = t69 + t71;
t70 = t81 ^ 2;
t62 = t70 + t72;
t44 = qJ(4) * t47;
t107 = t32 * t147;
t106 = t79 * t146;
t105 = -0.2e1 * t111;
t103 = t80 * t65;
t15 = t36 * t123 + t41 * t126 + t85 * t30;
t102 = t109 * t81;
t101 = -t44 + t15;
t100 = -pkin(11) * t81 - t138;
t6 = t81 * t8 + t84 * t9;
t4 = t34 * pkin(11) + t6;
t10 = -t32 * pkin(4) + t101;
t7 = t20 * pkin(5) - t22 * pkin(11) + t10;
t1 = -t80 * t4 + t83 * t7;
t2 = t83 * t4 + t80 * t7;
t99 = -t1 * t80 + t2 * t83;
t98 = t5 * t84 + t6 * t81;
t97 = t136 - t137;
t53 = -t81 * t125 + t84 * t78;
t38 = t83 * t126 - t80 * t53;
t39 = t80 * t126 + t83 * t53;
t95 = -t38 * t80 + t39 * t83;
t56 = t81 * pkin(5) - t84 * pkin(11) + qJ(4);
t42 = t80 * t118 + t83 * t56;
t43 = -t81 * t115 + t80 * t56;
t94 = -t42 * t80 + t43 * t83;
t23 = t53 * t81 - t130;
t93 = t47 * t125 - t78 * t32;
t92 = t47 * t126 + t78 * t34;
t90 = (-t32 * t82 - t34 * t85) * t75;
t87 = qJ(4) ^ 2;
t73 = t143 ^ 2;
t67 = t75 ^ 2;
t66 = t72 * t73;
t64 = t67 * t82 ^ 2;
t59 = qJ(4) * t126;
t54 = t62 * t143;
t49 = -t74 * t108 + t61;
t46 = t67 * t85 ^ 2 + t78 ^ 2 + t64;
t45 = t47 ^ 2;
t29 = t34 * t84;
t13 = -t14 + t139;
t11 = t32 * pkin(3) + t91;
t12 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t68 * t74 ^ 2, 0.2e1 * t74 * t129, t74 * t106, t68 * t77 ^ 2, t77 * t106, t79 ^ 2, 0.2e1 * pkin(1) * t129 + 0.2e1 * t49 * t79, -0.2e1 * t68 * pkin(1) * t74 - 0.2e1 * t50 * t79 (-t49 * t74 + t50 * t77) * t146, t68 * pkin(1) ^ 2 + t49 ^ 2 + t50 ^ 2, t31, t107, -0.2e1 * t133, t150, 0.2e1 * t131, t45, -0.2e1 * t14 * t47 + 0.2e1 * t19 * t32, 0.2e1 * t15 * t47 + 0.2e1 * t19 * t34, -0.2e1 * t14 * t34 - 0.2e1 * t15 * t32, t14 ^ 2 + t15 ^ 2 + t19 ^ 2, t45, 0.2e1 * t133, -0.2e1 * t131, t31, t107, t150, -0.2e1 * t101 * t32 + 0.2e1 * t13 * t34, -0.2e1 * t11 * t32 - 0.2e1 * t13 * t47, -0.2e1 * t101 * t47 - 0.2e1 * t11 * t34, t101 ^ 2 + t11 ^ 2 + t13 ^ 2, t22 ^ 2, t22 * t148, 0.2e1 * t22 * t34, t151, t20 * t147, t31, 0.2e1 * t10 * t20 + 0.2e1 * t5 * t34, 0.2e1 * t10 * t22 - 0.2e1 * t6 * t34, -0.2e1 * t6 * t20 - 0.2e1 * t5 * t22, t10 ^ 2 + t5 ^ 2 + t6 ^ 2, t18 ^ 2, -0.2e1 * t18 * t16, 0.2e1 * t18 * t20, t16 ^ 2, t16 * t148, t151, 0.2e1 * t1 * t20 + 0.2e1 * t3 * t16, 0.2e1 * t3 * t18 - 0.2e1 * t2 * t20, -0.2e1 * t1 * t18 - 0.2e1 * t2 * t16, t1 ^ 2 + t2 ^ 2 + t3 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t124, t127, 0, -t76 * pkin(1), 0, 0, 0, 0, 0, 0, -t93, t92, t90, t19 * t78 + (t14 * t85 + t15 * t82) * t75, 0, 0, 0, 0, 0, 0, t90, t93, -t92, t11 * t78 + (t101 * t82 - t13 * t85) * t75, 0, 0, 0, 0, 0, 0, t20 * t126 - t51 * t34, t22 * t126 - t53 * t34, -t53 * t20 + t51 * t22, t10 * t126 - t5 * t51 + t6 * t53, 0, 0, 0, 0, 0, 0, t51 * t16 + t38 * t20, t51 * t18 - t39 * t20, -t39 * t16 - t38 * t18, t1 * t38 + t2 * t39 + t3 * t51; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t46, 0, 0, 0, 0, 0, 0, 0, 0, 0, t46, 0, 0, 0, 0, 0, 0, 0, 0, 0, t53 ^ 2 + t149 + t64, 0, 0, 0, 0, 0, 0, 0, 0, 0, t38 ^ 2 + t39 ^ 2 + t149; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t34, 0, -t32, -t47, t14, -t15, 0, 0, -t47, -t34, t32, 0, 0, 0, -t34 * pkin(3) - qJ(4) * t32, -t14 + 0.2e1 * t139, t101 - t44, -t13 * pkin(3) + qJ(4) * t101, t134, -t22 * t81 - t112, t29, t135, -t132, 0, qJ(4) * t20 + t10 * t81 - t34 * t110, qJ(4) * t22 + t10 * t84 + t34 * t118 (t143 * t22 - t5) * t84 + (t143 * t20 - t6) * t81, t10 * qJ(4) - t143 * t98, t83 * t113 (-t136 - t137) * t84, t83 * t112 + t18 * t81, t80 * t114, -t80 * t112 - t16 * t81, t135, t1 * t81 + t42 * t20 + (t143 * t16 + t141) * t84, -t2 * t81 - t43 * t20 + (t143 * t18 + t140) * t84, -t43 * t16 - t42 * t18 + (-t1 * t83 - t2 * t80) * t84, t1 * t42 + t110 * t3 + t2 * t43; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t125, -t126, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t125, t126, pkin(3) * t125 + t59, 0, 0, 0, 0, 0, 0, t81 * t126, t84 * t126, -t23, -t143 * t23 + t59, 0, 0, 0, 0, 0, 0, t51 * t119 + t38 * t81, -t39 * t81 + t51 * t65 (-t38 * t83 - t39 * t80) * t84, t110 * t51 + t38 * t42 + t39 * t43; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, -0.2e1 * pkin(3), t144, pkin(3) ^ 2 + t87, t72, t105, 0, t70, 0, 0, t81 * t144, t84 * t144, 0.2e1 * t54, t70 * t73 + t66 + t87, t71 * t72, -0.2e1 * t72 * t120, t111 * t145, t69 * t72, t80 * t105, t70, 0.2e1 * t128 * t80 + 0.2e1 * t42 * t81, 0.2e1 * t72 * t115 - 0.2e1 * t43 * t81, 0.2e1 * (-t42 * t83 - t43 * t80) * t84, t42 ^ 2 + t43 ^ 2 + t66; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t34, -t47, 0, t13, 0, 0, 0, 0, 0, 0, t29, -t132, -t134 - t135, t98, 0, 0, 0, 0, 0, 0, -t121 * t20 - t114, -t116 * t20 - t113, t97 * t81, -t3 * t84 + t81 * t99; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t125, 0, 0, 0, 0, 0, 0, 0, 0, 0, t23, 0, 0, 0, 0, 0, 0, 0, 0, 0, t81 * t95 - t130; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, -pkin(3), 0, 0, 0, 0, 0, 0, 0, 0, -t62, -t54, 0, 0, 0, 0, 0, 0, -t62 * t80, -t62 * t83, 0, t81 * t94 - t128; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t62, 0, 0, 0, 0, 0, 0, 0, 0, 0, t109 * t70 + t72; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t22, 0, -t20, t34, t5, -t6, 0, 0, t136, -t80 * t16 + t18 * t83, t122, -t137, t117, 0, -pkin(5) * t16 - pkin(11) * t122 - t140, -pkin(5) * t18 - pkin(11) * t117 + t141, pkin(11) * t97 + t99, -t3 * pkin(5) + pkin(11) * t99; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t51, -t53, 0, 0, 0, 0, 0, 0, 0, 0, -t51 * t83, t51 * t80, t95, -t51 * pkin(5) + pkin(11) * t95; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t84, 0, -t81, 0, -t110, t118, 0, 0, t103 (-t69 + t71) * t84, t121, -t103, t116, 0, t100 * t80 - t110 * t83, t100 * t83 + t110 * t80, t94, -pkin(5) * t110 + pkin(11) * t94; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t84, -t81, 0, 0, 0, 0, 0, 0, 0, 0, t65, -t119, t102, pkin(11) * t102 + t138; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t69, 0.2e1 * t120, 0, t71, 0, 0, pkin(5) * t145, -0.2e1 * pkin(5) * t80, 0.2e1 * t109 * pkin(11), pkin(11) ^ 2 * t109 + pkin(5) ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t18, 0, -t16, t20, t1, -t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t38, -t39, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t65, 0, -t119, t81, t42, -t43, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t121, -t116, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t80, 0, t83, 0, -t80 * pkin(11), -t83 * pkin(11), 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t12;
