% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRPRPR13
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d6,theta5]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 11:31
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRPRPR13_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR13_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRPR13_inertiaJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 16:38:32
% EndTime: 2019-05-06 16:38:47
% DurationCPUTime: 2.94s
% Computational Cost: add. (2564->229), mult. (5702->459), div. (0->0), fcn. (6304->10), ass. (0->127)
t91 = sin(qJ(4));
t141 = cos(qJ(6));
t86 = sin(pkin(11));
t88 = cos(pkin(11));
t90 = sin(qJ(6));
t98 = t141 * t88 - t90 * t86;
t42 = t98 * t91;
t93 = cos(qJ(4));
t43 = t98 * t93;
t151 = -2 * pkin(2);
t87 = sin(pkin(6));
t94 = cos(qJ(2));
t128 = t87 * t94;
t89 = cos(pkin(6));
t45 = t93 * t128 + t89 * t91;
t44 = t45 ^ 2;
t150 = -0.2e1 * t45;
t149 = 0.2e1 * t45;
t76 = -t88 * pkin(5) - pkin(4);
t148 = 0.2e1 * t76;
t147 = 0.2e1 * t87;
t146 = 0.2e1 * t88;
t145 = 0.2e1 * t91;
t144 = 2 * qJ(3);
t95 = -pkin(2) - pkin(9);
t143 = pkin(1) * t94;
t142 = t93 * pkin(4);
t107 = -pkin(2) - t143;
t92 = sin(qJ(2));
t73 = t87 * t92;
t67 = pkin(8) * t73;
t23 = pkin(3) * t73 + t67 + (-pkin(9) + t107) * t89;
t105 = -qJ(3) * t92 - pkin(1);
t32 = (t95 * t94 + t105) * t87;
t19 = t91 * t23 + t93 * t32;
t11 = qJ(5) * t73 + t19;
t126 = t89 * t92;
t49 = pkin(1) * t126 + pkin(8) * t128;
t78 = t89 * qJ(3);
t35 = -t78 - t49;
t31 = pkin(3) * t128 - t35;
t47 = -t91 * t128 + t89 * t93;
t20 = t45 * pkin(4) - t47 * qJ(5) + t31;
t6 = t88 * t11 + t86 * t20;
t18 = t93 * t23 - t91 * t32;
t12 = -pkin(4) * t73 - t18;
t140 = t12 * t86;
t139 = t12 * t88;
t26 = t47 * t86 - t88 * t73;
t138 = t26 * t88;
t28 = t47 * t88 + t86 * t73;
t137 = t28 * t86;
t38 = t45 * t91;
t136 = t47 * t93;
t55 = t141 * t86 + t90 * t88;
t135 = t55 * t91;
t80 = t87 ^ 2;
t134 = t80 * t94;
t84 = t93 ^ 2;
t133 = t84 * t95;
t132 = t86 * t88;
t131 = t86 * t91;
t130 = t86 * t93;
t129 = t86 * t95;
t127 = t88 * t91;
t74 = t88 * t93;
t125 = t89 * t94;
t123 = t91 * t95;
t122 = t93 * t26;
t121 = t93 * t28;
t120 = t93 * t45;
t119 = t93 * t55;
t118 = t93 * t91;
t117 = t93 * t95;
t116 = pkin(10) + qJ(5);
t57 = t91 * pkin(4) - t93 * qJ(5) + qJ(3);
t34 = t88 * t123 + t86 * t57;
t79 = t86 ^ 2;
t81 = t88 ^ 2;
t115 = t79 + t81;
t83 = t91 ^ 2;
t66 = t83 + t84;
t114 = qJ(5) * t45;
t113 = -0.2e1 * t118;
t112 = t87 * t126;
t111 = t91 * t73;
t110 = t95 * t73;
t109 = t87 * t125;
t108 = t86 * t74;
t5 = -t86 * t11 + t88 * t20;
t104 = t115 * qJ(5);
t103 = -t5 * t86 + t6 * t88;
t102 = -qJ(5) * t91 - t142;
t101 = t18 * t93 + t19 * t91;
t100 = t137 - t138;
t51 = t88 * t57;
t33 = -t86 * t123 + t51;
t99 = -t33 * t86 + t34 * t88;
t97 = qJ(3) ^ 2;
t85 = t95 ^ 2;
t82 = t89 ^ 2;
t77 = t84 * t85;
t72 = t80 * t94 ^ 2;
t71 = t80 * t92 ^ 2;
t63 = t93 * t73;
t60 = 0.2e1 * t92 * t134;
t59 = t116 * t88;
t58 = t116 * t86;
t56 = t66 * t95;
t52 = (pkin(5) * t86 - t95) * t93;
t48 = pkin(1) * t125 - t67;
t37 = t107 * t89 + t67;
t36 = (-pkin(2) * t94 + t105) * t87;
t30 = t141 * t59 - t90 * t58;
t29 = -t141 * t58 - t90 * t59;
t24 = -pkin(10) * t130 + t34;
t21 = -pkin(10) * t74 + t51 + (pkin(5) - t129) * t91;
t15 = t141 * t28 - t90 * t26;
t13 = t141 * t26 + t90 * t28;
t10 = t141 * t24 + t90 * t21;
t9 = t141 * t21 - t90 * t24;
t7 = t26 * pkin(5) + t12;
t4 = -t26 * pkin(10) + t6;
t3 = t45 * pkin(5) - t28 * pkin(10) + t5;
t2 = t141 * t4 + t90 * t3;
t1 = t141 * t3 - t90 * t4;
t8 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t71, t60, 0.2e1 * t112, t72, 0.2e1 * t109, t82, 0.2e1 * pkin(1) * t134 + 0.2e1 * t48 * t89, -0.2e1 * t80 * pkin(1) * t92 - 0.2e1 * t49 * t89 (-t48 * t92 + t49 * t94) * t147, t80 * pkin(1) ^ 2 + t48 ^ 2 + t49 ^ 2, t82, -0.2e1 * t112, -0.2e1 * t109, t71, t60, t72 (-t35 * t94 + t37 * t92) * t147, 0.2e1 * t36 * t128 + 0.2e1 * t37 * t89, -0.2e1 * t35 * t89 - 0.2e1 * t36 * t73, t35 ^ 2 + t36 ^ 2 + t37 ^ 2, t47 ^ 2, t47 * t150, 0.2e1 * t47 * t73, t44, t73 * t150, t71, 0.2e1 * t18 * t73 + 0.2e1 * t31 * t45, -0.2e1 * t19 * t73 + 0.2e1 * t31 * t47, -0.2e1 * t18 * t47 - 0.2e1 * t19 * t45, t18 ^ 2 + t19 ^ 2 + t31 ^ 2, t28 ^ 2, -0.2e1 * t28 * t26, t28 * t149, t26 ^ 2, t26 * t150, t44, 0.2e1 * t12 * t26 + 0.2e1 * t5 * t45, 0.2e1 * t12 * t28 - 0.2e1 * t6 * t45, -0.2e1 * t6 * t26 - 0.2e1 * t5 * t28, t12 ^ 2 + t5 ^ 2 + t6 ^ 2, t15 ^ 2, -0.2e1 * t15 * t13, t15 * t149, t13 ^ 2, t13 * t150, t44, 0.2e1 * t1 * t45 + 0.2e1 * t7 * t13, 0.2e1 * t7 * t15 - 0.2e1 * t2 * t45, -0.2e1 * t1 * t15 - 0.2e1 * t2 * t13, t1 ^ 2 + t2 ^ 2 + t7 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t73, 0, t128, t89, t48, -t49, 0, 0, t89, -t73, -t128, 0, 0, 0 (-pkin(2) * t92 + qJ(3) * t94) * t87, t67 + (t151 - t143) * t89, 0.2e1 * t78 + t49, -t37 * pkin(2) - t35 * qJ(3), t136, -t47 * t91 - t120, t63, t38, -t111, 0, qJ(3) * t45 + t110 * t93 + t31 * t91, qJ(3) * t47 - t110 * t91 + t31 * t93 (-t47 * t95 - t18) * t93 + (-t45 * t95 - t19) * t91, t31 * qJ(3) + t101 * t95, t88 * t121 (-t137 - t138) * t93, t88 * t120 + t28 * t91, t86 * t122, -t86 * t120 - t26 * t91, t38, t33 * t45 + t5 * t91 + (-t26 * t95 + t140) * t93, -t34 * t45 - t6 * t91 + (-t28 * t95 + t139) * t93, -t34 * t26 - t33 * t28 + (-t5 * t88 - t6 * t86) * t93, -t117 * t12 + t5 * t33 + t6 * t34, t15 * t43, -t119 * t15 - t43 * t13, t15 * t91 + t43 * t45, t13 * t119, -t119 * t45 - t13 * t91, t38, t1 * t91 + t119 * t7 + t52 * t13 + t9 * t45, -t10 * t45 + t52 * t15 - t2 * t91 + t7 * t43, -t1 * t43 - t10 * t13 - t119 * t2 - t9 * t15, t1 * t9 + t2 * t10 + t7 * t52; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, t151, t144, pkin(2) ^ 2 + t97, t84, t113, 0, t83, 0, 0, t91 * t144, t93 * t144, -0.2e1 * t56, t83 * t85 + t77 + t97, t81 * t84, -0.2e1 * t84 * t132, t118 * t146, t79 * t84, t86 * t113, t83, -0.2e1 * t84 * t129 + 0.2e1 * t33 * t91, -0.2e1 * t133 * t88 - 0.2e1 * t34 * t91, 0.2e1 * (-t33 * t88 - t34 * t86) * t93, t33 ^ 2 + t34 ^ 2 + t77, t43 ^ 2, -0.2e1 * t43 * t119, t43 * t145, t119 ^ 2, -t119 * t145, t83, 0.2e1 * t119 * t52 + 0.2e1 * t9 * t91, -0.2e1 * t10 * t91 + 0.2e1 * t52 * t43, -0.2e1 * t10 * t119 - 0.2e1 * t9 * t43, t10 ^ 2 + t52 ^ 2 + t9 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t73, t89, 0, t37, 0, 0, 0, 0, 0, 0, t63, -t111, -t136 - t38, t101, 0, 0, 0, 0, 0, 0, -t45 * t131 - t122, -t127 * t45 - t121, t100 * t91, t103 * t91 - t12 * t93, 0, 0, 0, 0, 0, 0, -t93 * t13 - t135 * t45, -t93 * t15 - t42 * t45, -t42 * t13 + t135 * t15, -t1 * t135 + t2 * t42 - t7 * t93; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, -pkin(2), 0, 0, 0, 0, 0, 0, 0, 0, -t66, t56, 0, 0, 0, 0, 0, 0, -t66 * t86, -t66 * t88, 0, t91 * t99 + t133, 0, 0, 0, 0, 0, 0, -t119 * t93 - t135 * t91, -t42 * t91 - t93 * t43, -t119 * t42 + t135 * t43, t10 * t42 - t135 * t9 - t52 * t93; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t66, 0, 0, 0, 0, 0, 0, 0, 0, 0, t115 * t83 + t84, 0, 0, 0, 0, 0, 0, 0, 0, 0, t135 ^ 2 + t42 ^ 2 + t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t47, 0, -t45, t73, t18, -t19, 0, 0, t137, -t86 * t26 + t28 * t88, t86 * t45, -t138, t88 * t45, 0, -pkin(4) * t26 - t114 * t86 - t139, -pkin(4) * t28 - t114 * t88 + t140, qJ(5) * t100 + t103, -t12 * pkin(4) + qJ(5) * t103, t15 * t55, -t55 * t13 + t15 * t98, t55 * t45, -t13 * t98, t98 * t45, 0, t76 * t13 + t29 * t45 - t7 * t98, t76 * t15 - t30 * t45 + t7 * t55, -t1 * t55 - t30 * t13 - t29 * t15 + t2 * t98, t1 * t29 + t2 * t30 + t7 * t76; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t93, 0, -t91, 0, t117, -t123, 0, 0, t108 (-t79 + t81) * t93, t131, -t108, t127, 0, t102 * t86 + t117 * t88, t102 * t88 - t117 * t86, t99, pkin(4) * t117 + qJ(5) * t99, t43 * t55, -t119 * t55 + t43 * t98, t135, -t119 * t98, t42, 0, t119 * t76 + t29 * t91 - t52 * t98, -t30 * t91 + t76 * t43 + t52 * t55, t10 * t98 - t119 * t30 - t29 * t43 - t9 * t55, t10 * t30 + t9 * t29 + t52 * t76; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t93, -t91, 0, 0, 0, 0, 0, 0, 0, 0, t74, -t130, t115 * t91, t104 * t91 + t142, 0, 0, 0, 0, 0, 0, t43, -t119, t135 * t55 + t42 * t98, -t135 * t29 + t42 * t30 - t93 * t76; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t79, 0.2e1 * t132, 0, t81, 0, 0, pkin(4) * t146, -0.2e1 * pkin(4) * t86, 0.2e1 * t104, qJ(5) ^ 2 * t115 + pkin(4) ^ 2, t55 ^ 2, 0.2e1 * t55 * t98, 0, t98 ^ 2, 0, 0, -t98 * t148, t55 * t148, -0.2e1 * t29 * t55 + 0.2e1 * t30 * t98, t29 ^ 2 + t30 ^ 2 + t76 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t26, t28, 0, t12, 0, 0, 0, 0, 0, 0, t13, t15, 0, t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t130, t74, 0, -t117, 0, 0, 0, 0, 0, 0, t119, t43, 0, t52; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t93, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t93; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t88, t86, 0, -pkin(4), 0, 0, 0, 0, 0, 0, -t98, t55, 0, t76; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t15, 0, -t13, t45, t1, -t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t43, 0, -t119, t91, t9, -t10, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t135, -t42, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t55, 0, t98, 0, t29, -t30, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t8;
