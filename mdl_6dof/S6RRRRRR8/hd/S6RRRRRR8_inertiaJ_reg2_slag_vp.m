% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRRRRR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d4,d5,d6]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 05:15
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRRRRR8_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR8_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RRRRRR8_inertiaJ_reg2_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-08 13:58:33
% EndTime: 2019-05-08 13:59:02
% DurationCPUTime: 6.36s
% Computational Cost: add. (10383->370), mult. (26966->735), div. (0->0), fcn. (31307->14), ass. (0->182)
t134 = sin(qJ(5));
t205 = t134 * pkin(4);
t118 = pkin(13) + t205;
t133 = sin(qJ(6));
t125 = t133 ^ 2;
t138 = cos(qJ(6));
t127 = t138 ^ 2;
t171 = t125 + t127;
t173 = t171 * t118;
t132 = cos(pkin(6));
t136 = sin(qJ(3));
t141 = cos(qJ(3));
t130 = sin(pkin(6));
t131 = cos(pkin(7));
t142 = cos(qJ(2));
t179 = t131 * t142;
t161 = t130 * t179;
t137 = sin(qJ(2));
t182 = t130 * t137;
t129 = sin(pkin(7));
t183 = t129 * t141;
t73 = -t132 * t183 + t136 * t182 - t141 * t161;
t135 = sin(qJ(4));
t140 = cos(qJ(4));
t112 = t132 * t142 * pkin(1);
t76 = t132 * pkin(2) + t112 + (-pkin(10) * t131 - pkin(9)) * t182;
t83 = (-pkin(10) * t129 * t137 - pkin(2) * t142 - pkin(1)) * t130;
t49 = -t129 * t76 + t131 * t83;
t184 = t129 * t136;
t75 = t132 * t184 + (t136 * t179 + t137 * t141) * t130;
t32 = t73 * pkin(3) - t75 * pkin(11) + t49;
t152 = t129 * t83 + t131 * t76;
t181 = t130 * t142;
t208 = pkin(1) * t137;
t98 = pkin(9) * t181 + t132 * t208;
t70 = (t129 * t132 + t161) * pkin(10) + t98;
t43 = t136 * t152 + t141 * t70;
t89 = t129 * t181 - t132 * t131;
t36 = -t89 * pkin(11) + t43;
t17 = -t135 * t36 + t140 * t32;
t209 = t73 * pkin(4);
t54 = -t89 * t135 + t75 * t140;
t11 = -t54 * pkin(12) + t17 + t209;
t18 = t135 * t32 + t140 * t36;
t53 = -t75 * t135 - t89 * t140;
t13 = t53 * pkin(12) + t18;
t139 = cos(qJ(5));
t198 = t139 * t13;
t8 = t134 * t11 + t198;
t6 = t73 * pkin(13) + t8;
t42 = -t136 * t70 + t141 * t152;
t35 = t89 * pkin(3) - t42;
t19 = -t53 * pkin(4) + t35;
t38 = t134 * t54 - t139 * t53;
t40 = t134 * t53 + t139 * t54;
t9 = t38 * pkin(5) - t40 * pkin(13) + t19;
t2 = -t133 * t6 + t138 * t9;
t3 = t133 * t9 + t138 * t6;
t224 = -t2 * t133 + t3 * t138;
t164 = pkin(10) * t183;
t207 = pkin(2) * t136;
t85 = t164 + (pkin(11) + t207) * t131;
t86 = (-pkin(3) * t141 - pkin(11) * t136 - pkin(2)) * t129;
t59 = t135 * t86 + t140 * t85;
t91 = t140 * t131 - t135 * t184;
t48 = t91 * pkin(12) + t59;
t197 = t139 * t48;
t165 = pkin(4) * t183;
t58 = -t135 * t85 + t140 * t86;
t92 = t135 * t131 + t140 * t184;
t45 = -t92 * pkin(12) - t165 + t58;
t29 = t134 * t45 + t197;
t27 = -pkin(13) * t183 + t29;
t62 = t134 * t92 - t139 * t91;
t64 = t134 * t91 + t139 * t92;
t111 = pkin(10) * t184;
t206 = pkin(2) * t141;
t84 = t111 + (-pkin(3) - t206) * t131;
t65 = -t91 * pkin(4) + t84;
t37 = t62 * pkin(5) - t64 * pkin(13) + t65;
t15 = -t133 * t27 + t138 * t37;
t16 = t133 * t37 + t138 * t27;
t223 = -t15 * t133 + t16 * t138;
t222 = t38 ^ 2;
t221 = t62 ^ 2;
t72 = t73 ^ 2;
t210 = -pkin(12) - pkin(11);
t106 = t210 * t140;
t162 = t210 * t135;
t79 = -t134 * t106 - t139 * t162;
t220 = t79 ^ 2;
t219 = -0.2e1 * t38;
t218 = -0.2e1 * t62;
t217 = 0.2e1 * t73;
t216 = -0.2e1 * t75;
t100 = t134 * t135 - t139 * t140;
t215 = t100 ^ 2;
t120 = -t140 * pkin(4) - pkin(3);
t214 = 0.2e1 * t120;
t213 = 0.2e1 * t129;
t212 = 0.2e1 * t130;
t211 = 0.2e1 * t140;
t204 = t139 * pkin(4);
t202 = t38 * t62;
t157 = -t139 * t11 + t134 * t13;
t5 = -t73 * pkin(5) + t157;
t201 = t5 * t138;
t119 = -pkin(5) - t204;
t200 = pkin(5) - t119;
t33 = t133 * t38;
t60 = t133 * t62;
t199 = t135 * t73;
t34 = t138 * t38;
t61 = t138 * t62;
t196 = t140 * t73;
t22 = t133 * t40 - t73 * t138;
t20 = t22 * t138;
t24 = t73 * t133 + t138 * t40;
t21 = t24 * t133;
t155 = t134 * t48 - t139 * t45;
t26 = pkin(5) * t183 + t155;
t194 = t26 * t138;
t193 = t38 * t100;
t192 = t53 * t140;
t191 = t54 * t135;
t55 = t133 * t64 + t138 * t183;
t51 = t55 * t138;
t57 = -t133 * t183 + t138 * t64;
t52 = t57 * t133;
t190 = t62 * t100;
t189 = t79 * t138;
t188 = t91 * t140;
t187 = t92 * t135;
t123 = t129 ^ 2;
t186 = t123 * t141;
t124 = t130 ^ 2;
t185 = t124 * t142;
t180 = t131 * t136;
t102 = t134 * t140 + t139 * t135;
t178 = t133 * t102;
t177 = t133 * t118;
t176 = t133 * t138;
t175 = t138 * t102;
t174 = t138 * t118;
t172 = t171 * pkin(13);
t126 = t135 ^ 2;
t128 = t140 ^ 2;
t170 = t126 + t128;
t169 = -0.2e1 * t102 * t100;
t168 = -0.2e1 * t183;
t167 = 0.2e1 * t183;
t166 = t132 * t212;
t163 = t73 * t183;
t160 = t135 * t183;
t159 = t140 * t183;
t154 = -pkin(5) * t102 - pkin(13) * t100;
t150 = t21 - t20;
t67 = t100 * pkin(5) - t102 * pkin(13) + t120;
t81 = -t139 * t106 + t134 * t162;
t46 = -t133 * t81 + t138 * t67;
t47 = t133 * t67 + t138 * t81;
t30 = -t46 * t133 + t47 * t138;
t149 = t52 - t51;
t148 = -t17 * t135 + t18 * t140;
t147 = -t58 * t135 + t59 * t140;
t146 = -t100 * t118 + t102 * t119;
t116 = t123 * t141 ^ 2;
t113 = 0.2e1 * t176;
t99 = t102 ^ 2;
t97 = pkin(2) * t180 + t164;
t96 = -pkin(9) * t182 + t112;
t95 = t131 * t206 - t111;
t94 = t138 * t100;
t93 = t133 * t100;
t88 = t133 * t175;
t77 = t79 * t133;
t71 = (-t125 + t127) * t102;
t41 = -t133 * t55 + t57 * t138;
t25 = t26 * t133;
t12 = -t133 * t22 + t24 * t138;
t4 = t5 * t133;
t1 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t124 * t137 ^ 2, 0.2e1 * t137 * t185, t137 * t166, t124 * t142 ^ 2, t142 * t166, t132 ^ 2, 0.2e1 * pkin(1) * t185 + 0.2e1 * t96 * t132, -0.2e1 * t124 * t208 - 0.2e1 * t98 * t132 (-t137 * t96 + t142 * t98) * t212, t124 * pkin(1) ^ 2 + t96 ^ 2 + t98 ^ 2, t75 ^ 2, t73 * t216, t89 * t216, t72, t89 * t217, t89 ^ 2, -0.2e1 * t42 * t89 + 0.2e1 * t49 * t73, 0.2e1 * t43 * t89 + 0.2e1 * t49 * t75, -0.2e1 * t42 * t75 - 0.2e1 * t43 * t73, t42 ^ 2 + t43 ^ 2 + t49 ^ 2, t54 ^ 2, 0.2e1 * t54 * t53, t54 * t217, t53 ^ 2, t53 * t217, t72, 0.2e1 * t17 * t73 - 0.2e1 * t35 * t53, -0.2e1 * t18 * t73 + 0.2e1 * t35 * t54, -0.2e1 * t17 * t54 + 0.2e1 * t18 * t53, t17 ^ 2 + t18 ^ 2 + t35 ^ 2, t40 ^ 2, t40 * t219, t40 * t217, t222, t73 * t219, t72, -0.2e1 * t157 * t73 + 0.2e1 * t19 * t38, 0.2e1 * t19 * t40 - 0.2e1 * t8 * t73, 0.2e1 * t157 * t40 - 0.2e1 * t8 * t38, t157 ^ 2 + t19 ^ 2 + t8 ^ 2, t24 ^ 2, -0.2e1 * t24 * t22, 0.2e1 * t24 * t38, t22 ^ 2, t22 * t219, t222, 0.2e1 * t2 * t38 + 0.2e1 * t5 * t22, 0.2e1 * t5 * t24 - 0.2e1 * t3 * t38, -0.2e1 * t2 * t24 - 0.2e1 * t3 * t22, t2 ^ 2 + t3 ^ 2 + t5 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t182, 0, t181, t132, t96, -t98, 0, 0, t75 * t184 (-t136 * t73 + t141 * t75) * t129, t75 * t131 - t89 * t184, -t163, -t73 * t131 - t89 * t183, -t89 * t131, t42 * t131 - t95 * t89 + (-pkin(2) * t73 - t141 * t49) * t129, -t43 * t131 + t97 * t89 + (-pkin(2) * t75 + t136 * t49) * t129, -t97 * t73 - t95 * t75 + (-t136 * t42 + t141 * t43) * t129, -t49 * t129 * pkin(2) + t42 * t95 + t43 * t97, t54 * t92, t92 * t53 + t54 * t91, -t54 * t183 + t92 * t73, t53 * t91, -t183 * t53 + t91 * t73, -t163, -t17 * t183 - t35 * t91 - t84 * t53 + t58 * t73, t18 * t183 + t35 * t92 + t84 * t54 - t59 * t73, -t17 * t92 + t18 * t91 + t59 * t53 - t58 * t54, t17 * t58 + t18 * t59 + t35 * t84, t40 * t64, -t64 * t38 - t40 * t62, -t183 * t40 + t64 * t73, t202, t183 * t38 - t62 * t73, -t163, -t155 * t73 + t157 * t183 + t19 * t62 + t65 * t38, t183 * t8 + t19 * t64 - t29 * t73 + t65 * t40, t155 * t40 + t157 * t64 - t29 * t38 - t8 * t62, t155 * t157 + t19 * t65 + t8 * t29, t24 * t57, -t57 * t22 - t24 * t55, t24 * t62 + t57 * t38, t22 * t55, -t22 * t62 - t55 * t38, t202, t15 * t38 + t2 * t62 + t26 * t22 + t5 * t55, -t16 * t38 + t26 * t24 - t3 * t62 + t5 * t57, -t15 * t24 - t16 * t22 - t2 * t57 - t3 * t55, t2 * t15 + t3 * t16 + t5 * t26; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t123 * t136 ^ 2, 0.2e1 * t136 * t186, t180 * t213, t116, t131 * t167, t131 ^ 2, 0.2e1 * pkin(2) * t186 + 0.2e1 * t95 * t131, -0.2e1 * t123 * t207 - 0.2e1 * t97 * t131 (-t136 * t95 + t141 * t97) * t213, t123 * pkin(2) ^ 2 + t95 ^ 2 + t97 ^ 2, t92 ^ 2, 0.2e1 * t92 * t91, t92 * t168, t91 ^ 2, t91 * t168, t116, -0.2e1 * t183 * t58 - 0.2e1 * t84 * t91, 0.2e1 * t183 * t59 + 0.2e1 * t84 * t92, -0.2e1 * t58 * t92 + 0.2e1 * t59 * t91, t58 ^ 2 + t59 ^ 2 + t84 ^ 2, t64 ^ 2, t64 * t218, t64 * t168, t221, t62 * t167, t116, 0.2e1 * t155 * t183 + 0.2e1 * t65 * t62, 0.2e1 * t183 * t29 + 0.2e1 * t65 * t64, 0.2e1 * t155 * t64 - 0.2e1 * t29 * t62, t155 ^ 2 + t29 ^ 2 + t65 ^ 2, t57 ^ 2, -0.2e1 * t57 * t55, 0.2e1 * t57 * t62, t55 ^ 2, t55 * t218, t221, 0.2e1 * t15 * t62 + 0.2e1 * t26 * t55, -0.2e1 * t16 * t62 + 0.2e1 * t26 * t57, -0.2e1 * t15 * t57 - 0.2e1 * t16 * t55, t15 ^ 2 + t16 ^ 2 + t26 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t75, 0, -t73, -t89, t42, -t43, 0, 0, t191, t135 * t53 + t54 * t140, t199, t192, t196, 0, pkin(3) * t53 - pkin(11) * t199 - t35 * t140, -pkin(3) * t54 - pkin(11) * t196 + t35 * t135 (t191 + t192) * pkin(11) + t148, -t35 * pkin(3) + pkin(11) * t148, t40 * t102, -t40 * t100 - t102 * t38, t102 * t73, t193, -t100 * t73, 0, t19 * t100 + t120 * t38 - t79 * t73, t19 * t102 + t120 * t40 - t81 * t73, -t8 * t100 + t102 * t157 - t81 * t38 + t79 * t40, t19 * t120 + t157 * t79 + t8 * t81, t24 * t175 (-t21 - t20) * t102, t24 * t100 + t175 * t38, t22 * t178, -t22 * t100 - t178 * t38, t193, t2 * t100 + t178 * t5 + t79 * t22 + t46 * t38, -t3 * t100 + t175 * t5 + t79 * t24 - t47 * t38, -t47 * t22 - t46 * t24 + (-t133 * t3 - t138 * t2) * t102, t2 * t46 + t3 * t47 + t5 * t79; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t184, 0, t183, t131, t95, -t97, 0, 0, t187, t135 * t91 + t92 * t140, -t160, t188, -t159, 0, pkin(3) * t91 + pkin(11) * t160 - t84 * t140, -pkin(3) * t92 + pkin(11) * t159 + t84 * t135 (t187 + t188) * pkin(11) + t147, -t84 * pkin(3) + pkin(11) * t147, t64 * t102, -t64 * t100 - t102 * t62, -t102 * t183, t190, t100 * t183, 0, t65 * t100 + t120 * t62 + t183 * t79, t65 * t102 + t120 * t64 + t183 * t81, -t29 * t100 + t102 * t155 - t81 * t62 + t79 * t64, t65 * t120 + t155 * t79 + t29 * t81, t57 * t175 (-t52 - t51) * t102, t57 * t100 + t175 * t62, t55 * t178, -t55 * t100 - t178 * t62, t190, t15 * t100 + t178 * t26 + t46 * t62 + t79 * t55, -t16 * t100 + t175 * t26 - t47 * t62 + t79 * t57, -t46 * t57 - t47 * t55 + (-t133 * t16 - t138 * t15) * t102, t15 * t46 + t16 * t47 + t26 * t79; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t126, t135 * t211, 0, t128, 0, 0, pkin(3) * t211, -0.2e1 * pkin(3) * t135, 0.2e1 * t170 * pkin(11), pkin(11) ^ 2 * t170 + pkin(3) ^ 2, t99, t169, 0, t215, 0, 0, t100 * t214, t102 * t214, -0.2e1 * t81 * t100 + 0.2e1 * t79 * t102, t120 ^ 2 + t81 ^ 2 + t220, t127 * t99, -0.2e1 * t99 * t176, 0.2e1 * t100 * t175, t125 * t99, t133 * t169, t215, 0.2e1 * t46 * t100 + 0.2e1 * t178 * t79, -0.2e1 * t47 * t100 + 0.2e1 * t175 * t79, 0.2e1 * (-t133 * t47 - t138 * t46) * t102, t46 ^ 2 + t47 ^ 2 + t220; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t54, 0, t53, t73, t17, -t18, 0, 0, 0, 0, t40, 0, -t38, t73, t204 * t73 - t157, -t198 + (-t11 - t209) * t134 (-t134 * t38 - t139 * t40) * pkin(4) (t134 * t8 - t139 * t157) * pkin(4), t21, t12, t33, -t20, t34, 0, t119 * t22 - t177 * t38 - t201, t119 * t24 - t174 * t38 + t4, t118 * t150 + t224, t118 * t224 + t5 * t119; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t92, 0, t91, -t183, t58, -t59, 0, 0, 0, 0, t64, 0, -t62, -t183, -t139 * t165 - t155, -t197 + (-t45 + t165) * t134 (-t134 * t62 - t139 * t64) * pkin(4) (t134 * t29 - t139 * t155) * pkin(4), t52, t41, t60, -t51, t61, 0, t119 * t55 - t177 * t62 - t194, t119 * t57 - t174 * t62 + t25, t118 * t149 + t223, t118 * t223 + t26 * t119; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t135, 0, t140, 0, -t135 * pkin(11), -t140 * pkin(11), 0, 0, 0, 0, t102, 0, -t100, 0, -t79, -t81 (-t100 * t134 - t102 * t139) * pkin(4) (t134 * t81 - t139 * t79) * pkin(4), t88, t71, t93, -t88, t94, 0, t133 * t146 - t189, t138 * t146 + t77, t30, t118 * t30 + t79 * t119; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t204, -0.2e1 * t205, 0 (t134 ^ 2 + t139 ^ 2) * pkin(4) ^ 2, t125, t113, 0, t127, 0, 0, -0.2e1 * t119 * t138, 0.2e1 * t119 * t133, 0.2e1 * t173, t118 ^ 2 * t171 + t119 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t40, 0, -t38, t73, -t157, -t8, 0, 0, t21, t12, t33, -t20, t34, 0, -pkin(5) * t22 - pkin(13) * t33 - t201, -pkin(5) * t24 - pkin(13) * t34 + t4, pkin(13) * t150 + t224, -t5 * pkin(5) + pkin(13) * t224; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t64, 0, -t62, -t183, -t155, -t29, 0, 0, t52, t41, t60, -t51, t61, 0, -pkin(5) * t55 - pkin(13) * t60 - t194, -pkin(5) * t57 - pkin(13) * t61 + t25, pkin(13) * t149 + t223, -t26 * pkin(5) + pkin(13) * t223; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t102, 0, -t100, 0, -t79, -t81, 0, 0, t88, t71, t93, -t88, t94, 0, t133 * t154 - t189, t138 * t154 + t77, t30, -t79 * pkin(5) + pkin(13) * t30; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t204, -t205, 0, 0, t125, t113, 0, t127, 0, 0, t200 * t138, -t200 * t133, t172 + t173, -t119 * pkin(5) + pkin(13) * t173; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t125, t113, 0, t127, 0, 0, 0.2e1 * pkin(5) * t138, -0.2e1 * pkin(5) * t133, 0.2e1 * t172, pkin(13) ^ 2 * t171 + pkin(5) ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t24, 0, -t22, t38, t2, -t3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t57, 0, -t55, t62, t15, -t16, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t175, 0, -t178, t100, t46, -t47, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t133, 0, t138, 0, -t177, -t174, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t133, 0, t138, 0, -t133 * pkin(13), -t138 * pkin(13), 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t1;
