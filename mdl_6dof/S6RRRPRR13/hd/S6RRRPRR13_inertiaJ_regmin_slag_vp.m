% Calculate minimal parameter regressor of joint inertia matrix for
% S6RRRPRR13
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d5,d6,theta4]';
% 
% Output:
% MM_reg [((6+1)*6/2)x35]
%   minimal parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 20:11
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRRPRR13_inertiaJ_regmin_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR13_inertiaJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RRRPRR13_inertiaJ_regmin_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 15:47:45
% EndTime: 2019-05-07 15:47:54
% DurationCPUTime: 2.34s
% Computational Cost: add. (4545->237), mult. (12051->497), div. (0->0), fcn. (14190->14), ass. (0->136)
t102 = sin(qJ(3));
t105 = cos(qJ(3));
t103 = sin(qJ(2));
t96 = sin(pkin(6));
t125 = t96 * t103;
t149 = cos(qJ(2));
t99 = cos(pkin(6));
t117 = t99 * t149;
t84 = pkin(1) * t117;
t98 = cos(pkin(7));
t55 = t99 * pkin(2) + t84 + (-pkin(10) * t98 - pkin(9)) * t125;
t95 = sin(pkin(7));
t62 = (-pkin(10) * t103 * t95 - pkin(2) * t149 - pkin(1)) * t96;
t108 = t55 * t98 + t62 * t95;
t118 = t96 * t149;
t112 = t98 * t118;
t107 = t95 * t99 + t112;
t147 = pkin(1) * t103;
t74 = pkin(9) * t118 + t147 * t99;
t52 = pkin(10) * t107 + t74;
t31 = -t102 * t52 + t105 * t108;
t101 = sin(qJ(5));
t54 = t102 * t107 + t105 * t125;
t67 = t118 * t95 - t98 * t99;
t94 = sin(pkin(13));
t97 = cos(pkin(13));
t114 = t54 * t94 + t67 * t97;
t148 = cos(qJ(5));
t39 = t54 * t97 - t67 * t94;
t29 = t101 * t39 + t114 * t148;
t156 = -0.2e1 * t29;
t100 = sin(qJ(6));
t104 = cos(qJ(6));
t126 = t95 * t105;
t127 = t95 * t102;
t81 = t94 * t127;
t113 = t97 * t98 - t81;
t69 = t127 * t97 + t94 * t98;
t46 = t101 * t113 + t148 * t69;
t40 = t100 * t46 + t104 * t126;
t155 = -0.2e1 * t40;
t154 = -0.2e1 * t46;
t53 = t102 * t125 - t105 * t112 - t126 * t99;
t153 = 0.2e1 * t53;
t152 = -0.2e1 * t54;
t150 = t97 * pkin(4);
t87 = -pkin(3) - t150;
t151 = 0.2e1 * t87;
t146 = pkin(2) * t102;
t145 = t105 * pkin(2);
t144 = pkin(11) + qJ(4);
t37 = -t55 * t95 + t62 * t98;
t23 = pkin(3) * t53 - qJ(4) * t54 + t37;
t32 = t102 * t108 + t105 * t52;
t27 = -t67 * qJ(4) + t32;
t13 = t23 * t94 + t27 * t97;
t121 = pkin(10) * t126;
t63 = t121 + (qJ(4) + t146) * t98;
t64 = (-pkin(3) * t105 - qJ(4) * t102 - pkin(2)) * t95;
t43 = t63 * t97 + t64 * t94;
t143 = t94 ^ 2 + t97 ^ 2;
t142 = qJ(4) * t53;
t141 = t100 * t29;
t45 = t101 * t69 - t113 * t148;
t140 = t100 * t45;
t77 = t101 * t94 - t148 * t97;
t139 = t100 * t77;
t78 = t101 * t97 + t148 * t94;
t138 = t100 * t78;
t26 = t104 * t29;
t44 = t104 * t45;
t137 = t104 * t78;
t89 = t95 ^ 2;
t136 = t105 * t89;
t30 = -t101 * t114 + t148 * t39;
t16 = t100 * t53 + t104 * t30;
t135 = t16 * t100;
t134 = t16 * t104;
t42 = -t63 * t94 + t64 * t97;
t33 = -pkin(4) * t126 - pkin(11) * t69 + t42;
t36 = pkin(11) * t113 + t43;
t19 = -t101 * t36 + t148 * t33;
t17 = pkin(5) * t126 - t19;
t133 = t17 * t100;
t132 = t17 * t104;
t41 = -t100 * t126 + t104 * t46;
t131 = t41 * t100;
t130 = t41 * t104;
t115 = t144 * t94;
t80 = t144 * t97;
t56 = t101 * t80 + t115 * t148;
t129 = t56 * t100;
t128 = t56 * t104;
t124 = t100 * t104;
t123 = -0.2e1 * t78 * t77;
t122 = 0.2e1 * t126;
t120 = qJ(4) * t126;
t90 = t96 ^ 2;
t119 = t90 * t149;
t116 = -pkin(3) - t145;
t12 = t23 * t97 - t27 * t94;
t111 = -pkin(5) * t78 - pkin(12) * t77;
t110 = -t12 * t94 + t13 * t97;
t109 = -t42 * t94 + t43 * t97;
t8 = pkin(4) * t53 - pkin(11) * t39 + t12;
t9 = -pkin(11) * t114 + t13;
t5 = -t101 * t9 + t148 * t8;
t6 = t101 * t8 + t148 * t9;
t20 = t101 * t33 + t148 * t36;
t28 = t67 * pkin(3) - t31;
t83 = pkin(10) * t127;
t47 = t81 * pkin(4) + t83 + (t116 - t150) * t98;
t14 = pkin(4) * t114 + t28;
t93 = t104 ^ 2;
t92 = t100 ^ 2;
t75 = t78 ^ 2;
t73 = t146 * t98 + t121;
t72 = -pkin(9) * t125 + t84;
t71 = t145 * t98 - t83;
t70 = t104 * t77;
t66 = t116 * t98 + t83;
t57 = -t101 * t115 + t148 * t80;
t49 = pkin(5) * t77 - pkin(12) * t78 + t87;
t35 = t100 * t49 + t104 * t57;
t34 = -t100 * t57 + t104 * t49;
t25 = t45 * pkin(5) - t46 * pkin(12) + t47;
t18 = -pkin(12) * t126 + t20;
t15 = t100 * t30 - t104 * t53;
t11 = t100 * t25 + t104 * t18;
t10 = -t100 * t18 + t104 * t25;
t7 = t29 * pkin(5) - t30 * pkin(12) + t14;
t4 = pkin(12) * t53 + t6;
t3 = -pkin(5) * t53 - t5;
t2 = t100 * t7 + t104 * t4;
t1 = -t100 * t4 + t104 * t7;
t21 = [1, 0, 0, t90 * t103 ^ 2, 0.2e1 * t103 * t119, 0.2e1 * t99 * t125, 0.2e1 * t96 * t117, t99 ^ 2, 0.2e1 * pkin(1) * t119 + 0.2e1 * t72 * t99, -0.2e1 * t147 * t90 - 0.2e1 * t74 * t99, t54 ^ 2, t53 * t152, t67 * t152, t67 * t153, t67 ^ 2, -0.2e1 * t31 * t67 + 0.2e1 * t37 * t53, 0.2e1 * t32 * t67 + 0.2e1 * t37 * t54, 0.2e1 * t114 * t28 + 0.2e1 * t12 * t53, -0.2e1 * t13 * t53 + 0.2e1 * t28 * t39, -0.2e1 * t114 * t13 - 0.2e1 * t12 * t39, t12 ^ 2 + t13 ^ 2 + t28 ^ 2, t30 ^ 2, t30 * t156, t30 * t153, t53 * t156, t53 ^ 2, 0.2e1 * t14 * t29 + 0.2e1 * t5 * t53, 0.2e1 * t14 * t30 - 0.2e1 * t53 * t6, t16 ^ 2, -0.2e1 * t16 * t15, 0.2e1 * t16 * t29, t15 * t156, t29 ^ 2, 0.2e1 * t1 * t29 + 0.2e1 * t15 * t3, 0.2e1 * t16 * t3 - 0.2e1 * t2 * t29; 0, 0, 0, 0, 0, t125, t118, t99, t72, -t74, t54 * t127 (-t102 * t53 + t105 * t54) * t95, -t127 * t67 + t54 * t98, -t126 * t67 - t53 * t98, -t67 * t98, t31 * t98 - t71 * t67 + (-pkin(2) * t53 - t105 * t37) * t95, -t32 * t98 + t73 * t67 + (-pkin(2) * t54 + t102 * t37) * t95, -t113 * t28 + t114 * t66 - t12 * t126 + t42 * t53, t126 * t13 + t28 * t69 + t39 * t66 - t43 * t53, t113 * t13 - t114 * t43 - t12 * t69 - t42 * t39, t12 * t42 + t13 * t43 + t28 * t66, t30 * t46, -t29 * t46 - t30 * t45, -t126 * t30 + t46 * t53, t126 * t29 - t45 * t53, -t53 * t126, -t126 * t5 + t14 * t45 + t19 * t53 + t29 * t47, t126 * t6 + t14 * t46 - t20 * t53 + t30 * t47, t16 * t41, -t15 * t41 - t16 * t40, t16 * t45 + t29 * t41, -t15 * t45 - t29 * t40, t29 * t45, t1 * t45 + t10 * t29 + t15 * t17 + t3 * t40, -t11 * t29 + t16 * t17 - t2 * t45 + t3 * t41; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, t89 * t102 ^ 2, 0.2e1 * t102 * t136, 0.2e1 * t98 * t127, t98 * t122, t98 ^ 2, 0.2e1 * pkin(2) * t136 + 0.2e1 * t71 * t98, -0.2e1 * t146 * t89 - 0.2e1 * t73 * t98, -0.2e1 * t113 * t66 - 0.2e1 * t126 * t42, 0.2e1 * t126 * t43 + 0.2e1 * t66 * t69, 0.2e1 * t113 * t43 - 0.2e1 * t42 * t69, t42 ^ 2 + t43 ^ 2 + t66 ^ 2, t46 ^ 2, t45 * t154, t126 * t154, t45 * t122, t89 * t105 ^ 2, -0.2e1 * t126 * t19 + 0.2e1 * t45 * t47, 0.2e1 * t126 * t20 + 0.2e1 * t46 * t47, t41 ^ 2, t41 * t155, 0.2e1 * t41 * t45, t45 * t155, t45 ^ 2, 0.2e1 * t10 * t45 + 0.2e1 * t17 * t40, -0.2e1 * t11 * t45 + 0.2e1 * t17 * t41; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t54, -t53, -t67, t31, -t32, -pkin(3) * t114 - t142 * t94 - t28 * t97, -pkin(3) * t39 - t142 * t97 + t28 * t94 (-t114 * t97 + t94 * t39) * qJ(4) + t110, -t28 * pkin(3) + qJ(4) * t110, t30 * t78, -t29 * t78 - t30 * t77, t78 * t53, -t77 * t53, 0, t14 * t77 + t29 * t87 - t53 * t56, t14 * t78 + t30 * t87 - t53 * t57, t78 * t134 (-t104 * t15 - t135) * t78, t137 * t29 + t16 * t77, -t138 * t29 - t15 * t77, t29 * t77, t1 * t77 + t138 * t3 + t15 * t56 + t29 * t34, t137 * t3 + t16 * t56 - t2 * t77 - t29 * t35; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t127, t126, t98, t71, -t73, pkin(3) * t113 + t120 * t94 - t66 * t97, -pkin(3) * t69 + t120 * t97 + t66 * t94 (t113 * t97 + t94 * t69) * qJ(4) + t109, -t66 * pkin(3) + qJ(4) * t109, t46 * t78, -t45 * t78 - t46 * t77, -t78 * t126, t77 * t126, 0, t126 * t56 + t45 * t87 + t47 * t77, t126 * t57 + t46 * t87 + t47 * t78, t78 * t130 (-t104 * t40 - t131) * t78, t137 * t45 + t41 * t77, -t138 * t45 - t40 * t77, t45 * t77, t10 * t77 + t133 * t78 + t34 * t45 + t40 * t56, -t11 * t77 + t132 * t78 - t35 * t45 + t41 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0.2e1 * pkin(3) * t97, -0.2e1 * pkin(3) * t94, 0.2e1 * t143 * qJ(4), qJ(4) ^ 2 * t143 + pkin(3) ^ 2, t75, t123, 0, 0, 0, t77 * t151, t78 * t151, t93 * t75, -0.2e1 * t75 * t124, 0.2e1 * t77 * t137, t100 * t123, t77 ^ 2, 0.2e1 * t129 * t78 + 0.2e1 * t34 * t77, 0.2e1 * t128 * t78 - 0.2e1 * t35 * t77; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t114, t39, 0, t28, 0, 0, 0, 0, 0, t29, t30, 0, 0, 0, 0, 0, t26, -t141; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t113, t69, 0, t66, 0, 0, 0, 0, 0, t45, t46, 0, 0, 0, 0, 0, t44, -t140; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t97, t94, 0, -pkin(3), 0, 0, 0, 0, 0, t77, t78, 0, 0, 0, 0, 0, t70, -t139; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t30, -t29, t53, t5, -t6, t135, -t100 * t15 + t134, t141, t26, 0, -pkin(5) * t15 - pkin(12) * t141 - t104 * t3, -pkin(5) * t16 - pkin(12) * t26 + t100 * t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t46, -t45, -t126, t19, -t20, t131, -t100 * t40 + t130, t140, t44, 0, -pkin(5) * t40 - pkin(12) * t140 - t132, -pkin(5) * t41 - pkin(12) * t44 + t133; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t78, -t77, 0, -t56, -t57, t78 * t124 (-t92 + t93) * t78, t139, t70, 0, t100 * t111 - t128, t104 * t111 + t129; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, t92, 0.2e1 * t124, 0, 0, 0, 0.2e1 * pkin(5) * t104, -0.2e1 * pkin(5) * t100; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t16, -t15, t29, t1, -t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t41, -t40, t45, t10, -t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t137, -t138, t77, t34, -t35; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t104, -t100; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t100, t104, 0, -t100 * pkin(12), -t104 * pkin(12); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0;];
MM_reg  = t21;
