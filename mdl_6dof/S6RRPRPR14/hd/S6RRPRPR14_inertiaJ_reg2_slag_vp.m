% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRPRPR14
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d6]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 11:38
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRPRPR14_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR14_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRPR14_inertiaJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 16:59:55
% EndTime: 2019-05-06 17:00:02
% DurationCPUTime: 2.27s
% Computational Cost: add. (1466->185), mult. (3191->333), div. (0->0), fcn. (3386->8), ass. (0->121)
t78 = sin(qJ(4));
t70 = t78 ^ 2;
t81 = cos(qJ(4));
t72 = t81 ^ 2;
t50 = t70 + t72;
t75 = sin(pkin(6));
t82 = cos(qJ(2));
t120 = t75 * t82;
t76 = cos(pkin(6));
t30 = t81 * t120 + t76 * t78;
t125 = t30 * t78;
t32 = -t78 * t120 + t76 * t81;
t28 = t32 * t81;
t137 = -t28 - t125;
t136 = -2 * pkin(2);
t135 = t30 ^ 2;
t29 = t32 ^ 2;
t134 = -0.2e1 * t32;
t41 = t78 * pkin(4) - t81 * qJ(5) + qJ(3);
t133 = -0.2e1 * t41;
t132 = 0.2e1 * t75;
t131 = 0.2e1 * qJ(3);
t130 = 0.2e1 * qJ(5);
t84 = -pkin(2) - pkin(9);
t129 = pkin(4) + pkin(10);
t128 = pkin(1) * t82;
t79 = sin(qJ(2));
t58 = t75 * t79;
t77 = sin(qJ(6));
t80 = cos(qJ(6));
t18 = -t30 * t80 + t77 * t58;
t127 = t18 * t77;
t20 = t30 * t77 + t80 * t58;
t126 = t20 * t80;
t124 = t30 * t84;
t123 = t32 * t77;
t122 = t32 * t84;
t67 = t75 ^ 2;
t121 = t67 * t82;
t119 = t76 * t79;
t118 = t76 * t82;
t59 = t77 * t78;
t117 = t77 * t81;
t116 = t77 * t129;
t115 = t78 * t20;
t114 = t80 * t77;
t60 = t80 * t78;
t61 = t80 * t81;
t113 = t80 * t129;
t112 = t81 * t78;
t111 = t81 * t129;
t110 = t81 * t84;
t51 = pkin(8) * t58;
t97 = -pkin(2) - t128;
t15 = pkin(3) * t58 + t51 + (-pkin(9) + t97) * t76;
t96 = -qJ(3) * t79 - pkin(1);
t22 = (t84 * t82 + t96) * t75;
t10 = t78 * t15 + t81 * t22;
t35 = pkin(1) * t119 + pkin(8) * t120;
t109 = t50 * (t84 ^ 2);
t69 = t77 ^ 2;
t71 = t80 ^ 2;
t49 = t69 + t71;
t108 = qJ(5) * t78;
t107 = t30 * t134;
t106 = 0.2e1 * t112;
t105 = pkin(4) * t58;
t104 = t32 * t58;
t103 = t30 * t58;
t102 = t75 * t119;
t101 = t84 * t58;
t100 = t75 * t118;
t99 = t77 * t60;
t65 = t76 * qJ(3);
t23 = -t65 - t35;
t98 = qJ(5) * t58;
t9 = t81 * t15 - t78 * t22;
t95 = t78 * t101;
t94 = t81 * t101;
t21 = pkin(3) * t120 - t23;
t3 = t32 * pkin(5) - t129 * t58 - t9;
t87 = -t32 * qJ(5) + t21;
t5 = t129 * t30 + t87;
t1 = t80 * t3 - t77 * t5;
t2 = t77 * t3 + t80 * t5;
t93 = t1 * t80 + t2 * t77;
t6 = -t98 - t10;
t8 = -t9 - t105;
t92 = -t6 * t78 - t8 * t81;
t91 = t10 * t78 + t9 * t81;
t45 = pkin(4) * t81 + t108;
t36 = t78 * pkin(10) + t41;
t43 = (pkin(5) - t84) * t81;
t13 = -t77 * t36 + t80 * t43;
t14 = t80 * t36 + t77 * t43;
t7 = t13 * t80 + t14 * t77;
t90 = t126 + t127;
t89 = -t81 * t30 - t32 * t78;
t88 = t108 + t111;
t86 = qJ(3) ^ 2;
t85 = qJ(5) ^ 2;
t68 = t76 ^ 2;
t63 = t78 * t84;
t57 = t67 * t82 ^ 2;
t56 = t67 * t79 ^ 2;
t55 = -0.2e1 * t112;
t47 = t81 * t58;
t46 = t78 * t58;
t44 = 0.2e1 * t79 * t121;
t42 = -t78 * pkin(5) + t63;
t40 = t50 * t84;
t39 = t49 * t129;
t38 = t49 * t81;
t37 = 0.2e1 * t40;
t34 = pkin(1) * t118 - t51;
t27 = t32 * t80;
t25 = t97 * t76 + t51;
t24 = (-pkin(2) * t82 + t96) * t75;
t11 = t30 * pkin(4) + t87;
t4 = -t30 * pkin(5) - t6;
t12 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t56, t44, 0.2e1 * t102, t57, 0.2e1 * t100, t68, 0.2e1 * pkin(1) * t121 + 0.2e1 * t34 * t76, -0.2e1 * t67 * pkin(1) * t79 - 0.2e1 * t35 * t76 (-t34 * t79 + t35 * t82) * t132, t67 * pkin(1) ^ 2 + t34 ^ 2 + t35 ^ 2, t68, -0.2e1 * t102, -0.2e1 * t100, t56, t44, t57 (-t23 * t82 + t25 * t79) * t132, 0.2e1 * t24 * t120 + 0.2e1 * t25 * t76, -0.2e1 * t23 * t76 - 0.2e1 * t24 * t58, t23 ^ 2 + t24 ^ 2 + t25 ^ 2, t29, t107, 0.2e1 * t104, t135, -0.2e1 * t103, t56, 0.2e1 * t21 * t30 + 0.2e1 * t9 * t58, -0.2e1 * t10 * t58 + 0.2e1 * t21 * t32, -0.2e1 * t10 * t30 - 0.2e1 * t9 * t32, t10 ^ 2 + t21 ^ 2 + t9 ^ 2, t56, -0.2e1 * t104, 0.2e1 * t103, t29, t107, t135, 0.2e1 * t6 * t30 + 0.2e1 * t8 * t32, -0.2e1 * t11 * t30 + 0.2e1 * t8 * t58, -0.2e1 * t11 * t32 - 0.2e1 * t6 * t58, t11 ^ 2 + t6 ^ 2 + t8 ^ 2, t20 ^ 2, -0.2e1 * t20 * t18, 0.2e1 * t20 * t32, t18 ^ 2, t18 * t134, t29, 0.2e1 * t1 * t32 + 0.2e1 * t4 * t18, -0.2e1 * t2 * t32 + 0.2e1 * t4 * t20, -0.2e1 * t1 * t20 - 0.2e1 * t2 * t18, t1 ^ 2 + t2 ^ 2 + t4 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t58, 0, t120, t76, t34, -t35, 0, 0, t76, -t58, -t120, 0, 0, 0 (-pkin(2) * t79 + qJ(3) * t82) * t75, t51 + (t136 - t128) * t76, 0.2e1 * t65 + t35, -t25 * pkin(2) - t23 * qJ(3), t28, t89, t47, t125, -t46, 0, qJ(3) * t30 + t21 * t78 + t94, qJ(3) * t32 + t21 * t81 - t95 (-t9 - t122) * t81 + (-t10 - t124) * t78, t21 * qJ(3) + t91 * t84, 0, -t47, t46, t28, t89, t125 (t8 - t122) * t81 + (t6 - t124) * t78, -t11 * t78 - t41 * t30 - t94, -t11 * t81 - t41 * t32 + t95, t11 * t41 + t92 * t84, t77 * t115 (t126 - t127) * t78, t20 * t81 + t32 * t59, -t18 * t60, -t18 * t81 + t32 * t60, t28, t1 * t81 + t13 * t32 + t42 * t18 - t4 * t60, -t14 * t32 - t2 * t81 + t42 * t20 + t4 * t59, -t13 * t20 - t14 * t18 + (-t1 * t77 + t2 * t80) * t78, t1 * t13 + t2 * t14 + t4 * t42; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, t136, t131 (pkin(2) ^ 2) + t86, t72, t55, 0, t70, 0, 0, t78 * t131, t81 * t131, -t37, t86 + t109, 0, 0, 0, t72, t55, t70, -t37, t78 * t133, t81 * t133, t41 ^ 2 + t109, t69 * t70, 0.2e1 * t70 * t114, t77 * t106, t71 * t70, t80 * t106, t72, 0.2e1 * t13 * t81 - 0.2e1 * t42 * t60, -0.2e1 * t14 * t81 + 0.2e1 * t42 * t59, 0.2e1 * (-t13 * t77 + t14 * t80) * t78, t13 ^ 2 + t14 ^ 2 + t42 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t58, t76, 0, t25, 0, 0, 0, 0, 0, 0, t47, -t46, t137, t91, 0, 0, 0, 0, 0, 0, t137, -t47, t46, t92, 0, 0, 0, 0, 0, 0, t78 * t18 - t32 * t61, t32 * t117 + t115, t90 * t81, t4 * t78 - t81 * t93; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, -pkin(2), 0, 0, 0, 0, 0, 0, 0, 0, -t50, t40, 0, 0, 0, 0, 0, 0, -t50, 0, 0, t40, 0, 0, 0, 0, 0, 0, -t50 * t80, t50 * t77, 0, t42 * t78 - t7 * t81; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t50, 0, 0, 0, 0, 0, 0, 0, 0, 0, t50, 0, 0, 0, 0, 0, 0, 0, 0, 0, t49 * t72 + t70; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t32, 0, -t30, t58, t9, -t10, 0, 0, t58, -t32, t30, 0, 0, 0, -t32 * pkin(4) - qJ(5) * t30, -t9 - 0.2e1 * t105, 0.2e1 * t98 + t10, -t8 * pkin(4) - t6 * qJ(5), t126, -t80 * t18 - t20 * t77, t27, t127, -t123, 0, qJ(5) * t18 - t32 * t113 + t4 * t77, qJ(5) * t20 + t32 * t116 + t4 * t80 (t129 * t20 - t1) * t80 + (t129 * t18 - t2) * t77, t4 * qJ(5) - t129 * t93; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t81, 0, -t78, 0, t110, -t63, 0, 0, 0, -t81, t78, 0, 0, 0, -t45, -t110, t63, t45 * t84, t99 (-t69 + t71) * t78, t61, -t99, -t117, 0, t42 * t77 - t80 * t88, t42 * t80 + t77 * t88, -t7, t42 * qJ(5) - t129 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t81, -t78, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t81, t78, t45, 0, 0, 0, 0, 0, 0, t59, t60, t38, t111 * t49 + t108; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, -0.2e1 * pkin(4), t130, pkin(4) ^ 2 + t85, t71, -0.2e1 * t114, 0, t69, 0, 0, t77 * t130, t80 * t130, 0.2e1 * t39, t129 ^ 2 * t49 + t85; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t32, t58, 0, t8, 0, 0, 0, 0, 0, 0, t27, -t123, -t90, t93; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t81, 0, 0, -t110, 0, 0, 0, 0, 0, 0, t61, -t117, 0, t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t81, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t38; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, -pkin(4), 0, 0, 0, 0, 0, 0, 0, 0, -t49, -t39; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t49; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t20, 0, -t18, t32, t1, -t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t59, 0, t60, t81, t13, -t14, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t61, t117, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t80, 0, -t77, 0, -t113, t116, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t80, -t77, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t12;
