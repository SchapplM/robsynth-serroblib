% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRRPRR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5,d6,theta4]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 18:55
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRRPRR8_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR8_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRPRR8_inertiaJ_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 12:24:38
% EndTime: 2019-05-07 12:24:53
% DurationCPUTime: 3.62s
% Computational Cost: add. (5239->259), mult. (11719->526), div. (0->0), fcn. (13791->12), ass. (0->146)
t102 = sin(pkin(12));
t104 = cos(pkin(12));
t108 = sin(qJ(3));
t112 = cos(qJ(3));
t77 = t102 * t112 + t104 * t108;
t178 = -0.2e1 * t77;
t106 = sin(qJ(6));
t107 = sin(qJ(5));
t110 = cos(qJ(6));
t111 = cos(qJ(5));
t177 = -t106 * t107 + t110 * t111;
t105 = cos(pkin(6));
t103 = sin(pkin(6));
t109 = sin(qJ(2));
t136 = t103 * t109;
t67 = t105 * t112 - t108 * t136;
t68 = t105 * t108 + t112 * t136;
t45 = t102 * t68 - t104 * t67;
t44 = t45 ^ 2;
t154 = -qJ(4) - pkin(9);
t122 = t154 * t108;
t85 = t154 * t112;
t56 = -t102 * t85 - t104 * t122;
t176 = t56 ^ 2;
t75 = t102 * t108 - t104 * t112;
t73 = t75 ^ 2;
t175 = -0.2e1 * t45;
t174 = 0.2e1 * t45;
t173 = 0.2e1 * t75;
t162 = t104 * pkin(3);
t94 = -pkin(4) - t162;
t84 = -pkin(5) * t111 + t94;
t172 = 0.2e1 * t84;
t96 = -pkin(3) * t112 - pkin(2);
t171 = 0.2e1 * t96;
t170 = 0.2e1 * t103;
t169 = 0.2e1 * t112;
t168 = pkin(5) * t45;
t167 = pkin(5) * t75;
t163 = t102 * pkin(3);
t93 = pkin(10) + t163;
t166 = pkin(11) + t93;
t165 = pkin(1) * t109;
t113 = cos(qJ(2));
t164 = pkin(1) * t113;
t161 = t106 * pkin(5);
t160 = t110 * pkin(5);
t135 = t103 * t113;
t47 = t102 * t67 + t104 * t68;
t36 = t107 * t47 + t111 * t135;
t127 = pkin(3) * t135;
t126 = pkin(8) * t135;
t62 = t126 + (pkin(9) + t165) * t105;
t63 = (-pkin(2) * t113 - pkin(9) * t109 - pkin(1)) * t103;
t40 = -t108 * t62 + t112 * t63;
t26 = -qJ(4) * t68 - t127 + t40;
t41 = t108 * t63 + t112 * t62;
t31 = qJ(4) * t67 + t41;
t14 = t102 * t26 + t104 * t31;
t12 = -pkin(10) * t135 + t14;
t88 = pkin(8) * t136;
t61 = t88 + (-pkin(2) - t164) * t105;
t52 = -pkin(3) * t67 + t61;
t17 = pkin(4) * t45 - pkin(10) * t47 + t52;
t7 = t107 * t17 + t111 * t12;
t5 = -pkin(11) * t36 + t7;
t159 = t110 * t5;
t38 = -t107 * t135 + t111 * t47;
t20 = -t106 * t36 + t110 * t38;
t158 = t20 * t177;
t34 = t45 * t75;
t50 = t177 * t77;
t157 = t50 * t177;
t83 = t106 * t111 + t107 * t110;
t156 = t83 * t45;
t155 = t83 * t75;
t153 = t102 * t31 - t104 * t26;
t152 = t107 * t45;
t151 = t107 * t75;
t150 = t107 * t77;
t149 = t107 * t93;
t58 = t102 * t122 - t104 * t85;
t146 = t111 * t58;
t55 = pkin(4) * t75 - pkin(10) * t77 + t96;
t23 = t146 + (-pkin(11) * t77 + t55) * t107;
t148 = t110 * t23;
t147 = t111 * t38;
t145 = t111 * t77;
t144 = t111 * t93;
t97 = t103 ^ 2;
t143 = t113 * t97;
t142 = t36 * t111;
t141 = t38 * t107;
t140 = t67 * t112;
t139 = t68 * t108;
t101 = t112 ^ 2;
t99 = t108 ^ 2;
t138 = t101 + t99;
t100 = t111 ^ 2;
t98 = t107 ^ 2;
t137 = t98 + t100;
t134 = t105 * t109;
t132 = t107 * t111;
t130 = t75 * t178;
t129 = -0.2e1 * t135;
t128 = 0.2e1 * t135;
t11 = pkin(4) * t135 + t153;
t125 = t77 * t132;
t124 = t108 * t135;
t123 = t112 * t135;
t6 = -t107 * t12 + t111 * t17;
t4 = -pkin(11) * t38 + t168 + t6;
t1 = -t106 * t5 + t110 * t4;
t27 = -t107 * t58 + t111 * t55;
t22 = -pkin(11) * t145 + t167 + t27;
t9 = -t106 * t23 + t110 * t22;
t121 = t107 * t7 + t111 * t6;
t120 = -t75 * t93 + t77 * t94;
t28 = t107 * t55 + t146;
t119 = t107 * t28 + t111 * t27;
t118 = -t107 * t27 + t111 * t28;
t117 = -t108 * t40 + t112 * t41;
t91 = t97 * t113 ^ 2;
t79 = t83 ^ 2;
t78 = t177 ^ 2;
t74 = t77 ^ 2;
t72 = t166 * t111;
t71 = t166 * t107;
t70 = pkin(1) * t134 + t126;
t69 = t105 * t164 - t88;
t66 = t111 * t75;
t59 = t177 * t75;
t54 = -t106 * t71 + t110 * t72;
t53 = -t106 * t72 - t110 * t71;
t48 = t83 * t77;
t43 = t111 * t45;
t42 = pkin(5) * t150 + t56;
t39 = t83 * t48;
t35 = t177 * t45;
t32 = t107 * t36;
t18 = t106 * t38 + t110 * t36;
t15 = t83 * t18;
t10 = t106 * t22 + t148;
t8 = pkin(5) * t36 + t11;
t2 = t106 * t4 + t159;
t3 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t97 * t109 ^ 2, 0.2e1 * t109 * t143, t134 * t170, t91, t105 * t128, t105 ^ 2, 0.2e1 * pkin(1) * t143 + 0.2e1 * t105 * t69, -0.2e1 * t105 * t70 - 0.2e1 * t97 * t165 (-t109 * t69 + t113 * t70) * t170, pkin(1) ^ 2 * t97 + t69 ^ 2 + t70 ^ 2, t68 ^ 2, 0.2e1 * t68 * t67, t68 * t129, t67 ^ 2, t67 * t129, t91, -0.2e1 * t40 * t135 - 0.2e1 * t61 * t67, 0.2e1 * t41 * t135 + 0.2e1 * t61 * t68, -0.2e1 * t40 * t68 + 0.2e1 * t41 * t67, t40 ^ 2 + t41 ^ 2 + t61 ^ 2, t47 ^ 2, t47 * t175, t47 * t129, t44, t45 * t128, t91, 0.2e1 * t135 * t153 + 0.2e1 * t45 * t52, 0.2e1 * t14 * t135 + 0.2e1 * t47 * t52, -0.2e1 * t14 * t45 + 0.2e1 * t153 * t47, t14 ^ 2 + t153 ^ 2 + t52 ^ 2, t38 ^ 2, -0.2e1 * t38 * t36, t38 * t174, t36 ^ 2, t36 * t175, t44, 0.2e1 * t11 * t36 + 0.2e1 * t45 * t6, 0.2e1 * t11 * t38 - 0.2e1 * t45 * t7, -0.2e1 * t36 * t7 - 0.2e1 * t38 * t6, t11 ^ 2 + t6 ^ 2 + t7 ^ 2, t20 ^ 2, -0.2e1 * t20 * t18, t20 * t174, t18 ^ 2, t18 * t175, t44, 0.2e1 * t1 * t45 + 0.2e1 * t18 * t8, -0.2e1 * t2 * t45 + 0.2e1 * t20 * t8, -0.2e1 * t1 * t20 - 0.2e1 * t18 * t2, t1 ^ 2 + t2 ^ 2 + t8 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t136, 0, t135, t105, t69, -t70, 0, 0, t139, t108 * t67 + t112 * t68, -t124, t140, -t123, 0, pkin(2) * t67 + pkin(9) * t124 - t112 * t61, -pkin(2) * t68 + pkin(9) * t123 + t108 * t61 (t139 + t140) * pkin(9) + t117, -pkin(2) * t61 + pkin(9) * t117, t47 * t77, -t45 * t77 - t47 * t75, -t77 * t135, t34, t75 * t135, 0, t56 * t135 + t45 * t96 + t52 * t75, t58 * t135 + t47 * t96 + t52 * t77, -t14 * t75 + t153 * t77 - t45 * t58 + t47 * t56, t14 * t58 + t153 * t56 + t52 * t96, t38 * t145 (-t141 - t142) * t77, t45 * t145 + t38 * t75, t36 * t150, -t45 * t150 - t36 * t75, t34, t11 * t150 + t27 * t45 + t36 * t56 + t6 * t75, t11 * t145 - t28 * t45 + t38 * t56 - t7 * t75, -t121 * t77 - t27 * t38 - t28 * t36, t11 * t56 + t27 * t6 + t28 * t7, t20 * t50, -t18 * t50 - t20 * t48, t20 * t75 + t45 * t50, t18 * t48, -t18 * t75 - t45 * t48, t34, t1 * t75 + t18 * t42 + t45 * t9 + t48 * t8, -t10 * t45 - t2 * t75 + t20 * t42 + t50 * t8, -t1 * t50 - t10 * t18 - t2 * t48 - t20 * t9, t1 * t9 + t10 * t2 + t42 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t99, t108 * t169, 0, t101, 0, 0, pkin(2) * t169, -0.2e1 * pkin(2) * t108, 0.2e1 * t138 * pkin(9), t138 * pkin(9) ^ 2 + pkin(2) ^ 2, t74, t130, 0, t73, 0, 0, t75 * t171, t77 * t171, 0.2e1 * t56 * t77 - 0.2e1 * t58 * t75, t58 ^ 2 + t96 ^ 2 + t176, t100 * t74, -0.2e1 * t74 * t132, t145 * t173, t98 * t74, t107 * t130, t73, 0.2e1 * t56 * t150 + 0.2e1 * t27 * t75, 0.2e1 * t56 * t145 - 0.2e1 * t28 * t75, t119 * t178, t27 ^ 2 + t28 ^ 2 + t176, t50 ^ 2, -0.2e1 * t50 * t48, t50 * t173, t48 ^ 2, -t48 * t173, t73, 0.2e1 * t42 * t48 + 0.2e1 * t75 * t9, -0.2e1 * t10 * t75 + 0.2e1 * t42 * t50, -0.2e1 * t10 * t48 - 0.2e1 * t50 * t9, t10 ^ 2 + t42 ^ 2 + t9 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t68, 0, t67, -t135, t40, -t41, 0, 0, 0, 0, t47, 0, -t45, -t135, -t104 * t127 - t153, t102 * t127 - t14 (-t102 * t45 - t104 * t47) * pkin(3) (t102 * t14 - t104 * t153) * pkin(3), t141, -t32 + t147, t152, -t142, t43, 0, -t11 * t111 - t45 * t149 + t36 * t94, t107 * t11 - t45 * t144 + t38 * t94 (-t36 * t93 + t7) * t111 + (t38 * t93 - t6) * t107, t11 * t94 + (-t107 * t6 + t111 * t7) * t93, t20 * t83, -t15 + t158, t156, -t18 * t177, t35, 0, -t177 * t8 + t18 * t84 + t45 * t53, t20 * t84 - t45 * t54 + t8 * t83, -t1 * t83 + t177 * t2 - t18 * t54 - t20 * t53, t1 * t53 + t2 * t54 + t8 * t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t108, 0, t112, 0, -t108 * pkin(9), -t112 * pkin(9), 0, 0, 0, 0, t77, 0, -t75, 0, -t56, -t58 (-t102 * t75 - t104 * t77) * pkin(3) (t102 * t58 - t104 * t56) * pkin(3), t125 (t100 - t98) * t77, t151, -t125, t66, 0, t107 * t120 - t111 * t56, t107 * t56 + t111 * t120, t118, t118 * t93 + t56 * t94, t50 * t83, -t39 + t157, t155, -t48 * t177, t59, 0, -t177 * t42 + t48 * t84 + t53 * t75, t42 * t83 + t50 * t84 - t54 * t75, t10 * t177 - t48 * t54 - t50 * t53 - t83 * t9, t10 * t54 + t42 * t84 + t53 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t162, -0.2e1 * t163, 0 (t102 ^ 2 + t104 ^ 2) * pkin(3) ^ 2, t98, 0.2e1 * t132, 0, t100, 0, 0, -0.2e1 * t94 * t111, 0.2e1 * t94 * t107, 0.2e1 * t137 * t93, t137 * t93 ^ 2 + t94 ^ 2, t79, 0.2e1 * t83 * t177, 0, t78, 0, 0, -t177 * t172, t83 * t172, 0.2e1 * t177 * t54 - 0.2e1 * t53 * t83, t53 ^ 2 + t54 ^ 2 + t84 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t45, t47, 0, t52, 0, 0, 0, 0, 0, 0, t43, -t152, -t32 - t147, t121, 0, 0, 0, 0, 0, 0, t35, -t156, -t15 - t158, t1 * t177 + t2 * t83; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t75, t77, 0, t96, 0, 0, 0, 0, 0, 0, t66, -t151, -t137 * t77, t119, 0, 0, 0, 0, 0, 0, t59, -t155, -t39 - t157, t10 * t83 + t177 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t177 * t53 + t54 * t83; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t137, 0, 0, 0, 0, 0, 0, 0, 0, 0, t79 + t78; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t38, 0, -t36, t45, t6, -t7, 0, 0, 0, 0, t20, 0, -t18, t45, t45 * t160 + t1, -t159 + (-t4 - t168) * t106 (-t106 * t18 - t110 * t20) * pkin(5) (t1 * t110 + t106 * t2) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t145, 0, -t150, t75, t27, -t28, 0, 0, 0, 0, t50, 0, -t48, t75, t75 * t160 + t9, -t148 + (-t22 - t167) * t106 (-t106 * t48 - t110 * t50) * pkin(5) (t10 * t106 + t110 * t9) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t107, 0, t111, 0, -t149, -t144, 0, 0, 0, 0, t83, 0, t177, 0, t53, -t54 (t106 * t177 - t110 * t83) * pkin(5) (t106 * t54 + t110 * t53) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t111, -t107, 0, 0, 0, 0, 0, 0, 0, 0, t177, -t83, 0 (t106 * t83 + t110 * t177) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t160, -0.2e1 * t161, 0 (t106 ^ 2 + t110 ^ 2) * pkin(5) ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t20, 0, -t18, t45, t1, -t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t50, 0, -t48, t75, t9, -t10, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83, 0, t177, 0, t53, -t54, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t177, -t83, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t160, -t161, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t3;
