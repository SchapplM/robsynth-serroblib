% Calculate inertial parameters regressor of joint inertia matrix for
% S6RPRRPP5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,theta2]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 04:45
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RPRRPP5_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPP5_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPRRPP5_inertiaJ_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 21:38:25
% EndTime: 2019-05-05 21:38:29
% DurationCPUTime: 1.39s
% Computational Cost: add. (979->119), mult. (1876->197), div. (0->0), fcn. (2130->6), ass. (0->87)
t60 = sin(qJ(4));
t56 = t60 ^ 2;
t62 = cos(qJ(4));
t57 = t62 ^ 2;
t45 = t56 + t57;
t58 = sin(pkin(9));
t59 = cos(pkin(9));
t61 = sin(qJ(3));
t95 = cos(qJ(3));
t39 = t58 * t95 + t59 * t61;
t106 = -0.2e1 * t39;
t49 = t60 * qJ(5);
t89 = pkin(4) * t62 + t49;
t63 = pkin(4) + pkin(5);
t105 = t62 * t63 + t49;
t86 = t62 * qJ(5);
t104 = t60 * t63 - t86;
t90 = pkin(7) + qJ(2);
t42 = t90 * t59;
t80 = t90 * t58;
t17 = t61 * t42 + t80 * t95;
t103 = t17 ^ 2;
t37 = t58 * t61 - t59 * t95;
t102 = t37 ^ 2;
t48 = -pkin(2) * t59 - pkin(1);
t101 = 0.2e1 * t48;
t100 = 0.2e1 * t59;
t99 = -0.2e1 * t60;
t98 = 0.2e1 * t62;
t97 = pkin(8) * t37;
t31 = t37 * pkin(4);
t96 = t60 * pkin(8);
t11 = pkin(3) * t37 - pkin(8) * t39 + t48;
t19 = t42 * t95 - t61 * t80;
t7 = t11 * t60 + t19 * t62;
t94 = t60 * t37;
t93 = t60 * t39;
t92 = t60 * t62;
t27 = t62 * t37;
t28 = t62 * t39;
t6 = t11 * t62 - t19 * t60;
t88 = t45 * pkin(8) ^ 2;
t54 = t58 ^ 2;
t55 = t59 ^ 2;
t87 = t54 + t55;
t85 = t62 * qJ(6);
t41 = -pkin(3) - t89;
t30 = t37 * qJ(5);
t3 = t30 + t7;
t84 = 0.2e1 * t30 + t7;
t83 = t37 * t93;
t35 = t39 ^ 2;
t82 = t35 * t92;
t81 = t37 * t28;
t4 = -t31 - t6;
t79 = -0.2e1 * t83;
t78 = -pkin(3) * t39 - t97;
t69 = t39 * t85 - t4;
t1 = -pkin(5) * t37 - t69;
t22 = qJ(6) * t93;
t2 = t22 + t3;
t77 = -t1 * t62 + t2 * t60;
t76 = t3 * t62 + t4 * t60;
t75 = t3 * t60 - t4 * t62;
t74 = t6 * t62 + t60 * t7;
t73 = -t6 * t60 + t62 * t7;
t72 = -t39 * t41 + t97;
t71 = pkin(4) * t60 - t86;
t43 = (pkin(8) - qJ(6)) * t60;
t52 = t62 * pkin(8);
t44 = t52 - t85;
t70 = -t43 * t62 + t44 * t60;
t66 = qJ(5) ^ 2;
t65 = 0.2e1 * qJ(5);
t46 = -0.2e1 * t92;
t40 = 0.2e1 * t45 * pkin(8);
t32 = pkin(5) * t62 - t41;
t26 = t57 * t35;
t23 = t56 * t35;
t21 = t60 * t28;
t20 = 0.2e1 * t82;
t16 = 0.2e1 * t81;
t13 = (t56 - t57) * t39;
t12 = t45 * t39;
t8 = t39 * t71 + t17;
t5 = -t104 * t39 - t17;
t9 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t54, t58 * t100, 0, t55, 0, 0, pkin(1) * t100, -0.2e1 * pkin(1) * t58, 0.2e1 * t87 * qJ(2), qJ(2) ^ 2 * t87 + pkin(1) ^ 2, t35, t37 * t106, 0, t102, 0, 0, t37 * t101, t39 * t101, 0.2e1 * t17 * t39 - 0.2e1 * t19 * t37, t19 ^ 2 + t48 ^ 2 + t103, t26, -0.2e1 * t82, t16, t23, t79, t102, 0.2e1 * t17 * t93 + 0.2e1 * t37 * t6, 0.2e1 * t17 * t28 - 0.2e1 * t37 * t7, t74 * t106, t6 ^ 2 + t7 ^ 2 + t103, t26, t16, t20, t102, 0.2e1 * t83, t23, -0.2e1 * t37 * t4 + 0.2e1 * t8 * t93, t75 * t106, -0.2e1 * t28 * t8 + 0.2e1 * t3 * t37, t3 ^ 2 + t4 ^ 2 + t8 ^ 2, t26, t20, -0.2e1 * t81, t23, t79, t102, -0.2e1 * t1 * t37 - 0.2e1 * t5 * t93, 0.2e1 * t2 * t37 + 0.2e1 * t28 * t5, 0.2e1 * t77 * t39, t1 ^ 2 + t2 ^ 2 + t5 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t59, t58, 0, -pkin(1), 0, 0, 0, 0, 0, 0, t37, t39, 0, t48, 0, 0, 0, 0, 0, 0, t27, -t94, -t12, t74, 0, 0, 0, 0, 0, 0, t27, -t12, t94, t75, 0, 0, 0, 0, 0, 0, t27, t94, t12, t77; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t45, 0, 0, 0, 0, 0, 0, 0, 0, 0, t45, 0, 0, 0, 0, 0, 0, 0, 0, 0, t45; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t39, 0, -t37, 0, -t17, -t19, 0, 0, t21, -t13, t94, -t21, t27, 0, -t17 * t62 + t60 * t78, t17 * t60 + t62 * t78, t73, -t17 * pkin(3) + pkin(8) * t73, t21, t94, t13, 0, -t27, -t21, -t60 * t72 - t8 * t62, t76, -t8 * t60 + t62 * t72, pkin(8) * t76 + t8 * t41, t21, t13, -t94, -t21, t27, 0, -t32 * t93 - t37 * t43 + t5 * t62, t28 * t32 + t37 * t44 + t5 * t60, -t1 * t60 - t2 * t62 + t39 * t70, t1 * t43 + t2 * t44 + t32 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t70; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t56, 0.2e1 * t92, 0, t57, 0, 0, pkin(3) * t98, pkin(3) * t99, t40, pkin(3) ^ 2 + t88, t56, 0, t46, 0, 0, t57, -0.2e1 * t41 * t62, t40, t41 * t99, t41 ^ 2 + t88, t56, t46, 0, t57, 0, 0, t32 * t98, 0.2e1 * t32 * t60, -0.2e1 * t43 * t60 - 0.2e1 * t44 * t62, t32 ^ 2 + t43 ^ 2 + t44 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t28, 0, -t93, t37, t6, -t7, 0, 0, 0, t28, 0, t37, t93, 0, -t4 + t31, -t89 * t39, t84, -pkin(4) * t4 + qJ(5) * t3, 0, 0, -t28, 0, -t93, t37 (pkin(5) + t63) * t37 + t69, t22 + t84, t105 * t39, qJ(5) * t2 - t1 * t63; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t62, -t60, 0, 0, 0, 0, 0, 0, 0, 0, t62, 0, t60, t89, 0, 0, 0, 0, 0, 0, t62, t60, 0, t105; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t60, 0, t62, 0, -t96, -t52, 0, 0, 0, t60, 0, 0, -t62, 0, -t96, -t71, t52, -t71 * pkin(8), 0, 0, -t60, 0, t62, 0, -t43, t44, t104, qJ(5) * t44 - t43 * t63; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0.2e1 * pkin(4), 0, t65, pkin(4) ^ 2 + t66, 0, 0, 0, 0, 0, 1, 0.2e1 * t63, t65, 0, t63 ^ 2 + t66; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t37, t28, 0, t4, 0, 0, 0, 0, 0, 0, -t37, 0, -t28, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t62, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t60, 0, t96, 0, 0, 0, 0, 0, 0, 0, 0, -t60, t43; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, -pkin(4), 0, 0, 0, 0, 0, 0, -1, 0, 0, -t63; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t93, t28, 0, t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t62, t60, 0, t32; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1;];
MM_reg  = t9;
