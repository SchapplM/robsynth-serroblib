% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRRRRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d5,d6]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 04:10
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRRRRR5_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR5_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRRR5_inertiaJ_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-08 10:16:06
% EndTime: 2019-05-08 10:16:27
% DurationCPUTime: 4.27s
% Computational Cost: add. (6241->277), mult. (13881->512), div. (0->0), fcn. (16331->12), ass. (0->148)
t110 = cos(qJ(6));
t101 = t110 ^ 2;
t105 = sin(qJ(6));
t99 = t105 ^ 2;
t144 = t101 + t99;
t106 = sin(qJ(5));
t111 = cos(qJ(5));
t107 = sin(qJ(4));
t166 = t107 * pkin(3);
t133 = t111 * t166;
t112 = cos(qJ(4));
t96 = t112 * pkin(3);
t91 = t96 + pkin(4);
t69 = t106 * t91 + t133;
t67 = pkin(12) + t69;
t162 = t144 * t67;
t167 = t106 * pkin(4);
t89 = pkin(12) + t167;
t180 = t144 * t89;
t104 = cos(pkin(6));
t108 = sin(qJ(3));
t113 = cos(qJ(3));
t103 = sin(pkin(6));
t109 = sin(qJ(2));
t143 = t103 * t109;
t70 = -t104 * t113 + t108 * t143;
t72 = t104 * t108 + t113 * t143;
t44 = -t107 * t72 - t112 * t70;
t45 = -t107 * t70 + t112 * t72;
t31 = t106 * t45 - t111 * t44;
t33 = t106 * t44 + t111 * t45;
t114 = cos(qJ(2));
t169 = pkin(1) * t114;
t83 = pkin(8) * t143;
t61 = t83 + (-pkin(2) - t169) * t104;
t47 = t70 * pkin(3) + t61;
t34 = -t44 * pkin(4) + t47;
t10 = t31 * pkin(5) - t33 * pkin(12) + t34;
t142 = t103 * t114;
t134 = pkin(4) * t142;
t135 = pkin(3) * t142;
t132 = pkin(8) * t142;
t170 = pkin(1) * t109;
t62 = t132 + (pkin(9) + t170) * t104;
t63 = (-pkin(2) * t114 - pkin(9) * t109 - pkin(1)) * t103;
t39 = -t108 * t62 + t113 * t63;
t37 = -t72 * pkin(10) - t135 + t39;
t40 = t108 * t63 + t113 * t62;
t38 = -t70 * pkin(10) + t40;
t17 = -t107 * t38 + t112 * t37;
t13 = -t45 * pkin(11) - t134 + t17;
t152 = t112 * t38;
t18 = t107 * t37 + t152;
t14 = t44 * pkin(11) + t18;
t153 = t111 * t14;
t8 = t106 * t13 + t153;
t6 = -pkin(12) * t142 + t8;
t3 = t105 * t10 + t110 * t6;
t1 = t3 * t110;
t2 = t110 * t10 - t105 * t6;
t123 = -t2 * t105 + t1;
t171 = -pkin(10) - pkin(9);
t130 = t171 * t108;
t131 = t171 * t113;
t54 = t107 * t131 + t112 * t130;
t77 = t107 * t113 + t112 * t108;
t119 = -t77 * pkin(11) + t54;
t55 = t107 * t130 - t112 * t131;
t76 = -t107 * t108 + t112 * t113;
t43 = t76 * pkin(11) + t55;
t28 = t106 * t43 - t111 * t119;
t179 = t28 ^ 2;
t178 = t31 ^ 2;
t51 = t106 * t77 - t111 * t76;
t177 = t51 ^ 2;
t176 = -0.2e1 * t31;
t92 = -t113 * pkin(3) - pkin(2);
t60 = -t76 * pkin(4) + t92;
t175 = 0.2e1 * t60;
t174 = 0.2e1 * t77;
t173 = 0.2e1 * t103;
t172 = 0.2e1 * t113;
t168 = pkin(5) * t105;
t164 = t31 * t51;
t126 = t106 * t14 - t111 * t13;
t5 = pkin(5) * t142 + t126;
t163 = t5 * t110;
t160 = pkin(12) * t144;
t25 = t105 * t31;
t53 = t106 * t76 + t111 * t77;
t159 = t105 * t53;
t158 = t105 * t67;
t157 = t105 * t89;
t26 = t110 * t31;
t156 = t110 * t53;
t155 = t110 * t67;
t154 = t110 * t89;
t98 = t103 ^ 2;
t151 = t114 * t98;
t21 = t105 * t33 + t110 * t142;
t19 = t21 * t110;
t23 = -t105 * t142 + t110 * t33;
t20 = t23 * t105;
t150 = t23 * t110;
t24 = t28 * t105;
t149 = t28 * t110;
t125 = t106 * t166 - t111 * t91;
t66 = -pkin(5) + t125;
t148 = t66 * t110;
t147 = t70 * t113;
t146 = t72 * t108;
t95 = t111 * pkin(4);
t90 = -t95 - pkin(5);
t145 = t90 * t110;
t141 = t104 * t109;
t140 = t105 * t110;
t100 = t108 ^ 2;
t102 = t113 ^ 2;
t139 = t100 + t102;
t138 = -0.2e1 * t53 * t51;
t137 = -0.2e1 * t142;
t136 = 0.2e1 * t142;
t129 = t108 * t142;
t128 = t113 * t142;
t124 = -pkin(5) * t53 - pkin(12) * t51;
t122 = -t51 * t67 + t53 * t66;
t121 = -t51 * t89 + t53 * t90;
t27 = t51 * pkin(5) - t53 * pkin(12) + t60;
t30 = t106 * t119 + t111 * t43;
t15 = -t105 * t30 + t110 * t27;
t16 = t105 * t27 + t110 * t30;
t9 = -t15 * t105 + t16 * t110;
t120 = -t39 * t108 + t40 * t113;
t97 = pkin(5) * t110;
t86 = t98 * t114 ^ 2;
t84 = 0.2e1 * t140;
t81 = t90 * t105;
t75 = pkin(1) * t141 + t132;
t74 = t104 * t169 - t83;
t59 = t66 * t105;
t50 = t53 ^ 2;
t49 = t110 * t51;
t48 = t105 * t51;
t46 = t53 * t140;
t36 = (t101 - t99) * t53;
t11 = -t105 * t21 + t150;
t4 = t5 * t105;
t7 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t98 * t109 ^ 2, 0.2e1 * t109 * t151, t141 * t173, t86, t104 * t136, t104 ^ 2, 0.2e1 * pkin(1) * t151 + 0.2e1 * t74 * t104, -0.2e1 * t75 * t104 - 0.2e1 * t98 * t170 (-t109 * t74 + t114 * t75) * t173, t98 * pkin(1) ^ 2 + t74 ^ 2 + t75 ^ 2, t72 ^ 2, -0.2e1 * t72 * t70, t72 * t137, t70 ^ 2, t70 * t136, t86, -0.2e1 * t39 * t142 + 0.2e1 * t61 * t70, 0.2e1 * t40 * t142 + 0.2e1 * t61 * t72, -0.2e1 * t39 * t72 - 0.2e1 * t40 * t70, t39 ^ 2 + t40 ^ 2 + t61 ^ 2, t45 ^ 2, 0.2e1 * t45 * t44, t45 * t137, t44 ^ 2, t44 * t137, t86, -0.2e1 * t17 * t142 - 0.2e1 * t47 * t44, 0.2e1 * t18 * t142 + 0.2e1 * t47 * t45, -0.2e1 * t17 * t45 + 0.2e1 * t18 * t44, t17 ^ 2 + t18 ^ 2 + t47 ^ 2, t33 ^ 2, t33 * t176, t33 * t137, t178, t31 * t136, t86, 0.2e1 * t126 * t142 + 0.2e1 * t34 * t31, 0.2e1 * t142 * t8 + 0.2e1 * t34 * t33, 0.2e1 * t126 * t33 - 0.2e1 * t8 * t31, t126 ^ 2 + t34 ^ 2 + t8 ^ 2, t23 ^ 2, -0.2e1 * t23 * t21, 0.2e1 * t23 * t31, t21 ^ 2, t21 * t176, t178, 0.2e1 * t2 * t31 + 0.2e1 * t5 * t21, 0.2e1 * t5 * t23 - 0.2e1 * t3 * t31, -0.2e1 * t2 * t23 - 0.2e1 * t3 * t21, t2 ^ 2 + t3 ^ 2 + t5 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t143, 0, t142, t104, t74, -t75, 0, 0, t146, -t108 * t70 + t72 * t113, -t129, -t147, -t128, 0, -pkin(2) * t70 + pkin(9) * t129 - t61 * t113, -pkin(2) * t72 + pkin(9) * t128 + t61 * t108 (t146 - t147) * pkin(9) + t120, -t61 * pkin(2) + t120 * pkin(9), t45 * t77, t77 * t44 + t45 * t76, -t77 * t142, t44 * t76, -t76 * t142, 0, -t54 * t142 - t92 * t44 - t47 * t76, t55 * t142 + t92 * t45 + t47 * t77, -t17 * t77 + t18 * t76 + t55 * t44 - t54 * t45, t17 * t54 + t18 * t55 + t47 * t92, t33 * t53, -t53 * t31 - t33 * t51, -t53 * t142, t164, t51 * t142, 0, t142 * t28 + t60 * t31 + t34 * t51, t142 * t30 + t60 * t33 + t34 * t53, t126 * t53 + t28 * t33 - t30 * t31 - t8 * t51, t126 * t28 + t8 * t30 + t34 * t60, t53 * t150 (-t20 - t19) * t53, t156 * t31 + t23 * t51, t21 * t159, -t159 * t31 - t21 * t51, t164, t15 * t31 + t159 * t5 + t2 * t51 + t28 * t21, t156 * t5 - t16 * t31 + t28 * t23 - t3 * t51, -t15 * t23 - t16 * t21 + (-t105 * t3 - t110 * t2) * t53, t2 * t15 + t3 * t16 + t5 * t28; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t100, t108 * t172, 0, t102, 0, 0, pkin(2) * t172, -0.2e1 * pkin(2) * t108, 0.2e1 * t139 * pkin(9), t139 * pkin(9) ^ 2 + pkin(2) ^ 2, t77 ^ 2, t76 * t174, 0, t76 ^ 2, 0, 0, -0.2e1 * t92 * t76, t92 * t174, -0.2e1 * t54 * t77 + 0.2e1 * t55 * t76, t54 ^ 2 + t55 ^ 2 + t92 ^ 2, t50, t138, 0, t177, 0, 0, t51 * t175, t53 * t175, 0.2e1 * t28 * t53 - 0.2e1 * t30 * t51, t30 ^ 2 + t60 ^ 2 + t179, t101 * t50, -0.2e1 * t50 * t140, 0.2e1 * t51 * t156, t99 * t50, t105 * t138, t177, 0.2e1 * t15 * t51 + 0.2e1 * t24 * t53, 0.2e1 * t149 * t53 - 0.2e1 * t16 * t51, 0.2e1 * (-t105 * t16 - t110 * t15) * t53, t15 ^ 2 + t16 ^ 2 + t179; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t72, 0, -t70, -t142, t39, -t40, 0, 0, 0, 0, t45, 0, t44, -t142, -t112 * t135 + t17, -t152 + (-t37 + t135) * t107 (t107 * t44 - t112 * t45) * pkin(3) (t107 * t18 + t112 * t17) * pkin(3), 0, 0, t33, 0, -t31, -t142, t125 * t142 - t126, t142 * t69 - t8, t125 * t33 - t69 * t31, t125 * t126 + t8 * t69, t20, t11, t25, -t19, t26, 0, -t158 * t31 + t66 * t21 - t163, -t155 * t31 + t66 * t23 + t4, -t67 * t19 + t1 + (t23 * t67 - t2) * t105, t123 * t67 + t5 * t66; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t108, 0, t113, 0, -t108 * pkin(9), -t113 * pkin(9), 0, 0, 0, 0, t77, 0, t76, 0, t54, -t55 (t107 * t76 - t112 * t77) * pkin(3) (t107 * t55 + t112 * t54) * pkin(3), 0, 0, t53, 0, -t51, 0, -t28, -t30, t125 * t53 - t69 * t51, t125 * t28 + t30 * t69, t46, t36, t48, -t46, t49, 0, t105 * t122 - t149, t110 * t122 + t24, t9, t28 * t66 + t67 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t96, -0.2e1 * t166, 0 (t107 ^ 2 + t112 ^ 2) * pkin(3) ^ 2, 0, 0, 0, 0, 0, 1, -0.2e1 * t125, -0.2e1 * t69, 0, t125 ^ 2 + t69 ^ 2, t99, t84, 0, t101, 0, 0, -0.2e1 * t148, 0.2e1 * t59, 0.2e1 * t162, t144 * t67 ^ 2 + t66 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t45, 0, t44, -t142, t17, -t18, 0, 0, 0, 0, t33, 0, -t31, -t142, -t111 * t134 - t126, -t153 + (-t13 + t134) * t106 (-t106 * t31 - t111 * t33) * pkin(4) (t106 * t8 - t111 * t126) * pkin(4), t20, t11, t25, -t19, t26, 0, -t157 * t31 + t90 * t21 - t163, -t154 * t31 + t90 * t23 + t4, -t89 * t19 + t1 + (t23 * t89 - t2) * t105, t123 * t89 + t5 * t90; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t77, 0, t76, 0, t54, -t55, 0, 0, 0, 0, t53, 0, -t51, 0, -t28, -t30 (-t106 * t51 - t111 * t53) * pkin(4) (t106 * t30 - t111 * t28) * pkin(4), t46, t36, t48, -t46, t49, 0, t105 * t121 - t149, t110 * t121 + t24, t9, t28 * t90 + t89 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t96, -t166, 0, 0, 0, 0, 0, 0, 0, 1, -t125 + t95, -t133 + (-pkin(4) - t91) * t106, 0 (t106 * t69 - t111 * t125) * pkin(4), t99, t84, 0, t101, 0, 0 (-t66 - t90) * t110, t81 + t59, t180 + t162, t180 * t67 + t66 * t90; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t95, -0.2e1 * t167, 0 (t106 ^ 2 + t111 ^ 2) * pkin(4) ^ 2, t99, t84, 0, t101, 0, 0, -0.2e1 * t145, 0.2e1 * t81, 0.2e1 * t180, t144 * t89 ^ 2 + t90 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t33, 0, -t31, -t142, -t126, -t8, 0, 0, t20, t11, t25, -t19, t26, 0, -pkin(5) * t21 - pkin(12) * t25 - t163, -pkin(5) * t23 - pkin(12) * t26 + t4 (t20 - t19) * pkin(12) + t123, -t5 * pkin(5) + pkin(12) * t123; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t53, 0, -t51, 0, -t28, -t30, 0, 0, t46, t36, t48, -t46, t49, 0, t105 * t124 - t149, t110 * t124 + t24, t9, -t28 * pkin(5) + pkin(12) * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -t125, -t69, 0, 0, t99, t84, 0, t101, 0, 0, t97 - t148, t59 - t168, t160 + t162, -t66 * pkin(5) + pkin(12) * t162; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t95, -t167, 0, 0, t99, t84, 0, t101, 0, 0, t97 - t145, t81 - t168, t160 + t180, -t90 * pkin(5) + pkin(12) * t180; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t99, t84, 0, t101, 0, 0, 0.2e1 * t97, -0.2e1 * t168, 0.2e1 * t160, pkin(12) ^ 2 * t144 + pkin(5) ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t23, 0, -t21, t31, t2, -t3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t156, 0, -t159, t51, t15, -t16, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t105, 0, t110, 0, -t158, -t155, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t105, 0, t110, 0, -t157, -t154, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t105, 0, t110, 0, -t105 * pkin(12), -t110 * pkin(12), 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t7;
